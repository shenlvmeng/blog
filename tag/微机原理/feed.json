{
    "version": "https://jsonfeed.org/version/1",
    "title": "Shenlvmeng's Blog • All posts by \"微机原理\" tag",
    "description": "Be sharp, my friend.",
    "home_page_url": "http://shenlvmeng.github.com/blog",
    "items": [
        {
            "id": "http://shenlvmeng.github.com/blog/2023/11/30/language-hidden-behind-computer/",
            "url": "http://shenlvmeng.github.com/blog/2023/11/30/language-hidden-behind-computer/",
            "title": "《Code》—— 从手电筒到计算机",
            "date_published": "2023-11-30T14:06:46.000Z",
            "content_html": "<blockquote>\r\n<p>大纲向</p>\r\n</blockquote>\r\n<p>《Code: The Hidden Language of Computer Hardware and\r\nSoftware》书名挺长，但是本好书。要是大学时期的老师按照书里的思路展开计算机专业部分的课程，我也不至于学了两年编程还是囫囵吞枣，只能邯郸学步。书里顺带还涉及了信号系统、数字电路等计算机外的部分内容，简直不能更适合当做信息工程或通信工程专业学生的课外读物。相比国内大学教材居高临下式的填鸭式讲法，我看到的几本国外教材（<a\r\nhref=\"https://shenlvmeng.github.io/blog/2018/05/01/sicp-note/\">计算机程序的构造和解释</a>、Gilbert\r\nStrang的<a\r\nhref=\"https://book.douban.com/subject/34820335/\">线性代数</a>）由浅入深、循循善诱的展开方式友好了许多。《Code》这本书虽然严格来说不算教材，只是计算机原理入门，但也相当适合和微机原理有缘分的人买来看看。浅显的文笔不会阻碍你深刻认识到计算机工作原理。</p>\r\n<p>全书1-10章对于计算机相关专业学生来说，很易理解，读起来很快。但从11章起到17章自动操作，内容突然有深度起来，读起来颇有思维体操的感觉。在18章了解芯片历史，短暂歇口气后，从19章到22章，你将完整了解到操作系统是怎么建立起来的。在此基础上，最后3章里介绍编程语言时，就一点也不突兀，很好理解了。</p>\r\n<h2 id=\"作者序\">作者序</h2>\r\n<ul>\r\n<li>内存和外存的区别体现了实际需求和可观性能的矛盾，简单说就是我们目前找不到同时具备两种存储所有优点（既快又持久）的存储媒介</li>\r\n</ul>\r\n<h2 id=\"至亲密友\">至亲密友</h2>\r\n<ul>\r\n<li>编码就是交流</li>\r\n<li>2个不同事物通过组合，可以表示所有信息</li>\r\n</ul>\r\n<h2 id=\"编码与组合\">编码与组合</h2>\r\n<ul>\r\n<li>摩尔斯电码</li>\r\n</ul>\r\n<h2 id=\"布莱叶盲文和二进制码\">布莱叶盲文和二进制码</h2>\r\n<ul>\r\n<li><a\r\nhref=\"https://zh.wikipedia.org/wiki/%E7%9B%B2%E6%96%87\">布莱叶盲文</a>用6个位置的凸点有无编码表示字符</li>\r\n</ul>\r\n<h2 id=\"手电筒的剖析\">手电筒的剖析</h2>\r\n<ul>\r\n<li>电压、电流、电阻、欧姆定律、功率</li>\r\n<li>开关的两种状态</li>\r\n</ul>\r\n<h2 id=\"绕过拐角的通信\">绕过拐角的通信</h2>\r\n<ul>\r\n<li>电路的串联、并联</li>\r\n<li>电路的尺寸极限</li>\r\n</ul>\r\n<h2 id=\"电报机和继电器\">电报机和继电器</h2>\r\n<ul>\r\n<li>利用电磁现象的电报机和继电器</li>\r\n</ul>\r\n<h2 id=\"数字和计数\">数字和计数</h2>\r\n<ul>\r\n<li>十进制的来源</li>\r\n<li>其他进制和二进制</li>\r\n</ul>\r\n<h2 id=\"二进制数\">二进制数</h2>\r\n<ul>\r\n<li>二进制是最简单的数字系统</li>\r\n<li>利用冗余可以消除信息里噪音的影响</li>\r\n<li>通用产品代码（条形码）的编码方式\r\n<ul>\r\n<li>奇偶校验</li>\r\n<li>模校验字符</li>\r\n<li>正反可读</li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"逻辑与开关\">逻辑与开关</h2>\r\n<ul>\r\n<li>布尔代数的来源</li>\r\n<li>布尔代数的集合解释</li>\r\n<li>布尔代数的电路表示</li>\r\n</ul>\r\n<h2 id=\"门\">门</h2>\r\n<blockquote>\r\n<p>自此章起，终于开始进入数字电路到计算机的领域，<strong>逻辑门是其中最基础的单元</strong></p>\r\n</blockquote>\r\n<ul>\r\n<li>串并联和与或门</li>\r\n<li>与或非门的继电器表示</li>\r\n<li>与非门和或非门的继电器表示</li>\r\n<li>德摩根律</li>\r\n</ul>\r\n<h2 id=\"二进制加法器\">二进制加法器</h2>\r\n<ul>\r\n<li>二进制表示下的加法\r\n<ul>\r\n<li>或门（结果输出）+ 与非门（进位输出）</li>\r\n</ul></li>\r\n<li>半加器和全加器（考虑了进位输入的半加器）</li>\r\n<li>8个全加器构成的<strong>8位加法器</strong></li>\r\n<li>行波进位</li>\r\n</ul>\r\n<h2 id=\"如何实现减法\">如何实现减法</h2>\r\n<ul>\r\n<li>补码和反码：用来将减法转化为加法</li>\r\n<li>有符号数和无符号数\r\n<ul>\r\n<li>有符号数首位1表示负数</li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"反馈与触发器\">反馈与触发器</h2>\r\n<ul>\r\n<li>反馈是更复杂电路的基础</li>\r\n<li>振荡器：单纯取反后反馈到输入端的电路\r\n<ul>\r\n<li>周期和频率</li>\r\n</ul></li>\r\n<li>更复杂的反馈可以构成记忆电路状态的<strong>触发器</strong></li>\r\n<li>RS触发器，可以记忆置位和复位的值</li>\r\n<li>D型触发器，在保持位为1时，才会保存数据端输入</li>\r\n<li>D型触发器构成的8位<strong>锁存器</strong></li>\r\n<li>电平触发和边沿触发</li>\r\n<li>边沿触发的D型触发器</li>\r\n<li>分频器和8位行波计数器</li>\r\n</ul>\r\n<h2 id=\"字节和十六进制\">字节和十六进制</h2>\r\n<ul>\r\n<li>字节的来源\r\n<ul>\r\n<li>8位的长度刚好可以表示大多数书面语言的基本字符，对于象形文字，用2个字节也够了</li>\r\n</ul></li>\r\n<li>字节的十六进制表示</li>\r\n<li>十六进制和二进制的转换</li>\r\n</ul>\r\n<h2 id=\"存储器结构\">存储器结构</h2>\r\n<ul>\r\n<li>8-1选择器和3-8译码器</li>\r\n<li>8×1RAM：结合了选择器和译码器的8位锁存器\r\n<ul>\r\n<li>译码器和选择器的选择信号相同，这个信号也可以叫做<strong>地址</strong></li>\r\n<li>8×1RAM里各比特相互独立</li>\r\n</ul></li>\r\n<li>将2个8×1RAM用共享地址的方式连接到同一个地址/数据/写操作端上，可以得到8×2RAM</li>\r\n<li>将2个8×1RAM组合1个2-1选择器和一个1-2译码器，可以得到一个16×1RAM</li>\r\n<li>RAM的存储容量是2<sup>地址输入端个数</sup></li>\r\n<li>KB、MB、TB、PB、EB</li>\r\n<li>64K×8RAM需要2个字节表示的地址</li>\r\n<li>RAM需要恒定的电流来维持数据</li>\r\n</ul>\r\n<h2 id=\"自动操作\">自动操作</h2>\r\n<ul>\r\n<li>振荡器 + 16位计数器 + 64K×8RAM + 8位加法器构成的自动累加器</li>\r\n<li>代码和数据的区分\r\n<ul>\r\n<li>单独用一块64K×8RAM存储代码，代码指导机器如何操作</li>\r\n</ul></li>\r\n<li>操作码和操作数</li>\r\n<li>第3个字节：操作数的存储地址\r\n<ul>\r\n<li>避免了顺序存储的问题</li>\r\n</ul></li>\r\n<li>新的寻址方式：Jump指令\r\n<ul>\r\n<li>从指定地址开始寻址指令</li>\r\n</ul></li>\r\n<li>计算机区分于计算器的基础：条件跳转指令\r\n<ul>\r\n<li>零转移/进位转移/非零转移/无进位转移</li>\r\n</ul></li>\r\n<li>算术逻辑单元，ALU</li>\r\n<li>助记符表示下的机器码\r\n<ul>\r\n<li>MOV/LOD/STO/ADD/SUB/ADC/SBB/JMP/...</li>\r\n<li>汇编语言、手动汇编</li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"从算盘到芯片\">从算盘到芯片</h2>\r\n<ul>\r\n<li>算盘</li>\r\n<li>对数表、对数尺</li>\r\n<li>机械计算器</li>\r\n<li>自动织布机与打孔的金属卡片</li>\r\n<li>巴贝奇的差分机和解析机</li>\r\n<li>赫尔曼·霍尔瑞斯的制表机\r\n<ul>\r\n<li>再次基础上，他成立了IBM</li>\r\n</ul></li>\r\n<li>从MARK I到13000个继电器的MARK II</li>\r\n<li>Grace Murray Hopper发现的第一个“bug”</li>\r\n<li>真空管的发明</li>\r\n<li>图灵的贡献\r\n<ul>\r\n<li>图灵机，可计算性</li>\r\n<li>图灵测试法</li>\r\n</ul></li>\r\n<li>ENIAC，此时仍在使用十进制数</li>\r\n<li>冯诺依曼和他的EDVAC\r\n<ul>\r\n<li>二进制数</li>\r\n<li>存储代码和数据的存储器</li>\r\n<li>程序计数器寻址</li>\r\n<li>允许条件跳转</li>\r\n</ul></li>\r\n<li>香农和信息论</li>\r\n<li>维纳和控制论</li>\r\n<li>UNIVAC</li>\r\n<li>晶体管的发明和半导体</li>\r\n<li>NPN晶体管</li>\r\n<li>集成电路（IC），又叫芯片\r\n<ul>\r\n<li>TTL（晶体管-晶体管逻辑，响应快功率高）和CMOS（互补金属氧化物半导体，响应慢功率低）</li>\r\n</ul></li>\r\n<li>摩尔定律</li>\r\n<li>Intel 4004，第一块计算机芯片，或者说微处理器</li>\r\n<li>Intel 4040，Intel 8008</li>\r\n</ul>\r\n<h2 id=\"两种典型的微处理器\">两种典型的微处理器</h2>\r\n<ul>\r\n<li>Intel 8008的改进：Intel 8080和Motorola 6800</li>\r\n<li>Intel 8080\r\n<ul>\r\n<li>振动器输入</li>\r\n<li>电源输出</li>\r\n<li>接地</li>\r\n<li>寻址信号</li>\r\n<li>控制信号</li>\r\n<li>数据信号</li>\r\n</ul></li>\r\n<li>汇编里的助记符只是方便我们使用，处理器只能读取字节</li>\r\n<li>8080中设置更方便处理器读取信息的寄存器</li>\r\n<li>直接寻址和间接寻址</li>\r\n<li>栈和程序计数器</li>\r\n<li>Call命令和子程序</li>\r\n<li>内存映像I/O和中断</li>\r\n<li>Motorola 6800</li>\r\n<li>little-endian（Intel方式）和big-endian（Motorola方式）\r\n<ul>\r\n<li>高低位字节存储方式在Intel和Motorola芯片里不同，Intel是低字节在前，Motorola则是高字节在前</li>\r\n<li>命名来源于《吉列佛游记》里关于吃鸡蛋前先敲碎哪个头的讨论</li>\r\n</ul></li>\r\n<li>8080被应用在第一台家用电脑Altair 8800上</li>\r\n<li>Apple II应用了6800的MOS技术改进版6502</li>\r\n<li>IBM在IBM PC(IBM\r\n5150)里使用了8088芯片，8088芯片的内部结构和8086类似，和8080的操作吗不兼容</li>\r\n<li>x86系列微处理器包括1982年发布的186和286芯片。之后又发布了32位的386和后续的486以及Intel\r\nPentium系列微处理器，尽管指令集不断扩展，但都支持8086起的所有处理器操作码</li>\r\n<li>Macintosh采用了Motorola的68000微处理器，并从1994年起使用RISC（精简指令集计算机）微处理器体系的PowerPC微处理器</li>\r\n<li>流水线技术（pipelining）和Cache（高速缓冲存储器）</li>\r\n</ul>\r\n<h2 id=\"ascii码和字符转换\">ASCII码和字符转换</h2>\r\n<ul>\r\n<li>Baudot码/Murray编码\r\n<ul>\r\n<li>转义</li>\r\n</ul></li>\r\n<li>ASCII码\r\n<ul>\r\n<li>7位编码</li>\r\n<li>控制字符</li>\r\n</ul></li>\r\n<li>BCD编码</li>\r\n<li>8位的ASCII码</li>\r\n<li>中日韩字符编码</li>\r\n<li>2字节的Unicode编码\r\n<ul>\r\n<li>支持象形文字</li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"总线\">总线</h2>\r\n<ul>\r\n<li>总线信号\r\n<ul>\r\n<li>地址信号</li>\r\n<li>数据输入信号</li>\r\n<li>数据输出信号</li>\r\n<li>控制信号</li>\r\n</ul></li>\r\n<li>MCA总线/PCI总线</li>\r\n<li>SRAM、DRAM</li>\r\n<li>电子射线管（CRT）</li>\r\n<li>水平回归、垂直回归</li>\r\n<li>隔行扫描</li>\r\n<li>分辨率</li>\r\n<li>键盘实现</li>\r\n<li>磁带</li>\r\n<li>软盘和磁盘\r\n<ul>\r\n<li>磁道和扇区</li>\r\n<li>直接内存访问技术（DMA）</li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"操作系统\">操作系统</h2>\r\n<ul>\r\n<li>PROM、EPROM</li>\r\n<li>文件系统</li>\r\n<li>CP/M</li>\r\n<li>引导系统</li>\r\n<li>API</li>\r\n<li>QDOS -&gt; MS-DOS\r\n<ul>\r\n<li>层次文件系统</li>\r\n</ul></li>\r\n<li>UNIX和UNIX思想\r\n<ul>\r\n<li>GNU</li>\r\n</ul></li>\r\n<li>多任务</li>\r\n<li>内存管理</li>\r\n</ul>\r\n<h2 id=\"定点数和浮点数\">定点数和浮点数</h2>\r\n<ul>\r\n<li>定点：小数点的位置总在数的某个特定位置</li>\r\n<li>浮点：基于科学计数法\r\n<ul>\r\n<li>4个字节的单精度</li>\r\n<li>8个字节的双精度</li>\r\n<li>IEEE标准浮点数</li>\r\n<li>精度问题</li>\r\n</ul></li>\r\n<li>数字协同处理器</li>\r\n</ul>\r\n<h2 id=\"高级语言和低级语言\">高级语言和低级语言</h2>\r\n<ul>\r\n<li>第一个编写汇编器的人需要手工对程序汇编。之后新的汇编器可以在已有的计算机上编写，利用已有的汇编器进行汇编，这种方式也叫<strong>交叉汇编</strong>。</li>\r\n<li>编译器（程序 -&gt; 机器码）</li>\r\n<li>FORTRAN，科学计算语言</li>\r\n<li>ALGOL，高级语言的鼻祖\r\n<ul>\r\n<li>for循环</li>\r\n<li>if语句</li>\r\n<li>块、变量声明</li>\r\n<li>数组</li>\r\n</ul></li>\r\n<li>计算机科学又像工程，又像艺术</li>\r\n<li>COBOL，第一个成功为商业系统使用的程序设计语言</li>\r\n<li>BASIC</li>\r\n<li>解释型语言，边读边执行</li>\r\n<li>Pascal、Turbo Pascal</li>\r\n<li>Ada</li>\r\n<li>C，BCPL（Basic CPL）的后继者</li>\r\n<li>LISP、APL</li>\r\n<li>面向对象程序设计语言</li>\r\n</ul>\r\n<h2 id=\"图形化革命\">图形化革命</h2>\r\n<ul>\r\n<li>用户界面</li>\r\n<li>SAGE\r\n<ul>\r\n<li>光笔</li>\r\n</ul></li>\r\n<li>鼠标</li>\r\n<li>Xerox，PARC，Alto工程</li>\r\n<li>图形界面和图形对象</li>\r\n<li>Macintosh和Mac系统</li>\r\n<li>Windows系统</li>\r\n<li>面向对象语言\r\n<ul>\r\n<li>SmallTalk语言</li>\r\n<li>C++</li>\r\n<li>Java</li>\r\n</ul></li>\r\n<li>集成开发环境（IDE）</li>\r\n<li>文本信息编码\r\n<ul>\r\n<li>RTF</li>\r\n<li>PostScript</li>\r\n</ul></li>\r\n<li>计算机图形\r\n<ul>\r\n<li>矢量 -&gt; CAD（计算机辅助设计）</li>\r\n<li>光栅 -&gt; 位图</li>\r\n</ul></li>\r\n<li>CCD（电荷耦合器）\r\n<ul>\r\n<li>光感度不同对应不同的像素值阵列（模拟信号 -&gt; 数字信号）</li>\r\n<li>数码相机、CD、DVD、VCD</li>\r\n</ul></li>\r\n<li>数据压缩\r\n<ul>\r\n<li>无损压缩\r\n<ul>\r\n<li>游程长度编码（RLE）</li>\r\n<li>GIF和LZW压缩</li>\r\n</ul></li>\r\n<li>有损压缩\r\n<ul>\r\n<li>JPEG</li>\r\n<li>OCR</li>\r\n</ul></li>\r\n</ul></li>\r\n<li>脉冲编码调制技术（PCM）\r\n<ul>\r\n<li>ADC（模拟数字转换器）和DAC（数字模拟转换器）</li>\r\n<li>采样率和奈奎斯特采样定律</li>\r\n</ul></li>\r\n<li>语言识别</li>\r\n<li>MIDI合成器</li>\r\n<li>MPEG</li>\r\n<li>调制和解调</li>\r\n<li>Internet\r\n<ul>\r\n<li>WWW</li>\r\n<li>HTTP</li>\r\n<li>CGI</li>\r\n<li>JavaScript</li>\r\n</ul></li>\r\n</ul>\r\n<p><em>--END--</em></p>\r\n",
            "tags": [
                "代码",
                "计算机",
                "微机原理",
                "门",
                "操作系统",
                "数字电路"
            ]
        }
    ]
}