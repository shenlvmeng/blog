{
    "version": "https://jsonfeed.org/version/1",
    "title": "Shenlvmeng's Blog • All posts by \"requestanimationframe\" tag",
    "description": "Be sharp, my friend.",
    "home_page_url": "http://shenlvmeng.github.com/blog",
    "items": [
        {
            "id": "http://shenlvmeng.github.com/blog/2017/02/28/request-animation-frame/",
            "url": "http://shenlvmeng.github.com/blog/2017/02/28/request-animation-frame/",
            "title": "JS动画之requestAnimationFrame",
            "date_published": "2017-02-28T09:06:47.000Z",
            "content_html": "<p>CSS3中提供了animation的特性，用来通过指定关键帧（@kenframe）来实现动画效果。这么做方便高效。但是浏览器的兼容效果则比较捉急，且不能实现高级的缓动函数，更别说暂停、回放、倒放等功能了。所以大部分炫酷的动画还是采用JS动画来完成。</p>\n<p>传统的JS动画无非是通过setInterval或是setTimeout定时器函数实现。这在对动画实时性以及流畅性要求不高时没有什么问题。不过当<a href=\"https://shenlvmeng.github.io/blog/2017/02/27/event-loop/\">消息队列</a>较拥挤时，定时效果不能得到保障。同时不同浏览器的UI渲染频率各不相同，很可能与用户设置的时间间隔相冲突。如，相当一部分浏览器的显示频率是16.7ms，此时如果我们设置的时延是10ms就会出现丢帧的情况。为了解决这个问题，requestAnimationFrame千呼万唤始出来。</p>\n<p>requestAnimationFrame是window对象在HTML5中的新API。它的使用方法与setTimeout类似，不同的是，requestAnimationFrame()方法将告诉浏览器您希望执行动画，并请求浏览器调用指定的函数在下一次重绘之前调用回调函数更新动画。从而，不同的动画有了一个统一的刷新机制，可以提升系统性能，节省了CPU、GPU和电池等（CSS中的<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/will-change\">will-change</a>也发挥着类似功能）。</p>\n<p>那么requestAnimationFrame的兼容性如何呢？</p>\n<p><img src=\"/blog/blog/images/request-animation-frame-graph-1.png\"></p>\n<p>好像还不错。在老版本的浏览器上，也有shim方法来实现同样的效果，借助了setTimeout函数。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;use strict&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> lastTime = <span class=\"number\">0</span>,</span><br><span class=\"line\">        vendors = [<span class=\"string\">&#x27;ms&#x27;</span>, <span class=\"string\">&#x27;moz&#x27;</span>, <span class=\"string\">&#x27;webkit&#x27;</span>, <span class=\"string\">&#x27;o&#x27;</span>],</span><br><span class=\"line\">        x;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (x = <span class=\"number\">0</span>; x &lt; vendors.<span class=\"property\">length</span> &amp;&amp; !<span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span>; ++x) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span> = <span class=\"variable language_\">window</span>[vendors[x] + <span class=\"string\">&#x27;RequestAnimationFrame&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">cancelAnimationFrame</span>  = <span class=\"variable language_\">window</span>[vendors[x] + <span class=\"string\">&#x27;CancelAnimationFrame&#x27;</span>]</span><br><span class=\"line\">                                   || <span class=\"variable language_\">window</span>[vendors[x] + <span class=\"string\">&#x27;CancelRequestAnimationFrame&#x27;</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">requestAnimationFrame</span> = <span class=\"keyword\">function</span> (<span class=\"params\">callback</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> currTime = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>().<span class=\"title function_\">getTime</span>(),</span><br><span class=\"line\">                timeToCall = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(<span class=\"number\">0</span>, <span class=\"number\">16</span> - (currTime - lastTime)),</span><br><span class=\"line\">                id = <span class=\"variable language_\">window</span>.<span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">                    <span class=\"title function_\">callback</span>(currTime + timeToCall);</span><br><span class=\"line\">                &#125;, timeToCall);</span><br><span class=\"line\">            lastTime = currTime + timeToCall;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable language_\">window</span>.<span class=\"property\">cancelAnimationFrame</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">window</span>.<span class=\"property\">cancelAnimationFrame</span> = <span class=\"keyword\">function</span> (<span class=\"params\">id</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">window</span>.<span class=\"built_in\">clearTimeout</span>(id);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;());</span><br></pre></td></tr></table></figure>\n\n<p>那么requestAnimationFrame怎么用呢。语法像下面这样。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requestID = <span class=\"variable language_\">window</span>.<span class=\"title function_\">requestAnimationFrame</span>(callback);               <span class=\"comment\">// Firefox 23 / IE10 / Chrome / Safari 7 (incl. iOS)</span></span><br><span class=\"line\">requestID = <span class=\"variable language_\">window</span>.<span class=\"title function_\">mozRequestAnimationFrame</span>(callback);                <span class=\"comment\">// Firefox &lt; 23</span></span><br><span class=\"line\">requestID = <span class=\"variable language_\">window</span>.<span class=\"title function_\">webkitRequestAnimationFrame</span>(callback); <span class=\"comment\">// Older versions Chrome/Webkit</span></span><br></pre></td></tr></table></figure>\n\n<p>注意它只接受回调函数作为参数，不需要指定延时哦。同样的，相对应的还有一个<code>cancelAnimationFrame(requestID)</code>方法取消重绘。最常见的用法是在一个动画函数里通过requestAnimationFrame循环调用自身。就像下面这样。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">funFall = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> start = <span class=\"number\">0</span>, during = <span class=\"number\">100</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> _run = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        start++;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> top = <span class=\"title class_\">Tween</span>.<span class=\"property\">Bounce</span>.<span class=\"title function_\">easeOut</span>(start, objBall.<span class=\"property\">top</span>, <span class=\"number\">500</span> - objBall.<span class=\"property\">top</span>, during);</span><br><span class=\"line\">        ball.<span class=\"title function_\">css</span>(<span class=\"string\">&quot;top&quot;</span>, top);</span><br><span class=\"line\">        <span class=\"title function_\">shadowWithBall</span>(top);    <span class=\"comment\">// 投影跟随小球的动</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (start &lt; during) <span class=\"title function_\">requestAnimationFrame</span>(_run);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"title function_\">_run</span>();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "动画",
                "JavaScript",
                "requestAnimationFrame"
            ]
        }
    ]
}