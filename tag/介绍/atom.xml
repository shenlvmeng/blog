<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://shenlvmeng.github.com/blog</id>
    <title>Shenlvmeng&#39;s Blog • Posts by &#34;介绍&#34; tag</title>
    <link href="http://shenlvmeng.github.com/blog" />
    <updated>2018-09-13T15:35:11.000Z</updated>
    <category term="总结" />
    <category term="制度" />
    <category term="道德" />
    <category term="文官" />
    <category term="万历" />
    <category term="明朝" />
    <category term="读书笔记" />
    <category term="展望" />
    <category term="2018" />
    <category term="2019" />
    <category term="flag" />
    <category term="2020" />
    <category term="2021" />
    <category term="2022" />
    <category term="2023" />
    <category term="面试" />
    <category term="前端" />
    <category term="FAQ" />
    <category term="HTML" />
    <category term="CSS" />
    <category term="style guide" />
    <category term="编程" />
    <category term="范式" />
    <category term="设计" />
    <category term="艺术" />
    <category term="质量" />
    <category term="async_hooks" />
    <category term="cls-hooked" />
    <category term="logId" />
    <category term="录音" />
    <category term="getUserMedia" />
    <category term="AudioContext" />
    <category term="PCM" />
    <category term="WAVE" />
    <category term="二叉搜索树" />
    <category term="算法" />
    <category term="回忆" />
    <category term="老朋友" />
    <category term="C" />
    <category term="Hash" />
    <category term="布隆过滤器" />
    <category term="字符串检索" />
    <category term="canvas" />
    <category term="流程图" />
    <category term="d3" />
    <category term="g6" />
    <category term="zrender" />
    <category term="processOn" />
    <category term="SDN" />
    <category term="cbench" />
    <category term="安装说明" />
    <category term="绘图" />
    <category term="动画" />
    <category term="攻略" />
    <category term="流水账" />
    <category term="成都" />
    <category term="重庆" />
    <category term="武汉" />
    <category term="重构" />
    <category term="代码" />
    <category term="代码风格" />
    <category term="数据可视化" />
    <category term="爬虫" />
    <category term="chrome" />
    <category term="crx" />
    <category term="扩展" />
    <category term="CORS" />
    <category term="跨域" />
    <category term="盒模型" />
    <category term="浮动" />
    <category term="Reactive Programming" />
    <category term="JavaScript" />
    <category term="Cycle.js" />
    <category term="Dart" />
    <category term="最佳实践" />
    <category term="引流" />
    <category term="universal-link" />
    <category term="app-link" />
    <category term="脚手架" />
    <category term="degit" />
    <category term="git" />
    <category term="设计模式" />
    <category term="类" />
    <category term="接口" />
    <category term="抽象类" />
    <category term="DOM" />
    <category term="Docker" />
    <category term="ONOS" />
    <category term="控制器" />
    <category term="虚拟化" />
    <category term="笔记" />
    <category term="UX" />
    <category term="UED" />
    <category term="准则" />
    <category term="Java" />
    <category term="Ruby" />
    <category term="反射" />
    <category term="编程范式" />
    <category term="鸭子类型" />
    <category term="管理" />
    <category term="效率" />
    <category term="知识工作者" />
    <category term="卓有成效" />
    <category term="Elm" />
    <category term="框架" />
    <category term="函数式编程" />
    <category term="虚网映射" />
    <category term="Javascript" />
    <category term="并发" />
    <category term="event loop" />
    <category term="覆盖率" />
    <category term="端到端测试" />
    <category term="istanbul" />
    <category term="istanbuljs" />
    <category term="JavaSript" />
    <category term="Express" />
    <category term="源码" />
    <category term="代码覆盖率" />
    <category term="istanbul-middleware" />
    <category term="代码插桩" />
    <category term="require钩子" />
    <category term="babel-plugin-istanbul" />
    <category term="css" />
    <category term="html5" />
    <category term="flex" />
    <category term="javascript" />
    <category term="roadmap" />
    <category term="闭包" />
    <category term="Haskell" />
    <category term="monad" />
    <category term="后端" />
    <category term="管理后台" />
    <category term="egg.js" />
    <category term="工作流" />
    <category term="pull request" />
    <category term="golang" />
    <category term="语言学习" />
    <category term="黑客与画家" />
    <category term="创业" />
    <category term="骑行" />
    <category term="海南" />
    <category term="图文" />
    <category term="reflow" />
    <category term="repaint" />
    <category term="命名法" />
    <category term="成功学" />
    <category term="自我建设" />
    <category term="HTTP" />
    <category term="HTTP/2" />
    <category term="SPDY" />
    <category term="QUIC" />
    <category term="HTTPS" />
    <category term="状态码" />
    <category term="网络攻击" />
    <category term="介绍" />
    <category term="图片渲染" />
    <category term="html2canvas" />
    <category term="dom-to-image" />
    <category term="electron" />
    <category term="indexedDB" />
    <category term="异步" />
    <category term="Generator" />
    <category term="thunk" />
    <category term="async" />
    <category term="函数表达式" />
    <category term="对象" />
    <category term="继承" />
    <category term="类型转换" />
    <category term="==" />
    <category term="类型判断" />
    <category term="猫" />
    <category term="杀手" />
    <category term="管理学" />
    <category term="领导力" />
    <category term="梯队" />
    <category term="移动端" />
    <category term="UI" />
    <category term="自适应" />
    <category term="rem" />
    <category term="Electron" />
    <category term="GUI" />
    <category term="gpx" />
    <category term="template" />
    <category term="Electron Builder" />
    <category term="PWA" />
    <category term="方法论" />
    <category term="夜话" />
    <category term="多线" />
    <category term="生活" />
    <category term="密码" />
    <category term="密钥" />
    <category term="技改" />
    <category term="Vue" />
    <category term="gulp" />
    <category term="瀑布流" />
    <category term="电影" />
    <category term="PHP" />
    <category term="参考" />
    <category term="思维" />
    <category term="学习能力" />
    <category term="右脑" />
    <category term="经济学" />
    <category term="宏观经济学" />
    <category term="术语" />
    <category term="GDP" />
    <category term="CPI" />
    <category term="储蓄" />
    <category term="投资" />
    <category term="金融市场" />
    <category term="股票" />
    <category term="债券" />
    <category term="美联储" />
    <category term="失业" />
    <category term="货币" />
    <category term="现值" />
    <category term="准备金" />
    <category term="货币中性" />
    <category term="通货膨胀" />
    <category term="汇率" />
    <category term="购买力" />
    <category term="净出口" />
    <category term="资产净流出" />
    <category term="总需求" />
    <category term="总供给" />
    <category term="流动性偏好" />
    <category term="乘数效应" />
    <category term="菲利普斯曲线" />
    <category term="微观经济学" />
    <category term="供求" />
    <category term="贸易" />
    <category term="市场" />
    <category term="税" />
    <category term="剩余" />
    <category term="外部性" />
    <category term="公共物品" />
    <category term="公共资源" />
    <category term="生产成本" />
    <category term="利润" />
    <category term="垄断" />
    <category term="价格歧视" />
    <category term="寡头" />
    <category term="垄断竞争" />
    <category term="生产要素市场" />
    <category term="贫困" />
    <category term="消费者选择理论" />
    <category term="不对称信息" />
    <category term="政治经济学" />
    <category term="行为经济学" />
    <category term="VSCode" />
    <category term="编辑器" />
    <category term="IDE" />
    <category term="hybrid" />
    <category term="JSBridge" />
    <category term="Web Worker" />
    <category term="Service Worker" />
    <category term="习惯" />
    <category term="lint" />
    <category term="editorconfig" />
    <category term="commit message" />
    <category term="量子物理" />
    <category term="史话" />
    <category term="埋点" />
    <category term="raven.js" />
    <category term="前端监控" />
    <category term="文本编辑器" />
    <category term="quill" />
    <category term="结构化数据" />
    <category term="React" />
    <category term="Hooks" />
    <category term="函数组件" />
    <category term="复用" />
    <category term="状态管理" />
    <category term="redux" />
    <category term="MobX" />
    <category term="代码质量" />
    <category term="重来" />
    <category term="requestAnimationFrame" />
    <category term="TypeScript" />
    <category term="路书" />
    <category term="gpx解析" />
    <category term="EXIF" />
    <category term="人类" />
    <category term="生存" />
    <category term="基因" />
    <category term="响应式编程" />
    <category term="RxJS" />
    <category term="成长" />
    <category term="业务" />
    <category term="思想" />
    <category term="程序设计" />
    <category term="心理学" />
    <category term="自我" />
    <category term="社会思维" />
    <category term="社会影响" />
    <category term="文化" />
    <category term="性别" />
    <category term="从众" />
    <category term="说服" />
    <category term="临床诊断" />
    <category term="陪审团" />
    <category term="司法" />
    <category term="物质主义" />
    <category term="健康" />
    <category term="社会关系" />
    <category term="偏见" />
    <category term="攻击行为" />
    <category term="亲密关系" />
    <category term="友谊" />
    <category term="爱情" />
    <category term="利他" />
    <category term="冲突" />
    <category term="和解" />
    <category term="软技能" />
    <category term="理财" />
    <category term="健身" />
    <category term="自我营销" />
    <category term="学习" />
    <category term="商业模式" />
    <category term="产品" />
    <category term="校园网" />
    <category term="互联网" />
    <category term="技术" />
    <category term="web开发" />
    <category term="哲思" />
    <category term="择偶观" />
    <category term="validator" />
    <category term="大文件" />
    <category term="visibilityChange" />
    <category term="IntersectionObserver" />
    <category term="图种" />
    <category term="draggable" />
    <category term="webpack" />
    <category term="z-index" />
    <category term="git submodule" />
    <category term="object-fit" />
    <category term="object-position" />
    <category term="BroadcastChannel" />
    <category term="extract-text-webpack-plugin" />
    <category term="lottie" />
    <category term="backface-visibility" />
    <category term="egret" />
    <category term="mock" />
    <category term="SSO" />
    <category term="autoprefixer" />
    <category term="polyfill" />
    <category term="Android" />
    <category term="ffmpeg" />
    <category term="React Hooks" />
    <category term="rollup" />
    <category term="CDN" />
    <category term="DNS" />
    <category term="CNAME" />
    <category term="架构" />
    <category term="组件" />
    <category term="ssh" />
    <category term="fis-receiver" />
    <category term="tmux" />
    <category term="origami" />
    <category term="promise" />
    <category term="encodeURI" />
    <category term="encodeURIComponent" />
    <category term="axios" />
    <category term="charles" />
    <category term="黑色幽默" />
    <category term="朋友" />
    <category term="梦" />
    <category term="濒死" />
    <category term="江南" />
    <category term="苏州" />
    <category term="无锡" />
    <category term="宜兴" />
    <category term="湖州" />
    <category term="南浔" />
    <category term="游记" />
    <category term="随笔" />
    <category term="群众" />
    <category term="理论" />
    <category term="实效" />
    <category term="测试" />
    <category term="长沙" />
    <category term="杭州" />
    <category term="湖南" />
    <category term="核酸" />
    <category term="美食" />
    <category term="云南" />
    <category term="丽江" />
    <category term="大理" />
    <category term="青岛" />
    <category term="济南" />
    <category term="山东" />
    <category term="西北" />
    <category term="银川" />
    <category term="西宁" />
    <category term="青海湖" />
    <category term="西海镇" />
    <category term="茶卡盐湖" />
    <category term="厦门" />
    <category term="感受" />
    <category term="C语言" />
    <category term="树" />
    <category term="主干开发" />
    <category term="GitFlow" />
    <category term="GithubFlow" />
    <category term="typescript" />
    <category term="类型系统" />
    <category term="webrtc" />
    <category term="RTMP" />
    <category term="首屏时间" />
    <category term="性能优化" />
    <category term="公司" />
    <category term="个人发展" />
    <category term="战略" />
    <category term="晋升" />
    <category term="哲学" />
    <category term="幸福" />
    <category term="人生" />
    <category term="叔本华" />
    <category term="Unix" />
    <category term="Rollup" />
    <category term="mouseout" />
    <category term="mouseleave" />
    <category term="lint-staged" />
    <category term="吸顶" />
    <category term="图片组件" />
    <category term="形式系统" />
    <category term="不完全性" />
    <category term="隐喻" />
    <category term="哥德尔" />
    <category term="巴赫" />
    <category term="埃舍尔" />
    <category term="济州" />
    <category term="西归浦" />
    <category term="城山" />
    <category term="咸德" />
    <category term="人工智能" />
    <category term="心智" />
    <category term="自指" />
    <category term="图灵" />
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/09/13/http-intro-note/</id>
        <title>《图解HTTP》整理</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/09/13/http-intro-note/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;读完了《图解HTTP》，就算是对计算机网络和HTTP部分内容做了个温习吧。同步做了整理，以便加强记忆和后面回顾。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;概述&#34;&gt;&lt;a href=&#34;#概述&#34; class=&#34;headerlink&#34; title=&#34;概述&#34;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;请求报文构成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法&lt;/li&gt;
&lt;li&gt;URI（绝对或是相对）&lt;/li&gt;
&lt;li&gt;HTTP版本&lt;/li&gt;
&lt;li&gt;请求首部&lt;/li&gt;
&lt;li&gt;内容实体&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;响应报文构成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP版本号&lt;/li&gt;
&lt;li&gt;状态码&lt;/li&gt;
&lt;li&gt;状态码原语&lt;/li&gt;
&lt;li&gt;响应头部&lt;/li&gt;
&lt;li&gt;响应主体&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;请求URI是服务器本身时，可以用&lt;code&gt;*&lt;/code&gt;代替URI。&lt;/p&gt;
&lt;p&gt;可用的方法列表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GET 获取资源&lt;/li&gt;
&lt;li&gt;POST 传输信息&lt;/li&gt;
&lt;li&gt;PUT 传输文件，&lt;strong&gt;没有用户验证机制&lt;/strong&gt;，很少用到&lt;/li&gt;
&lt;li&gt;DELETE 删除文件，同上，很少用到&lt;/li&gt;
&lt;li&gt;HEAD 获得响应头部，不返回主体&lt;/li&gt;
&lt;li&gt;OPTIONS 询问支持方法&lt;/li&gt;
&lt;li&gt;CONNECT 用来建立HTTPS连接的隧道&lt;/li&gt;
&lt;li&gt;TRACE 追踪路径上的所有服务器节点，很少用到&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中后面三个是HTTP1.1才开始支持的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;持久化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在HTTP1.1后，HTTP建立的TCP连接默认是长连接（&lt;code&gt;keep-alive&lt;/code&gt;），避免不必要的多次TCP握手和挥手。在此基础上，客户端可以同时向服务端发起多个资源请求。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;状态化&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;HTTP本身是无状态的。通过cookie实现状态化，cookie通过服务端在响应头部的&lt;code&gt;set-cookie&lt;/code&gt;字段下发，设置信息、使用范围、过期时间等内容。客户端在使用范围内的请求默认会携带上cookie信息。&lt;/p&gt;
&lt;h2 id=&#34;HTTP报文结构&#34;&gt;&lt;a href=&#34;#HTTP报文结构&#34; class=&#34;headerlink&#34; title=&#34;HTTP报文结构&#34;&gt;&lt;/a&gt;HTTP报文结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;请求首部和主体通过CR+LF分割开来&lt;/li&gt;
&lt;li&gt;报文编码&lt;ul&gt;
&lt;li&gt;编码压缩&lt;ul&gt;
&lt;li&gt;gzip （GNU zip）&lt;/li&gt;
&lt;li&gt;compress（UNIX compress）&lt;/li&gt;
&lt;li&gt;deflate（zlib）&lt;/li&gt;
&lt;li&gt;indentity（不压缩）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分块发送&lt;/li&gt;
&lt;li&gt;多部分发送（multipart）&lt;ul&gt;
&lt;li&gt;multipart&amp;#x2F;form-data 表单文件上传，用boundary字符&lt;code&gt;--&lt;/code&gt;表示新的part的开始&lt;/li&gt;
&lt;li&gt;multipart&amp;#x2F;byterange 配合206响应只包含了部分数据时使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;部分发送&lt;ul&gt;
&lt;li&gt;Range指定字节范围&lt;/li&gt;
&lt;li&gt;206响应状态码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;内容协商&lt;ul&gt;
&lt;li&gt;双方就合适的语言、字符集、编码方式、过期时间进行协商&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;HTTP状态码&#34;&gt;&lt;a href=&#34;#HTTP状态码&#34; class=&#34;headerlink&#34; title=&#34;HTTP状态码&#34;&gt;&lt;/a&gt;HTTP状态码&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;1xx 这一类型的状态码，代表请求已被接受，需要继续处理&lt;ul&gt;
&lt;li&gt;100 Continue：客户端应当继续发送请求。&lt;/li&gt;
&lt;li&gt;101 Switching Protocals：将通过Upgrade消息头通知客户端采用不同的协议来完成这个请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;2xx 成功：这一类型的状态码，代表请求已成功被服务器接收、理解、并接受。&lt;ul&gt;
&lt;li&gt;200 OK：请求已成功，在方法时HEAD时不返回响应主体&lt;/li&gt;
&lt;li&gt;204 No Content：服务器成功处理了请求，但不需要返回任何实体内容，&lt;strong&gt;用户浏览器应保留发送了该请求的页面&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;205 Reset Content：和204的唯一不同是返回此状态码的响应要求请求者重置文档视图&lt;/li&gt;
&lt;li&gt;206 Partial Content：服务器已经成功处理了部分GET请求。请求必须包含Range头信息来指示客户端希望得到的内容范围，返回使用&lt;code&gt;Content-Range&lt;/code&gt;多用于下载工具&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;3xx 重定向：这类状态码代表需要客户端采取进一步的操作才能完成请求。通常，这些状态码用来重定向，后续的请求地址在本次响应的Location域中指明。&lt;ul&gt;
&lt;li&gt;300 Multiple Choices：被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向。&lt;/li&gt;
&lt;li&gt;301 Moved Permanently：被请求的资源已永久移动到新位置，建议使用Location中的新地址&lt;/li&gt;
&lt;li&gt;302 Found：请求的资源现在临时从不同的URI响应请求&lt;/li&gt;
&lt;li&gt;303 See Other：和302的区别是，客户端&lt;strong&gt;应当采用GET的方式&lt;/strong&gt;访问新的资源&lt;/li&gt;
&lt;li&gt;304 Not Modified：如果客户端发送了一个带条件（包括缓存相关的请求头部）的GET请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变&lt;/li&gt;
&lt;li&gt;305 Use Proxy：被请求的资源必须通过指定的代理才能被访问&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;4xx 客户端错误：客户端发生了错误&lt;ul&gt;
&lt;li&gt;400 Bad Request：由于包含语法错误，当前请求无法被服务器理解&lt;/li&gt;
&lt;li&gt;401 Unauthorized：当前请求需要用户验证，或用户未通过验证。&lt;/li&gt;
&lt;li&gt;403 Forbidden：服务器已经理解请求，但是拒绝执行它&lt;/li&gt;
&lt;li&gt;404 Not Found：资源未被在服务器上发现&lt;/li&gt;
&lt;li&gt;405 Method Not Allowed：请求行中指定的请求方法不能被用于请求相应的资源，响应中必须返回一个Allow头信息用以表示出当前资源能够接受的请求方法的列表&lt;/li&gt;
&lt;li&gt;406 Not Acceptable：请求的资源的内容特性无法满足请求头中的条件&lt;/li&gt;
&lt;li&gt;413 Request Entity Too Large&lt;/li&gt;
&lt;li&gt;414 Request-URI Too Long&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;5xx 服务器错误：服务器在处理请求的过程中有错误发生&lt;ul&gt;
&lt;li&gt;500 Internal Server Error：这个问题会在服务器的代码出错时出现&lt;/li&gt;
&lt;li&gt;501 Not Implemented：服务器不支持当前请求所需要的某个功能&lt;/li&gt;
&lt;li&gt;502 Bad GateWay：作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应&lt;/li&gt;
&lt;li&gt;503 Service Unavailable：临时的服务器维护或者过载。这个状况是临时的，并且将在一段时间以后恢复。&lt;/li&gt;
&lt;li&gt;504 Gateway Timeout：作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器或者辅助服务器收到响应&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;协作机制&#34;&gt;&lt;a href=&#34;#协作机制&#34; class=&#34;headerlink&#34; title=&#34;协作机制&#34;&gt;&lt;/a&gt;协作机制&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;代理（Proxy），单纯转发HTTP请求，会在响应头部的&lt;code&gt;Via&lt;/code&gt;字段留下痕迹&lt;/li&gt;
&lt;li&gt;网关（Gateway），隔绝服务器和客户端，有安全、计费等逻辑&lt;/li&gt;
&lt;li&gt;隧道（tunnel），基于协议搭建，保证传输安全，对用户侧透明&lt;/li&gt;
&lt;li&gt;缓存（Cache），本地、服务端二级缓存，加快响应时间，有过期时间&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;报文头部&#34;&gt;&lt;a href=&#34;#报文头部&#34; class=&#34;headerlink&#34; title=&#34;报文头部&#34;&gt;&lt;/a&gt;报文头部&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首部用来进行连接的各种信息描述。每个首部的字段用字段名和值组成，两者用&lt;code&gt;:&lt;/code&gt;隔开。&lt;/li&gt;
&lt;li&gt;首部分为端到端和逐跳两类，前者在报文转发的整个过程都保留，后者在转发后就会丢弃。典型的逐条首部有&lt;code&gt;Connection&lt;/code&gt;, &lt;code&gt;Keep-Alive&lt;/code&gt;, &lt;code&gt;Transfer-Encoding&lt;/code&gt;, &lt;code&gt;Upgrade&lt;/code&gt;等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;通用首部&#34;&gt;&lt;a href=&#34;#通用首部&#34; class=&#34;headerlink&#34; title=&#34;通用首部&#34;&gt;&lt;/a&gt;通用首部&lt;/h3&gt;&lt;h4 id=&#34;Cache-Control&#34;&gt;&lt;a href=&#34;#Cache-Control&#34; class=&#34;headerlink&#34; title=&#34;Cache-Control&#34;&gt;&lt;/a&gt;Cache-Control&lt;/h4&gt;&lt;p&gt;客户端和服务端协商缓存机制。配合下面一些首部字段使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Etag&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Last-Modified&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Expires&lt;/code&gt;（HTTP1.0）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Pragma&lt;/code&gt;（HTTP1.0）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Age&lt;/code&gt;（HTTP1.0）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;If-None-Match&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;If-Not-Modified-Since&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Cache-Control&lt;/code&gt;有下面一些可配置项。&lt;/p&gt;
&lt;p&gt;缓冲能力上，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;private，缓存只针对当前用户而言&lt;/li&gt;
&lt;li&gt;public，缓存对所有用户生效&lt;/li&gt;
&lt;li&gt;no-cache，始终对缓存进行过期验证&lt;/li&gt;
&lt;li&gt;no-store，不允许缓存&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;过期时间上，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;min-fresh，返回指定时间范围内的非过期资源&lt;/li&gt;
&lt;li&gt;max-stale，返回指定时间范围内过期、非过期资源&lt;/li&gt;
&lt;li&gt;max-age，单位：秒，最大缓存时间&lt;/li&gt;
&lt;li&gt;s-max-age，同上，只用于CDN缓存&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二次验证上，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;only-if-cached，强制从缓存服务器中获取内容&lt;/li&gt;
&lt;li&gt;immutable，一旦缓存不可更改&lt;/li&gt;
&lt;li&gt;must-revalidate，即使本地已缓存，仍要求检查CDN缓存&lt;/li&gt;
&lt;li&gt;proxy-revalidate，缓存服务器必须检查源内容是否改变&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Connection&#34;&gt;&lt;a href=&#34;#Connection&#34; class=&#34;headerlink&#34; title=&#34;Connection&#34;&gt;&lt;/a&gt;Connection&lt;/h4&gt;&lt;p&gt;管理连接，主要有两个用途。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指定不希望转发给代理的字段&lt;/li&gt;
&lt;li&gt;管理持久连接。使用&lt;code&gt;Connection: Keep-Alive&lt;/code&gt;建立连接（HTTP1.1默认行为），使用&lt;code&gt;Connection: Close&lt;/code&gt;终止连接&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;Date&#34;&gt;&lt;a href=&#34;#Date&#34; class=&#34;headerlink&#34; title=&#34;Date&#34;&gt;&lt;/a&gt;Date&lt;/h4&gt;&lt;p&gt;报文创建时间。行如“Date: Tue, 03 Jul 2012 04:31:12 GMT”&lt;/p&gt;
&lt;h4 id=&#34;Pragma&#34;&gt;&lt;a href=&#34;#Pragma&#34; class=&#34;headerlink&#34; title=&#34;Pragma&#34;&gt;&lt;/a&gt;Pragma&lt;/h4&gt;&lt;p&gt;历史遗留字段。&lt;code&gt;Pragma: no-cache&lt;/code&gt;等同于&lt;code&gt;Cache-Control: no-cache&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;除此外还有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trailer，说明报文主体中记录的首部字段&lt;/li&gt;
&lt;li&gt;Transfer-Encoding，分段传输的主体编码&lt;/li&gt;
&lt;li&gt;Upgrade，切换协议，&lt;strong&gt;配合&lt;code&gt;Connection: Upgrade&lt;/code&gt;使用&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Via，标明沿途的整条路径&lt;/li&gt;
&lt;li&gt;Warning，缓存相关警告&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;请求首部&#34;&gt;&lt;a href=&#34;#请求首部&#34; class=&#34;headerlink&#34; title=&#34;请求首部&#34;&gt;&lt;/a&gt;请求首部&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Accept 接受文件的类型，类型间可以指定&lt;code&gt;q=x&lt;/code&gt;表示权重值，x的取值在0到1之间。下同&lt;/li&gt;
&lt;li&gt;Accept-Charset 可以接受的文件字符集&lt;/li&gt;
&lt;li&gt;Accept-Encoding 可以接受的文件编码，有gzip，compress，deflate，indentity几种&lt;/li&gt;
&lt;li&gt;Accept-Language 可接受的语言&lt;/li&gt;
&lt;li&gt;Authorization 服务端需要的用户验证信息&lt;/li&gt;
&lt;li&gt;Age 从缓存实体产生到现在经历的时间&lt;/li&gt;
&lt;li&gt;Expect 期望的服务端返回状态码，服务端无法满足时返回417状态码，客户端等待服务端100响应时发送的请求都要带上该字段&lt;/li&gt;
&lt;li&gt;Host 服务器的主机名，通常是请求资源的URL&lt;/li&gt;
&lt;li&gt;If-Match 需要匹配的Etag，不满足时返回412，表示不满足条件&lt;/li&gt;
&lt;li&gt;If-Modified-Since 返回指定日期后的新内容，否则返回304&lt;/li&gt;
&lt;li&gt;If-Unmodified-Since 类似上&lt;/li&gt;
&lt;li&gt;If-Range 类似If-Match不过是范围匹配&lt;/li&gt;
&lt;li&gt;Max-Forwards 报文最多转发次数，通常配合TRACE方法使用&lt;/li&gt;
&lt;li&gt;Proxy-Authorization 代理服务端需要的用户验证信息&lt;/li&gt;
&lt;li&gt;Range 请求资源的部分内容，一般用在多线程下载（客户端发起）&lt;/li&gt;
&lt;li&gt;Referer 当前请求从哪个地址发起&lt;/li&gt;
&lt;li&gt;User-Agent 请求发起终端信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;响应首部&#34;&gt;&lt;a href=&#34;#响应首部&#34; class=&#34;headerlink&#34; title=&#34;响应首部&#34;&gt;&lt;/a&gt;响应首部&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Accept-Ranges，表示服务器是否支持Range请求，支持时值为bytes，否则是none&lt;/li&gt;
&lt;li&gt;Age，表示缓存到目前为止过了多久（HTTP1.0）&lt;/li&gt;
&lt;li&gt;Etag，资源的唯一标识，分为强Etag和弱Etag&lt;/li&gt;
&lt;li&gt;Location，用在3xx的请求中，表示客户端需要重定向到的新地址&lt;/li&gt;
&lt;li&gt;WWW-Authentication&amp;#x2F;Proxy-Authentication，服务器、代理使用的认证类型&lt;/li&gt;
&lt;li&gt;Server，服务器信息&lt;/li&gt;
&lt;li&gt;Vary，与Vary指定首部字段同名的请求才会命中缓存&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实体首部&#34;&gt;&lt;a href=&#34;#实体首部&#34; class=&#34;headerlink&#34; title=&#34;实体首部&#34;&gt;&lt;/a&gt;实体首部&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Allow 允许的访问方法&lt;/li&gt;
&lt;li&gt;Content-Encoding&amp;#x2F;Content-Language&amp;#x2F;Content-Length&amp;#x2F; 内容的编码、语言、长度、类型&lt;/li&gt;
&lt;li&gt;Content-Location 内容的位置，通常在和访问URI时会用到&lt;/li&gt;
&lt;li&gt;Content-MD5 内容MD5编码，便于和客户端编码后进行对比，防止内容篡改&lt;/li&gt;
&lt;li&gt;Content-Range 用于部分请求&lt;/li&gt;
&lt;li&gt;Content-Type 文件类型，包括MIME type和字符集&lt;/li&gt;
&lt;li&gt;Expires&amp;#x2F;Last-Modified 文件的过期时间和上次修改时间，用户判断缓存是否过期&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除此之外，还有和Cookie相关的两个头部，它们来自网景公司对于Cookie的设计。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set-Cookie，服务端下发设置Cookie信息。包含下列信息&lt;ul&gt;
&lt;li&gt;expires，过期时间&lt;/li&gt;
&lt;li&gt;path，适用路径&lt;/li&gt;
&lt;li&gt;domain，适用域名&lt;/li&gt;
&lt;li&gt;secure，限制https才会携带Cookie&lt;/li&gt;
&lt;li&gt;HttpOnly，限制JS脚本访问Cookie&lt;/li&gt;
&lt;li&gt;下发的cookie内容&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cookie，客户端期望的cookie内容&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外还有一些常用的首部字段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;X-Frame-Options，规定页面在iframe中的呈现方式&lt;ul&gt;
&lt;li&gt;DENY 禁止访问&lt;/li&gt;
&lt;li&gt;SAMEORIGIN 仅允许同源访问&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;X-XSS-Protection，为1时开启XSS防御&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不建议使用”X-“开头的方式拓展非标准首部&lt;/strong&gt;。 &lt;/p&gt;
&lt;h2 id=&#34;HTTPS简介&#34;&gt;&lt;a href=&#34;#HTTPS简介&#34; class=&#34;headerlink&#34; title=&#34;HTTPS简介&#34;&gt;&lt;/a&gt;HTTPS简介&lt;/h2&gt;&lt;p&gt;HTTP缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用明文 -&amp;gt; 通信内容可以被窃听 –HTTPS–&amp;gt; 加密通信内容&lt;/li&gt;
&lt;li&gt;不能验证身份 -&amp;gt; DDoS攻击和伪装服务器、客户端身份 –HTTPS–&amp;gt; 证书证明身份&lt;/li&gt;
&lt;li&gt;不能验证内容完整性 -&amp;gt; 中间人攻击 –HTTPS–&amp;gt; HTTPS保证完整性&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTTPS特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加密内容&lt;/li&gt;
&lt;li&gt;证书&lt;/li&gt;
&lt;li&gt;完整性保护&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTTPS建立在SSL连接之上，SSL建立在TCP连接上。SSL使用共享秘钥和公开秘钥加密两种方式混合加密。在秘钥确保安全的情况下，使用共享秘钥对称加密，优化速度；否则使用公开秘钥确保安全性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;共享秘钥，双方使用同一秘钥加密和解密，秘钥被监听后加密就失去了意义&lt;/li&gt;
&lt;li&gt;公开秘钥，使用公开秘钥加密，使用私有秘钥解密&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然而公开密钥本身并不能确保完整性，需要证书机构（CA）颁发证书认证，确保秘钥和端的有效以及合法性。服务端也可以使用OpenSSL为自己颁发自认证证书，但是一般会在浏览器上弹出警告。&lt;/p&gt;
&lt;p&gt;HTTPS建立连接的过程包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;协商决定秘钥组件&lt;/li&gt;
&lt;li&gt;服务端发送公开密钥、证书&lt;/li&gt;
&lt;li&gt;客户端检查证书合法性，以确认服务端身份，并拿到公钥&lt;/li&gt;
&lt;li&gt;客户端发送pre-master secret随机字符串&lt;/li&gt;
&lt;li&gt;服务端使用私钥加密pre-master secret hash值，返回加密的hash值（避免黑客尝试破解私钥）&lt;/li&gt;
&lt;li&gt;客户端使用公钥解密hash，对比自己之前生成的pre-master secret字符串hash，若一致，及证明服务端身份的合法性&lt;/li&gt;
&lt;li&gt;客户端生成一个对称加密算法和秘钥master-secret，使用公钥加密，发送给服务端&lt;/li&gt;
&lt;li&gt;双方使用master-secret进行通信&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通信的完整性可以通过将报文内容生成hash交由客户端验证来实现。&lt;/p&gt;
&lt;p&gt;SSL最初由网景开发，1.0和2.0版本被发现存在问题已被废弃。3.0后由IETF接手。目前可用的协议版本有SSL3.0和TLS1.0、TLS1.1、TLS1.2，其中最常用的是SSL3.0和TLS1.0。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;证书&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;证书包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发布机构（CA）&lt;/li&gt;
&lt;li&gt;有效期&lt;/li&gt;
&lt;li&gt;持有者（由CA担保证明持有者身份）&lt;/li&gt;
&lt;li&gt;公钥&lt;/li&gt;
&lt;li&gt;数字签名算法&lt;/li&gt;
&lt;li&gt;指纹算法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了保证安全，在证书的发布机构发布证书时，证书的指纹和指纹算法，都会用自己的私钥加密后再和证书放到一起发布。使用者在打开证书时，根据加密算法，系统使用自带的公钥解密指纹和指纹算法，使用指纹算法计算证书的hash值和指纹对比，如果对的上就代表证书没问题。系统使用的公钥和证书一般由证书发布机构自己生成，内嵌在操作系统中。&lt;/p&gt;
&lt;p&gt;证书颁发机构（CA）通常会去做很多工作确保持有者的合法性，信任CA代表着信任CA颁发证书中的所有信息。所以一般系统只选择信誉较好的CA机构。公司内部使用或自生成的证书就只能被在指定范围内被信任。&lt;/p&gt;
&lt;h2 id=&#34;身份验证&#34;&gt;&lt;a href=&#34;#身份验证&#34; class=&#34;headerlink&#34; title=&#34;身份验证&#34;&gt;&lt;/a&gt;身份验证&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;BASIC 使用用户名密码验证，明文传输&lt;/li&gt;
&lt;li&gt;DIGEST 质询响应，防止密码被拦截，安全度和便利性都较差&lt;/li&gt;
&lt;li&gt;SSL 客户端证书 + HTTPS传输，成本高&lt;/li&gt;
&lt;li&gt;HTTP表单 + Cookie&amp;#x2F;Session验证&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;功能追加协议&#34;&gt;&lt;a href=&#34;#功能追加协议&#34; class=&#34;headerlink&#34; title=&#34;功能追加协议&#34;&gt;&lt;/a&gt;功能追加协议&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;WebSocket&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;全双工，解决Ajax，长短轮询的局限。握手过程很简单：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求方添加&lt;code&gt;Upgrade&lt;/code&gt;首部字段，声明升级到websocket。包含Sec-WebSocket-Key，Sec-WebSocket-Protocol，Sec-WebSocket-Verison等必要字段&lt;/li&gt;
&lt;li&gt;响应方回复101状态码，包含Sec-WebSocket-Accept（是根据Sec-WebSocket-Key生成的），Sec-WebSocket-Protocol&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;连接建立后，双方使用WebSocket的方式进行通信&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WebDAV&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;基于Web的文件属性管理。新增了一些方法和状态码，允许客户端远程修改服务器上的文件。&lt;/p&gt;
&lt;h2 id=&#34;Web应用&#34;&gt;&lt;a href=&#34;#Web应用&#34; class=&#34;headerlink&#34; title=&#34;Web应用&#34;&gt;&lt;/a&gt;Web应用&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;RSS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RDF Site Summary，简易内容聚合。和Atom一样，使用XML的形式发布信息，通过特定的RSS阅读器阅读。&lt;/p&gt;
&lt;h2 id=&#34;常见Web攻击方式&#34;&gt;&lt;a href=&#34;#常见Web攻击方式&#34; class=&#34;headerlink&#34; title=&#34;常见Web攻击方式&#34;&gt;&lt;/a&gt;常见Web攻击方式&lt;/h2&gt;&lt;p&gt;根本原因：HTTP本身没有必要的安全机制。&lt;/p&gt;
&lt;h3 id=&#34;输出值转义相关攻击方式&#34;&gt;&lt;a href=&#34;#输出值转义相关攻击方式&#34; class=&#34;headerlink&#34; title=&#34;输出值转义相关攻击方式&#34;&gt;&lt;/a&gt;输出值转义相关攻击方式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;XSS，跨站脚本攻击，主要出现在&lt;strong&gt;动态拼接HTML&lt;/strong&gt;的场景中，用户恶意注入的script代码段埋下陷阱，诱导用户误操作触发。盗取用户密码或Cookie信息&lt;/li&gt;
&lt;li&gt;SQL注入，通过URL注入的方式，制造恶意SQL语句，出现在&lt;strong&gt;动态拼接SQL语句&lt;/strong&gt;的场景下。可以绕过认证、甚至破坏整个数据库&lt;/li&gt;
&lt;li&gt;OS命令注入，类似SQL注入，出现在&lt;strong&gt;动态拼接OS语句&lt;/strong&gt;的场景下。&lt;/li&gt;
&lt;li&gt;HTTP首部攻击，出现在服务端响应头部使用了用户侧输入场景下，比如302响应中的Location头部可能存在的query部分。攻击者可以通过添加换行符，恶意添加新的首部字段，甚至篡改原有的响应主体&lt;/li&gt;
&lt;li&gt;邮箱首部注入攻击，类似HTTP首部攻击&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似地还有目录遍历漏洞、远程文件引用漏洞。&lt;/p&gt;
&lt;p&gt;通过上面几种攻击方式，可以看到，&lt;strong&gt;永远不要信任用户侧输入&lt;/strong&gt;，&lt;strong&gt;使用白名单机制，禁止动态拼接用户输入的语句&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;设计缺陷相关攻击方式&#34;&gt;&lt;a href=&#34;#设计缺陷相关攻击方式&#34; class=&#34;headerlink&#34; title=&#34;设计缺陷相关攻击方式&#34;&gt;&lt;/a&gt;设计缺陷相关攻击方式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;强制浏览，在服务器公开目录下，浏览开发者本非自愿公开的文件。&lt;/li&gt;
&lt;li&gt;不正确的系统错误处理方式，数据库等内部系统抛出的错误，对用户毫无帮助，反倒能让攻击者看到服务背后的一些细节。包括，数据库错误、PHP等脚本错误、Web服务器的错误&lt;/li&gt;
&lt;li&gt;开放重定向，网站有诸如&lt;code&gt;?redirect=xxx&lt;/code&gt;的path可以重定向时，一定要对redirect后的网址进行白名单控制，防止成为钓鱼攻击的跳板&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;session相关&#34;&gt;&lt;a href=&#34;#session相关&#34; class=&#34;headerlink&#34; title=&#34;session相关&#34;&gt;&lt;/a&gt;session相关&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;XSS盗取cookie，伪装用户登录&lt;/li&gt;
&lt;li&gt;发送恶意链接，强制用户使用攻击者指定的session ID&lt;/li&gt;
&lt;li&gt;CSRF，跨站信息伪造，在带有用户信息的domain里留下恶意的网络请求，伪造用户发起请求，伪造请求可以通过&lt;code&gt;&amp;lt;img src=&amp;quot;xx&amp;quot; /&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;video src=&amp;quot;xxx&amp;gt;&amp;lt;/video&amp;gt;&lt;/code&gt;等多种形式&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;其他&#34;&gt;&lt;a href=&#34;#其他&#34; class=&#34;headerlink&#34; title=&#34;其他&#34;&gt;&lt;/a&gt;其他&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;穷举法破解密码，暴力破解。使用图片验证码、手机验证码、机器检测等方式限制同IP的访问频率。&lt;ul&gt;
&lt;li&gt;彩虹表。使用salt，增加破解难度&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;撞库。建议用户在不同域内使用不一样的密码&lt;/li&gt;
&lt;li&gt;点击劫持，使用透明元素覆盖在目标网页上。在18+网页中最常出现（😂）。&lt;/li&gt;
&lt;li&gt;DoS（Denial of Service）拒绝服务攻击，构造大量合法的网络请求，导致服务器超负荷。通常都是DDoS（Distributed Denial of Service）的形式。需要在IP层去过滤攻击的IP。&lt;/li&gt;
&lt;li&gt;后门程序&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="笔记" />
        <category term="HTTP" />
        <category term="HTTPS" />
        <category term="状态码" />
        <category term="网络攻击" />
        <category term="介绍" />
        <updated>2018-09-13T15:35:11.000Z</updated>
    </entry>
</feed>
