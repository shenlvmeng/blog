{
    "version": "https://jsonfeed.org/version/1",
    "title": "Shenlvmeng's Blog • All posts by \"rtmp\" tag",
    "description": "Be sharp, my friend.",
    "home_page_url": "http://shenlvmeng.github.com/blog",
    "items": [
        {
            "id": "http://shenlvmeng.github.com/blog/2018/04/25/webrtc-practice/",
            "url": "http://shenlvmeng.github.com/blog/2018/04/25/webrtc-practice/",
            "title": "webrtc学习笔记",
            "date_published": "2018-04-25T15:09:06.000Z",
            "content_html": "<blockquote>\n<p>必读：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API\">WebRTC API - Web API接口 | MDN</a><br>必读：<a href=\"https://blog.coding.net/blog/getting-started-with-webrtc\">WebRTC的前世今生</a></p>\n</blockquote>\n<p>Web端用户视频推流使用webRTC方案，使用已有JS SDK（和<a href=\"https://docs.agora.io/cn/2.1/product/Video/API%20Reference/communication_web_video?platform=Web\">这个</a>兼容）。</p>\n<p>WebRTC由Google主推，全称Web Browser Real Time Communication。目标是希望在Web端进行点对点音视频通信。</p>\n<p>整个P2P过程很复杂，但是对于浏览器而言，WebRTC实际上只是提供了三个API：</p>\n<ul>\n<li><strong>MediaStream</strong>, 即getUserMedia（<code>navigator.getUserMedia</code>），获取媒体数据，如来自用户摄像头和麦克风的音视频流</li>\n<li><strong>RTCPeerConnection</strong>，用于peer跟peer之间呼叫和建立连接以便传输音视频数据流；这个不同浏览器的实现不同，官网推荐使用<code>adapter.js</code>进行适配</li>\n<li><strong>RTCDataChannel</strong>，用于peer跟peer之间传输音视频之外的一般数据。</li>\n</ul>\n<h2 id=\"MediaStream\"><a href=\"#MediaStream\" class=\"headerlink\" title=\"MediaStream\"></a>MediaStream</h2><p>参考<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/MediaStream\">MDN</a>。来自<code>navigator.getUserMedia()</code>，这个方法接收三个参数：</p>\n<ul>\n<li>一个约束对象，如<code>&#123; audio: false, video: true &#125;</code>，除了这两种，其他外设也可以作为输入</li>\n<li>一个成功回调</li>\n<li>一个失败回调</li>\n</ul>\n<p>返回的MediaStream对象有<code>addTrack</code>, <code>getAudioTracks</code>, <code>getVideoTracks</code>等方法。通过这些方法取出的MediaStreamTrack数组代表对应类型的流，可以把取出的这些流导入到<code>&lt;video&gt;</code>等标签输出。在Chrome或Opera中，<code>URL.createObjectURL()</code>方法可以转换一个MediaStream到一个Blob URL，可以被设置作为视频的源。除了这种方法，还可以使用<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\"><code>AudioContext</code></a>API，对音频做处理后输出。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">gotStream</span>(<span class=\"params\">stream</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">AudioContext</span> = <span class=\"variable language_\">window</span>.<span class=\"property\">AudioContext</span> || <span class=\"variable language_\">window</span>.<span class=\"property\">webkitAudioContext</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> audioContext = <span class=\"keyword\">new</span> <span class=\"title class_\">AudioContext</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Create an AudioNode from the stream</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> mediaStreamSource = audioContext.<span class=\"title function_\">createMediaStreamSource</span>(stream);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Connect it to destination to hear yourself</span></span><br><span class=\"line\">    <span class=\"comment\">// or any other node for processing!</span></span><br><span class=\"line\">    mediaStreamSource.<span class=\"title function_\">connect</span>(audioContext.<span class=\"property\">destination</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">navigator.<span class=\"title function_\">getUserMedia</span>(&#123;<span class=\"attr\">audio</span>:<span class=\"literal\">true</span>&#125;, gotStream);</span><br></pre></td></tr></table></figure>\n\n<p>使用HTTPS请求<code>getUserMedia</code>会向用户给出一次提示。不建议在HTTP环境下使用。</p>\n<p><a href=\"https://webrtc.github.io/samples/src/content/getusermedia/gum/\">这里</a>是一个demo，打开console，查看全局变量stream就明白MediaStream结构了。</p>\n<p>约束对象中可以商议视频分辨率等信息。它会影响获取到的视频流。</p>\n<h2 id=\"RTCPeerConnection\"><a href=\"#RTCPeerConnection\" class=\"headerlink\" title=\"RTCPeerConnection\"></a>RTCPeerConnection</h2><p>WebRTC使用RTCPeerConnection在浏览器间传递数据流，但在之前需要有一个交换信令的过程。这个过程不在WebRTC中定义，开发者可以使用任何想用的消息协议，比如WebSocket或XHR轮询什么的。信令过程需要传递三种信息：</p>\n<ul>\n<li>连接控制信息：初始化或者关闭连接报告错误。</li>\n<li>网络配置：对于外网，我们电脑的 IP 地址和端口？</li>\n<li>多媒体数据：使用什么编码解码器，浏览器可以处理什么信息</li>\n</ul>\n<p>点对点的连接需要ICE（Interactive Connectivity Establishment）的帮助，ICE靠STUN和TURN服务器处理NAT穿透等复杂问题。起初连接建立在UDP之上，STUN服务器让位于NAT中的client获知自己的公网IP和端口。如果UDP建立失败，考虑TCP连接，再考虑HTTP和HTTPS连接。否则使用TURN服务器做中转工作。</p>\n<p>W3C给了RTCPeerConnection的样例，</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> signalingChannel = <span class=\"keyword\">new</span> <span class=\"title class_\">SignalingChannel</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> configuration = &#123; <span class=\"string\">&quot;iceServers&quot;</span>: [&#123; <span class=\"string\">&quot;url&quot;</span>: <span class=\"string\">&quot;stun:stun.example.org&quot;</span> &#125;] &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> pc;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用start()建立连接</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">start</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  pc = <span class=\"keyword\">new</span> <span class=\"title class_\">RTCPeerConnection</span>(configuration);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 有任何 ICE candidates 可用，</span></span><br><span class=\"line\">  <span class=\"comment\">// 通过signalingChannel传递candidate给对方</span></span><br><span class=\"line\">  pc.<span class=\"property\">onicecandidate</span> = <span class=\"keyword\">function</span> (<span class=\"params\">evt</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (evt.<span class=\"property\">candidate</span>)</span><br><span class=\"line\">      signalingChannel.<span class=\"title function_\">send</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(&#123; <span class=\"string\">&quot;candidate&quot;</span>: evt.<span class=\"property\">candidate</span> &#125;));</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// let the &quot;negotiationneeded&quot; event trigger offer generation</span></span><br><span class=\"line\">  pc.<span class=\"property\">onnegotiationneeded</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    pc.<span class=\"title function_\">createOffer</span>(localDescCreated, logError);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 远端流到达时，在remoteView中做展示</span></span><br><span class=\"line\">  pc.<span class=\"property\">onaddstream</span> = <span class=\"keyword\">function</span> (<span class=\"params\">evt</span>) &#123;</span><br><span class=\"line\">    remoteView.<span class=\"property\">src</span> = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(evt.<span class=\"property\">stream</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 获取本地流，展示并传递</span></span><br><span class=\"line\">  navigator.<span class=\"title function_\">getUserMedia</span>(&#123; <span class=\"string\">&quot;audio&quot;</span>: <span class=\"literal\">true</span>, <span class=\"string\">&quot;video&quot;</span>: <span class=\"literal\">true</span> &#125;, <span class=\"keyword\">function</span> (<span class=\"params\">stream</span>) &#123;</span><br><span class=\"line\">    selfView.<span class=\"property\">src</span> = <span class=\"variable constant_\">URL</span>.<span class=\"title function_\">createObjectURL</span>(stream);</span><br><span class=\"line\">    pc.<span class=\"title function_\">addStream</span>(stream);</span><br><span class=\"line\">  &#125;, logError);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">localDescCreated</span>(<span class=\"params\">desc</span>) &#123;</span><br><span class=\"line\">  pc.<span class=\"title function_\">setLocalDescription</span>(desc, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    signalingChannel.<span class=\"title function_\">send</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(&#123; <span class=\"string\">&quot;sdp&quot;</span>: pc.<span class=\"property\">localDescription</span> &#125;));</span><br><span class=\"line\">  &#125;, logError);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">signalingChannel.<span class=\"property\">onmessage</span> = <span class=\"keyword\">function</span> (<span class=\"params\">evt</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!pc)</span><br><span class=\"line\">    <span class=\"title function_\">start</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> message = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(evt.<span class=\"property\">data</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (message.<span class=\"property\">sdp</span>) &#123;</span><br><span class=\"line\">    pc.<span class=\"title function_\">setRemoteDescription</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">RTCSessionDescription</span>(message.<span class=\"property\">sdp</span>), <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 接收到offer时，回应一个answer</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (pc.<span class=\"property\">remoteDescription</span>.<span class=\"property\">type</span> == <span class=\"string\">&quot;offer&quot;</span>)</span><br><span class=\"line\">        pc.<span class=\"title function_\">createAnswer</span>(localDescCreated, logError);</span><br><span class=\"line\">    &#125;, logError);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 接收对方candidate并加入自己的RTCPeerConnection</span></span><br><span class=\"line\">    pc.<span class=\"title function_\">addIceCandidate</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">RTCIceCandidate</span>(message.<span class=\"property\">candidate</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">logError</span>(<span class=\"params\">error</span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">log</span>(error.<span class=\"property\">name</span> + <span class=\"string\">&quot;: &quot;</span> + error.<span class=\"property\">message</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在开始建立连接时，调用<code>start()</code>，创建<code>RTCPeerConnection</code>对象，接着完成下面步骤：</p>\n<ul>\n<li><strong>交换网络信息</strong>，<code>onicecandidate</code>回调在有任何candidate出现时，将通过SignalChannel（使用额外方法创建，如WebSocket）传递给对方。同样地，在通过SignalChannel接收到对方发来的该信息时，加入这个candidate到RTCPeerConnection中。</li>\n<li><strong>交换多媒体信息</strong>，使用SDP（Session Description Protocol）与对端交换多媒体资讯，在<code>onnegotiationneeded</code>中，调用<code>createOffer</code>通过<code>setLocalDescription</code>创建<code>RTCSessionDecription</code>对象进行本地存储，并传给对方。接收方通过<code>setRemoteDescription</code>方法设定remote description。</li>\n</ul>\n<p>上述过程称为JavaScript Session Establishment Protocol（JSEP）。一旦这个signaling完成了，数据可以直接的在端到端之间进行数据传输。如果失败了，通过中介服务器relay服务进行转发。</p>\n<p>通常RTCPeerConnection的API太复杂，所以有很多在此基础上的库封装出了更加友善的API。</p>\n<h2 id=\"JS-SDK接入流程\"><a href=\"#JS-SDK接入流程\" class=\"headerlink\" title=\"JS-SDK接入流程\"></a>JS-SDK接入流程</h2><blockquote>\n<p>参考：<a href=\"https://docs.agora.io/cn/2.1/product/Video/API%20Reference/communication_web_video?platform=Web\">Agora：视频通话API</a></p>\n</blockquote>\n<ol>\n<li>准备工作，包括界面绘制等</li>\n<li>向远端注册当前用户，获取token，为后面做准备</li>\n<li>使用<code>createClient()</code>方法创建客户端</li>\n<li>指定回调，包括已订阅流、已添加流、移除、失败等生命周期事件的回调</li>\n<li>初始化客户端，传入appId和成功回调</li>\n<li>初始化成功后，调用join方法根据获取到的token加入指定房间（原理是WebRTC的stream有id）</li>\n<li>指定配置创建本地流（getUserMedia），发布本地流，播放本地流</li>\n</ol>\n<h2 id=\"RTMP相关\"><a href=\"#RTMP相关\" class=\"headerlink\" title=\"RTMP相关\"></a>RTMP相关</h2><blockquote>\n<p>必读：<a href=\"https://www.villainhr.com/page/2017/08/05/RTMP%20H5%20%E7%9B%B4%E6%92%AD%E6%B5%81%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90\">RTMP H5 直播流技术解析</a></p>\n</blockquote>\n<p>一次RTMP握手的模拟。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 握手协议模拟</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">C</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">time, random</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">time</span> = time || <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">random</span> = random || <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">alloc</span>(<span class=\"number\">0</span>); <span class=\"comment\">// Buffer类型</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">get</span> <span class=\"title function_\">C0</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> buf = <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">alloc</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> buf;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">get</span> <span class=\"title function_\">C1</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> buf = <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">alloc</span>(<span class=\"number\">1536</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> buf;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * write C2</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">get</span> <span class=\"title function_\">C2</span>() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> buf = <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">alloc</span>(<span class=\"number\">1536</span>);</span><br><span class=\"line\">        buf.<span class=\"title function_\">writeUInt32BE</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">time</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">random</span>.<span class=\"title function_\">copy</span>(buf, <span class=\"number\">8</span>, <span class=\"number\">0</span>, <span class=\"number\">1528</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 客户端</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> client = <span class=\"keyword\">new</span> net.<span class=\"title function_\">socket</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">RTMP_C</span> = <span class=\"keyword\">new</span> <span class=\"title function_\">C</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">client.<span class=\"title function_\">connect</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">1935</span>,</span><br><span class=\"line\">    <span class=\"attr\">host</span>: <span class=\"string\">&#x27;example.live.com&#x27;</span>,</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;connected&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">client.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;data&#x27;</span>, <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!data) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">warn</span>(<span class=\"string\">&#x27;Empty Buffer.&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable constant_\">RTMP_C</span>.<span class=\"property\">S0</span> &amp;&amp; data.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable constant_\">RTMP_C</span>.<span class=\"property\">S0</span> = data.<span class=\"title function_\">readUInt8</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        data = data.<span class=\"title function_\">slice</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable constant_\">RTMP_C</span>.<span class=\"property\">S1</span> &amp;&amp; data.<span class=\"property\">length</span> &gt;= <span class=\"number\">1536</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable constant_\">RTMP_C</span>.<span class=\"property\">time</span> = data.<span class=\"title function_\">readUInt32BE</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"variable constant_\">RTMP_C</span>.<span class=\"property\">random</span> = data.<span class=\"title function_\">slice</span>(<span class=\"number\">8</span>, <span class=\"number\">1536</span>);</span><br><span class=\"line\">        <span class=\"variable constant_\">RTMP_C</span>.<span class=\"property\">S1</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        data = data.<span class=\"title function_\">slice</span>(<span class=\"number\">1536</span>)</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;send C2&#x27;</span>);</span><br><span class=\"line\">        client.<span class=\"title function_\">write</span>(<span class=\"variable constant_\">RTMP_C</span>.<span class=\"property\">C2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"variable constant_\">RTMP_C</span>.<span class=\"property\">S2</span> &amp;&amp; data.<span class=\"property\">length</span> &gt;= <span class=\"number\">1536</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable constant_\">RTMP_C</span>.<span class=\"property\">S2</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        data = data.<span class=\"title function_\">slice</span>(<span class=\"number\">1536</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "webrtc",
                "RTMP"
            ]
        }
    ]
}