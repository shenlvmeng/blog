<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://shenlvmeng.github.com/blog</id>
    <title>Shenlvmeng&#39;s Blog • Posts by &#34;程序设计&#34; tag</title>
    <link href="http://shenlvmeng.github.com/blog" />
    <updated>2019-05-28T15:55:53.000Z</updated>
    <category term="总结" />
    <category term="制度" />
    <category term="道德" />
    <category term="文官" />
    <category term="万历" />
    <category term="明朝" />
    <category term="读书笔记" />
    <category term="展望" />
    <category term="2018" />
    <category term="2019" />
    <category term="flag" />
    <category term="2020" />
    <category term="2021" />
    <category term="2022" />
    <category term="2023" />
    <category term="面试" />
    <category term="前端" />
    <category term="FAQ" />
    <category term="HTML" />
    <category term="CSS" />
    <category term="style guide" />
    <category term="编程" />
    <category term="范式" />
    <category term="设计" />
    <category term="艺术" />
    <category term="质量" />
    <category term="async_hooks" />
    <category term="cls-hooked" />
    <category term="logId" />
    <category term="录音" />
    <category term="getUserMedia" />
    <category term="AudioContext" />
    <category term="PCM" />
    <category term="WAVE" />
    <category term="二叉搜索树" />
    <category term="算法" />
    <category term="回忆" />
    <category term="老朋友" />
    <category term="C" />
    <category term="Hash" />
    <category term="布隆过滤器" />
    <category term="字符串检索" />
    <category term="canvas" />
    <category term="流程图" />
    <category term="d3" />
    <category term="g6" />
    <category term="zrender" />
    <category term="processOn" />
    <category term="SDN" />
    <category term="cbench" />
    <category term="安装说明" />
    <category term="绘图" />
    <category term="动画" />
    <category term="攻略" />
    <category term="流水账" />
    <category term="成都" />
    <category term="重庆" />
    <category term="武汉" />
    <category term="重构" />
    <category term="代码" />
    <category term="代码风格" />
    <category term="数据可视化" />
    <category term="爬虫" />
    <category term="chrome" />
    <category term="crx" />
    <category term="扩展" />
    <category term="CORS" />
    <category term="跨域" />
    <category term="盒模型" />
    <category term="浮动" />
    <category term="Reactive Programming" />
    <category term="JavaScript" />
    <category term="Cycle.js" />
    <category term="Dart" />
    <category term="最佳实践" />
    <category term="引流" />
    <category term="universal-link" />
    <category term="app-link" />
    <category term="脚手架" />
    <category term="degit" />
    <category term="git" />
    <category term="设计模式" />
    <category term="类" />
    <category term="接口" />
    <category term="抽象类" />
    <category term="DOM" />
    <category term="Docker" />
    <category term="ONOS" />
    <category term="控制器" />
    <category term="虚拟化" />
    <category term="笔记" />
    <category term="UX" />
    <category term="UED" />
    <category term="准则" />
    <category term="Java" />
    <category term="Ruby" />
    <category term="反射" />
    <category term="编程范式" />
    <category term="鸭子类型" />
    <category term="管理" />
    <category term="效率" />
    <category term="知识工作者" />
    <category term="卓有成效" />
    <category term="Elm" />
    <category term="框架" />
    <category term="函数式编程" />
    <category term="虚网映射" />
    <category term="Javascript" />
    <category term="并发" />
    <category term="event loop" />
    <category term="覆盖率" />
    <category term="端到端测试" />
    <category term="istanbul" />
    <category term="istanbuljs" />
    <category term="JavaSript" />
    <category term="Express" />
    <category term="源码" />
    <category term="代码覆盖率" />
    <category term="istanbul-middleware" />
    <category term="代码插桩" />
    <category term="require钩子" />
    <category term="babel-plugin-istanbul" />
    <category term="css" />
    <category term="html5" />
    <category term="flex" />
    <category term="javascript" />
    <category term="roadmap" />
    <category term="闭包" />
    <category term="Haskell" />
    <category term="monad" />
    <category term="后端" />
    <category term="管理后台" />
    <category term="egg.js" />
    <category term="工作流" />
    <category term="pull request" />
    <category term="golang" />
    <category term="语言学习" />
    <category term="黑客与画家" />
    <category term="创业" />
    <category term="骑行" />
    <category term="海南" />
    <category term="图文" />
    <category term="reflow" />
    <category term="repaint" />
    <category term="命名法" />
    <category term="成功学" />
    <category term="自我建设" />
    <category term="HTTP" />
    <category term="HTTP/2" />
    <category term="SPDY" />
    <category term="QUIC" />
    <category term="HTTPS" />
    <category term="状态码" />
    <category term="网络攻击" />
    <category term="介绍" />
    <category term="图片渲染" />
    <category term="html2canvas" />
    <category term="dom-to-image" />
    <category term="electron" />
    <category term="indexedDB" />
    <category term="异步" />
    <category term="Generator" />
    <category term="thunk" />
    <category term="async" />
    <category term="函数表达式" />
    <category term="对象" />
    <category term="继承" />
    <category term="类型转换" />
    <category term="==" />
    <category term="类型判断" />
    <category term="猫" />
    <category term="杀手" />
    <category term="管理学" />
    <category term="领导力" />
    <category term="梯队" />
    <category term="移动端" />
    <category term="UI" />
    <category term="自适应" />
    <category term="rem" />
    <category term="Electron" />
    <category term="GUI" />
    <category term="gpx" />
    <category term="template" />
    <category term="Electron Builder" />
    <category term="PWA" />
    <category term="方法论" />
    <category term="夜话" />
    <category term="多线" />
    <category term="生活" />
    <category term="密码" />
    <category term="密钥" />
    <category term="技改" />
    <category term="Vue" />
    <category term="gulp" />
    <category term="瀑布流" />
    <category term="电影" />
    <category term="PHP" />
    <category term="参考" />
    <category term="思维" />
    <category term="学习能力" />
    <category term="右脑" />
    <category term="经济学" />
    <category term="宏观经济学" />
    <category term="术语" />
    <category term="GDP" />
    <category term="CPI" />
    <category term="储蓄" />
    <category term="投资" />
    <category term="金融市场" />
    <category term="股票" />
    <category term="债券" />
    <category term="美联储" />
    <category term="失业" />
    <category term="货币" />
    <category term="现值" />
    <category term="准备金" />
    <category term="货币中性" />
    <category term="通货膨胀" />
    <category term="汇率" />
    <category term="购买力" />
    <category term="净出口" />
    <category term="资产净流出" />
    <category term="总需求" />
    <category term="总供给" />
    <category term="流动性偏好" />
    <category term="乘数效应" />
    <category term="菲利普斯曲线" />
    <category term="微观经济学" />
    <category term="供求" />
    <category term="贸易" />
    <category term="市场" />
    <category term="税" />
    <category term="剩余" />
    <category term="外部性" />
    <category term="公共物品" />
    <category term="公共资源" />
    <category term="生产成本" />
    <category term="利润" />
    <category term="垄断" />
    <category term="价格歧视" />
    <category term="寡头" />
    <category term="垄断竞争" />
    <category term="生产要素市场" />
    <category term="贫困" />
    <category term="消费者选择理论" />
    <category term="不对称信息" />
    <category term="政治经济学" />
    <category term="行为经济学" />
    <category term="VSCode" />
    <category term="编辑器" />
    <category term="IDE" />
    <category term="hybrid" />
    <category term="JSBridge" />
    <category term="Web Worker" />
    <category term="Service Worker" />
    <category term="习惯" />
    <category term="lint" />
    <category term="editorconfig" />
    <category term="commit message" />
    <category term="量子物理" />
    <category term="史话" />
    <category term="埋点" />
    <category term="raven.js" />
    <category term="前端监控" />
    <category term="文本编辑器" />
    <category term="quill" />
    <category term="结构化数据" />
    <category term="React" />
    <category term="Hooks" />
    <category term="函数组件" />
    <category term="复用" />
    <category term="状态管理" />
    <category term="redux" />
    <category term="MobX" />
    <category term="代码质量" />
    <category term="重来" />
    <category term="requestAnimationFrame" />
    <category term="TypeScript" />
    <category term="路书" />
    <category term="gpx解析" />
    <category term="EXIF" />
    <category term="人类" />
    <category term="生存" />
    <category term="基因" />
    <category term="响应式编程" />
    <category term="RxJS" />
    <category term="成长" />
    <category term="业务" />
    <category term="思想" />
    <category term="程序设计" />
    <category term="心理学" />
    <category term="自我" />
    <category term="社会思维" />
    <category term="社会影响" />
    <category term="文化" />
    <category term="性别" />
    <category term="从众" />
    <category term="说服" />
    <category term="临床诊断" />
    <category term="陪审团" />
    <category term="司法" />
    <category term="物质主义" />
    <category term="健康" />
    <category term="社会关系" />
    <category term="偏见" />
    <category term="攻击行为" />
    <category term="亲密关系" />
    <category term="友谊" />
    <category term="爱情" />
    <category term="利他" />
    <category term="冲突" />
    <category term="和解" />
    <category term="软技能" />
    <category term="理财" />
    <category term="健身" />
    <category term="自我营销" />
    <category term="学习" />
    <category term="商业模式" />
    <category term="产品" />
    <category term="校园网" />
    <category term="互联网" />
    <category term="技术" />
    <category term="web开发" />
    <category term="哲思" />
    <category term="择偶观" />
    <category term="validator" />
    <category term="大文件" />
    <category term="visibilityChange" />
    <category term="IntersectionObserver" />
    <category term="图种" />
    <category term="draggable" />
    <category term="webpack" />
    <category term="z-index" />
    <category term="git submodule" />
    <category term="object-fit" />
    <category term="object-position" />
    <category term="BroadcastChannel" />
    <category term="extract-text-webpack-plugin" />
    <category term="lottie" />
    <category term="backface-visibility" />
    <category term="egret" />
    <category term="mock" />
    <category term="SSO" />
    <category term="autoprefixer" />
    <category term="polyfill" />
    <category term="Android" />
    <category term="ffmpeg" />
    <category term="React Hooks" />
    <category term="rollup" />
    <category term="CDN" />
    <category term="DNS" />
    <category term="CNAME" />
    <category term="架构" />
    <category term="组件" />
    <category term="ssh" />
    <category term="fis-receiver" />
    <category term="tmux" />
    <category term="origami" />
    <category term="promise" />
    <category term="encodeURI" />
    <category term="encodeURIComponent" />
    <category term="axios" />
    <category term="charles" />
    <category term="黑色幽默" />
    <category term="朋友" />
    <category term="梦" />
    <category term="濒死" />
    <category term="江南" />
    <category term="苏州" />
    <category term="无锡" />
    <category term="宜兴" />
    <category term="湖州" />
    <category term="南浔" />
    <category term="游记" />
    <category term="随笔" />
    <category term="群众" />
    <category term="理论" />
    <category term="实效" />
    <category term="测试" />
    <category term="长沙" />
    <category term="杭州" />
    <category term="湖南" />
    <category term="核酸" />
    <category term="美食" />
    <category term="云南" />
    <category term="丽江" />
    <category term="大理" />
    <category term="青岛" />
    <category term="济南" />
    <category term="山东" />
    <category term="西北" />
    <category term="银川" />
    <category term="西宁" />
    <category term="青海湖" />
    <category term="西海镇" />
    <category term="茶卡盐湖" />
    <category term="厦门" />
    <category term="感受" />
    <category term="C语言" />
    <category term="树" />
    <category term="主干开发" />
    <category term="GitFlow" />
    <category term="GithubFlow" />
    <category term="typescript" />
    <category term="类型系统" />
    <category term="webrtc" />
    <category term="RTMP" />
    <category term="首屏时间" />
    <category term="性能优化" />
    <category term="公司" />
    <category term="个人发展" />
    <category term="战略" />
    <category term="晋升" />
    <category term="哲学" />
    <category term="幸福" />
    <category term="人生" />
    <category term="叔本华" />
    <category term="Unix" />
    <category term="Rollup" />
    <category term="mouseout" />
    <category term="mouseleave" />
    <category term="lint-staged" />
    <category term="吸顶" />
    <category term="图片组件" />
    <entry>
        <id>http://shenlvmeng.github.com/blog/2019/05/28/the-pragmatic-programmer/</id>
        <title>《程序员修炼之道》 —— 从小工到专家</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2019/05/28/the-pragmatic-programmer/"/>
        <content type="html">&lt;p&gt;《程序员修炼之道》这个书名实际上不如原版《The Pragmatic Programmer： From Journeyman to Master》来得更清晰明了。此书第一版写于1999年，我看的是11年的版本，但还是透流露着不少世纪初的观念和视野。除开一部分观点认识的过时，书中绝大多数观点都四溢着国外互联网行业的工作风格和流程，和国内凶猛生长、一把梭就是干的风格各有不同，甚至我感觉国内IT，尤其是互联网企业里的工作流更加讲求实效。尽管和读之前的预期不大一样，里面许多经验还是很有借鉴意义，比如正交性、不要依赖巧合等等。&lt;/p&gt;
&lt;p&gt;书中内容在项目管理、编程哲学、以及编程过程的各个方面都有涉及，在这些方面上更加深入的探讨，书的最后也推荐了继续阅读的材料。下面就各章节的关键观点加以整理。&lt;/p&gt;
&lt;h2 id=&#34;序&#34;&gt;&lt;a href=&#34;#序&#34; class=&#34;headerlink&#34; title=&#34;序&#34;&gt;&lt;/a&gt;序&lt;/h2&gt;&lt;p&gt;关于本书的读法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;能不能让正确原则指导正确的行动本身，其实就是区分是否是高手的一个显著标志&lt;/li&gt;
&lt;li&gt;要能内化书中提到的各个小提示，不实践的话，是不会有太大收获的&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;思考，你的工作&lt;/strong&gt;，多思考&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实效哲学&#34;&gt;&lt;a href=&#34;#实效哲学&#34; class=&#34;headerlink&#34; title=&#34;实效哲学&#34;&gt;&lt;/a&gt;实效哲学&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;对你的源码负责&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不要容忍破窗&lt;/strong&gt;，它们会增大你软件的熵（这个也是要结合实际情况看的）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;记住大图景&lt;/strong&gt;，注意方向是否有误，不要光低头做事&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;知道在何时打住&lt;/strong&gt;，你不可能做到完美&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;定期为你的知识资产投资&lt;/strong&gt;，就像经济投资一样&lt;ul&gt;
&lt;li&gt;定期投资&lt;/li&gt;
&lt;li&gt;多元化&lt;/li&gt;
&lt;li&gt;管理风险，不要把所有技术放在一个篮子里&lt;/li&gt;
&lt;li&gt;低买高卖，能看清形势&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;为此，你需要&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;每年至少学习一种新语言&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;每季度阅读一本技术书籍&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;也要阅读非技术书籍&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;批判地思考你读到和听到的&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;如何表达自己很重要&lt;/strong&gt;，这会增加你的影响力&lt;ul&gt;
&lt;li&gt;你想让谁知道&lt;/li&gt;
&lt;li&gt;你想让他们知道什么&lt;/li&gt;
&lt;li&gt;他们是否感兴趣&lt;/li&gt;
&lt;li&gt;他们需要知道细节么&lt;/li&gt;
&lt;li&gt;如何促使他们与你交流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实效途径&#34;&gt;&lt;a href=&#34;#实效途径&#34; class=&#34;headerlink&#34; title=&#34;实效途径&#34;&gt;&lt;/a&gt;实效途径&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DRY，不要重复自己&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;强加的重复 &amp;#x3D;&amp;gt; 使用自动生成，减少是信息冗知识&lt;/li&gt;
&lt;li&gt;无意的重复 &amp;#x3D;&amp;gt; 优良的设计&lt;/li&gt;
&lt;li&gt;无耐心的重复 &amp;#x3D;&amp;gt; 考虑长远&lt;/li&gt;
&lt;li&gt;开发者间的重复 &amp;#x3D;&amp;gt; 加强组内交流，制定代码规范，&lt;strong&gt;制造更容易复用的环境&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;减少无关事物的影响&lt;/strong&gt;，非正交 &amp;#x3D;&amp;gt; 次级效应 &amp;#x3D;&amp;gt; 补偿行为 &amp;#x3D;&amp;gt; 经验依赖&lt;ul&gt;
&lt;li&gt;好处：提高生产率（促进复用）、降低风险（风险隔离，易测试）&lt;/li&gt;
&lt;li&gt;分层设计、抽象和接口约定&lt;/li&gt;
&lt;li&gt;避免使用全局变量&lt;/li&gt;
&lt;li&gt;考虑使用库的代码侵入性&lt;/li&gt;
&lt;li&gt;文档和认同正交性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;不存在最终决策&lt;/em&gt;，当需求变动频繁的时候，不仅要思考程序架构如何适应这种变动，也要反思是否是设计者没想清楚到底要做什么&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用曳光弹找到目标&lt;/strong&gt;，即MVP + 快速迭代 + 即时的反馈&lt;ul&gt;
&lt;li&gt;逐步逼近，摸着石头过河&lt;/li&gt;
&lt;li&gt;曳光弹模式永远包含着一个可用的软件版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;原型和便笺&lt;/strong&gt;，使用原型去表达和快速验证项目的可行性&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;靠近问题领域编程&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;使用DSL（Domain Specified Language）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;估算，以避免意外&lt;/strong&gt;，主要用来估计工期、分析风险&lt;ul&gt;
&lt;li&gt;适当地降低估算速度，慎重思考隐藏的风险&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基本工具&#34;&gt;&lt;a href=&#34;#基本工具&#34; class=&#34;headerlink&#34; title=&#34;基本工具&#34;&gt;&lt;/a&gt;基本工具&lt;/h2&gt;&lt;p&gt;工具成为双手和大脑的延伸，优秀的工具可以放大你的才干。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;纯文本以其自解释能力几乎可以永久保存&lt;/strong&gt;，XML、JSON就是利用此成为通用的数据表现形式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;利用shell的力量&lt;/strong&gt;，它是自动化任务避不开的工具&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要能烂熟地使用你的编辑器&lt;/strong&gt;、&lt;strong&gt;要使用高级的编辑器&lt;/strong&gt;，由于你的所有开发工作都建立在它上面，做好这两点可以节省你大量时间&lt;ul&gt;
&lt;li&gt;反思一下，在用你的编辑器时，你有遇到过到比较繁琐的操作吗？&lt;/li&gt;
&lt;li&gt;是因为你不会高级使用方式，还是编辑器本身不支持？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;总是使用源码控制&lt;/em&gt;（这一点早已成为共识）&lt;/li&gt;
&lt;li&gt;调试，debug&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;通常认为匪夷所思的bug，都来自健忘、自大和愚蠢&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;QA角色的重要性之一：帮助复现、找到规律性&lt;/li&gt;
&lt;li&gt;橡皮鸭调试法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;二分查找法&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;如果bug来自某人的错误假设，那么需要清除团队其他人的相同误解&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;学习一种文本操纵语言或工具&lt;/strong&gt;，例如awk，sed，处理数据和结果时一定能用上&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;编写代码生成器&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;开发者手动触发，如模板代码&lt;/li&gt;
&lt;li&gt;程序自动出发，如scheme to idl，idl to code&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;偏执编程&#34;&gt;&lt;a href=&#34;#偏执编程&#34; class=&#34;headerlink&#34; title=&#34;偏执编程&#34;&gt;&lt;/a&gt;偏执编程&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;通过合约设计&lt;/strong&gt;，约定好接口，合作方基于接口开发&lt;ul&gt;
&lt;li&gt;强类型语言更容易实现这一点&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;早崩溃&lt;/strong&gt;，这在需要编译的软件开发上比较科学，对于web应用来说却不是这样&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用断言确保某事不会发生&lt;/strong&gt;，减少预设条件代理的隐藏bug&lt;ul&gt;
&lt;li&gt;不要滥用断言&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;只在异常处用异常&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一定记住释放请求的资源&lt;/strong&gt;，如内存、句柄等，可以通过封装统一的资源类实现自动的资源释放&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;时间的魔力&#34;&gt;&lt;a href=&#34;#时间的魔力&#34; class=&#34;headerlink&#34; title=&#34;时间的魔力&#34;&gt;&lt;/a&gt;时间的魔力&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;德墨忒尔法则&lt;/strong&gt;，使模块间的依赖减少到最小&lt;ul&gt;
&lt;li&gt;物理解耦&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;要配置不要hardcode&lt;/strong&gt;，使用元数据动态描述你的程序&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;抽象放进代码，细节放进元数据&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;时间耦合：考虑并发和事件的发生顺序&lt;ul&gt;
&lt;li&gt;在异步代码中，总考虑并发&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一些GUI的设计模式&lt;ul&gt;
&lt;li&gt;发布订阅&lt;/li&gt;
&lt;li&gt;MVC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基于规则&amp;#x2F;规则集的黑板系统&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;黑板给出统一接口&lt;/li&gt;
&lt;li&gt;耦合方通过调用黑板接口避免耦合&lt;/li&gt;
&lt;li&gt;黑板通过规则给出输出&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;编码时&#34;&gt;&lt;a href=&#34;#编码时&#34; class=&#34;headerlink&#34; title=&#34;编码时&#34;&gt;&lt;/a&gt;编码时&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;不要靠巧合编程&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;改动要有文档沉淀&lt;/li&gt;
&lt;li&gt;只依靠文档中记录的行为&lt;/li&gt;
&lt;li&gt;把你的假设记入文档&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在大数据量时&lt;/strong&gt;，考虑算法数量级&lt;ul&gt;
&lt;li&gt;兼顾效率和可读性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;早重构，常重构&lt;/strong&gt;，代码是业务设计的近似同构体，常重构才能保证代码完美贴合需求设计&lt;ul&gt;
&lt;li&gt;重构和功能开发分开进行&lt;/li&gt;
&lt;li&gt;重构一定要有测试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;优秀的代码不是看新增了多少行，而是看删除了多少行&lt;/li&gt;
&lt;li&gt;编写易于测试的代码&lt;ul&gt;
&lt;li&gt;测试你的软件，否则你的用户会代你做测试&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;项目开始前&#34;&gt;&lt;a href=&#34;#项目开始前&#34; class=&#34;headerlink&#34; title=&#34;项目开始前&#34;&gt;&lt;/a&gt;项目开始前&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;完美，不是在没有什么需要增加，而是在没有什么需要去掉的时候达到的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;去挖掘需求，思考用户做特定事情的原因，和如何去做的方式，&lt;strong&gt;让需求成为一种一般性的陈述&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;制作需求文档时的一大危险是太过具体，好的需求文档会保持抽象&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;经常性复盘&lt;/li&gt;
&lt;li&gt;鼓励文档分享和交流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;巧妙解决看似不能解决的难题&lt;/strong&gt;，关键要找到&lt;strong&gt;真正的约束&lt;/strong&gt;，去思考&lt;ul&gt;
&lt;li&gt;有更容易的方法么&lt;/li&gt;
&lt;li&gt;你是在解决真正的问题，还是被外围的技术问题转移了注意力&lt;/li&gt;
&lt;li&gt;这件事为什么是一个问题&lt;/li&gt;
&lt;li&gt;是什么让它难以解决&lt;/li&gt;
&lt;li&gt;它必须这么做么&lt;/li&gt;
&lt;li&gt;它必须完成么&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;准备好再开始，但不要让它成为你懈怠的借口&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不要成为方法学的奴隶&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实效项目&#34;&gt;&lt;a href=&#34;#实效项目&#34; class=&#34;headerlink&#34; title=&#34;实效项目&#34;&gt;&lt;/a&gt;实效项目&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;团队建设&lt;ul&gt;
&lt;li&gt;不留破窗户（考验leader的管理能力）&lt;/li&gt;
&lt;li&gt;经常性的复盘和例会&lt;/li&gt;
&lt;li&gt;减少团队成员分工的冗余&lt;/li&gt;
&lt;li&gt;自动化项目流程 &amp;#x3D;&amp;gt; 效率工程团队开发内部工具&lt;/li&gt;
&lt;li&gt;制造context，给成员足够空间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不要使用手动流程&lt;/strong&gt;，它不可控且难以复制&lt;ul&gt;
&lt;li&gt;shell、crontab&lt;/li&gt;
&lt;li&gt;CI和自动化持续集成&lt;/li&gt;
&lt;li&gt;代码生成&lt;/li&gt;
&lt;li&gt;自动化测试&lt;/li&gt;
&lt;li&gt;代码review和源码版本控制流程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;常测试，早测试，自动化测试&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;单元测试&amp;#x2F;集成测试&amp;#x2F;压力测试&amp;#x2F;回归测试&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;测试状态覆盖，而不是代码覆盖&lt;/strong&gt;，代码覆盖率提供的意义有限&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;关于如何生产文本&lt;ul&gt;
&lt;li&gt;所有文档都是代码的反映&lt;/li&gt;
&lt;li&gt;源码注释应该去把项目里那些难以描述、容易忘记、不能记录在其他地方的东西记载下来&lt;/li&gt;
&lt;li&gt;比无意义的名称更糟糕的是&lt;strong&gt;有误导性&lt;/strong&gt;的名称&lt;/li&gt;
&lt;li&gt;除非有程序或人工维护，否则任何形式的文档都只是&lt;strong&gt;快照&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;温和地超出用户期望&lt;/strong&gt;，如&lt;ul&gt;
&lt;li&gt;友好的新手指引&lt;/li&gt;
&lt;li&gt;快捷键&lt;/li&gt;
&lt;li&gt;自动化安装&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自豪地为你的作品签名&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;更多资源&#34;&gt;&lt;a href=&#34;#更多资源&#34; class=&#34;headerlink&#34; title=&#34;更多资源&#34;&gt;&lt;/a&gt;更多资源&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;《人月神话》&lt;/li&gt;
&lt;li&gt;《Unix编程艺术》&lt;/li&gt;
&lt;li&gt;《Effective C++》&lt;/li&gt;
&lt;li&gt;《集市与大教堂》&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;–END–&lt;/em&gt;&lt;/p&gt;
</content>
        <category term="重构" />
        <category term="程序设计" />
        <category term="实效" />
        <category term="测试" />
        <updated>2019-05-28T15:55:53.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/05/01/sicp-note/</id>
        <title>SICP大纲</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/05/01/sicp-note/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;本文是《计算机程序的构造和解释》的笔记&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;序&#34;&gt;&lt;a href=&#34;#序&#34; class=&#34;headerlink&#34; title=&#34;序&#34;&gt;&lt;/a&gt;序&lt;/h2&gt;&lt;p&gt;序中其实也包含了很多睿智的观点，值得细细体会。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“每一个计算机程序都是现实中的或者精神中的某个过程的一个模型”&lt;/li&gt;
&lt;li&gt;“我们很少能通过自己的程序将这种过程模拟到永远令人满意的程度”&lt;/li&gt;
&lt;li&gt;“不幸的是，随着程序变得更大更复杂（实际上它们几乎总是如此），这种描述本身的适宜性，一致性和正确性也都变得非常值得怀疑了”&lt;/li&gt;
&lt;li&gt;“如何利用一些已经证明和有价值的组织技术，将这些结构组合成更大的结构，这些都是至关重要的”&lt;/li&gt;
&lt;li&gt;“将我们的Lisp程序变换到‘机器’程序的过程本身也是抽象模型，是通过程序设计做出来的。研究和构造它们，能使人更加深刻地理解与任何模型的程序设计有关的程序组织问题”&lt;/li&gt;
&lt;li&gt;“计算机永远都不够大也不够快。硬件技术的每一次突破都带来了更大规模的程序设计事业，新的组织原理，以及更加丰富的抽象模型。每个读者都应该反复问自己‘到哪里才是头儿，到哪里才是头儿’——但是不要问的过于频繁，以免忽略了程序设计的乐趣，使自己陷入一种喜忧参半的呆滞状态中”&lt;/li&gt;
&lt;li&gt;“Pascal是为了建造金字塔——壮丽辉煌，令人震撼，是由各就其位的沉重巨石筑起的静态结构，而Lisp则是为了构造有机体——同样壮丽辉煌并令人震撼，由各就其位但却永不静止的无数简单的有机体片段构成的动态结构”&lt;/li&gt;
&lt;li&gt;“Lisp程序大大抬高了函数库的地位，使其可用性超越了催生它们的那些具体应用”&lt;/li&gt;
&lt;li&gt;“采用100个函数在一种数据结构上操作，远远优于用10个函数在10个数据结构上操作。作为这些情况的必然后果，金字塔矗立在那里千年不变，而有机体则必须演化，否则会死亡”&lt;/li&gt;
&lt;li&gt;“在任何非常大的程序设计工作中，一条有用的组织原则就是通过发明新语言，去控制和隔离作业模块之间的信息流动”&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;过程抽象&#34;&gt;&lt;a href=&#34;#过程抽象&#34; class=&#34;headerlink&#34; title=&#34;过程抽象&#34;&gt;&lt;/a&gt;过程抽象&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;应用序和正则序&lt;/li&gt;
&lt;li&gt;递归和迭代在展开式上的区分，以及尾递归&lt;/li&gt;
&lt;li&gt;过程（函数）作为入参、返回值&lt;/li&gt;
&lt;li&gt;匿名函数和高阶函数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数据抽象&#34;&gt;&lt;a href=&#34;#数据抽象&#34; class=&#34;headerlink&#34; title=&#34;数据抽象&#34;&gt;&lt;/a&gt;数据抽象&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;构造函数和方法函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cons&lt;/code&gt;和&lt;code&gt;car&lt;/code&gt;、&lt;code&gt;cdr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;序对和list（层次化数据）&lt;/li&gt;
&lt;li&gt;表操作和表映射&lt;/li&gt;
&lt;li&gt;序列化操作&lt;/li&gt;
&lt;li&gt;符号数据（类似字符串）&lt;/li&gt;
&lt;li&gt;数据的多种表示（类型）与通用操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;模块化、对象和状态&#34;&gt;&lt;a href=&#34;#模块化、对象和状态&#34; class=&#34;headerlink&#34; title=&#34;模块化、对象和状态&#34;&gt;&lt;/a&gt;模块化、对象和状态&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;面向对象和面向流&lt;/li&gt;
&lt;li&gt;从时间角度理解赋值和局部状态&lt;/li&gt;
&lt;li&gt;赋值的利与弊&lt;/li&gt;
&lt;li&gt;赋值带来的环境模型解释（作用域、作用域链）&lt;ul&gt;
&lt;li&gt;局部状态&lt;/li&gt;
&lt;li&gt;作用域模型的解释&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;变动的表&lt;ul&gt;
&lt;li&gt;区分共享和相等（相同的指针、相同的值）&lt;/li&gt;
&lt;li&gt;队列与键值对&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;描述约束系统&lt;/li&gt;
&lt;li&gt;并发（交错进行的读写操作）&lt;ul&gt;
&lt;li&gt;串行化和串行化组&lt;/li&gt;
&lt;li&gt;mutex(mutual exclusion)和实现&lt;/li&gt;
&lt;li&gt;死锁（多共享资源）&lt;ul&gt;
&lt;li&gt;按顺序获取资源列表&lt;/li&gt;
&lt;li&gt;死锁恢复&lt;/li&gt;
&lt;li&gt;屏障同步&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;流&lt;ul&gt;
&lt;li&gt;延时求值的表序列&lt;/li&gt;
&lt;li&gt;延时求值的原理&lt;/li&gt;
&lt;li&gt;无穷流的构造&lt;/li&gt;
&lt;li&gt;流操作和组合&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;元语言设计&#34;&gt;&lt;a href=&#34;#元语言设计&#34; class=&#34;headerlink&#34; title=&#34;元语言设计&#34;&gt;&lt;/a&gt;元语言设计&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;求值器（解释器）的工作与意义&lt;ul&gt;
&lt;li&gt;在基本过程上提供组合与抽象构建一个语言&lt;ul&gt;
&lt;li&gt;表达式的嵌套&lt;/li&gt;
&lt;li&gt;变量维护&lt;/li&gt;
&lt;li&gt;过程复合&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;求值器内核&lt;ul&gt;
&lt;li&gt;eval 过程体解释&lt;/li&gt;
&lt;li&gt;apply 过程求值解释&lt;/li&gt;
&lt;li&gt;表达式规范化和实现 &amp;#x2F; 派生表达式&lt;/li&gt;
&lt;li&gt;环境模型的数据结构&lt;/li&gt;
&lt;li&gt;求值器程序初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据即程序&lt;ul&gt;
&lt;li&gt;图灵机和停机问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;内部定义&lt;ul&gt;
&lt;li&gt;内部定义是否应该具有时序&lt;/li&gt;
&lt;li&gt;Y结合子与lambda演算&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;语法分析与执行分离&lt;/li&gt;
&lt;li&gt;惰性求值&lt;ul&gt;
&lt;li&gt;thunk化，关联表达式和环境&lt;/li&gt;
&lt;li&gt;惰性的表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非确定性求值（满足约束的所有可行解）&lt;ul&gt;
&lt;li&gt;amb和自动回溯&lt;/li&gt;
&lt;li&gt;amb实现，成功与失败继续过程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;逻辑语言设计&lt;ul&gt;
&lt;li&gt;类SQL语言基于amb的实现&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;解释与编译&#34;&gt;&lt;a href=&#34;#解释与编译&#34; class=&#34;headerlink&#34; title=&#34;解释与编译&#34;&gt;&lt;/a&gt;解释与编译&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;机器描述&lt;ul&gt;
&lt;li&gt;基本指令与子程序（label）&lt;/li&gt;
&lt;li&gt;堆栈实现递归&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基本指令的实现&lt;ul&gt;
&lt;li&gt;类汇编语言&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;内存管理&lt;ul&gt;
&lt;li&gt;表与堆栈的实现&lt;/li&gt;
&lt;li&gt;garbage collection机制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解释&lt;ul&gt;
&lt;li&gt;基础操作实现&lt;/li&gt;
&lt;li&gt;尾递归优化解释&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;编译&lt;ul&gt;
&lt;li&gt;与解释有何区别，各自优势&lt;/li&gt;
&lt;li&gt;env&amp;#x2F;argl&amp;#x2F;proc&amp;#x2F;val&amp;#x2F;continue寄存器&lt;/li&gt;
&lt;li&gt;编译器结构&lt;ul&gt;
&lt;li&gt;语法分派&lt;/li&gt;
&lt;li&gt;入参：target（存储表达式值的寄存器）与linkage（continue寄存器）&lt;/li&gt;
&lt;li&gt;指令序列的结构与构造，分析指令序列，&lt;code&gt;preserving&lt;/code&gt;机制避免无谓的堆栈操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;表达式的编译&lt;ul&gt;
&lt;li&gt;linkage的编译，检查&lt;code&gt;next&lt;/code&gt;或&lt;code&gt;return&lt;/code&gt;的情况&lt;/li&gt;
&lt;li&gt;简单、条件表达式、表达式序列的编译&lt;/li&gt;
&lt;li&gt;lambda表达式的编译&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;过程的编译&lt;ul&gt;
&lt;li&gt;入参的处理&lt;/li&gt;
&lt;li&gt;尾递归&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;指令序列的组合&lt;/li&gt;
&lt;li&gt;代码编译的实例&lt;/li&gt;
&lt;li&gt;优化变量查找&lt;ul&gt;
&lt;li&gt;词法地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解释与编译&lt;ul&gt;
&lt;li&gt;解释：机器语言 -&amp;gt; 用户程序&lt;/li&gt;
&lt;li&gt;编译：用户程序 -&amp;gt; 机器语言&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后吐槽下，书是本好书，就是翻译的不太给力，在有些地方强行提高了理解难度。&lt;/p&gt;
</content>
        <category term="编程" />
        <category term="思想" />
        <category term="程序设计" />
        <updated>2018-05-01T09:18:04.000Z</updated>
    </entry>
</feed>
