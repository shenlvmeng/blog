<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Shenlvmeng&#39;s Blog • Posts by &#34;egret&#34; tag</title>
        <link>http://shenlvmeng.github.com/blog</link>
        <description>Be sharp, my friend.</description>
        <language>zh-CN</language>
        <pubDate>Mon, 01 Oct 2018 19:18:38 +0800</pubDate>
        <lastBuildDate>Mon, 01 Oct 2018 19:18:38 +0800</lastBuildDate>
        <category>总结</category>
        <category>制度</category>
        <category>道德</category>
        <category>文官</category>
        <category>万历</category>
        <category>明朝</category>
        <category>读书笔记</category>
        <category>展望</category>
        <category>2018</category>
        <category>2019</category>
        <category>flag</category>
        <category>2020</category>
        <category>2021</category>
        <category>2022</category>
        <category>2023</category>
        <category>面试</category>
        <category>前端</category>
        <category>FAQ</category>
        <category>HTML</category>
        <category>CSS</category>
        <category>style guide</category>
        <category>编程</category>
        <category>范式</category>
        <category>设计</category>
        <category>艺术</category>
        <category>质量</category>
        <category>async_hooks</category>
        <category>cls-hooked</category>
        <category>logId</category>
        <category>录音</category>
        <category>getUserMedia</category>
        <category>AudioContext</category>
        <category>PCM</category>
        <category>WAVE</category>
        <category>二叉搜索树</category>
        <category>算法</category>
        <category>回忆</category>
        <category>老朋友</category>
        <category>C</category>
        <category>Hash</category>
        <category>布隆过滤器</category>
        <category>字符串检索</category>
        <category>canvas</category>
        <category>流程图</category>
        <category>d3</category>
        <category>g6</category>
        <category>zrender</category>
        <category>processOn</category>
        <category>SDN</category>
        <category>cbench</category>
        <category>安装说明</category>
        <category>绘图</category>
        <category>动画</category>
        <category>攻略</category>
        <category>流水账</category>
        <category>成都</category>
        <category>重庆</category>
        <category>武汉</category>
        <category>重构</category>
        <category>代码</category>
        <category>代码风格</category>
        <category>数据可视化</category>
        <category>爬虫</category>
        <category>chrome</category>
        <category>crx</category>
        <category>扩展</category>
        <category>CORS</category>
        <category>跨域</category>
        <category>盒模型</category>
        <category>浮动</category>
        <category>Reactive Programming</category>
        <category>JavaScript</category>
        <category>Cycle.js</category>
        <category>Dart</category>
        <category>最佳实践</category>
        <category>引流</category>
        <category>universal-link</category>
        <category>app-link</category>
        <category>脚手架</category>
        <category>degit</category>
        <category>git</category>
        <category>设计模式</category>
        <category>类</category>
        <category>接口</category>
        <category>抽象类</category>
        <category>DOM</category>
        <category>Docker</category>
        <category>ONOS</category>
        <category>控制器</category>
        <category>虚拟化</category>
        <category>笔记</category>
        <category>UX</category>
        <category>UED</category>
        <category>准则</category>
        <category>Java</category>
        <category>Ruby</category>
        <category>反射</category>
        <category>编程范式</category>
        <category>鸭子类型</category>
        <category>管理</category>
        <category>效率</category>
        <category>知识工作者</category>
        <category>卓有成效</category>
        <category>Elm</category>
        <category>框架</category>
        <category>函数式编程</category>
        <category>虚网映射</category>
        <category>Javascript</category>
        <category>并发</category>
        <category>event loop</category>
        <category>覆盖率</category>
        <category>端到端测试</category>
        <category>istanbul</category>
        <category>istanbuljs</category>
        <category>JavaSript</category>
        <category>Express</category>
        <category>源码</category>
        <category>代码覆盖率</category>
        <category>istanbul-middleware</category>
        <category>代码插桩</category>
        <category>require钩子</category>
        <category>babel-plugin-istanbul</category>
        <category>css</category>
        <category>html5</category>
        <category>flex</category>
        <category>javascript</category>
        <category>roadmap</category>
        <category>闭包</category>
        <category>Haskell</category>
        <category>monad</category>
        <category>后端</category>
        <category>管理后台</category>
        <category>egg.js</category>
        <category>工作流</category>
        <category>pull request</category>
        <category>golang</category>
        <category>语言学习</category>
        <category>黑客与画家</category>
        <category>创业</category>
        <category>骑行</category>
        <category>海南</category>
        <category>图文</category>
        <category>reflow</category>
        <category>repaint</category>
        <category>命名法</category>
        <category>成功学</category>
        <category>自我建设</category>
        <category>HTTP</category>
        <category>HTTP/2</category>
        <category>SPDY</category>
        <category>QUIC</category>
        <category>HTTPS</category>
        <category>状态码</category>
        <category>网络攻击</category>
        <category>介绍</category>
        <category>图片渲染</category>
        <category>html2canvas</category>
        <category>dom-to-image</category>
        <category>electron</category>
        <category>indexedDB</category>
        <category>异步</category>
        <category>Generator</category>
        <category>thunk</category>
        <category>async</category>
        <category>函数表达式</category>
        <category>对象</category>
        <category>继承</category>
        <category>类型转换</category>
        <category>==</category>
        <category>类型判断</category>
        <category>猫</category>
        <category>杀手</category>
        <category>管理学</category>
        <category>领导力</category>
        <category>梯队</category>
        <category>移动端</category>
        <category>UI</category>
        <category>自适应</category>
        <category>rem</category>
        <category>Electron</category>
        <category>GUI</category>
        <category>gpx</category>
        <category>template</category>
        <category>Electron Builder</category>
        <category>PWA</category>
        <category>方法论</category>
        <category>夜话</category>
        <category>多线</category>
        <category>生活</category>
        <category>密码</category>
        <category>密钥</category>
        <category>技改</category>
        <category>Vue</category>
        <category>gulp</category>
        <category>瀑布流</category>
        <category>电影</category>
        <category>PHP</category>
        <category>参考</category>
        <category>思维</category>
        <category>学习能力</category>
        <category>右脑</category>
        <category>经济学</category>
        <category>宏观经济学</category>
        <category>术语</category>
        <category>GDP</category>
        <category>CPI</category>
        <category>储蓄</category>
        <category>投资</category>
        <category>金融市场</category>
        <category>股票</category>
        <category>债券</category>
        <category>美联储</category>
        <category>失业</category>
        <category>货币</category>
        <category>现值</category>
        <category>准备金</category>
        <category>货币中性</category>
        <category>通货膨胀</category>
        <category>汇率</category>
        <category>购买力</category>
        <category>净出口</category>
        <category>资产净流出</category>
        <category>总需求</category>
        <category>总供给</category>
        <category>流动性偏好</category>
        <category>乘数效应</category>
        <category>菲利普斯曲线</category>
        <category>微观经济学</category>
        <category>供求</category>
        <category>贸易</category>
        <category>市场</category>
        <category>税</category>
        <category>剩余</category>
        <category>外部性</category>
        <category>公共物品</category>
        <category>公共资源</category>
        <category>生产成本</category>
        <category>利润</category>
        <category>垄断</category>
        <category>价格歧视</category>
        <category>寡头</category>
        <category>垄断竞争</category>
        <category>生产要素市场</category>
        <category>贫困</category>
        <category>消费者选择理论</category>
        <category>不对称信息</category>
        <category>政治经济学</category>
        <category>行为经济学</category>
        <category>VSCode</category>
        <category>编辑器</category>
        <category>IDE</category>
        <category>hybrid</category>
        <category>JSBridge</category>
        <category>Web Worker</category>
        <category>Service Worker</category>
        <category>习惯</category>
        <category>lint</category>
        <category>editorconfig</category>
        <category>commit message</category>
        <category>量子物理</category>
        <category>史话</category>
        <category>埋点</category>
        <category>raven.js</category>
        <category>前端监控</category>
        <category>文本编辑器</category>
        <category>quill</category>
        <category>结构化数据</category>
        <category>React</category>
        <category>Hooks</category>
        <category>函数组件</category>
        <category>复用</category>
        <category>状态管理</category>
        <category>redux</category>
        <category>MobX</category>
        <category>代码质量</category>
        <category>重来</category>
        <category>requestAnimationFrame</category>
        <category>TypeScript</category>
        <category>路书</category>
        <category>gpx解析</category>
        <category>EXIF</category>
        <category>人类</category>
        <category>生存</category>
        <category>基因</category>
        <category>响应式编程</category>
        <category>RxJS</category>
        <category>成长</category>
        <category>业务</category>
        <category>思想</category>
        <category>程序设计</category>
        <category>心理学</category>
        <category>自我</category>
        <category>社会思维</category>
        <category>社会影响</category>
        <category>文化</category>
        <category>性别</category>
        <category>从众</category>
        <category>说服</category>
        <category>临床诊断</category>
        <category>陪审团</category>
        <category>司法</category>
        <category>物质主义</category>
        <category>健康</category>
        <category>社会关系</category>
        <category>偏见</category>
        <category>攻击行为</category>
        <category>亲密关系</category>
        <category>友谊</category>
        <category>爱情</category>
        <category>利他</category>
        <category>冲突</category>
        <category>和解</category>
        <category>软技能</category>
        <category>理财</category>
        <category>健身</category>
        <category>自我营销</category>
        <category>学习</category>
        <category>商业模式</category>
        <category>产品</category>
        <category>校园网</category>
        <category>互联网</category>
        <category>技术</category>
        <category>web开发</category>
        <category>哲思</category>
        <category>择偶观</category>
        <category>validator</category>
        <category>大文件</category>
        <category>visibilityChange</category>
        <category>IntersectionObserver</category>
        <category>图种</category>
        <category>draggable</category>
        <category>webpack</category>
        <category>z-index</category>
        <category>git submodule</category>
        <category>object-fit</category>
        <category>object-position</category>
        <category>BroadcastChannel</category>
        <category>extract-text-webpack-plugin</category>
        <category>lottie</category>
        <category>backface-visibility</category>
        <category>egret</category>
        <category>mock</category>
        <category>SSO</category>
        <category>autoprefixer</category>
        <category>polyfill</category>
        <category>Android</category>
        <category>ffmpeg</category>
        <category>React Hooks</category>
        <category>rollup</category>
        <category>CDN</category>
        <category>DNS</category>
        <category>CNAME</category>
        <category>架构</category>
        <category>组件</category>
        <category>ssh</category>
        <category>fis-receiver</category>
        <category>tmux</category>
        <category>origami</category>
        <category>promise</category>
        <category>encodeURI</category>
        <category>encodeURIComponent</category>
        <category>axios</category>
        <category>charles</category>
        <category>黑色幽默</category>
        <category>朋友</category>
        <category>梦</category>
        <category>濒死</category>
        <category>江南</category>
        <category>苏州</category>
        <category>无锡</category>
        <category>宜兴</category>
        <category>湖州</category>
        <category>南浔</category>
        <category>游记</category>
        <category>随笔</category>
        <category>群众</category>
        <category>理论</category>
        <category>实效</category>
        <category>测试</category>
        <category>长沙</category>
        <category>杭州</category>
        <category>湖南</category>
        <category>核酸</category>
        <category>美食</category>
        <category>云南</category>
        <category>丽江</category>
        <category>大理</category>
        <category>青岛</category>
        <category>济南</category>
        <category>山东</category>
        <category>西北</category>
        <category>银川</category>
        <category>西宁</category>
        <category>青海湖</category>
        <category>西海镇</category>
        <category>茶卡盐湖</category>
        <category>厦门</category>
        <category>感受</category>
        <category>C语言</category>
        <category>树</category>
        <category>主干开发</category>
        <category>GitFlow</category>
        <category>GithubFlow</category>
        <category>typescript</category>
        <category>类型系统</category>
        <category>webrtc</category>
        <category>RTMP</category>
        <category>首屏时间</category>
        <category>性能优化</category>
        <category>公司</category>
        <category>个人发展</category>
        <category>战略</category>
        <category>晋升</category>
        <category>哲学</category>
        <category>幸福</category>
        <category>人生</category>
        <category>叔本华</category>
        <category>Unix</category>
        <category>Rollup</category>
        <category>mouseout</category>
        <category>mouseleave</category>
        <category>lint-staged</category>
        <category>吸顶</category>
        <category>图片组件</category>
        <category>形式系统</category>
        <category>不完全性</category>
        <category>隐喻</category>
        <category>哥德尔</category>
        <category>巴赫</category>
        <category>埃舍尔</category>
        <category>济州</category>
        <category>西归浦</category>
        <category>城山</category>
        <category>咸德</category>
        <category>人工智能</category>
        <category>心智</category>
        <category>自指</category>
        <category>图灵</category>
        <category>马列主义</category>
        <category>恩格斯</category>
        <category>家庭</category>
        <category>国家</category>
        <category>阶级</category>
        <category>氏族</category>
        <category>哲学史</category>
        <category>孔子</category>
        <category>老子</category>
        <category>儒家</category>
        <category>道家</category>
        <category>佛教</category>
        <category>禅宗</category>
        <category>理学</category>
        <category>心学</category>
        <category>计算机</category>
        <category>微机原理</category>
        <category>门</category>
        <category>操作系统</category>
        <category>数字电路</category>
        <category>2024</category>
        <category>政府</category>
        <category>经济</category>
        <category>消费</category>
        <category>土地金融</category>
        <category>饮食</category>
        <category>蛋白质</category>
        <category>碳水</category>
        <category>慢性病</category>
        <category>三高</category>
        <category>肿瘤</category>
        <category>启蒙</category>
        <category>社会主义</category>
        <category>当代史</category>
        <category>共产党</category>
        <category>南明</category>
        <category>清</category>
        <category>顾诚</category>
        <item>
            <guid isPermalink="true">http://shenlvmeng.github.com/blog/2018/10/01/some-tips-4/</guid>
            <title>工作中的遇到的一些小知识 4</title>
            <link>http://shenlvmeng.github.com/blog/2018/10/01/some-tips-4/</link>
            <category>rem</category>
            <category>lottie</category>
            <category>backface-visibility</category>
            <category>egret</category>
            <category>mock</category>
            <category>SSO</category>
            <category>autoprefixer</category>
            <pubDate>Mon, 01 Oct 2018 19:18:38 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;lottie-production环境下bug修复总结&#34;&gt;&lt;a href=&#34;#lottie-production环境下bug修复总结&#34; class=&#34;headerlink&#34; title=&#34;lottie production环境下bug修复总结&#34;&gt;&lt;/a&gt;lottie production环境下bug修复总结&lt;/h2&gt;&lt;p&gt;现象：&lt;br&gt;前段时间，用lottie-web做动画的时候，发现在有个别动画在本地测试时可以正常播放，打包上线后会报库代码内的错误&lt;/p&gt;
&lt;p&gt;猜测原因：&lt;br&gt;打包过程中的uglify有损压缩了lottie-web的代码，导致部分特性的bug&lt;/p&gt;
&lt;p&gt;修复方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在webpack配置中，为lottie-web专门指定一个chunk&lt;/li&gt;
&lt;li&gt;在optimization中，指定一个lottie的cacheGroup，保证一个专门的chunk&lt;/li&gt;
&lt;li&gt;minimizer中uglifyJSConfig指定exclude为lottie的chunk名，避免被uglify&lt;/li&gt;
&lt;li&gt;resolve中，指定lottie-web resolve到’..&amp;#x2F;node_modules&amp;#x2F;lottie-web&amp;#x2F;build&amp;#x2F;player&amp;#x2F;lottie.min.js’，使用压缩过的版本&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大致像下面这样：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;module&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;exports&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;entry&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;lottie&lt;/span&gt;: [&lt;span class=&#34;string&#34;&gt;&amp;#x27;lottie-web&amp;#x27;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;resolve&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;alias&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;#x27;lottie-web&amp;#x27;&lt;/span&gt;: path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(__dirname, &lt;span class=&#34;string&#34;&gt;&amp;#x27;../node_modules/lottie-web/build/player/lottie.min.js&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;optimization&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;splitChunks&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;cacheGroups&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;lottie&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;chunks&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;initial&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;lottie&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;test&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;lottie&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;enforce&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;minimizer&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;UglifyJsPlugin&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;exclude&lt;/span&gt;: &lt;span class=&#34;regexp&#34;&gt;/lottie/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;结果：&lt;br&gt;问题解决。&lt;/p&gt;
&lt;h2 id=&#34;Android机型下rem适配不准的问题&#34;&gt;&lt;a href=&#34;#Android机型下rem适配不准的问题&#34; class=&#34;headerlink&#34; title=&#34;Android机型下rem适配不准的问题&#34;&gt;&lt;/a&gt;Android机型下rem适配不准的问题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;参考 &lt;a href=&#34;https://www.jianshu.com/p/14f6ce51a75f&#34;&gt;https://www.jianshu.com/p/14f6ce51a75f&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过比较&lt;code&gt;document.documentElement.style.fontSize&lt;/code&gt;和&lt;code&gt;window.getComputedStyle(document.documentElement)[&amp;#39;font-size&amp;#39;]&lt;/code&gt;，假设前者是a，后者是b，&lt;code&gt;a * a / b&lt;/code&gt;计算得到和设计一致的尺寸。&lt;/p&gt;
&lt;h2 id=&#34;3D旋转效果&#34;&gt;&lt;a href=&#34;#3D旋转效果&#34; class=&#34;headerlink&#34; title=&#34;3D旋转效果&#34;&gt;&lt;/a&gt;3D旋转效果&lt;/h2&gt;&lt;p&gt;利用CSS中的&lt;code&gt;backface-visibility: hidden;&lt;/code&gt;属性，实现在&lt;code&gt;transform: rotateY(180deg)&lt;/code&gt;时，页面翻转到不可见区域。&lt;/p&gt;
&lt;h2 id=&#34;egret学习&#34;&gt;&lt;a href=&#34;#egret学习&#34; class=&#34;headerlink&#34; title=&#34;egret学习&#34;&gt;&lt;/a&gt;egret学习&lt;/h2&gt;&lt;p&gt;场景：H5小游戏开发&lt;/p&gt;
&lt;p&gt;投放场景：各种小游戏平台，也可以打包为Android、iOS、Windows Phone应用发布，甚至直接web访问H5页面&lt;/p&gt;
&lt;p&gt;开发语言：TypeScript&lt;/p&gt;
&lt;p&gt;开发方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类Java的代码组织方式，MVC分离项目代码，M和C开发体验类似“用JavaScript写Java项目”。在View部分开发体验类似于用&lt;code&gt;canvas API写页面结构&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;类Android的resource管理方式（定义json文件描述资源组和路径对应），在代码中用API动态分组或逐个load资源&lt;/li&gt;
&lt;li&gt;单一入口，流程上在stage加载完成后，load资源（同时给出loading页面），之后执行游戏逻辑&lt;/li&gt;
&lt;li&gt;使用dispatchEvent实现组件间的信息交流&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;项目结构&#34;&gt;&lt;a href=&#34;#项目结构&#34; class=&#34;headerlink&#34; title=&#34;项目结构&#34;&gt;&lt;/a&gt;项目结构&lt;/h3&gt;&lt;p&gt;入口文件为index.html。在其中引入manifest.json。读入所需的库文件后，根据DOM容器的&lt;code&gt;data-*&lt;/code&gt;属性确定项目配置，以及项目入口&lt;code&gt;*.ts&lt;/code&gt;（一般是&lt;code&gt;Main.ts&lt;/code&gt;）。之后打包编译到&lt;code&gt;bin-debug&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;业务逻辑放在&lt;code&gt;/src&lt;/code&gt;下，资源文件放在&lt;code&gt;/resources&lt;/code&gt;中，资源文件用类似于Android的形式进行存取管理。&lt;/p&gt;
&lt;h3 id=&#34;视图&#34;&gt;&lt;a href=&#34;#视图&#34; class=&#34;headerlink&#34; title=&#34;视图&#34;&gt;&lt;/a&gt;视图&lt;/h3&gt;&lt;p&gt;Displayable元素可以添加到容器中显示。包含下面基类。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;displayableContainer 视图元素容器&lt;ul&gt;
&lt;li&gt;stage&lt;/li&gt;
&lt;li&gt;scrollView&lt;/li&gt;
&lt;li&gt;sprite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;bitmap&lt;/li&gt;
&lt;li&gt;bitmapText&lt;/li&gt;
&lt;li&gt;textField&lt;/li&gt;
&lt;li&gt;movieClip&lt;/li&gt;
&lt;li&gt;shape&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;movieClip表示逐帧动画。生成方法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;RES.getRes&lt;/code&gt;获取资源&lt;/li&gt;
&lt;li&gt;使用factory方法构造movieClipData&lt;/li&gt;
&lt;li&gt;使用movieClipData构造movieClip&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;简单动画用tween来实现。&lt;/p&gt;
&lt;h3 id=&#34;发布&#34;&gt;&lt;a href=&#34;#发布&#34; class=&#34;headerlink&#34; title=&#34;发布&#34;&gt;&lt;/a&gt;发布&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;egret publish&lt;/code&gt;或run build。发布H5，runtime版本&lt;/li&gt;
&lt;li&gt;对应平台support工具，如Android、iOS、微信小程序&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过在最新的egret launcher下，项目本身已经提供的发布到原生的快捷入口，参考&lt;a href=&#34;http://developer.egret.com/cn/github/egret-docs/Native/native/projectsetting/index.html&#34;&gt;官方解释&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;难点&#34;&gt;&lt;a href=&#34;#难点&#34; class=&#34;headerlink&#34; title=&#34;难点&#34;&gt;&lt;/a&gt;难点&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;和React如何结合开发？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;View层通过canvas、WebGL实现，不适合和React结合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;部署方式如何结合在App里&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;小游戏可以发布到HTML5平台，之后类似老的webview页面开发方式，部署到离线包平台或在线页面即可。&lt;/p&gt;
&lt;h2 id=&#34;SSO实现方案&#34;&gt;&lt;a href=&#34;#SSO实现方案&#34; class=&#34;headerlink&#34; title=&#34;SSO实现方案&#34;&gt;&lt;/a&gt;SSO实现方案&lt;/h2&gt;&lt;p&gt;SSO - Single Sign On 单一站点登录。由一个站点的登录状态实现关联网站免登录。&lt;/p&gt;
&lt;h3 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;由sso.xxx.com记录用户登录态，其他需要使用同一登录态的网站需要同步该域名下的登录态cookie到自己的独立域名下。&lt;/p&gt;
&lt;h3 id=&#34;实际场景&#34;&gt;&lt;a href=&#34;#实际场景&#34; class=&#34;headerlink&#34; title=&#34;实际场景&#34;&gt;&lt;/a&gt;实际场景&lt;/h3&gt;&lt;p&gt;一般公司内部的网站或ToC的集团网页间都有SSO控制，任意访问一个清除了所有cookie网页，观察network中开头的302报文即可发现实现SSO过程中的各跳转逻辑。&lt;/p&gt;
&lt;p&gt;实际步骤因实现而异：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;（转让控制权）访问目标网页，302到SSO的跳转特定页面，如jump.sso.xxx.com&lt;/li&gt;
&lt;li&gt;（写入cookie）302回目标网页的特定页面，如sso.mysite.com。该域名CNAME到sso.xxx.com的服务器&lt;/li&gt;
&lt;li&gt;（写入cookie）sso.mysite.com写入cookie到自己的同域名下，再次302到目标网页，完成SSO过程&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;同上&lt;/li&gt;
&lt;li&gt;（写入cookie）jump.sso.xxx.com做cookie的检查确认，通过url的方式写入回调的user session，再302回mysite.com。&lt;/li&gt;
&lt;li&gt;（写入cookie）mysite.com的后台对应路由根据URL里的回调写入cookie，302到目标页面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在写入cookie到新域名过程中，可以有不同的实现方式。&lt;/p&gt;
&lt;h3 id=&#34;原理&#34;&gt;&lt;a href=&#34;#原理&#34; class=&#34;headerlink&#34; title=&#34;原理&#34;&gt;&lt;/a&gt;原理&lt;/h3&gt;&lt;p&gt;第一步302到sso.xxx.com的时候已经可以带上xxx.com的cookie了，但是由于浏览器安全限制，并不能直接set cookie到独立域名下。需要再次302回原始域名，CNAME到sso的服务器，实现set cookie到独立域名。&lt;/p&gt;
&lt;p&gt;为了保证安全性，CNAME到sso的sso.mysite.com所传递的参数需要有安全机制保证。如时间戳、秘钥等保证请求的完整性。避免中间人伪造域名下的请求。同时，链接本身也应有&lt;strong&gt;时效性&lt;/strong&gt;，在超过时间范围失效，避免拦截链接，实现钓鱼网站获取sso.xxx.com的登录态。&lt;/p&gt;
&lt;p&gt;具体步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;302到jump.sso.xxx.com后，进行权限检查判断域名是否允许同步，匹配SSO的cookie域名下的cookie取交集，得到需要同步的cookie。&lt;/li&gt;
&lt;li&gt;通过以上两步后，302到sso.mysite.com，url中带上cookie和安全相关的参数&lt;/li&gt;
&lt;li&gt;根据安全参数校验、target是否允许同步，决定返回403还是302。&lt;/li&gt;
&lt;li&gt;通过校验后，同步登录态cookie，302到目标网页&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;清除登录态时，如何做到相关域名的同时清除，还需要额外设计。&lt;/p&gt;
&lt;p&gt;当然，如果sso只在内网使用，在jump.sso.xxx.com做完安全验证后，通过url将结果交由sso.mysite.com设置登录态Cookie，要更为简洁。&lt;/p&gt;
&lt;h2 id=&#34;git-branch-rename&#34;&gt;&lt;a href=&#34;#git-branch-rename&#34; class=&#34;headerlink&#34; title=&#34;git branch rename&#34;&gt;&lt;/a&gt;git branch rename&lt;/h2&gt;&lt;p&gt;如果分支在远端也有的话，工作需要分为本地和远端两部分。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重命名本地分支&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;如果就在该分支  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git branch -m new-name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;如果在其他分支  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git branch -m old-name new-name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;删除原分支，推送新分支&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git push origin :old-name new-name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;重置upstream设置&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git push origin -u new-name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;webpack无痛mock方案&#34;&gt;&lt;a href=&#34;#webpack无痛mock方案&#34; class=&#34;headerlink&#34; title=&#34;webpack无痛mock方案&#34;&gt;&lt;/a&gt;webpack无痛mock方案&lt;/h2&gt;&lt;p&gt;使用webpack-api-mocker实现，对比axios-mock-adapter和其余方案有几个优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mock部分代码和业务代码分离开，让网络请求部分代码（&amp;#x2F;apis）有清晰的逻辑，不混杂业务无关内容&lt;/li&gt;
&lt;li&gt;热更新，保存即生效&lt;/li&gt;
&lt;li&gt;本地dev环境无痛切换到production环境，无需修改任何代码&lt;/li&gt;
&lt;li&gt;基于webpack-dev-server，和整个项目耦合，无需本地起服务&lt;br&gt;本地开发时，配置webpack.dev.config.js，在devServer部分的配置中加入apiMocker即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; apiMocker = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;webpack-api-mocker&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;devServer&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;before&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;app&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;title function_&#34;&gt;apiMocker&lt;/span&gt;(app, path.&lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./mock/index.js&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 对应的路径下，写入mock数据和路径即可，可以灵活组织各模块的mock数据：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; proxy = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;GET /user/info&amp;#x27;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// your mock data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST /user/update&amp;#x27;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;module&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;exports&lt;/span&gt; = proxy;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;更多使用，参考webpack-api-mocker文档。&lt;/p&gt;
&lt;h2 id=&#34;webpack配置使用es6语法&#34;&gt;&lt;a href=&#34;#webpack配置使用es6语法&#34; class=&#34;headerlink&#34; title=&#34;webpack配置使用es6语法&#34;&gt;&lt;/a&gt;webpack配置使用es6语法&lt;/h2&gt;&lt;p&gt;如今现代的前端开发早已采用全es6的语法书写，然而webpack的配置文件需要通过node解析执行，一般还使用es5的语法书写。在需要使用&lt;code&gt;import&lt;/code&gt;，&lt;code&gt;export&lt;/code&gt;，数组、对象解构等最新特性时就很蛋疼。&lt;/p&gt;
&lt;p&gt;比如在最近的开发中，使用&lt;code&gt;webpack-api-mocker&lt;/code&gt;时，希望拆分不同领域的接口到不同文件，最后通过对象结构的方式聚合在mocker的入口文件中。使用es5的语法就很麻烦。&lt;/p&gt;
&lt;p&gt;实际上，让webpack使用babel解析配置文件分两步即可：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;yarn add -D babel-register&lt;/code&gt;，让webpack能够使用babel-loader转译配置文件&lt;/li&gt;
&lt;li&gt;修改配置文件后缀为，&lt;code&gt;webpack.config.babel.js&lt;/code&gt;，webpack会使用&lt;code&gt;.js&lt;/code&gt;前的字符串作为loader&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;之后就可以愉快地使用es6语法写配置文件了。&lt;/p&gt;
&lt;h2 id=&#34;autoprefixer-remove-webkit-box-orient解决方案&#34;&gt;&lt;a href=&#34;#autoprefixer-remove-webkit-box-orient解决方案&#34; class=&#34;headerlink&#34; title=&#34;autoprefixer remove -webkit-box-orient解决方案&#34;&gt;&lt;/a&gt;autoprefixer remove &lt;code&gt;-webkit-box-orient&lt;/code&gt;解决方案&lt;/h2&gt;&lt;p&gt;autoprefixer是postcss的插件，会根据browser list，删除一些autodated的样式，其中就包括&lt;code&gt;-webkit-box-orient&lt;/code&gt;这个用于hack实现多行省略号的CSS样式。&lt;/p&gt;
&lt;p&gt;几种方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置autoprefixer，&lt;code&gt;&amp;#123;remove: false&amp;#125;&lt;/code&gt;，保留autodated的样式规则&lt;/li&gt;
&lt;li&gt;添加flexbox 2009老旧浏览器到broswer list中&lt;/li&gt;
&lt;li&gt;如下，通过注释临时disable autoprefixer&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* autoprefixer: ignore next */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-webkit-box-orient: vertical;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
    </channel>
</rss>
