<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Shenlvmeng&#39;s Blog • Posts by &#34;degit&#34; tag</title>
        <link>http://shenlvmeng.github.com/blog</link>
        <description>Be sharp, my friend.</description>
        <language>zh-CN</language>
        <pubDate>Fri, 15 Nov 2019 21:51:58 +0800</pubDate>
        <lastBuildDate>Fri, 15 Nov 2019 21:51:58 +0800</lastBuildDate>
        <category>总结</category>
        <category>制度</category>
        <category>道德</category>
        <category>文官</category>
        <category>万历</category>
        <category>明朝</category>
        <category>读书笔记</category>
        <category>展望</category>
        <category>2018</category>
        <category>2019</category>
        <category>flag</category>
        <category>2020</category>
        <category>2021</category>
        <category>2022</category>
        <category>2023</category>
        <category>面试</category>
        <category>前端</category>
        <category>FAQ</category>
        <category>HTML</category>
        <category>CSS</category>
        <category>style guide</category>
        <category>编程</category>
        <category>范式</category>
        <category>设计</category>
        <category>艺术</category>
        <category>质量</category>
        <category>async_hooks</category>
        <category>cls-hooked</category>
        <category>logId</category>
        <category>录音</category>
        <category>getUserMedia</category>
        <category>AudioContext</category>
        <category>PCM</category>
        <category>WAVE</category>
        <category>二叉搜索树</category>
        <category>算法</category>
        <category>回忆</category>
        <category>老朋友</category>
        <category>C</category>
        <category>Hash</category>
        <category>布隆过滤器</category>
        <category>字符串检索</category>
        <category>canvas</category>
        <category>流程图</category>
        <category>d3</category>
        <category>g6</category>
        <category>zrender</category>
        <category>processOn</category>
        <category>SDN</category>
        <category>cbench</category>
        <category>安装说明</category>
        <category>绘图</category>
        <category>动画</category>
        <category>攻略</category>
        <category>流水账</category>
        <category>成都</category>
        <category>重庆</category>
        <category>武汉</category>
        <category>重构</category>
        <category>代码</category>
        <category>代码风格</category>
        <category>数据可视化</category>
        <category>爬虫</category>
        <category>chrome</category>
        <category>crx</category>
        <category>扩展</category>
        <category>CORS</category>
        <category>跨域</category>
        <category>盒模型</category>
        <category>浮动</category>
        <category>Reactive Programming</category>
        <category>JavaScript</category>
        <category>Cycle.js</category>
        <category>Dart</category>
        <category>最佳实践</category>
        <category>引流</category>
        <category>universal-link</category>
        <category>app-link</category>
        <category>脚手架</category>
        <category>degit</category>
        <category>git</category>
        <category>设计模式</category>
        <category>类</category>
        <category>接口</category>
        <category>抽象类</category>
        <category>DOM</category>
        <category>Docker</category>
        <category>ONOS</category>
        <category>控制器</category>
        <category>虚拟化</category>
        <category>笔记</category>
        <category>UX</category>
        <category>UED</category>
        <category>准则</category>
        <category>Java</category>
        <category>Ruby</category>
        <category>反射</category>
        <category>编程范式</category>
        <category>鸭子类型</category>
        <category>管理</category>
        <category>效率</category>
        <category>知识工作者</category>
        <category>卓有成效</category>
        <category>Elm</category>
        <category>框架</category>
        <category>函数式编程</category>
        <category>虚网映射</category>
        <category>Javascript</category>
        <category>并发</category>
        <category>event loop</category>
        <category>覆盖率</category>
        <category>端到端测试</category>
        <category>istanbul</category>
        <category>istanbuljs</category>
        <category>JavaSript</category>
        <category>Express</category>
        <category>源码</category>
        <category>代码覆盖率</category>
        <category>istanbul-middleware</category>
        <category>代码插桩</category>
        <category>require钩子</category>
        <category>babel-plugin-istanbul</category>
        <category>css</category>
        <category>html5</category>
        <category>flex</category>
        <category>javascript</category>
        <category>roadmap</category>
        <category>闭包</category>
        <category>Haskell</category>
        <category>monad</category>
        <category>后端</category>
        <category>管理后台</category>
        <category>egg.js</category>
        <category>工作流</category>
        <category>pull request</category>
        <category>golang</category>
        <category>语言学习</category>
        <category>黑客与画家</category>
        <category>创业</category>
        <category>骑行</category>
        <category>海南</category>
        <category>图文</category>
        <category>reflow</category>
        <category>repaint</category>
        <category>命名法</category>
        <category>成功学</category>
        <category>自我建设</category>
        <category>HTTP</category>
        <category>HTTP/2</category>
        <category>SPDY</category>
        <category>QUIC</category>
        <category>HTTPS</category>
        <category>状态码</category>
        <category>网络攻击</category>
        <category>介绍</category>
        <category>图片渲染</category>
        <category>html2canvas</category>
        <category>dom-to-image</category>
        <category>electron</category>
        <category>indexedDB</category>
        <category>异步</category>
        <category>Generator</category>
        <category>thunk</category>
        <category>async</category>
        <category>函数表达式</category>
        <category>对象</category>
        <category>继承</category>
        <category>类型转换</category>
        <category>==</category>
        <category>类型判断</category>
        <category>猫</category>
        <category>杀手</category>
        <category>管理学</category>
        <category>领导力</category>
        <category>梯队</category>
        <category>移动端</category>
        <category>UI</category>
        <category>自适应</category>
        <category>rem</category>
        <category>Electron</category>
        <category>GUI</category>
        <category>gpx</category>
        <category>template</category>
        <category>Electron Builder</category>
        <category>PWA</category>
        <category>方法论</category>
        <category>夜话</category>
        <category>多线</category>
        <category>生活</category>
        <category>密码</category>
        <category>密钥</category>
        <category>技改</category>
        <category>Vue</category>
        <category>gulp</category>
        <category>瀑布流</category>
        <category>电影</category>
        <category>PHP</category>
        <category>参考</category>
        <category>思维</category>
        <category>学习能力</category>
        <category>右脑</category>
        <category>经济学</category>
        <category>宏观经济学</category>
        <category>术语</category>
        <category>GDP</category>
        <category>CPI</category>
        <category>储蓄</category>
        <category>投资</category>
        <category>金融市场</category>
        <category>股票</category>
        <category>债券</category>
        <category>美联储</category>
        <category>失业</category>
        <category>货币</category>
        <category>现值</category>
        <category>准备金</category>
        <category>货币中性</category>
        <category>通货膨胀</category>
        <category>汇率</category>
        <category>购买力</category>
        <category>净出口</category>
        <category>资产净流出</category>
        <category>总需求</category>
        <category>总供给</category>
        <category>流动性偏好</category>
        <category>乘数效应</category>
        <category>菲利普斯曲线</category>
        <category>微观经济学</category>
        <category>供求</category>
        <category>贸易</category>
        <category>市场</category>
        <category>税</category>
        <category>剩余</category>
        <category>外部性</category>
        <category>公共物品</category>
        <category>公共资源</category>
        <category>生产成本</category>
        <category>利润</category>
        <category>垄断</category>
        <category>价格歧视</category>
        <category>寡头</category>
        <category>垄断竞争</category>
        <category>生产要素市场</category>
        <category>贫困</category>
        <category>消费者选择理论</category>
        <category>不对称信息</category>
        <category>政治经济学</category>
        <category>行为经济学</category>
        <category>VSCode</category>
        <category>编辑器</category>
        <category>IDE</category>
        <category>hybrid</category>
        <category>JSBridge</category>
        <category>Web Worker</category>
        <category>Service Worker</category>
        <category>习惯</category>
        <category>lint</category>
        <category>editorconfig</category>
        <category>commit message</category>
        <category>量子物理</category>
        <category>史话</category>
        <category>埋点</category>
        <category>raven.js</category>
        <category>前端监控</category>
        <category>文本编辑器</category>
        <category>quill</category>
        <category>结构化数据</category>
        <category>React</category>
        <category>Hooks</category>
        <category>函数组件</category>
        <category>复用</category>
        <category>状态管理</category>
        <category>redux</category>
        <category>MobX</category>
        <category>代码质量</category>
        <category>重来</category>
        <category>requestAnimationFrame</category>
        <category>TypeScript</category>
        <category>路书</category>
        <category>gpx解析</category>
        <category>EXIF</category>
        <category>人类</category>
        <category>生存</category>
        <category>基因</category>
        <category>响应式编程</category>
        <category>RxJS</category>
        <category>成长</category>
        <category>业务</category>
        <category>思想</category>
        <category>程序设计</category>
        <category>心理学</category>
        <category>自我</category>
        <category>社会思维</category>
        <category>社会影响</category>
        <category>文化</category>
        <category>性别</category>
        <category>从众</category>
        <category>说服</category>
        <category>临床诊断</category>
        <category>陪审团</category>
        <category>司法</category>
        <category>物质主义</category>
        <category>健康</category>
        <category>社会关系</category>
        <category>偏见</category>
        <category>攻击行为</category>
        <category>亲密关系</category>
        <category>友谊</category>
        <category>爱情</category>
        <category>利他</category>
        <category>冲突</category>
        <category>和解</category>
        <category>软技能</category>
        <category>理财</category>
        <category>健身</category>
        <category>自我营销</category>
        <category>学习</category>
        <category>商业模式</category>
        <category>产品</category>
        <category>校园网</category>
        <category>互联网</category>
        <category>技术</category>
        <category>web开发</category>
        <category>哲思</category>
        <category>择偶观</category>
        <category>validator</category>
        <category>大文件</category>
        <category>visibilityChange</category>
        <category>IntersectionObserver</category>
        <category>图种</category>
        <category>draggable</category>
        <category>webpack</category>
        <category>z-index</category>
        <category>git submodule</category>
        <category>object-fit</category>
        <category>object-position</category>
        <category>BroadcastChannel</category>
        <category>extract-text-webpack-plugin</category>
        <category>lottie</category>
        <category>backface-visibility</category>
        <category>egret</category>
        <category>mock</category>
        <category>SSO</category>
        <category>autoprefixer</category>
        <category>polyfill</category>
        <category>Android</category>
        <category>ffmpeg</category>
        <category>React Hooks</category>
        <category>rollup</category>
        <category>CDN</category>
        <category>DNS</category>
        <category>CNAME</category>
        <category>架构</category>
        <category>组件</category>
        <category>ssh</category>
        <category>fis-receiver</category>
        <category>tmux</category>
        <category>origami</category>
        <category>promise</category>
        <category>encodeURI</category>
        <category>encodeURIComponent</category>
        <category>axios</category>
        <category>charles</category>
        <category>黑色幽默</category>
        <category>朋友</category>
        <category>梦</category>
        <category>濒死</category>
        <category>江南</category>
        <category>苏州</category>
        <category>无锡</category>
        <category>宜兴</category>
        <category>湖州</category>
        <category>南浔</category>
        <category>游记</category>
        <category>随笔</category>
        <category>群众</category>
        <category>理论</category>
        <category>实效</category>
        <category>测试</category>
        <category>长沙</category>
        <category>杭州</category>
        <category>湖南</category>
        <category>核酸</category>
        <category>美食</category>
        <category>云南</category>
        <category>丽江</category>
        <category>大理</category>
        <category>青岛</category>
        <category>济南</category>
        <category>山东</category>
        <category>西北</category>
        <category>银川</category>
        <category>西宁</category>
        <category>青海湖</category>
        <category>西海镇</category>
        <category>茶卡盐湖</category>
        <category>厦门</category>
        <category>感受</category>
        <category>C语言</category>
        <category>树</category>
        <category>主干开发</category>
        <category>GitFlow</category>
        <category>GithubFlow</category>
        <category>typescript</category>
        <category>类型系统</category>
        <category>webrtc</category>
        <category>RTMP</category>
        <category>首屏时间</category>
        <category>性能优化</category>
        <category>公司</category>
        <category>个人发展</category>
        <category>战略</category>
        <category>晋升</category>
        <category>哲学</category>
        <category>幸福</category>
        <category>人生</category>
        <category>叔本华</category>
        <category>Unix</category>
        <category>Rollup</category>
        <category>mouseout</category>
        <category>mouseleave</category>
        <category>lint-staged</category>
        <category>吸顶</category>
        <category>图片组件</category>
        <category>形式系统</category>
        <category>不完全性</category>
        <category>隐喻</category>
        <category>哥德尔</category>
        <category>巴赫</category>
        <category>埃舍尔</category>
        <category>济州</category>
        <category>西归浦</category>
        <category>城山</category>
        <category>咸德</category>
        <category>人工智能</category>
        <category>心智</category>
        <category>自指</category>
        <category>图灵</category>
        <category>马列主义</category>
        <category>恩格斯</category>
        <category>家庭</category>
        <category>国家</category>
        <category>阶级</category>
        <category>氏族</category>
        <category>哲学史</category>
        <category>孔子</category>
        <category>老子</category>
        <category>儒家</category>
        <category>道家</category>
        <category>佛教</category>
        <category>禅宗</category>
        <category>理学</category>
        <category>心学</category>
        <category>计算机</category>
        <category>微机原理</category>
        <category>门</category>
        <category>操作系统</category>
        <category>数字电路</category>
        <category>2024</category>
        <category>政府</category>
        <category>经济</category>
        <category>消费</category>
        <category>土地金融</category>
        <category>饮食</category>
        <category>蛋白质</category>
        <category>碳水</category>
        <category>慢性病</category>
        <category>三高</category>
        <category>肿瘤</category>
        <category>启蒙</category>
        <category>社会主义</category>
        <category>当代史</category>
        <category>共产党</category>
        <item>
            <guid isPermalink="true">http://shenlvmeng.github.com/blog/2019/11/15/degit-improvement/</guid>
            <title>degit认识和改造</title>
            <link>http://shenlvmeng.github.com/blog/2019/11/15/degit-improvement/</link>
            <category>脚手架</category>
            <category>degit</category>
            <category>git</category>
            <pubDate>Fri, 15 Nov 2019 21:51:58 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;近日写了一个chrome插件的starter-boilerplate。但这类boilerplate被人们使用的方式常常是整合在cli库中。由于仓库本身的模板性质和git历史存在，并不合适使用npm分发或&lt;code&gt;git clone&lt;/code&gt;快速搭建项目骨架。&lt;/p&gt;
&lt;p&gt;碰巧此前学习svelte的时候接触到了&lt;a href=&#34;https://github.com/Rich-Harris/degit&#34;&gt;degit&lt;/a&gt;，degit做的事很简单，&lt;strong&gt;复制git仓库代码&lt;/strong&gt;。这也正是一个称职的boilerplate发挥光和热的方式。&lt;/p&gt;
&lt;h2 id=&#34;degit使用&#34;&gt;&lt;a href=&#34;#degit使用&#34; class=&#34;headerlink&#34; title=&#34;degit使用&#34;&gt;&lt;/a&gt;degit使用&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;degit user/repo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# these commands are equivalent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;degit github:user/repo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;degit git@github.com:user/repo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;degit https://github.com/user/repo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;degit user/repo my-new-project&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面是一个degit的基本用法，类似&lt;code&gt;git clone&lt;/code&gt;指定仓库地址和本地目录名，默认将项目当前&lt;code&gt;master&lt;/code&gt;分支的代码拷贝到本地。还可以在仓库后使用&lt;code&gt;#&lt;/code&gt;分隔，指定分支名、tag名或commit hash。目前（2019&amp;#x2F;11&amp;#x2F;12）degit支持github、gitlab、BitBucket以及Sourcehut，暂不支持私有仓库。&lt;/p&gt;
&lt;p&gt;在一些情况下，我们可能希望在拷贝完代码后进行一些后置操作，如拷贝关联仓库或删除不必要文件等。对此，degit设计了&lt;strong&gt;actions&lt;/strong&gt;来支持，可以在当前目录的&lt;code&gt;degit.json&lt;/code&gt;中声明。目前actions只有&lt;code&gt;clone&lt;/code&gt;和&lt;code&gt;remove&lt;/code&gt;两种。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// degit.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;action&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;clone&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;user/another-repo&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;action&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;remove&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;files&amp;quot;&lt;/span&gt;: [&lt;span class=&#34;string&#34;&gt;&amp;quot;LICENSE&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;degit优势&#34;&gt;&lt;a href=&#34;#degit优势&#34; class=&#34;headerlink&#34; title=&#34;degit优势&#34;&gt;&lt;/a&gt;degit优势&lt;/h2&gt;&lt;p&gt;如README中提到的，degit和&lt;code&gt;git clone --depth 1&lt;/code&gt;还是有所区别的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone&lt;/code&gt;后，终归还是会有个&lt;code&gt;.git&lt;/code&gt;目录，需要手动重置&lt;/li&gt;
&lt;li&gt;degit在实现时增加了缓存策略，在有些情况下不需要重复下载代码，速度更快&lt;/li&gt;
&lt;li&gt;“更少的字数”（&lt;code&gt;degit user/repo&lt;/code&gt;而不是&lt;code&gt;git clone --depth 1 git@github.com:user/repo&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;灵活度更高，如前后置操作如actions的支持&lt;/li&gt;
&lt;li&gt;更好的可扩展性，未来可以在degit基础上实现交互等更复杂的设计&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;degit原理&#34;&gt;&lt;a href=&#34;#degit原理&#34; class=&#34;headerlink&#34; title=&#34;degit原理&#34;&gt;&lt;/a&gt;degit原理&lt;/h2&gt;&lt;p&gt;那么degit快在哪里？它的思路借鉴于&lt;a href=&#34;https://github.com/vutran/zel&#34;&gt;zel&lt;/a&gt;和&lt;a href=&#34;https://github.com/lukeed/gittar&#34;&gt;gittar&lt;/a&gt;，即方便快捷地从git仓库中下载需要的源代码。原理上，&lt;strong&gt;利用某些git平台url的特定规则，从平台下载tar.gz包，再本地解压&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;degit实现集中在&lt;code&gt;src/index.js&lt;/code&gt;中。&lt;code&gt;src/bin.js&lt;/code&gt;只用来实现cli部分的入口代码，&lt;code&gt;src/utils.js&lt;/code&gt;则包含了一些工具函数。&lt;/p&gt;
&lt;h3 id=&#34;入口&#34;&gt;&lt;a href=&#34;#入口&#34; class=&#34;headerlink&#34; title=&#34;入口&#34;&gt;&lt;/a&gt;入口&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;src/bin.js&lt;/code&gt;中，流程分下面几步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;利用&lt;a href=&#34;https://github.com/lukeed/mri&#34;&gt;mri&lt;/a&gt;做了基本的参数处理&lt;/li&gt;
&lt;li&gt;实例化Degit对象，注册logger的监听方法&lt;/li&gt;
&lt;li&gt;调用&lt;code&gt;clone&lt;/code&gt;方法&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; d = &lt;span class=&#34;title function_&#34;&gt;degit&lt;/span&gt;(src, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d.&lt;span class=&#34;title function_&#34;&gt;on&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;info&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;error&lt;/span&gt;(chalk.&lt;span class=&#34;title function_&#34;&gt;cyan&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`&amp;gt; &lt;span class=&#34;subst&#34;&gt;$&amp;#123;event.message.replace(&lt;span class=&#34;string&#34;&gt;&amp;#x27;options.&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;--&amp;#x27;&lt;/span&gt;)&amp;#125;&lt;/span&gt;`&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d.&lt;span class=&#34;title function_&#34;&gt;on&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;warn&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;error&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            chalk.&lt;span class=&#34;title function_&#34;&gt;magenta&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`! &lt;span class=&#34;subst&#34;&gt;$&amp;#123;event.message.replace(&lt;span class=&#34;string&#34;&gt;&amp;#x27;options.&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;--&amp;#x27;&lt;/span&gt;)&amp;#125;&lt;/span&gt;`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d.&lt;span class=&#34;title function_&#34;&gt;clone&lt;/span&gt;(dest)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// .then(() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// &amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .&lt;span class=&#34;title function_&#34;&gt;catch&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;err&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;error&lt;/span&gt;(chalk.&lt;span class=&#34;title function_&#34;&gt;red&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`! &lt;span class=&#34;subst&#34;&gt;$&amp;#123;err.message.replace(&lt;span class=&#34;string&#34;&gt;&amp;#x27;options.&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;--&amp;#x27;&lt;/span&gt;)&amp;#125;&lt;/span&gt;`&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            process.&lt;span class=&#34;title function_&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Degit初始化&#34;&gt;&lt;a href=&#34;#Degit初始化&#34; class=&#34;headerlink&#34; title=&#34;Degit初始化&#34;&gt;&lt;/a&gt;Degit初始化&lt;/h3&gt;&lt;p&gt;对象实例包含下面几个成员，其中repo信息需要处理后才能拿到。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;，string，用户输入的仓库地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cache&lt;/code&gt;，boolean，是否使用缓存，来自命令行&lt;code&gt;-c&lt;/code&gt;或&lt;code&gt;--cache&lt;/code&gt;参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;force&lt;/code&gt;，boolean，目标文件夹有内容时，是否覆盖，来自&lt;code&gt;-f&lt;/code&gt;或&lt;code&gt;--force&lt;/code&gt;参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;verbose&lt;/code&gt;，boolean，是否打印详细日志，来自&lt;code&gt;-v&lt;/code&gt;或&lt;code&gt;--verbose&lt;/code&gt;参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repo&lt;/code&gt;，处理&lt;code&gt;src&lt;/code&gt;拿到仓库的详情，包括&lt;ul&gt;
&lt;li&gt;&lt;code&gt;site&lt;/code&gt;，网页域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user&lt;/code&gt;，用户&amp;#x2F;组织名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;，仓库名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ref&lt;/code&gt;，分支、tag、commit hash&lt;/li&gt;
&lt;li&gt;&lt;code&gt;url&lt;/code&gt;，完整的HTTP url&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;directiveActions&lt;/code&gt;，actions配置对应的处理函数，包含&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clone&lt;/code&gt;，递归处理src的仓库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;remove&lt;/code&gt;，调用&lt;code&gt;remove&lt;/code&gt;方法移除指定文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;repo信息来自src经过正则匹配出的详细信息。由于要利用一些git平台的url拼接规则，需要排除已知平台以外的url。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 支持的范围&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; supported = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([&lt;span class=&#34;string&#34;&gt;&amp;#x27;github&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;gitlab&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;bitbucket&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;git.sr.ht&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;src&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; match = &lt;span class=&#34;regexp&#34;&gt;/^(?:https:\/\/([^/]+)\/|git@([^/]+)[:/]|([^/]+)[:/])?([^/\s]+)\/([^/\s#]+)(?:#(.+))?/&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;exec&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        src&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!match) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;DegitError&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`could not parse &lt;span class=&#34;subst&#34;&gt;$&amp;#123;src&amp;#125;&lt;/span&gt;`&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;BAD_SRC&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; site = (match[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] || &lt;span class=&#34;string&#34;&gt;&amp;#x27;github&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;regexp&#34;&gt;/\.(com|org)$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 排除范围外的url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!supported.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(site)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;DegitError&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;`degit supports GitHub, GitLab, Sourcehut and BitBucket`&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;UNSUPPORTED_HOST&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 匹配出用户名、仓库名、分支/tag/commit hash名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; user = match[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; name = match[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/\.git$/&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; ref = match[&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;] || &lt;span class=&#34;string&#34;&gt;&amp;#x27;master&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 完整的仓库地址，需要http开头的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; url = &lt;span class=&#34;string&#34;&gt;`https://&lt;span class=&#34;subst&#34;&gt;$&amp;#123;site&amp;#125;&lt;/span&gt;.&lt;span class=&#34;subst&#34;&gt;$&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;subst&#34;&gt;&lt;span class=&#34;string&#34;&gt;        site === &lt;span class=&#34;string&#34;&gt;&amp;#x27;bitbucket&amp;#x27;&lt;/span&gt; ? &lt;span class=&#34;string&#34;&gt;&amp;#x27;org&amp;#x27;&lt;/span&gt; : site === &lt;span class=&#34;string&#34;&gt;&amp;#x27;git.sr.ht&amp;#x27;&lt;/span&gt; ? &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;#x27;com&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;subst&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;#125;&lt;/span&gt;/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;user&amp;#125;&lt;/span&gt;/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123; site, user, name, ref, url &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;仓库下载&#34;&gt;&lt;a href=&#34;#仓库下载&#34; class=&#34;headerlink&#34; title=&#34;仓库下载&#34;&gt;&lt;/a&gt;仓库下载&lt;/h3&gt;&lt;p&gt;下载仓库流程如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s2.ax1x.com/2019/11/15/Mdbl6S.png&#34; alt=&#34;degit流程&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;获取缓存信息&#34;&gt;&lt;a href=&#34;#获取缓存信息&#34; class=&#34;headerlink&#34; title=&#34;获取缓存信息&#34;&gt;&lt;/a&gt;获取缓存信息&lt;/h4&gt;&lt;p&gt;degit的缓存放在&lt;code&gt;/home&lt;/code&gt;或&lt;code&gt;/tmp&lt;/code&gt;下的&lt;code&gt;.degit&lt;/code&gt;目录下，按照&lt;code&gt;site/user/name&lt;/code&gt;的目录组织。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 缓存目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; base = path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(homeOrTmp, &lt;span class=&#34;string&#34;&gt;&amp;#x27;.degit&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; dir = path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(base, repo.&lt;span class=&#34;property&#34;&gt;site&lt;/span&gt;, repo.&lt;span class=&#34;property&#34;&gt;user&lt;/span&gt;, repo.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; cached = &lt;span class=&#34;title function_&#34;&gt;tryRequire&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(dir, &lt;span class=&#34;string&#34;&gt;&amp;#x27;map.json&amp;#x27;&lt;/span&gt;)) || &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;目录下有一个&lt;code&gt;map.json&lt;/code&gt;和缓存的代码tar.gz包，包名格式为&lt;code&gt;&amp;lt;commit-hash&amp;gt;.tar.gz&lt;/code&gt;。在map.json保存着此前使用过的分支名&amp;#x2F;tag名&amp;#x2F;简写commit名到commit hash的最新映射关系。形如下方：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;4e3a4089b4f0275964eb10a432dc1c15526a0b4d&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这一步会尝试使用parse好的&lt;code&gt;site&lt;/code&gt;、&lt;code&gt;user&lt;/code&gt;、&lt;code&gt;name&lt;/code&gt;属性找已有的缓存的&lt;code&gt;map.json&lt;/code&gt;。没有找到时返回&lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;获取commit-hash&#34;&gt;&lt;a href=&#34;#获取commit-hash&#34; class=&#34;headerlink&#34; title=&#34;获取commit hash&#34;&gt;&lt;/a&gt;获取commit hash&lt;/h4&gt;&lt;p&gt;这一步分两种情况;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用缓存时，直接从上一步拿到的&lt;code&gt;map.json&lt;/code&gt;里面找&lt;code&gt;ref&lt;/code&gt;对应的commit hash&lt;/li&gt;
&lt;li&gt;不使用缓存时，需要从远端仓库拿分支名&amp;#x2F;tag名到commit hash的对应关系（使用&lt;code&gt;git ls-remote&lt;/code&gt;完成）。之后格式化为结构化数据并从中寻找&lt;code&gt;ref&lt;/code&gt;对应的commit hash。如果中途失败，则fallback到使用缓存的方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fetchRefs&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;repo&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; stdout &amp;#125; = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;exec&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`git ls-remote &lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;`&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; stdout&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            .&lt;span class=&#34;title function_&#34;&gt;split&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            .&lt;span class=&#34;title function_&#34;&gt;filter&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Boolean&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            .&lt;span class=&#34;title function_&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;row&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; [hash, ref] = row.&lt;span class=&#34;title function_&#34;&gt;split&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\t&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 格式化过程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 错误处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这一步若未找到hash，则无法构造下载的url，从而需要抛出错误。&lt;/p&gt;
&lt;h4 id=&#34;构造下载地址&#34;&gt;&lt;a href=&#34;#构造下载地址&#34; class=&#34;headerlink&#34; title=&#34;构造下载地址&#34;&gt;&lt;/a&gt;构造下载地址&lt;/h4&gt;&lt;p&gt;根据不同的git平台固定的源码tar.gz归档url规则，构造下载的url，这也是degit思路的基础。目前支持gitlab、bucket、github风格的url。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 即将下载的tar.gz文件路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; file = &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;dir&amp;#125;&lt;/span&gt;/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 下载的url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; url =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    repo.&lt;span class=&#34;property&#34;&gt;site&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;gitlab&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ? &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/repository/archive.tar.gz?ref=&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        : repo.&lt;span class=&#34;property&#34;&gt;site&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;bitbucket&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ? &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/get/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        : &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/archive/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;创建目录并下载&#34;&gt;&lt;a href=&#34;#创建目录并下载&#34; class=&#34;headerlink&#34; title=&#34;创建目录并下载&#34;&gt;&lt;/a&gt;创建目录并下载&lt;/h4&gt;&lt;p&gt;不使用缓存时，会在创建缓存目录并下载。另外，指定&lt;code&gt;-f&lt;/code&gt;或&lt;code&gt;--force&lt;/code&gt;参数，会覆盖已有文件路径。最后使用https模块下载文件。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;cache&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fs.&lt;span class=&#34;title function_&#34;&gt;statSync&lt;/span&gt;(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;title function_&#34;&gt;mkdirp&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;dirname&lt;/span&gt;(file));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fetch&lt;/span&gt;(url, file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 错误处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;更新缓存&#34;&gt;&lt;a href=&#34;#更新缓存&#34; class=&#34;headerlink&#34; title=&#34;更新缓存&#34;&gt;&lt;/a&gt;更新缓存&lt;/h4&gt;&lt;p&gt;下载成功会更新本地缓存，保证以后使用缓存时能使用尽量新的包。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当前使用包的commit hash如果和指定分支&amp;#x2F;tag&amp;#x2F;commit hash对应的hash一致，则不需要更新&lt;/li&gt;
&lt;li&gt;在需要更新时，检查老的hash是否还有使用，如果没有使用，则清除hash对应的tar.gz包&lt;/li&gt;
&lt;li&gt;更新map.json里的对应关系&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;updateCache&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;dir, repo, hash, cached&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (cached[repo.&lt;span class=&#34;property&#34;&gt;ref&lt;/span&gt;] === hash) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; oldHash = cached[repo.&lt;span class=&#34;property&#34;&gt;ref&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldHash) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; used = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; key &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; cached) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (cached[key] === hash) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                used = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!used) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// we no longer need this tar file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                fs.&lt;span class=&#34;title function_&#34;&gt;unlinkSync&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(dir, &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;oldHash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// ignore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cached[repo.&lt;span class=&#34;property&#34;&gt;ref&lt;/span&gt;] = hash;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fs.&lt;span class=&#34;title function_&#34;&gt;writeFileSync&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(dir, &lt;span class=&#34;string&#34;&gt;&amp;#x27;map.json&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(cached, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;  &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;解压tar-gz包&#34;&gt;&lt;a href=&#34;#解压tar-gz包&#34; class=&#34;headerlink&#34; title=&#34;解压tar.gz包&#34;&gt;&lt;/a&gt;解压tar.gz包&lt;/h4&gt;&lt;p&gt;创建cli中输入的目标目录，并将已下载到缓存中tar.gz包解压到目标路径下。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;mkdirp&lt;/span&gt;(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;untar&lt;/span&gt;(file, dest);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;actions处理&#34;&gt;&lt;a href=&#34;#actions处理&#34; class=&#34;headerlink&#34; title=&#34;actions处理&#34;&gt;&lt;/a&gt;&lt;code&gt;actions&lt;/code&gt;处理&lt;/h4&gt;&lt;p&gt;如果在当前目录下获取到了&lt;code&gt;degit.json&lt;/code&gt;，则执行后续的&lt;code&gt;clone&lt;/code&gt;或&lt;code&gt;remove&lt;/code&gt;操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;clone，在目标目录下继续一遍clone流程&lt;/li&gt;
&lt;li&gt;remove，删除指定文件或文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;degit改造&#34;&gt;&lt;a href=&#34;#degit改造&#34; class=&#34;headerlink&#34; title=&#34;degit改造&#34;&gt;&lt;/a&gt;degit改造&lt;/h2&gt;&lt;p&gt;degit虽好，但从上面也可以看到，支持仓库比较有限，且不支持私有仓库。在公司内部，无法从url推断git仓库类型时，degit就无法工作了。不过，借助degit本身的设计，稍微改造上面提到的“degit初始化”，“构造下载地址”部分，就可以让degit通过传参url风格的形式支持私有仓库。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增&lt;code&gt;-s&lt;/code&gt;或&lt;code&gt;--style&lt;/code&gt;命令行入参，表示git仓库url的风格，目前设计有github、gitlab、bitbucket这几个degit原始就支持的形式。&lt;/li&gt;
&lt;li&gt;解析仓库地址信息时，若有style入参，则先判断是否在上述允许范围内；保留原有从域名解析style的部分，新增若未解析出style，则从入参里取；最后再抛出不支持的仓库地址错误&lt;/li&gt;
&lt;li&gt;解析返回数据结构中，新增&lt;code&gt;style&lt;/code&gt;字段表示url风格，原有的&lt;code&gt;site&lt;/code&gt;为避免歧义，直接使用域名代替原有的域名前缀&lt;/li&gt;
&lt;li&gt;在构造下载地址时，直接根据style字段拼接url&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;src, style&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (style &amp;amp;&amp;amp; !supportedGitStyle.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(style)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;DegitError&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`degit supports styles of github, gitlab, bitbucket`&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;UNSUPPORTED_STYLE&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; site = match[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] || &lt;span class=&#34;string&#34;&gt;&amp;#x27;github.com&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; gitStyle =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        style ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (match[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] || &lt;span class=&#34;string&#34;&gt;&amp;#x27;gitlab&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/\.(com|org)$/&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!supportedGitRepo.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(gitStyle)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;DegitError&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;`degit supports GitHub, GitLab, Sourcehut and BitBucket without -s/--style parameters`&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;UNSUPPORTED_HOST&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; user = match[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; name = match[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/\.git$/&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; ref = match[&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;] || &lt;span class=&#34;string&#34;&gt;&amp;#x27;master&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; url = &lt;span class=&#34;string&#34;&gt;`https://&lt;span class=&#34;subst&#34;&gt;$&amp;#123;site&amp;#125;&lt;/span&gt;/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;user&amp;#125;&lt;/span&gt;/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123; site, user, name, ref, url, &lt;span class=&#34;attr&#34;&gt;style&lt;/span&gt;: gitStyle &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 拼接url处&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; url =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    repo.&lt;span class=&#34;property&#34;&gt;style&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;gitlab&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ? &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/repository/archive.tar.gz?ref=&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        : repo.&lt;span class=&#34;property&#34;&gt;style&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;bitbucket&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ? &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/get/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        : &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/archive/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;可能存在的问题&#34;&gt;&lt;a href=&#34;#可能存在的问题&#34; class=&#34;headerlink&#34; title=&#34;可能存在的问题&#34;&gt;&lt;/a&gt;可能存在的问题&lt;/h3&gt;&lt;p&gt;绝大多数私有仓库，都会对用户身份做校验，直接访问tar.gz链接会报401错误。这需要根据不同的内部平台自己做处理了。&lt;/p&gt;
&lt;p&gt;因为特殊原因，改造后的包和代码不提供。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;–END–&lt;/em&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
