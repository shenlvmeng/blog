{
    "version": "https://jsonfeed.org/version/1",
    "title": "Shenlvmeng's Blog • All posts by \"自适应\" tag",
    "description": "Be sharp, my friend.",
    "home_page_url": "http://shenlvmeng.github.com/blog",
    "items": [
        {
            "id": "http://shenlvmeng.github.com/blog/2017/04/06/mobile-uiue-experience/",
            "url": "http://shenlvmeng.github.com/blog/2017/04/06/mobile-uiue-experience/",
            "title": "移动端页面切图自适应方案和体验优化经验",
            "date_published": "2017-04-06T14:16:00.000Z",
            "content_html": "<p>最近在做活动页切图时，遇到了针对不同尺寸移动设备屏幕适配的问题。相信这个问题是有移动端前端开发经验的攻城狮们都遇到过的。再加上一些优化体验，这里简单写一些经验。</p>\n<h3 id=\"像素完美\"><a href=\"#像素完美\" class=\"headerlink\" title=\"像素完美\"></a>像素完美</h3><p>像素完美是UI设计师的终极目标之一（其余的还有分辨率无关，多平台体验一致等）。但是切图中不可避免地会使用到类似<code>background-image</code>这样设置背景CSS样式的属性，之后再将一些交互元素通过绝对定位或是其他方式放在它视觉上应该出现的位置。在移动端设备宽度不一时，交互元素的位置如何保值像素完美的一致呢。</p>\n<p>最容易想到的方法是<strong>百分比布局</strong>，保证设计师设计的美美的UI界面可以自适应地等比扩充到整个页面。不过这样会让交互元素的位置摆放很难办，难以保证设备兼容性。<strong>flex布局</strong>也是种常见的解决方案，但距离像素完美还有距离。</p>\n<p>于是，我在上一次实践中，采用了<strong>固定宽度</strong>的处理方式（这并不是一种好的实践），CSS样式写起来大概是下面这样的。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">414px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.bkg</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;./bkg.png&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-repeat</span>: repeat-y;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>margin: 0 auto</code>是为了保证PC端居中的兼容性。这么写可以让交互元素定位时没有了设备宽度不同的后顾之忧。不过，在页面打开后，宽度较大使得页面出现横向滚动条，在绝大多数的移动端页面都不是种好的体验。的确，可以在<code>meta</code>标签中，设置<code>user-scalable=yes</code>来实现宽度上的自适应。但是，放开了页面缩放的限制也不是好的实践方式。</p>\n<p>这次活动页参考的使用<strong>rem</strong>的方式（淘宝最早实践的）是一种明显更好的方法。<code>rem</code>是CSS3中出现的新属性，它是root em的缩写。和<code>em</code>不同的是，<code>rem</code>使用整个html的<code>font-size</code>作为尺寸的参考。只需要改变html的<code>font-size</code>，所有使用了<code>rem</code>属性的元素大小都会等比例地变化。于是，下面的一段代码轻松地实现了<strong>移动端</strong>的自适应方案。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">win, doc</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> docEl = doc.<span class=\"property\">documentElement</span>,</span><br><span class=\"line\">    resizeEvt = <span class=\"string\">&#x27;onorientationchange&#x27;</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">window</span> ? <span class=\"string\">&#x27;orientationchange&#x27;</span> : <span class=\"string\">&#x27;resize&#x27;</span>,</span><br><span class=\"line\">    recalc = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> clientWidth = docEl.<span class=\"property\">clientWidth</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!clientWidth) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (clientWidth &gt;= <span class=\"number\">750</span>) &#123;</span><br><span class=\"line\">       docEl.<span class=\"property\">style</span>.<span class=\"property\">fontSize</span> = <span class=\"string\">&#x27;100px&#x27;</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        docEl.<span class=\"property\">style</span>.<span class=\"property\">fontSize</span> = <span class=\"number\">100</span> * (clientWidth / <span class=\"number\">750</span>) + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  <span class=\"comment\">//省去addEventListener兼容性处理</span></span><br><span class=\"line\">  win.<span class=\"title function_\">addEventListener</span>(resizeEvt, recalc, <span class=\"literal\">false</span>);</span><br><span class=\"line\">  doc.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;DOMContentLoaded&#x27;</span>, recalc, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;)(<span class=\"variable language_\">window</span>, <span class=\"variable language_\">document</span>);</span><br></pre></td></tr></table></figure>\n\n<p>代码里假设UI设计稿原始宽度为750px。大意是：</p>\n<ul>\n<li>页面宽度超过750px时，<code>document</code>的字体大小恒为100px，此时页面中涉及尺寸的CSS样式部分统统用<code>&#123;像素值&#125; / 100 rem</code>书写。之所以使用100px正是为了换算时方便</li>\n<li>页面宽度小于750px时，<code>document</code>等比缩小字体大小，页面中使用<code>rem</code>的元素都会等比缩小。从而保证交互元素不错位。</li>\n</ul>\n<p>效果类似<a href=\"https://m.taobao.com/#index\">淘宝手机站</a>。使用<code>rem</code>布局需要注意:</p>\n<ul>\n<li>在<code>&lt;head&gt;</code>中放置这段代码，保证在页面元素渲染前确定<code>font-size</code>大小，避免<em>闪屏</em>现象出现影响体验。</li>\n<li>PC端可以使用<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries\">媒体查询</a>，<code>rem</code>在移动端使用较多</li>\n<li><code>rem</code>方案可以使用在页面的一部分，在宽度固定的元素中使用flex这样的方案</li>\n</ul>\n<h3 id=\"用户体验\"><a href=\"#用户体验\" class=\"headerlink\" title=\"用户体验\"></a>用户体验</h3><p>上个活动页中遇到了一些优化体验的小地方，列在下面。</p>\n<ul>\n<li>禁止用户选中页面元素。这么做可以避免长按屏幕的选中，很明显地提升体验。<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  -moz-user-select: none;</span><br><span class=\"line\">  -webkit-user-select: none;</span><br><span class=\"line\">  -ms-user-select: none;</span><br><span class=\"line\">  -khtml-user-select: none;</span><br><span class=\"line\">  user-select: none;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>禁止一些手机上为手机号码和邮箱地址进行的特殊处理<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;format-detection&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;telephone=no&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;format-detection&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;email=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>禁止页面缩放，很常见的需求<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>为二维码单独切图，可以解决长按二维码无法识别的问题</li>\n<li>输入框获得焦点时自动上移。可以通过<code>document.scrollTop</code>或设置输入框部分<code>position:fixed</code>实现</li>\n</ul>\n",
            "tags": [
                "CSS",
                "移动端",
                "UI",
                "自适应",
                "rem"
            ]
        }
    ]
}