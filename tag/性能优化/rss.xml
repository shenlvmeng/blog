<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Shenlvmeng&#39;s Blog • Posts by &#34;性能优化&#34; tag</title>
        <link>http://shenlvmeng.github.com/blog</link>
        <description>Be sharp, my friend.</description>
        <language>zh-CN</language>
        <pubDate>Tue, 27 Jun 2017 20:20:35 +0800</pubDate>
        <lastBuildDate>Tue, 27 Jun 2017 20:20:35 +0800</lastBuildDate>
        <category>总结</category>
        <category>制度</category>
        <category>道德</category>
        <category>文官</category>
        <category>万历</category>
        <category>明朝</category>
        <category>读书笔记</category>
        <category>展望</category>
        <category>2018</category>
        <category>2019</category>
        <category>flag</category>
        <category>2020</category>
        <category>2021</category>
        <category>2022</category>
        <category>2023</category>
        <category>面试</category>
        <category>前端</category>
        <category>FAQ</category>
        <category>HTML</category>
        <category>CSS</category>
        <category>style guide</category>
        <category>编程</category>
        <category>范式</category>
        <category>设计</category>
        <category>艺术</category>
        <category>质量</category>
        <category>async_hooks</category>
        <category>cls-hooked</category>
        <category>logId</category>
        <category>录音</category>
        <category>getUserMedia</category>
        <category>AudioContext</category>
        <category>PCM</category>
        <category>WAVE</category>
        <category>二叉搜索树</category>
        <category>算法</category>
        <category>回忆</category>
        <category>老朋友</category>
        <category>C</category>
        <category>Hash</category>
        <category>布隆过滤器</category>
        <category>字符串检索</category>
        <category>canvas</category>
        <category>流程图</category>
        <category>d3</category>
        <category>g6</category>
        <category>zrender</category>
        <category>processOn</category>
        <category>SDN</category>
        <category>cbench</category>
        <category>安装说明</category>
        <category>绘图</category>
        <category>动画</category>
        <category>攻略</category>
        <category>流水账</category>
        <category>成都</category>
        <category>重庆</category>
        <category>武汉</category>
        <category>重构</category>
        <category>代码</category>
        <category>代码风格</category>
        <category>数据可视化</category>
        <category>爬虫</category>
        <category>chrome</category>
        <category>crx</category>
        <category>扩展</category>
        <category>CORS</category>
        <category>跨域</category>
        <category>盒模型</category>
        <category>浮动</category>
        <category>Reactive Programming</category>
        <category>JavaScript</category>
        <category>Cycle.js</category>
        <category>Dart</category>
        <category>最佳实践</category>
        <category>引流</category>
        <category>universal-link</category>
        <category>app-link</category>
        <category>脚手架</category>
        <category>degit</category>
        <category>git</category>
        <category>设计模式</category>
        <category>类</category>
        <category>接口</category>
        <category>抽象类</category>
        <category>DOM</category>
        <category>Docker</category>
        <category>ONOS</category>
        <category>控制器</category>
        <category>虚拟化</category>
        <category>笔记</category>
        <category>UX</category>
        <category>UED</category>
        <category>准则</category>
        <category>Java</category>
        <category>Ruby</category>
        <category>反射</category>
        <category>编程范式</category>
        <category>鸭子类型</category>
        <category>管理</category>
        <category>效率</category>
        <category>知识工作者</category>
        <category>卓有成效</category>
        <category>Elm</category>
        <category>框架</category>
        <category>函数式编程</category>
        <category>虚网映射</category>
        <category>Javascript</category>
        <category>并发</category>
        <category>event loop</category>
        <category>覆盖率</category>
        <category>端到端测试</category>
        <category>istanbul</category>
        <category>istanbuljs</category>
        <category>JavaSript</category>
        <category>Express</category>
        <category>源码</category>
        <category>代码覆盖率</category>
        <category>istanbul-middleware</category>
        <category>代码插桩</category>
        <category>require钩子</category>
        <category>babel-plugin-istanbul</category>
        <category>css</category>
        <category>html5</category>
        <category>flex</category>
        <category>javascript</category>
        <category>roadmap</category>
        <category>闭包</category>
        <category>Haskell</category>
        <category>monad</category>
        <category>后端</category>
        <category>管理后台</category>
        <category>egg.js</category>
        <category>工作流</category>
        <category>pull request</category>
        <category>golang</category>
        <category>语言学习</category>
        <category>黑客与画家</category>
        <category>创业</category>
        <category>骑行</category>
        <category>海南</category>
        <category>图文</category>
        <category>reflow</category>
        <category>repaint</category>
        <category>命名法</category>
        <category>成功学</category>
        <category>自我建设</category>
        <category>HTTP</category>
        <category>HTTP/2</category>
        <category>SPDY</category>
        <category>QUIC</category>
        <category>HTTPS</category>
        <category>状态码</category>
        <category>网络攻击</category>
        <category>介绍</category>
        <category>图片渲染</category>
        <category>html2canvas</category>
        <category>dom-to-image</category>
        <category>electron</category>
        <category>indexedDB</category>
        <category>异步</category>
        <category>Generator</category>
        <category>thunk</category>
        <category>async</category>
        <category>函数表达式</category>
        <category>对象</category>
        <category>继承</category>
        <category>类型转换</category>
        <category>==</category>
        <category>类型判断</category>
        <category>猫</category>
        <category>杀手</category>
        <category>管理学</category>
        <category>领导力</category>
        <category>梯队</category>
        <category>移动端</category>
        <category>UI</category>
        <category>自适应</category>
        <category>rem</category>
        <category>Electron</category>
        <category>GUI</category>
        <category>gpx</category>
        <category>template</category>
        <category>Electron Builder</category>
        <category>PWA</category>
        <category>方法论</category>
        <category>夜话</category>
        <category>多线</category>
        <category>生活</category>
        <category>密码</category>
        <category>密钥</category>
        <category>技改</category>
        <category>Vue</category>
        <category>gulp</category>
        <category>瀑布流</category>
        <category>电影</category>
        <category>PHP</category>
        <category>参考</category>
        <category>思维</category>
        <category>学习能力</category>
        <category>右脑</category>
        <category>经济学</category>
        <category>宏观经济学</category>
        <category>术语</category>
        <category>GDP</category>
        <category>CPI</category>
        <category>储蓄</category>
        <category>投资</category>
        <category>金融市场</category>
        <category>股票</category>
        <category>债券</category>
        <category>美联储</category>
        <category>失业</category>
        <category>货币</category>
        <category>现值</category>
        <category>准备金</category>
        <category>货币中性</category>
        <category>通货膨胀</category>
        <category>汇率</category>
        <category>购买力</category>
        <category>净出口</category>
        <category>资产净流出</category>
        <category>总需求</category>
        <category>总供给</category>
        <category>流动性偏好</category>
        <category>乘数效应</category>
        <category>菲利普斯曲线</category>
        <category>微观经济学</category>
        <category>供求</category>
        <category>贸易</category>
        <category>市场</category>
        <category>税</category>
        <category>剩余</category>
        <category>外部性</category>
        <category>公共物品</category>
        <category>公共资源</category>
        <category>生产成本</category>
        <category>利润</category>
        <category>垄断</category>
        <category>价格歧视</category>
        <category>寡头</category>
        <category>垄断竞争</category>
        <category>生产要素市场</category>
        <category>贫困</category>
        <category>消费者选择理论</category>
        <category>不对称信息</category>
        <category>政治经济学</category>
        <category>行为经济学</category>
        <category>VSCode</category>
        <category>编辑器</category>
        <category>IDE</category>
        <category>hybrid</category>
        <category>JSBridge</category>
        <category>Web Worker</category>
        <category>Service Worker</category>
        <category>习惯</category>
        <category>lint</category>
        <category>editorconfig</category>
        <category>commit message</category>
        <category>量子物理</category>
        <category>史话</category>
        <category>埋点</category>
        <category>raven.js</category>
        <category>前端监控</category>
        <category>文本编辑器</category>
        <category>quill</category>
        <category>结构化数据</category>
        <category>React</category>
        <category>Hooks</category>
        <category>函数组件</category>
        <category>复用</category>
        <category>状态管理</category>
        <category>redux</category>
        <category>MobX</category>
        <category>代码质量</category>
        <category>重来</category>
        <category>requestAnimationFrame</category>
        <category>TypeScript</category>
        <category>路书</category>
        <category>gpx解析</category>
        <category>EXIF</category>
        <category>人类</category>
        <category>生存</category>
        <category>基因</category>
        <category>响应式编程</category>
        <category>RxJS</category>
        <category>成长</category>
        <category>业务</category>
        <category>思想</category>
        <category>程序设计</category>
        <category>心理学</category>
        <category>自我</category>
        <category>社会思维</category>
        <category>社会影响</category>
        <category>文化</category>
        <category>性别</category>
        <category>从众</category>
        <category>说服</category>
        <category>临床诊断</category>
        <category>陪审团</category>
        <category>司法</category>
        <category>物质主义</category>
        <category>健康</category>
        <category>社会关系</category>
        <category>偏见</category>
        <category>攻击行为</category>
        <category>亲密关系</category>
        <category>友谊</category>
        <category>爱情</category>
        <category>利他</category>
        <category>冲突</category>
        <category>和解</category>
        <category>软技能</category>
        <category>理财</category>
        <category>健身</category>
        <category>自我营销</category>
        <category>学习</category>
        <category>商业模式</category>
        <category>产品</category>
        <category>校园网</category>
        <category>互联网</category>
        <category>技术</category>
        <category>web开发</category>
        <category>哲思</category>
        <category>择偶观</category>
        <category>validator</category>
        <category>大文件</category>
        <category>visibilityChange</category>
        <category>IntersectionObserver</category>
        <category>图种</category>
        <category>draggable</category>
        <category>webpack</category>
        <category>z-index</category>
        <category>git submodule</category>
        <category>object-fit</category>
        <category>object-position</category>
        <category>BroadcastChannel</category>
        <category>extract-text-webpack-plugin</category>
        <category>lottie</category>
        <category>backface-visibility</category>
        <category>egret</category>
        <category>mock</category>
        <category>SSO</category>
        <category>autoprefixer</category>
        <category>polyfill</category>
        <category>Android</category>
        <category>ffmpeg</category>
        <category>React Hooks</category>
        <category>rollup</category>
        <category>CDN</category>
        <category>DNS</category>
        <category>CNAME</category>
        <category>架构</category>
        <category>组件</category>
        <category>ssh</category>
        <category>fis-receiver</category>
        <category>tmux</category>
        <category>origami</category>
        <category>promise</category>
        <category>encodeURI</category>
        <category>encodeURIComponent</category>
        <category>axios</category>
        <category>charles</category>
        <category>黑色幽默</category>
        <category>朋友</category>
        <category>梦</category>
        <category>濒死</category>
        <category>江南</category>
        <category>苏州</category>
        <category>无锡</category>
        <category>宜兴</category>
        <category>湖州</category>
        <category>南浔</category>
        <category>游记</category>
        <category>随笔</category>
        <category>群众</category>
        <category>理论</category>
        <category>实效</category>
        <category>测试</category>
        <category>长沙</category>
        <category>杭州</category>
        <category>湖南</category>
        <category>核酸</category>
        <category>美食</category>
        <category>云南</category>
        <category>丽江</category>
        <category>大理</category>
        <category>青岛</category>
        <category>济南</category>
        <category>山东</category>
        <category>西北</category>
        <category>银川</category>
        <category>西宁</category>
        <category>青海湖</category>
        <category>西海镇</category>
        <category>茶卡盐湖</category>
        <category>厦门</category>
        <category>感受</category>
        <category>C语言</category>
        <category>树</category>
        <category>主干开发</category>
        <category>GitFlow</category>
        <category>GithubFlow</category>
        <category>typescript</category>
        <category>类型系统</category>
        <category>webrtc</category>
        <category>RTMP</category>
        <category>首屏时间</category>
        <category>性能优化</category>
        <category>公司</category>
        <category>个人发展</category>
        <category>战略</category>
        <category>晋升</category>
        <category>哲学</category>
        <category>幸福</category>
        <category>人生</category>
        <category>叔本华</category>
        <category>Unix</category>
        <category>Rollup</category>
        <category>mouseout</category>
        <category>mouseleave</category>
        <category>lint-staged</category>
        <category>吸顶</category>
        <category>图片组件</category>
        <item>
            <guid isPermalink="true">http://shenlvmeng.github.com/blog/2017/06/27/webpage-visit-speed-guide/</guid>
            <title>H5页面性能优化方案参考</title>
            <link>http://shenlvmeng.github.com/blog/2017/06/27/webpage-visit-speed-guide/</link>
            <category>前端</category>
            <category>首屏时间</category>
            <category>性能优化</category>
            <pubDate>Tue, 27 Jun 2017 20:20:35 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;由于开发时间短，迭代速度快的特点，H5页面已大量用在各种移动端App和活动页中。响应时间作为和用户体验的重要部分，如果不能在这上面给用户可靠性和安全感，将会大大影响用户体验，进而影响用户使用产品的积极性。当页面并不复杂时，用户若能在1s内打开页面，看到信息的展示，会感觉速度还行，可以接受。当界面需要5s甚至以上才能显示时，对用户来说时不可接受的。&lt;/p&gt;
&lt;p&gt;下文的标准和建议主要来自钉钉团队的&lt;a href=&#34;http://ddtalk.github.io/blog/2015/09/07/dingding-first/&#34;&gt;H5性能优化方案&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;标准&#34;&gt;&lt;a href=&#34;#标准&#34; class=&#34;headerlink&#34; title=&#34;标准&#34;&gt;&lt;/a&gt;标准&lt;/h2&gt;&lt;p&gt;通常来说首屏（onload）时间即资源加载完成时间建议在600ms内，首字时间时间在150ms内，根据网络类型做相应调整：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2G，完全加载时间10s内，10s内占比80%&lt;/li&gt;
&lt;li&gt;3G，完全加载时间6s内，6s内占比60%&lt;/li&gt;
&lt;li&gt;4G和WiFi，完全加载时间3s内，3s内占比70%&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;（标准不是死的，上面只是举个范例）&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;这个时间可以在Chrome开发者工具里的Network中看到，也可以通过JS的performance API查询到&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;performance.&lt;span class=&#34;property&#34;&gt;timing&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;domContentLoadedEventEnd&lt;/span&gt; - performance.&lt;span class=&#34;property&#34;&gt;timing&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;connectStart&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;优化手段&#34;&gt;&lt;a href=&#34;#优化手段&#34; class=&#34;headerlink&#34; title=&#34;优化手段&#34;&gt;&lt;/a&gt;优化手段&lt;/h2&gt;&lt;h3 id=&#34;资源加载&#34;&gt;&lt;a href=&#34;#资源加载&#34; class=&#34;headerlink&#34; title=&#34;资源加载&#34;&gt;&lt;/a&gt;资源加载&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;按需加载&lt;/strong&gt;，减少不必要资源的加载，不过这可能会增加页面的重绘&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lazyload&lt;/strong&gt;，延迟加载，即不影响整体效果的图片展现给用户后再加载&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;滚屏加载&lt;/strong&gt;，根据字面意义，在下拉滚屏时加载额外数据，减少翻页时的重新加载和渲染&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;响应式加载&lt;/strong&gt;，即根据用户终端媒介加载不同大小的图片资源&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;异步记载&lt;/strong&gt;，异步加载第三方资源，防止影响本身的页面性能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，还有一些优化加载体验的方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;显示loading进度条&lt;/strong&gt;，让用户能明确感知到页面的加载进度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;避免3xx、4xx、5xx的http状态码&lt;/strong&gt;，因为3xx的跳转会影响加载时间，4xx和5xx通常是第三方资源的问题，可能会影响整个页面的展示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;favicon.ico&lt;/strong&gt;，需要保证这个图标存在，且尽可能地小，并设置一个较长的缓存时间&lt;/li&gt;
&lt;li&gt;首次加载资源越小越好&lt;/li&gt;
&lt;li&gt;避免使用自定义中文字体（因为体积大）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;图片使用&#34;&gt;&lt;a href=&#34;#图片使用&#34; class=&#34;headerlink&#34; title=&#34;图片使用&#34;&gt;&lt;/a&gt;图片使用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;格式&lt;/strong&gt;，webp，jpg，png24&amp;#x2F;32较常用。jpg较为常用，避免使用png的大图片&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;像素&lt;/strong&gt;，一般来说不建议宽度超过640px&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;合并&lt;/strong&gt;，使用CSS Sprites，尤其是基本不变，大小类似的操作类型图标&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;避免重设大小&lt;/strong&gt;，即展示多大就加载多大的图片&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;避免DataURL&lt;/strong&gt;，DataURL是用Base64的方式，将图片变成一串文本编码放入代码的方式。尽管它能减少一次http交互的请求，但数据体积通常比二进制图片大1&amp;#x2F;3，且不会被缓存。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用替代方案&lt;/strong&gt;，如CSS3，SVG或iconfont来完成简单的图片&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;服务端&#34;&gt;&lt;a href=&#34;#服务端&#34; class=&#34;headerlink&#34; title=&#34;服务端&#34;&gt;&lt;/a&gt;服务端&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gzip&lt;/strong&gt;，服务端要开启Gzip压缩&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;设置合理的缓存时间&lt;/strong&gt;，对静态资源，将缓存过期时间设置得长一些&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分域名部署&lt;/strong&gt;，将动态资源和静态资源放置在不同的域名下，这样，静态资源请求时，不会带上动态域名中所设置的cookie头信息，从而减少http请求的大小&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;减少Cookie&lt;/strong&gt;，这部分数据使用的是上行流量，上行带宽更小，所以传输速度更慢，因此要尽量精简其大小。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CDN加速&lt;/strong&gt;，部署CDN服务器，或使用第三方CDN服务，优化不同地域的接入速度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;代码&#34;&gt;&lt;a href=&#34;#代码&#34; class=&#34;headerlink&#34; title=&#34;代码&#34;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JS，CSS合并&lt;/strong&gt;，除特殊情况外，所有JS压缩打包成一个文件，所有CSS压缩打包成一个文件，减少请求次数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;外联使用JS，CSS&lt;/strong&gt;，有效利用缓存&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;压缩HTML，JS，CSS&lt;/strong&gt;，压缩代码可以减少大小到原来的1&amp;#x2F;3以下&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;使用版本号标注JS、CSS等资源&lt;/strong&gt;，让用户及时获取到最新的代码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;位置&lt;/strong&gt;，通常CSS在前，JS在后。基础的JS文件，如日志，polyfill可以放在头部&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;避免空src地址&lt;/strong&gt;，在某些浏览器中可能会导致增加一个无效的http请求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;禁止CSS表达式&lt;/strong&gt;，会让页面多次执行计算，造成卡顿等性能问题&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;避免空css规则&lt;/strong&gt;，降低渲染成本&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;避免直接设置元素style&lt;/strong&gt;，不利于复用和缓存，不过有些情况下确实是没有办法的办法&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;后台接口&#34;&gt;&lt;a href=&#34;#后台接口&#34; class=&#34;headerlink&#34; title=&#34;后台接口&#34;&gt;&lt;/a&gt;后台接口&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;接口合并&lt;/strong&gt;，尽量减少http请求次数&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缓存&lt;/strong&gt;，在一些数据新旧敏感性不高的场景下，缓存接口数据&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
