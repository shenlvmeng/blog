{
    "version": "https://jsonfeed.org/version/1",
    "title": "Shenlvmeng's Blog • All posts by \"egg.js\" tag",
    "description": "Be sharp, my friend.",
    "home_page_url": "http://shenlvmeng.github.com/blog",
    "items": [
        {
            "id": "http://shenlvmeng.github.com/blog/2018/03/15/gallery-backend-with-egg-js/",
            "url": "http://shenlvmeng.github.com/blog/2018/03/15/gallery-backend-with-egg-js/",
            "title": "Photo Gallery中出现的常见需求解决方案",
            "date_published": "2018-03-15T06:17:10.000Z",
            "content_html": "<p><img src=\"https://s2.ax1x.com/2019/04/07/Ahbr1x.png\" alt=\"Ahbr1x.png\"></p>\n<blockquote>\n<p>使用egg.js开发PhotoGallery管理后台过程中，遇到了一些典型需求，将处理过程整理如下，方面后面开发类似应用</p>\n</blockquote>\n<h2 id=\"用户管理\"><a href=\"#用户管理\" class=\"headerlink\" title=\"用户管理\"></a>用户管理</h2><h3 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h3><p>新建<code>User</code>表，填充表结构，至少包含<code>账号</code>和<code>密码</code>两个字段。</p>\n<h3 id=\"Controller\"><a href=\"#Controller\" class=\"headerlink\" title=\"Controller\"></a>Controller</h3><p>（Ajax）登录页面，对应<code>login</code>行为，处理登录请求，包括以下工作：</p>\n<ul>\n<li>调用服务匹配用户名密码</li>\n<li><em>（可选）</em> 检查用户类型</li>\n<li>密码需要加密存储</li>\n<li>储存用户信息到session</li>\n<li>返回提示信息</li>\n</ul>\n<p>（Ajax）注册页面，对应<code>register</code>行为，处理注册请求，包括以下工作：</p>\n<ul>\n<li>寻找重名等逻辑</li>\n<li>调用服务创建用户</li>\n<li>密码需要加密存储</li>\n<li>储存用户信息到session</li>\n<li>返回提示信息</li>\n</ul>\n<h3 id=\"Service\"><a href=\"#Service\" class=\"headerlink\" title=\"Service\"></a>Service</h3><p>用户管理，和数据库连接。对应到controller中大多数是POST请求。</p>\n<ul>\n<li>新增用户</li>\n<li>获取用户</li>\n<li>用户资料修改</li>\n<li>用户删除（使用用户状态更新实现）</li>\n</ul>\n<h3 id=\"Router与中间件\"><a href=\"#Router与中间件\" class=\"headerlink\" title=\"Router与中间件\"></a>Router与中间件</h3><ul>\n<li>添加中间件检查是否有session，否则同一跳转<code>/login</code>（业务逻辑）</li>\n<li><em>（可选）</em> Router上使用重定向让path更友好</li>\n<li><strong>一定不要瞎用301状态码</strong></li>\n</ul>\n<h3 id=\"页面js\"><a href=\"#页面js\" class=\"headerlink\" title=\"页面js\"></a>页面js</h3><ul>\n<li>使用Ajax或jsonp请求</li>\n</ul>\n<hr>\n<h2 id=\"无限滚动\"><a href=\"#无限滚动\" class=\"headerlink\" title=\"无限滚动\"></a>无限滚动</h2><h3 id=\"HTML部分\"><a href=\"#HTML部分\" class=\"headerlink\" title=\"HTML部分\"></a>HTML部分</h3><ul>\n<li>提前加载所有图片（后续API动态请求，DOM插入时间损耗太大）。</li>\n<li>前若干张图片（假设为K）正常展示</li>\n<li>后若干张容器使用<code>display:none</code>或<code>height: 0</code>等手段避免展示</li>\n<li>后若干张图片使用<code>data-src</code>存储真实路径，避免提前加载，影响首屏时间</li>\n</ul>\n<h3 id=\"JS部分\"><a href=\"#JS部分\" class=\"headerlink\" title=\"JS部分\"></a>JS部分</h3><ul>\n<li>设置参数保存当前展示图片的数目</li>\n<li>判断是否滚动到底端</li>\n<li>上述情况下增加展示的图片数目，删除避免展示的<code>class</code>，替换真正的<code>src</code>加载图片</li>\n<li>使用节流，保证弱网络环境下，没有连续的过多图片加载，使用<code>flag</code>控制程序触发，在最后一张图片加载完成后，更新<code>flag</code>布尔值，开放权限</li>\n<li><em>（可选）</em>，网络环境很差时，可以考虑<code>setTimeout</code>兜底，但不推荐</li>\n<li>注意在所有图片都加载完成时，停止监听<code>scroll</code>事件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> figure = $($(<span class=\"string\">&#x27;#figures&#x27;</span>).<span class=\"title function_\">children</span>()[index]);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!figure) &#123;</span><br><span class=\"line\">    $(<span class=\"variable language_\">window</span>).<span class=\"title function_\">off</span>(<span class=\"string\">&#x27;scroll&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"文件上传\"><a href=\"#文件上传\" class=\"headerlink\" title=\"文件上传\"></a>文件上传</h2><h3 id=\"HTML部分-1\"><a href=\"#HTML部分-1\" class=\"headerlink\" title=\"HTML部分\"></a>HTML部分</h3><ul>\n<li>使用包裹<code>&lt;input type=&#39;file&#39;&gt;</code>的<code>&lt;form&gt;</code></li>\n<li><code>&lt;input type=&#39;file&#39;&gt;</code>使用<code>display: none</code>，通过更友好的方式trigger它的点击</li>\n<li><strong>注意：<code>type=file</code>的<code>input</code>标签一定要有<code>name</code>属性，否则不会被包裹在<code>FormData</code>中。</strong></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;upload&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;upload&quot;</span>&gt;</span>+ 点击上传<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;upload-form&quot;</span> <span class=\"attr\">enctype</span>=<span class=\"string\">&quot;multipart/form-data&quot;</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;image/*&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;files&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;upload-file&quot;</span> <span class=\"attr\">multiple</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JS部分-1\"><a href=\"#JS部分-1\" class=\"headerlink\" title=\"JS部分\"></a>JS部分</h3><ul>\n<li>使用Ajax提交替换form表单替换，来实现更复杂的回调和逻辑控制</li>\n<li>通过构造<code>FormData</code>，提交域内文件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&#x27;#upload&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  $(<span class=\"string\">&#x27;#upload-file&#x27;</span>).<span class=\"title function_\">trigger</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">&#x27;#upload-file&#x27;</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;change&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  $.<span class=\"title function_\">ajax</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"string\">&#x27;/gallery/upload&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;POST&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">cache</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>: <span class=\"keyword\">new</span> <span class=\"title class_\">FormData</span>($(<span class=\"string\">&#x27;#upload-form&#x27;</span>)[<span class=\"number\">0</span>]),</span><br><span class=\"line\">    <span class=\"attr\">processData</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">contentType</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"后台路由\"><a href=\"#后台路由\" class=\"headerlink\" title=\"后台路由\"></a>后台路由</h3><ul>\n<li>配置Ajax和jsonp安全检查</li>\n</ul>\n<h3 id=\"控制器端\"><a href=\"#控制器端\" class=\"headerlink\" title=\"控制器端\"></a>控制器端</h3><p>使用插件，参考<a href=\"https://github.com/eggjs/examples/blob/master/multipart/app/controller/multiple.js\">examples&#x2F;multiple.js at master · eggjs&#x2F;examples</a></p>\n<h2 id=\"HTML模板\"><a href=\"#HTML模板\" class=\"headerlink\" title=\"HTML模板\"></a>HTML模板</h2><p>使用ES6的模板字符串。</p>\n<p>已知问题：</p>\n<ul>\n<li>似乎有些视图、逻辑未分离</li>\n</ul>\n<h2 id=\"使用七牛API上传文件\"><a href=\"#使用七牛API上传文件\" class=\"headerlink\" title=\"使用七牛API上传文件\"></a>使用七牛API上传文件</h2><p>使用服务端上传，<a href=\"https://developer.qiniu.com/kodo/kb/1374/batch-upload-and-file-upload-more-resources\">一次只能单张上传</a>。官网API文档<a href=\"https://developer.qiniu.com/kodo/sdk/1289/nodejs\">Node.js版</a>描述的并不清楚，下面是上传的简单流程展示：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mac = <span class=\"keyword\">new</span> qiniu.<span class=\"property\">auth</span>.<span class=\"property\">digest</span>.<span class=\"title class_\">Mac</span>(config.<span class=\"property\">accessKey</span>, config.<span class=\"property\">secretKey</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> options = &#123;</span><br><span class=\"line\">  <span class=\"attr\">scope</span>: config.<span class=\"property\">bucketName</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> putPolicy = <span class=\"keyword\">new</span> qiniu.<span class=\"property\">rs</span>.<span class=\"title class_\">PutPolicy</span>(options);</span><br><span class=\"line\"><span class=\"keyword\">const</span> uploadToken = putPolicy.<span class=\"title function_\">uploadToken</span>(mac);</span><br><span class=\"line\"><span class=\"keyword\">const</span> qiniuConfig = <span class=\"keyword\">new</span> qiniu.<span class=\"property\">conf</span>.<span class=\"title class_\">Config</span>();</span><br><span class=\"line\">qiniuConfig.<span class=\"property\">zone</span> = qiniu.<span class=\"property\">zone</span>.<span class=\"property\">Zone_z1</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> formUploader = <span class=\"keyword\">new</span> qiniu.<span class=\"property\">form_up</span>.<span class=\"title class_\">FormUploader</span>(qiniuConfig);</span><br><span class=\"line\"><span class=\"keyword\">const</span> putExtra = <span class=\"keyword\">new</span> qiniu.<span class=\"property\">form_up</span>.<span class=\"title class_\">PutExtra</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">formUploader.<span class=\"title function_\">putFile</span>(uploadToken, key, localFile, putExtra, <span class=\"keyword\">function</span>(<span class=\"params\">respErr, respBody, respInfo</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (respErr) &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (respInfo.<span class=\"property\">statusCode</span> == <span class=\"number\">200</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>多文件上传使用外部队列暂存所有任务，并和回调函数关联即可实现。</p>\n",
            "tags": [
                "后端",
                "管理后台",
                "egg.js"
            ]
        }
    ]
}