{
    "version": "https://jsonfeed.org/version/1",
    "title": "Shenlvmeng's Blog • All posts by \"css\" tag",
    "description": "Be sharp, my friend.",
    "home_page_url": "http://shenlvmeng.github.com/blog",
    "items": [
        {
            "id": "http://shenlvmeng.github.com/blog/2017/10/13/css-definitive-guide-content/",
            "url": "http://shenlvmeng.github.com/blog/2017/10/13/css-definitive-guide-content/",
            "title": "《CSS权威指南》脉络",
            "date_published": "2017-10-13T05:56:33.000Z",
            "content_html": "<h3 id=\"CSS和文档\"><a href=\"#CSS和文档\" class=\"headerlink\" title=\"CSS和文档\"></a>CSS和文档</h3><ul>\n<li><p>CSS的出现和特点</p>\n</li>\n<li><p><code>&lt;link&gt;</code>、<code>&lt;style&gt;</code>和<code>@import</code></p>\n</li>\n<li><p>CSS注释</p>\n</li>\n<li><p>内联样式</p>\n</li>\n<li><p><code>@import</code>必须写在CSS文档的开头</p>\n</li>\n</ul>\n<h3 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h3><ul>\n<li><p>基本结构</p>\n</li>\n<li><p>元素选择器（分组选择器、通配选择器）</p>\n</li>\n<li><p>类选择器&#x2F;ID选择器</p>\n</li>\n<li><p>属性选择器（具体属性、部分属性）</p>\n</li>\n<li><p>后代选择器、兄弟选择器（<code>&gt;</code>, <code>+</code>）</p>\n</li>\n<li><p>伪类&#x2F;伪元素选择器</p>\n</li>\n<li><p><code>^=</code>, <code>$=</code>, <code>~=</code>, <code>*=</code>, <code>|=</code>用在属性选择中的部分匹配里，eg：<code>span[class~=&quot;bar&quot;]</code>，<br>其中<code>~=</code>匹配空格隔开的字符，<code>*=</code>匹配部分字符串，<code>|=</code>匹配完整字符串或以字符串开头</p>\n</li>\n<li><p>常用的伪类选择器有</p>\n<ul>\n<li><code>:link</code> 拥有<code>href</code>属性的<strong>未访问</strong>地址</li>\n<li><code>:visited</code></li>\n<li><code>:focus</code> 当前获得输入焦点的元素</li>\n<li><code>:hover</code></li>\n<li><code>:active</code> 被用户激活的元素</li>\n<li><code>:first-child</code> 第一个子元素，类似地还有<code>:last-child</code>和<code>nth-child()</code></li>\n<li><code>:lang()</code> 根据语言选择</li>\n<li><code>:first-letter</code>和<code>first-line</code>针对元素第一个字母和第一行文本</li>\n<li><code>:before</code>和<code>:after</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"层叠关系\"><a href=\"#层叠关系\" class=\"headerlink\" title=\"层叠关系\"></a>层叠关系</h3><ul>\n<li><p>优先级顺序（ID &gt; 类、属性、伪类 &gt; 元素、伪元素 &gt; 通配或结合符<code>,</code> &gt; 继承的属性）</p>\n</li>\n<li><p>内联样式和<code>!important</code>的特殊性</p>\n</li>\n<li><p>继承</p>\n</li>\n<li><p>层叠规则</p>\n</li>\n<li><p>来源权重关系（读者重要声明 &gt; 创作者的重要声明 &gt; 创作者正常声明 &gt; 读者正常声明 &gt; 用户代理声明）</p>\n</li>\n<li><p>LVHA（<code>:link</code> - <code>:visited</code> - <code>:hover</code> - <code>:active</code>的声明顺序）</p>\n</li>\n<li><p>一个声明出现的越后，它的权重越大</p>\n</li>\n</ul>\n<h3 id=\"值和单位\"><a href=\"#值和单位\" class=\"headerlink\" title=\"值和单位\"></a>值和单位</h3><ul>\n<li><p>数字</p>\n</li>\n<li><p>百分数</p>\n</li>\n<li><p>颜色（具名、rgb&#x2F;rgba、十六进制）、Web安全颜色</p>\n</li>\n<li><p>长度单位（in&#x2F;cm&#x2F;mm&#x2F;pt&#x2F;pc&#x2F;px，em&#x2F;ex&#x2F;rem&#x2F;vw&#x2F;vh&#x2F;vmin&#x2F;vmax）</p>\n</li>\n<li><p>URL（<code>url(protocol://server/pathname)</code>或<code>url(pathname)</code>）</p>\n</li>\n<li><p>关键字</p>\n</li>\n<li><p>角度&#x2F;时间&#x2F;频率</p>\n</li>\n<li><p>CSS2.1中有一个所有属性共有的关键字：<code>inherit</code></p>\n</li>\n</ul>\n<h3 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h3><ul>\n<li><p>通用字体（serif&#x2F;sans-serif&#x2F;monospace&#x2F;cursive&#x2F;fantasy）</p>\n</li>\n<li><p>指定字体</p>\n</li>\n<li><p>字体加粗（100~900，lighter&#x2F;bolder）</p>\n</li>\n<li><p>字体大小（xx-small ~ xx-large；绝对大小；百分数）</p>\n</li>\n<li><p>字体风格和变形（font-style，font-variant）</p>\n</li>\n<li><p><code>font</code>属性（<code>[&lt;font-style&gt; || &lt;font-variant&gt; || &lt;font-weight&gt;]?&lt;font-size&gt;[/&lt;line-height&gt;]?&lt;font-family&gt;</code>）</p>\n</li>\n<li><p><code>font-face</code>规则（<code>font-family</code>，<code>font-style</code>，<code>src</code>等）</p>\n</li>\n<li><p>衬线字体包括Times，Georgia；非衬线字体包括Helvetiva，Geneva，Verdana，Arial；Monospace字体包括Courier，Courier New</p>\n</li>\n<li><p>字体名称中包含空格或特殊字符时，建议用引号包裹</p>\n</li>\n<li><p>一般地，400对应normal，700对应bold</p>\n</li>\n<li><p>字体大小是可以继承的，不过继承的是计算值而不是百分数</p>\n</li>\n<li><p><code>italic</code>是单独的字体风格，<code>oblique</code>则是正常文本的倾斜版本</p>\n</li>\n<li><p><code>small-caps</code>表示小型大写字母</p>\n</li>\n</ul>\n<h3 id=\"文本属性\"><a href=\"#文本属性\" class=\"headerlink\" title=\"文本属性\"></a>文本属性</h3><ul>\n<li><p>缩进（<code>text-indent</code>）</p>\n</li>\n<li><p>水平对齐（<code>text-align</code>）</p>\n</li>\n<li><p>垂直对齐（<code>line-height</code>和<code>vertical-align</code>）</p>\n</li>\n<li><p>字间隔和字母间隔（<code>word-spacing</code>和<code>letter-spacing</code>）</p>\n</li>\n<li><p>文本转换（<code>text-transfrom</code>）</p>\n</li>\n<li><p>文本装饰（<code>text-decoration</code>）</p>\n</li>\n<li><p>文本阴影（<code>text-shadow</code>）</p>\n</li>\n<li><p>空白符处理（<code>white-space</code>）</p>\n</li>\n<li><p>文本方向（<code>direction</code>和<code>unicode-bidi</code>）</p>\n</li>\n<li><p><code>text-indent</code>为负值时表示悬挂缩进效果</p>\n</li>\n<li><p><code>line-height</code>有继承性，表示文本基线（baseline）间的距离，继承的仍然是计算值</p>\n</li>\n<li><p>行内元素的行框由行间距和内容区组成</p>\n</li>\n<li><p><code>vertical-align</code>只应用于行内元素、替换元素和单元格，且不能继承。它可以取百分数和长度值，相对于自身line-height计算。</p>\n<ul>\n<li>在基线对齐时，将元素的<strong>底部</strong>和行框的基线对齐</li>\n<li>取值为<code>sub</code>或<code>super</code>时，元素的基线（或底端）将升高或降低</li>\n<li>取值<code>bottom</code>或<code>top</code>时，相对行框的顶端和底端</li>\n<li>取值为<code>middle</code>时，会把行内元素的中点与行框基线上方0.5ex（约为0.25em，因x-height而异）处对齐</li>\n<li>取值为数值时，会相对于父元素行框基线升高<br>最后，父元素的行框的行高会因此做调整</li>\n</ul>\n</li>\n<li><p><code>text-transform</code>有<code>uppercase</code>, <code>lowercase</code>, <code>capitalize</code>等几种选择，有继承性</p>\n</li>\n<li><p><code>text-decoration</code>有<code>underline</code>, <code>overline</code>, <code>line-through</code>, <code>blink</code>等几种选择，没有继承性</p>\n</li>\n<li><p><code>text-shadow</code>先确定阴影颜色，前两个长度值确定偏移距离，第三个值确定模糊半径，可以同时设置多个阴影效果</p>\n</li>\n<li><p><code>white-space</code>行为如下表</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>空白符</th>\n<th>换行符</th>\n<th>自动换行</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>pre-line</td>\n<td>合并</td>\n<td>保留</td>\n<td>允许</td>\n</tr>\n<tr>\n<td>normal</td>\n<td>合并</td>\n<td>忽略</td>\n<td>允许</td>\n</tr>\n<tr>\n<td>nowrap</td>\n<td>合并</td>\n<td>忽略</td>\n<td>不允许</td>\n</tr>\n<tr>\n<td>pre</td>\n<td>保留</td>\n<td>保留</td>\n<td>不允许</td>\n</tr>\n<tr>\n<td>pre-wrap</td>\n<td>保留</td>\n<td>保留</td>\n<td>允许</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n<h3 id=\"盒模型\"><a href=\"#盒模型\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h3><ul>\n<li><p>基本框与包含块</p>\n</li>\n<li><p>正常流&#x2F;非替换元素&#x2F;替换元素&#x2F;块级元素&#x2F;行内元素</p>\n</li>\n<li><p>水平属性（<code>width</code>，<code>margin/border/padding-left/right</code>）</p>\n</li>\n<li><p>垂直属性（<code>height</code>，<code>margin/border/padding-top/bottom</code>）</p>\n</li>\n<li><p>行内元素（em框、内容区、行间距、行内框、行框）</p>\n</li>\n<li><p>元素的显示方式（<code>display</code>，<code>inline-block</code>和<code>run-in</code>）</p>\n</li>\n<li><p>在水平属性中只有<code>width</code>和外边距可以设置为<code>auto</code>，其余属性必须设置为特定的值或默认为0。使用<code>auto</code>将会弥补实际值和所需总和的差距，当格式化属性过度受限时，会强制把<code>margin-right</code>设置为<code>auto</code>。相反，不止一个<code>auto</code>出现时，若<code>width</code>不为<code>auto</code>，则会将元素居中，出现三个<code>auto</code>时，外边距都会设置为0。</p>\n</li>\n<li><p>垂直属性类似上面，不一样的是，元素间的外边距会合并，留下较大的外边距。</p>\n</li>\n<li><p>对于非替换元素，元素行内框高度等于<code>line-height</code>的值；对于替换元素，则由内容区高度决定</p>\n</li>\n<li><p>行内元素的边框边界由<code>font-size</code>决定，与<code>line-height</code>无关。类似，内外边距不会影响行框的形成和布局。</p>\n</li>\n<li><p>行内替换元素并没有自己的基线，所以说相对较好的方案是将其行内框底部和基线对齐。</p>\n</li>\n<li><p><code>inline-block</code>元素的<code>width</code>未定义或声明为<code>auto</code>时，元素会收缩来适应到框宽度刚好足够包含该内容</p>\n</li>\n</ul>\n<h3 id=\"边距和边框\"><a href=\"#边距和边框\" class=\"headerlink\" title=\"边距和边框\"></a>边距和边框</h3><ul>\n<li><p>基本元素框</p>\n</li>\n<li><p>外边距（负外边距和垂直外边距合并）</p>\n</li>\n<li><p>行内元素的外边距</p>\n</li>\n<li><p>边框</p>\n</li>\n<li><p>内边距</p>\n</li>\n<li><p>行内元素的内边距</p>\n</li>\n<li><p>外边距的空白不能放置其他元素</p>\n</li>\n<li><p>内外边距设置为百分数时，相对于父元素的<strong>宽度</strong>计算，这样做是为了避免高度上导致无限循环</p>\n</li>\n<li><p>对于行内元素，只有<code>line-height</code>，<code>font-size</code>和<code>vertical-align</code>可以改变元素行高，为替换元素设置的外边距会影响行高</p>\n</li>\n<li><p>边框的默认属性为<code>none medium &lt;color&gt;</code></p>\n</li>\n<li><p>元素的背景会延伸到内边距</p>\n</li>\n<li><p>左内&#x2F;外边距应用到行内元素开始处，右内&#x2F;外边距应用到行内元素结束处</p>\n</li>\n</ul>\n<h3 id=\"背景与颜色\"><a href=\"#背景与颜色\" class=\"headerlink\" title=\"背景与颜色\"></a>背景与颜色</h3><ul>\n<li><p>前景色（<code>color</code>）</p>\n</li>\n<li><p>背景色</p>\n</li>\n<li><p>背景图片</p>\n</li>\n<li><p>背景重复、背景定位（<code>background-position</code>）</p>\n</li>\n<li><p>背景大小（<code>background-size</code>，CSS3新增）</p>\n</li>\n<li><p>一般来说，前景包括元素的<strong>文本和边框</strong></p>\n</li>\n<li><p>前景色属性可以继承</p>\n</li>\n<li><p><strong>所有背景属性都不可继承</strong></p>\n</li>\n<li><p>背景图像放在指定的背景色之上</p>\n</li>\n<li><p><code>background</code>简写属性为<code>background-color || background-image || background-repeat || background-attachment || background-position</code></p>\n</li>\n</ul>\n<h3 id=\"浮动和定位\"><a href=\"#浮动和定位\" class=\"headerlink\" title=\"浮动和定位\"></a>浮动和定位</h3><ul>\n<li><p>浮动元素</p>\n</li>\n<li><p>浮动定位规则</p>\n</li>\n<li><p>浮动行为和浮动内容的的重叠</p>\n</li>\n<li><p>清除（<code>clear</code>）</p>\n</li>\n<li><p>定位类型（<code>position</code>）</p>\n</li>\n<li><p>宽高限制（<code>max/min-width</code>和<code>max/min-height</code>）</p>\n</li>\n<li><p>内容溢出（<code>overflow</code>和<code>clip</code>）</p>\n</li>\n<li><p>元素可见性（<code>visibility</code>）</p>\n</li>\n<li><p>绝对定位、固定定位、相对定位</p>\n</li>\n<li><p><code>z-index</code></p>\n</li>\n<li><p>浮动元素的外边距不会合并</p>\n</li>\n<li><p>浮动的非替换元素需要指定<code>width</code>，否则宽度将趋于0</p>\n</li>\n<li><p>浮动元素的包含块为距离最近的块级祖先元素</p>\n</li>\n<li><p>行内框和浮动元素重叠时，边框和内容都在浮动内容之上；块级元素重叠时，内容在之上，边框和背景在之下显示</p>\n</li>\n<li><p><code>clear</code>只应用于块级元素，清除区域不允许浮动元素进入</p>\n</li>\n<li><p><code>absolute</code>元素会形成一个块级框</p>\n</li>\n<li><p><code>top</code>等属性应用在<code>absolute</code>元素时，描述其距离<strong>外边距边界</strong>的距离</p>\n</li>\n<li><p>可以通过<code>top</code>, <code>left</code>, <code>right</code>, <code>bottom</code>这样的定位信息确定绝对定位元素的内容区大小</p>\n</li>\n<li><p><code>clip</code>通过<code>rect(top,right,bottom,left)</code>确定绝对定位元素的剪裁区域</p>\n</li>\n<li><p>绝对定位元素的静态位置为其<code>position</code>为<code>static</code>时的位置</p>\n</li>\n<li><p>对于绝对定位元素，垂直方向或水平方向设置<code>auto</code>可以垂直或水平居中</p>\n</li>\n<li><p>对于相对定位，如遇到过度受限的情况，一个值会设置为另一个的相反数，保证自洽。</p>\n</li>\n</ul>\n<h3 id=\"表布局\"><a href=\"#表布局\" class=\"headerlink\" title=\"表布局\"></a>表布局</h3><ul>\n<li><p>表显示值（即相关<code>display</code>）</p>\n</li>\n<li><p>以行为主</p>\n</li>\n<li><p>匿名表对象插入法则</p>\n</li>\n<li><p>表标题</p>\n</li>\n<li><p>表单元格（<code>border-collapse</code>, <code>border-spacing</code>, <code>empty-cells</code>）</p>\n</li>\n<li><p>单元格边框合并</p>\n</li>\n<li><p>表大小（<code>table-layout</code>, 高度, 对齐）</p>\n</li>\n<li><p>CSS的列和列组只能接受<code>border</code>，<code>background</code>，<code>width</code>，<code>visibility</code>四种属性</p>\n</li>\n<li><p>单元格垂直对齐有4种可选值，<code>top</code>, <code>bottom</code>, <code>middle</code>, <code>baseline</code></p>\n</li>\n</ul>\n<h3 id=\"列表和生成内容\"><a href=\"#列表和生成内容\" class=\"headerlink\" title=\"列表和生成内容\"></a>列表和生成内容</h3><ul>\n<li><p>列表类型、列表项图像、列表标志位置</p>\n</li>\n<li><p>插入生成内容（<code>content</code>，<code>attr(xxx)</code>, <code>quote</code>）</p>\n</li>\n<li><p>计数器（<code>counter-reset</code>, <code>counter-increment</code>）</p>\n</li>\n<li><p>列表样式可以简写为<code>&lt;list-style-type&gt; | &lt;list-style-image&gt; | &lt;list-style-position&gt;</code></p>\n</li>\n<li><p>在<code>quote</code>属性里指定开闭字符串后，可以通过content，结合<code>:before</code>，<code>:after</code>伪类插入开闭quote的标记</p>\n</li>\n</ul>\n<h3 id=\"用户界面样式\"><a href=\"#用户界面样式\" class=\"headerlink\" title=\"用户界面样式\"></a>用户界面样式</h3><ul>\n<li><p>系统字体（如<code>caption</code>等）</p>\n</li>\n<li><p>系统颜色（已废弃）</p>\n</li>\n<li><p>光标（<code>cursor</code>）</p>\n</li>\n<li><p>轮廓（<code>outline</code>）</p>\n</li>\n<li><p><code>cursor</code>有下面一些常见的值</p>\n<ul>\n<li><code>pointer</code> 用在超链接上</li>\n<li><code>text</code> 用来纯文本上</li>\n<li><code>move</code> 用来指示目标可以被拖动，相关的还有<code>e-resize</code>, <code>ne-resize</code>, <code>se-resize</code>等边缘的拖动标记</li>\n<li><code>crosshair</code> 用来指示可以选取范围，类似截屏的光标效果</li>\n<li><code>wait</code> 显示等待标记</li>\n<li><code>progress</code> 指示等待的状态，同时表示可以进行其他操作</li>\n<li><code>help</code> 显示帮助光标</li>\n<li><code>url()</code> 自定义光标图像，建议设置缺省值</li>\n</ul>\n</li>\n<li><p><code>outline</code>的设置类似<code>border</code>，由<code>outline-color</code>, <code>outline-style</code>, <code>outline-width</code>组成</p>\n</li>\n</ul>\n<h3 id=\"非屏幕媒体\"><a href=\"#非屏幕媒体\" class=\"headerlink\" title=\"非屏幕媒体\"></a>非屏幕媒体</h3><ul>\n<li><p>分页媒体（<code>size</code>和<code>page</code>等）</p>\n</li>\n<li><p>投影样式</p>\n</li>\n<li><p>声音样式（<code>speak</code>，<code>stress</code>，<code>richness</code>等）</p>\n</li>\n<li><p>可以在<code>&lt;link&gt;</code>标签的<code>media</code>属性里指定媒体类型，或是在CSS文件中通过<code>@media xxx &#123;&#125;</code>的形式指定</p>\n</li>\n</ul>\n",
            "tags": [
                "读书笔记",
                "CSS",
                "盒模型",
                "浮动"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2017/06/23/HTML-CSS-code-style-guide/",
            "url": "http://shenlvmeng.github.com/blog/2017/06/23/HTML-CSS-code-style-guide/",
            "title": "HTML和CSS编码规范",
            "date_published": "2017-06-23T12:06:46.000Z",
            "content_html": "<p>写个人项目是最爽的，再稀烂的代码都是自己的孩子，一把屎一把尿写出来的，总能认得。但是阅读本文的你，多半是给别人写码，面向老板编程的。你的码保不齐日后要别人维护。为了写出放心的码，提高搬砖效率，统一编码规范是必然的选择。</p>\n<p><img src=\"/blog/blog/images/code-quality.png\" alt=\"Boss Oriented Programming\"></p>\n<p>有观众可能要问了，我们不是有lint工具吗？</p>\n<p><img src=\"/blog/blog/images/say-more.jpg\" alt=\"就你话多\"></p>\n<h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><h3 id=\"基本\"><a href=\"#基本\" class=\"headerlink\" title=\"基本\"></a>基本</h3><h4 id=\"doctype\"><a href=\"#doctype\" class=\"headerlink\" title=\"doctype\"></a>doctype</h4><p>每个页面开头，使用简单的<code>&lt;!DOCTYPE html&gt;</code>来启用标准模式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span> <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;</span> <span class=\"string\">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"charset\"><a href=\"#charset\" class=\"headerlink\" title=\"charset\"></a>charset</h4><p>无特殊情况时，统一使用<code>UTF-8</code></p>\n<h4 id=\"lang\"><a href=\"#lang\" class=\"headerlink\" title=\"lang\"></a>lang</h4><p><strong>推荐</strong>在html元素上使用<code>lang</code>属性</p>\n<h4 id=\"viewport\"><a href=\"#viewport\" class=\"headerlink\" title=\"viewport\"></a>viewport</h4><p><strong>建议</strong>指定页面的viewport属性，保证移动端的友好展示</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, maximum-scale=1.0, minimum-scale=1, user-scalable=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"title\"><a href=\"#title\" class=\"headerlink\" title=\"title\"></a>title</h4><p><code>head</code>中<strong>必须</strong>要有<code>title</code>标签。</p>\n<h4 id=\"IE兼容模式\"><a href=\"#IE兼容模式\" class=\"headerlink\" title=\"IE兼容模式\"></a>IE兼容模式</h4><p>如不是特殊需要，通过<strong>edge mode</strong>通知IE使用最新的兼容模式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=Edge,chrome=1&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"CSS和JavaScript引入\"><a href=\"#CSS和JavaScript引入\" class=\"headerlink\" title=\"CSS和JavaScript引入\"></a>CSS和JavaScript引入</h4><ul>\n<li>引入CSS和JavaScript时不需要指明<code>type</code>，因为<code>text/css</code>和<code>text/javascript</code>分别是他们的默认值。<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;index.css&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;index.css&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>CSS在<code>&lt;head&gt;&lt;/head&gt;</code>中引入，基础JS脚本在<code>&lt;head&gt;&lt;/head&gt;</code>引入，其余在<code>&lt;body&gt;</code>结束标签前引入</li>\n</ul>\n<h4 id=\"缩进\"><a href=\"#缩进\" class=\"headerlink\" title=\"缩进\"></a>缩进</h4><p><strong>必须</strong>使用两个空格表示一个缩进层级，<strong>禁止</strong>使用tab</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>just a example<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>just a example<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"换行\"><a href=\"#换行\" class=\"headerlink\" title=\"换行\"></a>换行</h4><p>单行<strong>不能</strong>超过120个字符</p>\n<h4 id=\"标签名称和标签属性统一使用小写\"><a href=\"#标签名称和标签属性统一使用小写\" class=\"headerlink\" title=\"标签名称和标签属性统一使用小写\"></a>标签名称和标签属性统一使用小写</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Div</span> <span class=\"attr\">Id</span>=<span class=\"string\">&quot;foo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;foo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>综上，下面是一个建议的html脚手架</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;zh&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;X-UA-Compatible&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;IE=edge,chrome=1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, maximum-scale=1.0, minimum-scale=1, user-scalable=no&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;renderer&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;webkit&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;author&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;shenlvmeng&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;description&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;描述&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;keyword&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;关键词&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Foo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;index.css&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;index.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h3><ul>\n<li>非自闭合标签<strong>必须</strong>有开始和结束标签，自动闭合标签<strong>不建议</strong>在结尾处使用斜线<code>/</code><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;foo&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;foo.png&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;foo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;foo.png&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><strong>建议</strong>使用语义化标签<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span>Navbar<span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">time</span>&gt;</span>2017<span class=\"tag\">&lt;/<span class=\"name\">time</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">figure</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">figure</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">aside</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">aside</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><strong>避免</strong>标签嵌套层级过深，尤其是无语义的嵌套<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;foo&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;bar&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h3><h4 id=\"标签名\"><a href=\"#标签名\" class=\"headerlink\" title=\"标签名\"></a>标签名</h4><p><strong>必须</strong>使用小写字母加连字符的命名方式</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">MyTag</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">MyTag</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">my-tag</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">my-tag</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"class属性\"><a href=\"#class属性\" class=\"headerlink\" title=\"class属性\"></a><code>class</code>属性</h4><p>使用小写字母加连字符，需要在Javascript中使用时，以<code>J_</code>开头，接大驼峰命名</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;FooBar J_foo-bar&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;foo-bar J_FooBar&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"id属性\"><a href=\"#id属性\" class=\"headerlink\" title=\"id属性\"></a><code>id</code>属性</h4><p>同上。<strong>建议</strong>使用<code>class</code>属性关联CSS。</p>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><h4 id=\"使用双引号包裹\"><a href=\"#使用双引号包裹\" class=\"headerlink\" title=\"使用双引号包裹\"></a>使用双引号包裹</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&#x27;foo&#x27;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;foo&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Boolean属性\"><a href=\"#Boolean属性\" class=\"headerlink\" title=\"Boolean属性\"></a>Boolean属性</h4><p><strong>不要</strong>为Boolean属性指定值。</p>\n<blockquote>\n<p>一个元素中 Boolean 属性的存在表示取值true，不存在则表示取值false。</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;nickname&quot;</span> <span class=\"attr\">disabled</span>=<span class=\"string\">&quot;disabled&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;hobbies&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;bicycle&quot;</span> <span class=\"attr\">checked</span>=<span class=\"string\">&quot;checked&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;FrontEnd&quot;</span> <span class=\"attr\">selected</span>=<span class=\"string\">&quot;selected&quot;</span>&gt;</span>FrontEnd<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;nickname&quot;</span> <span class=\"attr\">disabled</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;checkbox&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;hobbies&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;bicycle&quot;</span> <span class=\"attr\">checked</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;FrontEnd&quot;</span> <span class=\"attr\">selected</span>&gt;</span>FrontEnd<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"自定义属性\"><a href=\"#自定义属性\" class=\"headerlink\" title=\"自定义属性\"></a>自定义属性</h4><p><strong>必须</strong>以<code>data-</code>为前缀，保证可读</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">age</span>=<span class=\"string\">&quot;10&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">data-age</span>=<span class=\"string\">&quot;10&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"顺序\"><a href=\"#顺序\" class=\"headerlink\" title=\"顺序\"></a>顺序</h4><p>保证可读性，一致的属性顺序可以提高压缩率。按照出现频率，依次是：</p>\n<ul>\n<li><code>class</code></li>\n<li><code>id</code></li>\n<li><code>data-*</code></li>\n<li>…</li>\n</ul>\n<h4 id=\"少用style属性\"><a href=\"#少用style属性\" class=\"headerlink\" title=\"少用style属性\"></a>少用<code>style</code>属性</h4><p><strong>建议</strong>使用<code>class</code>来控制样式，可以提高可维护性和可读性。</p>\n<h4 id=\"不在属性值中使用JavaScript语句\"><a href=\"#不在属性值中使用JavaScript语句\" class=\"headerlink\" title=\"不在属性值中使用JavaScript语句\"></a>不在属性值中使用JavaScript语句</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;hello&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:alert(&#x27;hi&#x27;);&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;;(function()&#123;alert(&#x27;hello&#x27;);&#125;)()&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;hello&quot;</span>).<span class=\"title function_\">addEventListener</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&#x27;hello&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"多媒体\"><a href=\"#多媒体\" class=\"headerlink\" title=\"多媒体\"></a>多媒体</h3><ul>\n<li><code>img</code>的<code>src</code>属性<strong>禁止</strong>留空</li>\n<li>为<code>img</code>标签添加<code>alt</code>属性以声明替代文本</li>\n<li>在多媒体标签内部提供指示浏览器不支持该标签的说明，如<code>object</code>、<code>audio</code>、<code>video</code></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- bad --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;cat.png&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">controls</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;foo.ogg&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;audio/ogg&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;bar.mp3&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;audio/mpeg&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- good --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;cat.png&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;cat&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">audio</span> <span class=\"attr\">controls</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;baz.ogg&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;audio/ogg&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;qaz.mp3&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;audio/mpeg&quot;</span>&gt;</span></span><br><span class=\"line\">  Your browser does not support the audio tag.</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><h3 id=\"基本-1\"><a href=\"#基本-1\" class=\"headerlink\" title=\"基本\"></a>基本</h3><ul>\n<li><strong>推荐</strong>使用两个空格缩进<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#000</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>单行不能超过120个字符，除非不可分割，如URL</li>\n<li>声明块左花括号前<strong>推荐</strong>添加空格<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>声明块右花括号<strong>推荐</strong>单独成行<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>声明语句<code>:</code>后<strong>需要</strong>有空格，前无空格<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>:<span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>声明语句<strong>必须</strong>以分号结尾<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>:<span class=\"number\">15px</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><h4 id=\"文档注释\"><a href=\"#文档注释\" class=\"headerlink\" title=\"文档注释\"></a>文档注释</h4><p>声明在文件头部，表示文件作用</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 这个文件的作用</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"代码注释\"><a href=\"#代码注释\" class=\"headerlink\" title=\"代码注释\"></a>代码注释</h4><p>传达代码上下文和目标，应该容易被人类理解。<strong>不要</strong>简单重复类名等冗余信息。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* header */</span></span><br><span class=\"line\"><span class=\"selector-class\">.header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Wrapping contents of .title and .user-info */</span></span><br><span class=\"line\"><span class=\"selector-class\">.header</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"命名-1\"><a href=\"#命名-1\" class=\"headerlink\" title=\"命名\"></a>命名</h3><p>同HTML规范，小写字母加短划线<code>-</code>。在JavaScript中出现的类名用<code>J_</code>开头，后接大驼峰命名，这类的<code>class</code><strong>不能</strong>出现在CSS文件中。</p>\n<h3 id=\"值\"><a href=\"#值\" class=\"headerlink\" title=\"值\"></a>值</h3><ul>\n<li>文本内容<strong>必须</strong>使用双引号包裹<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-tag\">html</span><span class=\"selector-attr\">[lang|=zh]</span> <span class=\"selector-tag\">q</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;Microsoft YaHei&#x27;</span>, sans-serif;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;“&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-tag\">html</span><span class=\"selector-attr\">[lang|=<span class=\"string\">&quot;zh&quot;</span>]</span> <span class=\"selector-tag\">q</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;Microsoft YaHei&quot;</span>, sans-serif;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot;“&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>“0”值后<strong>不要</strong>使用单位。<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-class\">.example</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>长度数值是0 - 1间的小数时，忽略整数部分的<code>0</code><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\">panel &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">0.8</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\">panel &#123;</span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: .<span class=\"number\">8</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>颜色值<strong>必须</strong>使用小写的十六进制表示，<strong>禁止</strong>使用颜色名和<code>rgb()</code>，带有透明度时<strong>可以</strong>使用<code>rgba()</code><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.success</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">2px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>,<span class=\"number\">128</span>,<span class=\"number\">0</span>,.<span class=\"number\">3</span>);</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: <span class=\"built_in\">rgb</span>(<span class=\"number\">0</span>, <span class=\"number\">128</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-class\">.success</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">2px</span> <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">128</span>, <span class=\"number\">0</span>, .<span class=\"number\">3</span>);</span><br><span class=\"line\">  <span class=\"attribute\">border-color</span>: <span class=\"number\">#008000</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>可以缩写时，颜色值<strong>必须</strong>缩写<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.success</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#aaccaa</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-class\">.success</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#aca</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><code>url()</code>函数中的路径<strong>禁止</strong>带引号，绝对路径时<strong>可以</strong>省去协议名<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.logo</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">//assets/logo.png</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"选择器\"><a href=\"#选择器\" class=\"headerlink\" title=\"选择器\"></a>选择器</h3><ul>\n<li>一个rule包含多个选择器时，每个选择器<strong>必须</strong>独占一行<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.post</span>, <span class=\"selector-class\">.page</span>, <span class=\"selector-class\">.comment</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-class\">.post</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.page</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.comment</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>属性选择器中的值<strong>必须</strong>用双引号包裹<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-attr\">[lang|=<span class=\"string\">&quot;zh&quot;</span>]</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>选择器层级<strong>不要</strong>超过5级，靠后的选择器尽量精确<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.main</span> <span class=\"selector-class\">.top</span> <span class=\"selector-class\">.left</span> <span class=\"selector-class\">.mod-a</span> <span class=\"selector-class\">.content</span> <span class=\"selector-class\">.detail</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-class\">.content</span> <span class=\"selector-class\">.detail</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding-left</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"属性-1\"><a href=\"#属性-1\" class=\"headerlink\" title=\"属性\"></a>属性</h3><ul>\n<li><strong>建议</strong>相关的属性说明放在一组，并按下面顺序排列<ol>\n<li>定位（position、left、right、top、bottom、z-index）</li>\n<li>盒子模型（display、float、width、height、margin、padding、border、border-radius）</li>\n<li>排印（font、color、background、line-height、text-align）<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.mod-example</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 定位 */</span></span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 盒模型 */</span></span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">15px</span> auto;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span> <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">  <span class=\"comment\">/* 排印 */</span></span><br><span class=\"line\">  <span class=\"attribute\">font</span>: normal <span class=\"number\">13px</span> <span class=\"string\">&quot;Helvetica Neue&quot;</span>, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f5f5f5</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li>可以缩写时，<strong>建议</strong>缩写属性，如<code>font</code>, <code>margin</code>等<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"selector-class\">.post</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">12px</span>/<span class=\"number\">1.5</span> arial, sans-serif;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.post</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: arial, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>尽量不使用<code>!important</code>声明</li>\n</ul>\n<h3 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h3><ul>\n<li><code>font-family</code>中<strong>必须</strong>使用字体族的英文名称，其中如有空格等特殊字符，<strong>必须</strong>使用双引号包裹。<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;Microsoft YaHei&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><code>font-family</code>按效果从优到通用顺序编写<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&quot;Helvetica Neue&quot;</span>, Arial, <span class=\"string\">&quot;Hiragino Sans GB&quot;</span>, <span class=\"string\">&quot;WenQuanYi Micro Hei&quot;</span>, <span class=\"string\">&quot;Microsoft YaHei&quot;</span>, sans-serif;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>需要在Windows平台下显示的内容，<code>font-size</code><strong>禁止</strong>小于12px，否则会模糊不清</li>\n<li><code>ling-height</code><strong>建议</strong>使用数值<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.text</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><strong>建议</strong>减少使用自定义中文字体，通常体积很大，很影响页面加载</li>\n</ul>\n<h3 id=\"响应式\"><a href=\"#响应式\" class=\"headerlink\" title=\"响应式\"></a>响应式</h3><ul>\n<li>媒体查询<strong>必须</strong>放在尽可能相关的规则附近，不得单独编排<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* bad */</span></span><br><span class=\"line\"><span class=\"comment\">/* header styles */</span></span><br><span class=\"line\"><span class=\"comment\">/* main styles */</span></span><br><span class=\"line\"><span class=\"comment\">/* footer styles */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (...) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* header styles */</span></span><br><span class=\"line\">    <span class=\"comment\">/* main styles */</span></span><br><span class=\"line\">    <span class=\"comment\">/* footer styles */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* good */</span></span><br><span class=\"line\"><span class=\"comment\">/* header styles */</span></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (...) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* header styles */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* main styles */</span></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (...) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* main styles */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* footer styles */</span></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (...) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* footer styles */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>媒体查询有多个条件分隔时，每个条件<strong>必须</strong>另起一行<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@media</span></span><br><span class=\"line\">(<span class=\"attribute\">-webkit-min-device-pixel-ratio</span>: <span class=\"number\">2</span>), /* Webkit-based browsers */</span><br><span class=\"line\">(<span class=\"attribute\">min--moz-device-pixel-ratio</span>: <span class=\"number\">2</span>),    /* Older Firefox browsers (prior to Firefox <span class=\"number\">16</span>) */</span><br><span class=\"line\">(<span class=\"attribute\">min-resolution</span>: <span class=\"number\">2dppx</span>),             /* The standard way */</span><br><span class=\"line\">(<span class=\"attribute\">min-resolution</span>: <span class=\"number\">192dpi</span>) &#123;           <span class=\"comment\">/* dppx fallback */</span></span><br><span class=\"line\">  <span class=\"comment\">/* Retina-specific stuff here */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>媒体查询针对每一个种屏幕（大、中、小）的<strong>建议</strong>单独组织为一个文件<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* base.css */</span></span><br><span class=\"line\"><span class=\"selector-class\">.element</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.element-avatar</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.element-selected</span> &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* base-media-small.css */</span></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">min-width</span>: <span class=\"number\">480px</span>) &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.element</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.element-avatar</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.element-selected</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><ul>\n<li><strong>禁止</strong>使用JavaScript</li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://groups.alidemo.cn/f2e-specs/style-guide/_book/index.html\">集团前端代码规约</a><br><a href=\"https://github.com/fex-team/styleguide\">文档与源码编写风格</a></p>\n",
            "tags": [
                "HTML",
                "CSS",
                "style guide"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2017/04/11/how-browsers-work-2/",
            "url": "http://shenlvmeng.github.com/blog/2017/04/11/how-browsers-work-2/",
            "title": "浏览器是如何工作的 下 布局与绘制",
            "date_published": "2017-04-11T12:44:04.000Z",
            "content_html": "<blockquote>\n<p>上篇传送门：<a href=\"https://shenlvmeng.github.io/blog/2017/04/10/how-browsers-work-1/\">浏览器是如何工作的 上 解析与呈现</a></p>\n</blockquote>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>本文主要翻译于Tali Garsiel在2009年10月的一篇介绍Webkit和Gecko内核的经典文章<a href=\"http://taligarsiel.com/Projects/howbrowserswork1.htm\">How browsers work</a>。尽管在面试和工作上用不到这么细节，但是学习浏览器的内部原理将让我们可以更好地理解一些最优开发实践的道理。</p>\n<h3 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h3><p>呈现器在创建完成并添加到呈现树时，并不包含位置和大小信息。计算这些值的过程称为布局或重排。</p>\n<p>HTML 采用基于流的布局模型，这意味着大多数情况下只要一次遍历就能计算出几何信息。处于流中靠后位置元素通常不会影响靠前位置元素的几何特征，因此布局可以按从左至右、从上至下的顺序遍历文档。但是也有例外情况，比如<a href=\"https://developer.mozilla.org/en/docs/Notes_on_HTML_Reflow\">HTML表格的计算</a>就需要不止一次的遍历。</p>\n<p>布局是一个递归的过程。它从根呈现器（对应于HTML文档的<code>&lt;html&gt;</code>元素）开始，然后递归遍历部分或所有的框架层次结构，为每一个需要计算的呈现器计算几何信息。</p>\n<p>根呈现器的位置是0,0，其尺寸为视口（也就是浏览器窗口的可见区域）。所有的呈现器都有一个<code>layout</code>或者<code>reflow</code>方法，每一个呈现器都会调用其需要进行布局的子代的<code>layout</code>方法。</p>\n<h4 id=\"Dirty-Bit系统\"><a href=\"#Dirty-Bit系统\" class=\"headerlink\" title=\"Dirty Bit系统\"></a>Dirty Bit系统</h4><p>为避免对所有细小更改都进行整体布局，浏览器采用了一种<strong>dirty bit</strong>系统。如果某个呈现器发生了更改，或者将自身及其子代标注为dirty，则需要进行布局。</p>\n<p>有两种标记：<code>dirty</code>和<code>children are dirty</code>。<code>children are dirty</code>表示尽管呈现器自身没有变化，但它至少有一个子代需要布局。</p>\n<h4 id=\"全局与增量布局\"><a href=\"#全局与增量布局\" class=\"headerlink\" title=\"全局与增量布局\"></a>全局与增量布局</h4><p>全局布局是指触发了整个呈现树范围的布局，触发原因可能包括：</p>\n<ul>\n<li>影响所有呈现器的全局样式更改，例如字体大小更改（因此<a href=\"https://shenlvmeng.github.io/blog/2017/04/06/mobile-uiue-experience/\">这里</a>提到的自适应JavaScript代码一定要放在<code>body</code>前，否则会有白屏闪动现象出现）。</li>\n<li>屏幕大小调整，即<code>resize</code>事件。</li>\n</ul>\n<p>增量布局是指只对dirty呈现器进行布局（这样可能存在需要进行额外布局的弊端）。当呈现器为 dirty 时，会异步触发增量布局。例如，当来自网络的额外内容添加到 DOM 树之后，新的呈现器附加到了呈现树中。</p>\n<p><img src=\"/blog/blog/images/browser/reflow.png\"></p>\n<p>增量布局是异步执行的。Firefox 将增量布局的”reflow命令”加入队列，而调度程序会触发这些命令的批量执行。WebKit也有用于执行增量布局的计时器：对呈现树进行遍历，并对dirty呈现器进行布局。请求样式信息（例如<code>offsetHeight</code>）的脚本可同步触发增量布局。</p>\n<p>如果布局是由“大小调整”或呈现器的位置（而非大小）改变而触发的，那么可以从缓存中获取呈现器的大小，而无需重新计算。<br>另外，在某些情况下，只有一个子树进行了修改，因此无需从根节点开始布局。这适用于在本地进行更改而不影响周围元素的情况，例如在文本字段中插入文本（否则每次键盘输入都将触发从根节点开始的布局）。</p>\n<h4 id=\"布局过程\"><a href=\"#布局过程\" class=\"headerlink\" title=\"布局过程\"></a>布局过程</h4><p>布局过程通常遵守下面的模式：</p>\n<ol>\n<li>父呈现器确定自己的宽度。</li>\n<li>父呈现器依次处理子呈现器，并且：</li>\n<li>放置子呈现器（设置 x,y 坐标）。</li>\n<li>如果有必要，调用子呈现器的布局（如果子呈现器是dirty的，或者这是全局布局，或出于其他某些原因），这会计算子呈现器的高度。</li>\n<li>父呈现器根据子呈现器的累加高度以及边距和补白的高度来设置自身高度，此值也可供父呈现器的父呈现器使用。</li>\n<li>将其 dirty 位设置为 false。</li>\n</ol>\n<h4 id=\"宽度和换行\"><a href=\"#宽度和换行\" class=\"headerlink\" title=\"宽度和换行\"></a>宽度和换行</h4><p>呈现器宽度是根据容器块的宽度、呈现器样式中的“width”属性以及边距和边框计算得出的。例如，下面有一个<code>div</code>标签：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;width:30%&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Webkit将像下面一样计算它的宽度（<code>RenderBox</code>类的<code>calcWidth</code>方法）：</p>\n<ol>\n<li>容器的宽度取容器的availableWidth和0中的较大值。availableWidth在本例中相当于contentWidth</li>\n<li>元素的宽度是<code>width</code>样式属性。它会根据容器宽度的百分比计算得出一个绝对值。</li>\n<li>然后再加上水平方向的边框和补白。</li>\n</ol>\n<p>现在计算得出的是<strong>preferred width</strong>。然后需要计算最小宽度和最大宽度。如果首选宽度大于最大宽度，那么应使用最大宽度。如果首选宽度小于最小宽度（最小的不可分单位），那么应使用最小宽度。最后，这些值会缓存起来，以用于需要布局而宽度不变的情况。</p>\n<p>如果呈现器在布局过程中需要换行，会立即停止布局，并告知其父代需要换行。父代会创建额外的呈现器，并在其上布局。</p>\n<h3 id=\"绘制\"><a href=\"#绘制\" class=\"headerlink\" title=\"绘制\"></a>绘制</h3><p>在绘制阶段，系统会遍历呈现树，并调用呈现器的<code>paint</code>方法，将呈现器的内容显示在屏幕上。和布局一样，绘制也分为<strong>全局</strong>（绘制整个呈现树）和<strong>增量</strong>两种。在增量绘制中，部分呈现器发生了更改，但是不会影响整个树。更改后的呈现器将其在屏幕上对应的矩形区域设为无效，这导致 OS 将其视为一块“dirty 区域”，并生成“paint”事件。OS会很巧妙地将多个区域合并成一个。</p>\n<p><a href=\"https://www.w3.org/TR/CSS21/zindex.html\">CSS2.1规范</a>描述了绘制的顺序，这个顺序实际上也是堆栈上下文的顺序。这些堆栈会从后往前绘制，因此这样的顺序会影响绘制。块呈现器的堆栈顺序如下：</p>\n<ol>\n<li>背景颜色</li>\n<li>背景图片</li>\n<li>边框</li>\n<li>子代元素</li>\n<li>轮廓（outline）</li>\n</ol>\n<h4 id=\"浏览器特点\"><a href=\"#浏览器特点\" class=\"headerlink\" title=\"浏览器特点\"></a>浏览器特点</h4><p>Firefox会遍历整个呈现树，为绘制的矩形建立一个显示列表。列表中按照正确的绘制顺序（先是呈现器的背景，然后是边框等等）包含了与矩形相关的呈现器。这样等到重新绘制的时候，只需遍历一次呈现树，而不用多次遍历（绘制所有背景，然后绘制所有图片，再绘制所有边框等等）。同时Firefox对此过程进行了优化，也就是不添加隐藏的元素，例如被不透明元素完全遮挡住的元素。</p>\n<p>Webkit在重新绘制之前，则会将原来的矩形另存为一张位图，然后只绘制新旧矩形之间的差异部分。 </p>\n<h3 id=\"动态变化\"><a href=\"#动态变化\" class=\"headerlink\" title=\"动态变化\"></a>动态变化</h3><p>在发生变化时，<strong>回流</strong>（reflow）和<strong>重绘</strong>（repaint）可能会被触发，浏览器会尽可能做出最小的响应。例如，元素的颜色改变后，只会对该元素进行重绘。元素的位置改变后，只会对该元素及其子元素（可能还有同级元素）进行布局和重绘。添加DOM节点后，会对该节点进行布局和重绘。一些重大变化（例如增大<code>html</code>元素的字体）会导致缓存无效，使得整个呈现树都会进行重新布局和绘制。</p>\n<p>无论是回流还是重绘都会增加浏览器的工作负担，带来响应时间。其中回流的计算代价更大，应该尽量避免。有一些<a href=\"https://www.sitepoint.com/10-ways-minimize-reflows-improve-performance/\">方法</a>可以用来减少回流的出现。</p>\n<h3 id=\"渲染引擎的线程\"><a href=\"#渲染引擎的线程\" class=\"headerlink\" title=\"渲染引擎的线程\"></a>渲染引擎的线程</h3><p>呈现引擎采用了单线程。几乎所有操作（除了网络操作）都是在单线程中进行的。在Firefox和Safari中，该线程就是浏览器的主线程。而在Chrome浏览器中，该线程是标签进程的主线程。</p>\n<p>网络操作可由多个并行线程执行。并行连接数是有限的（通常为2至6个，以Firefox为例是6个）。</p>\n<h4 id=\"Event-Loop\"><a href=\"#Event-Loop\" class=\"headerlink\" title=\"Event Loop\"></a>Event Loop</h4><p>浏览器的主线程是事件循环（Event Loop）。它是一个无限循环，永远处于接受活动状态，并等待事件（如布局和绘制事件）发生，并进行处理。这是Firefox中关于主事件循环的代码：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (!mExiting)</span><br><span class=\"line\">  <span class=\"built_in\">NS_ProcessNextEvent</span>(thread);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CSS2-1可视化模型\"><a href=\"#CSS2-1可视化模型\" class=\"headerlink\" title=\"CSS2.1可视化模型\"></a>CSS2.1可视化模型</h3><blockquote>\n<p>注：<a href=\"https://www.w3.org/TR/CSS/#css-level-3\">CSS3</a>是将CSS2模块化并对其中部分模块进行更新的版本。它仍使用CSS2.1规范作为其核心。改进的模块并不会与CSS2.1相冲突。因此这里原文关于CSS2.1的描述并不算过时</p>\n</blockquote>\n<h4 id=\"盒模型\"><a href=\"#盒模型\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h4><p><img src=\"/blog/blog/images/browser/boxdim.png\"></p>\n<p><a href=\"https://www.w3.org/TR/CSS2/box.html\">CSS盒模型</a>描述的是针对文档树中的元素而生成，并根据可视化格式模型进行布局的矩形框。每个框都有一个内容区域（例如文本、图片等），还有可选的周围补白、边框和边距区域。如上图所示。</p>\n<p>每一个节点都会生成 0..n 个这样的框。所有元素都有一个“display”属性，决定了它们所对应生成的框类型。默认值是inline，但是浏览器样式表设置了其他默认值。例如，<code>&lt;div&gt;</code>元素的<code>display</code>属性默认值是<code>block</code>。W3C上有全面的<a href=\"https://www.w3.org/TR/CSS2/sample.html\">默认样式表</a>：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">address</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">blockquote</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">body</span>, <span class=\"selector-tag\">dd</span>, <span class=\"selector-tag\">div</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">dl</span>, <span class=\"selector-tag\">dt</span>, <span class=\"selector-tag\">fieldset</span>, <span class=\"selector-tag\">form</span>,</span><br><span class=\"line\">frame, frameset,</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span>, <span class=\"selector-tag\">h2</span>, <span class=\"selector-tag\">h3</span>, <span class=\"selector-tag\">h4</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h5</span>, <span class=\"selector-tag\">h6</span>, noframes,</span><br><span class=\"line\"><span class=\"selector-tag\">ol</span>, <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">ul</span>, center,</span><br><span class=\"line\">dir, hr, <span class=\"selector-tag\">menu</span>, pre   &#123; <span class=\"attribute\">display</span>: block; <span class=\"attribute\">unicode-bidi</span>: embed &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">li</span>              &#123; <span class=\"attribute\">display</span>: list-item &#125;</span><br><span class=\"line\">head            &#123; <span class=\"attribute\">display</span>: none &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span>           &#123; <span class=\"attribute\">display</span>: table &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">tr</span>              &#123; <span class=\"attribute\">display</span>: table-row &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">thead</span>           &#123; <span class=\"attribute\">display</span>: table-header-group &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">tbody</span>           &#123; <span class=\"attribute\">display</span>: table-row-group &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">tfoot</span>           &#123; <span class=\"attribute\">display</span>: table-footer-group &#125;</span><br><span class=\"line\">col             &#123; <span class=\"attribute\">display</span>: table-column &#125;</span><br><span class=\"line\">colgroup        &#123; <span class=\"attribute\">display</span>: table-column-group &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">td</span>, <span class=\"selector-tag\">th</span>          &#123; <span class=\"attribute\">display</span>: table-cell &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">caption</span>         &#123; <span class=\"attribute\">display</span>: table-caption &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">th</span>              &#123; <span class=\"attribute\">font-weight</span>: bolder; <span class=\"attribute\">text-align</span>: center &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">caption</span>         &#123; <span class=\"attribute\">text-align</span>: center &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">body</span>            &#123; <span class=\"attribute\">margin</span>: <span class=\"number\">8px</span> &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span>              &#123; <span class=\"attribute\">font-size</span>: <span class=\"number\">2em</span>; <span class=\"attribute\">margin</span>: .<span class=\"number\">67em</span> <span class=\"number\">0</span> &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h2</span>              &#123; <span class=\"attribute\">font-size</span>: <span class=\"number\">1.5em</span>; <span class=\"attribute\">margin</span>: .<span class=\"number\">75em</span> <span class=\"number\">0</span> &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h3</span>              &#123; <span class=\"attribute\">font-size</span>: <span class=\"number\">1.17em</span>; <span class=\"attribute\">margin</span>: .<span class=\"number\">83em</span> <span class=\"number\">0</span> &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h4</span>, <span class=\"selector-tag\">p</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">blockquote</span>, <span class=\"selector-tag\">ul</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">fieldset</span>, <span class=\"selector-tag\">form</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">ol</span>, <span class=\"selector-tag\">dl</span>, dir,</span><br><span class=\"line\"><span class=\"selector-tag\">menu</span>            &#123; <span class=\"attribute\">margin</span>: <span class=\"number\">1.12em</span> <span class=\"number\">0</span> &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h5</span>              &#123; <span class=\"attribute\">font-size</span>: .<span class=\"number\">83em</span>; <span class=\"attribute\">margin</span>: <span class=\"number\">1.5em</span> <span class=\"number\">0</span> &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h6</span>              &#123; <span class=\"attribute\">font-size</span>: .<span class=\"number\">75em</span>; <span class=\"attribute\">margin</span>: <span class=\"number\">1.67em</span> <span class=\"number\">0</span> &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">h1</span>, <span class=\"selector-tag\">h2</span>, <span class=\"selector-tag\">h3</span>, <span class=\"selector-tag\">h4</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">h5</span>, <span class=\"selector-tag\">h6</span>, <span class=\"selector-tag\">b</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">strong</span>          &#123; <span class=\"attribute\">font-weight</span>: bolder &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">blockquote</span>      &#123; <span class=\"attribute\">margin-left</span>: <span class=\"number\">40px</span>; <span class=\"attribute\">margin-right</span>: <span class=\"number\">40px</span> &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">i</span>, <span class=\"selector-tag\">cite</span>, <span class=\"selector-tag\">em</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">var</span>, <span class=\"selector-tag\">address</span>    &#123; <span class=\"attribute\">font-style</span>: italic &#125;</span><br><span class=\"line\">pre, tt, <span class=\"selector-tag\">code</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">kbd</span>, <span class=\"selector-tag\">samp</span>       &#123; <span class=\"attribute\">font-family</span>: monospace &#125;</span><br><span class=\"line\">pre             &#123; <span class=\"attribute\">white-space</span>: pre &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">button</span>, <span class=\"selector-tag\">textarea</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">input</span>, select   &#123; <span class=\"attribute\">display</span>: inline-block &#125;</span><br><span class=\"line\">big             &#123; <span class=\"attribute\">font-size</span>: <span class=\"number\">1.17em</span> &#125;</span><br><span class=\"line\">small, sub, <span class=\"selector-tag\">sup</span> &#123; <span class=\"attribute\">font-size</span>: .<span class=\"number\">83em</span> &#125;</span><br><span class=\"line\">sub             &#123; <span class=\"attribute\">vertical-align</span>: sub &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">sup</span>             &#123; <span class=\"attribute\">vertical-align</span>: super &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">table</span>           &#123; <span class=\"attribute\">border-spacing</span>: <span class=\"number\">2px</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">thead</span>, <span class=\"selector-tag\">tbody</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">tfoot</span>           &#123; <span class=\"attribute\">vertical-align</span>: middle &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">td</span>, <span class=\"selector-tag\">th</span>, <span class=\"selector-tag\">tr</span>      &#123; <span class=\"attribute\">vertical-align</span>: inherit &#125;</span><br><span class=\"line\">s, strike, <span class=\"selector-tag\">del</span>  &#123; <span class=\"attribute\">text-decoration</span>: line-through &#125;</span><br><span class=\"line\">hr              &#123; <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> inset &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ol</span>, <span class=\"selector-tag\">ul</span>, dir,</span><br><span class=\"line\"><span class=\"selector-tag\">menu</span>, <span class=\"selector-tag\">dd</span>        &#123; <span class=\"attribute\">margin-left</span>: <span class=\"number\">40px</span> &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ol</span>              &#123; <span class=\"attribute\">list-style-type</span>: decimal &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">ol</span> <span class=\"selector-tag\">ul</span>, <span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ol</span>,</span><br><span class=\"line\"><span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ul</span>, <span class=\"selector-tag\">ol</span> <span class=\"selector-tag\">ol</span>    &#123; <span class=\"attribute\">margin-top</span>: <span class=\"number\">0</span>; <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">0</span> &#125;</span><br><span class=\"line\">u, <span class=\"selector-tag\">ins</span>          &#123; <span class=\"attribute\">text-decoration</span>: underline &#125;</span><br><span class=\"line\">br<span class=\"selector-pseudo\">:before</span>       &#123; <span class=\"attribute\">content</span>: <span class=\"string\">&quot;\\A&quot;</span>; <span class=\"attribute\">white-space</span>: pre-line &#125;</span><br><span class=\"line\">center          &#123; <span class=\"attribute\">text-align</span>: center &#125;</span><br><span class=\"line\"><span class=\"selector-pseudo\">:link</span>, <span class=\"selector-pseudo\">:visited</span> &#123; <span class=\"attribute\">text-decoration</span>: underline &#125;</span><br><span class=\"line\"><span class=\"selector-pseudo\">:focus</span>          &#123; <span class=\"attribute\">outline</span>: thin dotted invert &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Begin bidirectionality settings (do not change) */</span></span><br><span class=\"line\">BDO<span class=\"selector-attr\">[DIR=<span class=\"string\">&quot;ltr&quot;</span>]</span>  &#123; <span class=\"attribute\">direction</span>: ltr; <span class=\"attribute\">unicode-bidi</span>: bidi-override &#125;</span><br><span class=\"line\">BDO<span class=\"selector-attr\">[DIR=<span class=\"string\">&quot;rtl&quot;</span>]</span>  &#123; <span class=\"attribute\">direction</span>: rtl; <span class=\"attribute\">unicode-bidi</span>: bidi-override &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">*<span class=\"selector-attr\">[DIR=<span class=\"string\">&quot;ltr&quot;</span>]</span>    &#123; <span class=\"attribute\">direction</span>: ltr; <span class=\"attribute\">unicode-bidi</span>: embed &#125;</span><br><span class=\"line\">*<span class=\"selector-attr\">[DIR=<span class=\"string\">&quot;rtl&quot;</span>]</span>    &#123; <span class=\"attribute\">direction</span>: rtl; <span class=\"attribute\">unicode-bidi</span>: embed &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> print &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">h1</span>            &#123; <span class=\"attribute\">page-break-before</span>: always &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">h1</span>, <span class=\"selector-tag\">h2</span>, <span class=\"selector-tag\">h3</span>,</span><br><span class=\"line\">  <span class=\"selector-tag\">h4</span>, <span class=\"selector-tag\">h5</span>, <span class=\"selector-tag\">h6</span>    &#123; <span class=\"attribute\">page-break-after</span>: avoid &#125;</span><br><span class=\"line\">  <span class=\"selector-tag\">ul</span>, <span class=\"selector-tag\">ol</span>, <span class=\"selector-tag\">dl</span>    &#123; <span class=\"attribute\">page-break-before</span>: avoid &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"定位方案\"><a href=\"#定位方案\" class=\"headerlink\" title=\"定位方案\"></a>定位方案</h4><p>CSS中有三种定位方案：</p>\n<ul>\n<li>普通：根据对象在文档中的位置进行定位，也就是说对象在呈现树中的位置和它在DOM树中的位置相似，并根据其框类型和尺寸进行布局。</li>\n<li>浮动：脱离文档流，对象先按照普通流进行布局，然后尽可能地向左或向右移动。</li>\n<li>绝对：完全脱离文档流，对象在呈现树中的位置和它在DOM树中的位置不同。</li>\n</ul>\n<p>定位方案是由“position”属性和“float”属性设置的。如果值是<code>static</code>和<code>relative</code>，就是普通流，如果值是 <code>absolute</code>和<code>fixed</code>，就是绝对定位。</p>\n<h4 id=\"盒类型\"><a href=\"#盒类型\" class=\"headerlink\" title=\"盒类型\"></a>盒类型</h4><ul>\n<li><code>block</code>：形成一个block，在浏览器窗口中拥有其自己的矩形区域。</li>\n<li><code>inline</code>：没有自己的 block，但是位于容器 block 内。</li>\n</ul>\n<p>block一个接一个地垂直排布，而inline则是水平排布。</p>\n<h4 id=\"定位\"><a href=\"#定位\" class=\"headerlink\" title=\"定位\"></a>定位</h4><ul>\n<li>相对定位：先按照普通方式定位，然后根据所需偏移量进行移动。</li>\n<li>浮动：浮动框会移动到行的左边或右边。有趣的特征在于，其他框会浮动在它的周围。</li>\n<li>绝对定位和固定定位：这种布局是准确定义的，与普通流无关。元素不参与普通流。尺寸是相对于容器而言的。在固定定位中，容器就是可视区域。</li>\n</ul>\n<p>更具体的分析可以参见CSS2.1中对normal flow，float和absolute做的<a href=\"https://www.w3.org/TR/CSS2/visuren.html#comparison\">讲解</a>。</p>\n<h4 id=\"层级\"><a href=\"#层级\" class=\"headerlink\" title=\"层级\"></a>层级</h4><p>这是由<code>z-index</code>属性指定的。它代表了框的第三个维度，也就是沿“z 轴”方向的位置。这些框分散到多个堆栈（称为堆栈上下文）中。在每一个堆栈中，会首先绘制后面的元素，然后在顶部绘制前面的元素，以便更靠近用户。如果出现重叠，新绘制的元素就会覆盖之前的元素。</p>\n<p>堆栈是按照<code>z-index</code>属性进行排序的。具有<code>z-index</code>属性的框形成了本地堆栈。视口具有外部堆栈。更多描述参考<a href=\"https://www.w3.org/TR/CSS2/visuren.html#z-index\">CSS2.1 z-index</a></p>\n",
            "tags": [
                "CSS",
                "reflow",
                "repaint"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2017/04/10/how-browsers-work-1/",
            "url": "http://shenlvmeng.github.com/blog/2017/04/10/how-browsers-work-1/",
            "title": "浏览器是如何工作的 上 解析与呈现",
            "date_published": "2017-04-10T12:27:40.000Z",
            "content_html": "<blockquote>\n<p>下篇传送门： <a href=\"https://shenlvmeng.github.io/blog/2017/04/11/how-browsers-work-2/\">浏览器是如何工作的 下 布局与绘制</a></p>\n</blockquote>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>本文主要翻译于Tali Garsiel在2009年10月的一篇介绍Webkit和Gecko内核的经典文章<a href=\"http://taligarsiel.com/Projects/howbrowserswork1.htm\">How browsers work</a>。尽管在面试和工作上用不到这么细节，但是学习浏览器的内部原理将让我们可以更好地理解一些最优开发实践的道理。</p>\n<h3 id=\"浏览器\"><a href=\"#浏览器\" class=\"headerlink\" title=\"浏览器\"></a>浏览器</h3><p>浏览器可以说是PC和移动设备上最常用的软件应用了。目前的主流浏览器有5个：IE，Firefox，Safari，Chrome和Opera。浏览器的主要功能是协助用户向服务器发起请求，并在窗口中展示请求的网络资源（HTML文档，或图片，或pdf文档，或其他可以被URI指定位置的类型）。</p>\n<p>浏览器解释并展示HTML稳当的方式规定在HTML和CSS规范中。这些规范由<a href=\"https://www.w3.org/\">W3C</a>组织制订和维护。但是多年来，各浏览器并没有完全遵从这些规范（直到现在也是如此），从而带来兼容性的问题。</p>\n<p>从高层来看，浏览器的用户界面（并没有规范去规定它该如何设计）是类似的，有用来输入URI的地址栏，前进和后退按钮，书签管理选项，刷新和停止刷新按钮，主页按钮等。这些最佳实践是自然发展和相互模仿的结果。它的背后由下面的一些组件组成：</p>\n<ul>\n<li>用户界面和界面后端，即UI</li>\n<li>浏览器引擎，负责在UI和浏览器各组件间传递指令</li>\n<li>渲染引擎，负责渲染请求的内容</li>\n<li>网络，底层的网络调用</li>\n<li>JavaScript引擎</li>\n<li>数据存储，持久化存储浏览器的各种数据</li>\n</ul>\n<p><img src=\"/blog/blog/images/browser/layers.png\"></p>\n<div class=\"tip\">值得注意的是，Chrome的每个标签页分别对应一个渲染引擎实例，且都是一个独立的进程。（知道为什么Chrome那么吃内存了么😂）\n</div>\n\n<h3 id=\"渲染引擎\"><a href=\"#渲染引擎\" class=\"headerlink\" title=\"渲染引擎\"></a>渲染引擎</h3><p>渲染引擎的工作是渲染（文章原话），默认情况下，渲染引擎能呈现HTML、XML文档和图片。通过插件还可以展示其他类型内容（如PDF查看器插件显示PDF文档）。文章主要讨论了Firefox的Gecko引擎和Chrome的<a href=\"http://webkit.org/\">Webkit</a>引擎。</p>\n<p>渲染引擎的主要流程大致是获取并解析HTML文档构建DOM树，之后创建呈现树，呈现树包含有视觉属性（如颜色和尺寸），最后进入布局和绘制阶段。需要指出的是，这是个复杂和渐进的过程，为了更好地用户体验，渲染引擎通常会先将解析完成的部分HTML显示出来。下面是Webkit和Gecko的渲染引擎主流程。</p>\n<p><img src=\"/blog/blog/images/browser/geckoflow.jpg\" alt=\"Webkit\"></p>\n<p><img src=\"/blog/blog/images/browser/webkitflow.png\" alt=\"Gecko\"></p>\n<p>Gecko和Webkit的术语略有不同，整体流程却是相似的。Gecko将视觉格式化元素组成的树称为“框架树”。每个元素都是一个框架。WebKit使用的术语是“呈现树”，它由“呈现对象”组成。对于元素的放置，WebKit 使用的术语是“布局”，而Gecko称之为“重排”。另外，Gecko在HTML和DOM树间还有一个称为“内容槽”的层用于生成DOM元素。</p>\n<h4 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h4><p>关于解析HTML文档，<a href=\"http://taligarsiel.com/Projects/howbrowserswork1.htm#Parsing_general\">原文</a>做了详尽深入的讲解。由于侧重点不同，这里做些精炼。</p>\n<p>解析文档是指将文档转化成为有意义的结构，也就是可让代码理解和使用的结构。解析得到的结果通常是代表了文档结构的节点树，它称作解析树或者语法树。</p>\n<p>解析的过程通常分为<strong>词法分析</strong>和<strong>语法分析</strong>。前者是指将内容拆解成合法标记的过程，由词法分析器完成；后者指应用语言的语法规则，由解析器完成。</p>\n<p><img src=\"/blog/blog/images/browser/parse.png\"></p>\n<p>词汇通常用正则表达式表示。例如，我们的示例语言可以定义如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INTEGER :0|[1-9][0-9]*</span><br><span class=\"line\">PLUS : +</span><br><span class=\"line\">MINUS: - </span><br></pre></td></tr></table></figure>\n\n<p>正如您所看到的，这里用正则表达式给出了整数的定义。语法通常使用一种称为<a href=\"https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form\">BNF</a>的格式来定义。我们的示例语言可以定义如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expression :=  term  operation  term</span><br><span class=\"line\">operation :=  PLUS | MINUS</span><br><span class=\"line\">term := INTEGER | expression</span><br></pre></td></tr></table></figure>\n\n<p>之前我们说过，如果语言的语法是与<a href=\"https://en.wikipedia.org/wiki/Context-free_grammar\">上下文无关</a>的语法，就可以由常规解析器进行解析。与上下文无关的语法的直观定义就是可以完全用BNF格式表达的语法。</p>\n<h5 id=\"解析器\"><a href=\"#解析器\" class=\"headerlink\" title=\"解析器\"></a>解析器</h5><p>有两种基本类型的解析器：<strong>自上而下解析器</strong>和<strong>自下而上解析器</strong>。直观地来说，自上而下的解析器从语法的高层结构出发，尝试从中找到匹配的结构。而自下而上的解析器从低层规则出发，将输入内容逐步转化为语法规则，直至满足高层规则。</p>\n<p>例如，我们要解析一个<code>2 + 3 - 1</code>的表达式，自上而下的解析器会从高层的规则开始：首先将<code>2 + 3</code>标识为一个表达式，然后将<code>2 + 3 - 1</code>标识为一个表达式。自下而上的解析器将扫描输入内容，找到匹配的规则后，将匹配的输入内容替换成规则。如此继续替换，直到输入内容的结尾。部分匹配的表达式保存在解析器的堆栈中。</p>\n<p>有一些工具可以帮助您生成解析器，它们称为解析器生成器。您只要向其提供您所用语言的语法（词汇和语法规则），它就会生成相应的解析器。WebKit使用了两种非常有名的解析器生成器：用于创建词法分析器的Flex以及用于创建解析器的Bison。Flex的输入是包含标记的正则表达式定义的文件。Bison的输入是采用BNF格式的语言语法规则。</p>\n<p>事情到了HTML这里变得麻烦了些。首先，HTML解析器的任务是将HTML标记解析成解析树。HTML词汇和语法在W3C的规范（目前版本是HTML5）中有着定义。但是HTML并不能很容易地用解析器所需的与上下文无关的语法来定义。HTML的正规格式DTD（Document Type Definition）并不是一种上下文无关的语法。</p>\n<p>原因就是HTML并不是XML。HTML最初野蛮生长的日子里，实现方式不一而足，HTML的严格版变体XHTML并没有得到广泛的支持。为了保证兼容性，饶了诸多浏览器一命，包容许多并不合适的使用方式，简化网络开发。DTD中的严格模式下是完全遵守HTML规范的。</p>\n<h4 id=\"HTML解析\"><a href=\"#HTML解析\" class=\"headerlink\" title=\"HTML解析\"></a>HTML解析</h4><p>解析器的输出<em>解析树</em>是由DOM元素和属性节点构成的树结构。DOM是文档对象模型 (Document Object Model) 的缩写。它是HTML文档的对象表示，同时也是JavaScript与HTML元素之间的接口。解析树的根节点是<code>Document</code>对象。DOM与标记tag间几乎是一一对应的关系。</p>\n<p>如上文所说，由于语言的宽容性和原内容的可更改性，HTML无法用常规的自上而下或自下而上的解析器来解析。根据原文的说法，<a href=\"https://www.w3.org/TR/html5/syntax.html#html-parser\">HTML的解析算法</a>由<strong>标记化</strong>和<strong>树构建</strong>组成。</p>\n<p>标记化是词法分析过程，将输入内容解析成多个标记。HTML标记包括起始标记、结束标记、属性名称和属性值。标记生成器识别标记，传递给树构造器，然后接受下一个字符以识别下一个标记；如此反复直到输入的结束。</p>\n<p><img src=\"/blog/blog/images/browser/parseflow.png\"></p>\n<p>其中<strong>标记化算法</strong>的输出结果是HTML标记。该算法使用状态机来表示。每一个状态接收来自输入信息流的一个或多个字符，并根据这些字符更新下一个状态。当前的标记化状态和树结构状态会影响进入下一状态的决定。算法相当复杂，无法在此详述，下面给出一个简要的示例（来自原文）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    Hello world</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>初始状态是数据状态。遇到字符<code>&lt;</code>时状态更改为“标记打开状态”。接收一个a-z字符会创建“起始标记”，状态更改为“标记名称状态”。这个状态会一直保持到接收<code>&gt;</code>字符。在此期间接收的每个字符都会附加到新的标记名称上。在本例中，我们创建的标记是<code>html</code>标记。</p>\n<p>遇到<code>&gt;</code>标记时，会发送当前的标记，状态改回“数据状态”。<code>&lt;body&gt;</code>标记也会进行同样的处理。目前<code>html</code>和<code>body</code>标记均已发出。现在我们回到“数据状态”。接收到 <code>Hello world</code>中的<code>H</code>字符时，将创建并发送字符标记，直到接收<code>&lt;/body&gt;</code>中的<code>&lt;</code>。我们将为<code>Hello world</code>中的每个字符都发送一个字符标记。</p>\n<p>现在我们回到“标记打开状态”。接收下一个输入字符<code>/</code>时，会创建<code>end tag token</code>并改为“标记名称状态”。我们会再次保持这个状态，直到接收<code>&gt;</code>。然后将发送新的标记，并回到“数据状态”。<code>&lt;/html&gt;</code>输入也会进行同样的处理。</p>\n<p><img src=\"/blog/blog/images/browser/tokeniser.png\"></p>\n<p>树构造器中运行着<strong>树构造算法</strong>。在创建解析器的同时，也会创建<code>Document</code>对象。在树构建阶段，以<code>Document</code>为根节点的DOM树也会不断进行修改，向其中添加各种元素。标记生成器发送的每个节点都会由树构建器进行处理。规范中定义了每个标记所对应的DOM元素，这些元素会在接收到相应的标记时创建。这些元素不仅会添加到DOM树中，还会添加到开放元素的堆栈中。此堆栈用于纠正嵌套错误和处理未关闭的标记。其算法类似标记化算法，也可以用状态机来描述。</p>\n<p>我们同样以上面的代码为例，树构建阶段的输入是一个来自标记化阶段的标记序列。第一个模式是<strong>initial mode</strong>。接收HTML标记后转为<strong>before html</strong>模式，并在这个模式下重新处理此标记。这样会创建一个<code>HTMLHtmlElement</code>元素，并将其附加到<code>Document</code>根对象上。</p>\n<p>然后状态将改为<strong>before head</strong>。此时我们接收<code>body</code>标记。即使我们的示例中没有<code>head</code>标记，系统也会隐式创建一个<code>HTMLHeadElement</code>，并将其添加到树中。</p>\n<p>现在我们进入了<strong>in head</strong>模式，然后转入<strong>after head</strong>模式。系统对<code>body</code>标记进行重新处理，创建并插入<code>HTMLBodyElement</code>，同时模式转变为<strong>in body</strong>。</p>\n<p>现在，接收由“Hello world”字符串生成的一系列字符标记。接收第一个字符时会创建并插入<code>Text</code>节点，而其他字符也将附加到该节点。</p>\n<p>接收<code>body</code>结束标记会触发<strong>after body</strong>模式。现在我们将接收HTML结束标记，然后进入<code>after after body</code>模式。接收到文件结束标记后，解析过程就此结束。</p>\n<p><img src=\"/blog/blog/images/browser/treebuilder.gif\"></p>\n<h4 id=\"解析后与容错机制\"><a href=\"#解析后与容错机制\" class=\"headerlink\" title=\"解析后与容错机制\"></a>解析后与容错机制</h4><p>在此阶段，浏览器会将文档标注为交互状态，并开始解析那些处于<code>deferred</code>模式的脚本，也就是那些应在文档解析完成后才执行的脚本。然后，文档状态将设置为“完成”，一个<code>load</code>事件随之触发。</p>\n<p>我们在浏览HTML网页时从来不会看到“语法无效”的错误。这是因为浏览器会纠正<strong>任何</strong>无效内容，然后继续工作。不同浏览器的错误处理机制相当一致，但这种机制却并不是HTML当前规范的一部分。和书签管理以及前进&#x2F;后退按钮一样，它也是浏览器在多年发展中的产物。很多网站都普遍存在着一些已知的无效HTML结构，每一种浏览器都会尝试通过和其他浏览器一样的方式来修复这些无效结构。</p>\n<p><a href=\"https://whatwg-cn.github.io/html/\">HTML5规范</a>定义了一部分这样的要求。WebKit在HTML解析器类的开头注释中对此做了很好的概括。</p>\n<blockquote><p>解析器对标记化输入内容进行解析，以构建文档树。如果文档的格式正确，就直接进行解析。</p>\n<p>遗憾的是，我们不得不处理很多格式错误的 HTML 文档，所以解析器必须具备一定的容错性。</p>\n<p>我们至少要能够处理以下错误情况：</p>\n<ol>\n<li>明显不能在某些外部标记中添加的元素。在此情况下，我们应该关闭所有标记，直到出现禁止添加的元素，然后再加入该元素。</li>\n<li>我们不能直接添加的元素。这很可能是网页作者忘记添加了其中的一些标记（或者其中的标记是可选的）。这些标签可能包括：HTML HEAD BODY TBODY TR TD LI（还有遗漏的吗？）。</li>\n<li>向inline元素内添加block元素。关闭所有inline元素，直到出现下一个较高级的block元素。</li>\n<li>如果这样仍然无效，可关闭所有元素，直到可以添加元素为止，或者忽略该标记。</li>\n</ol>\n</blockquote>\n\n<p><a href=\"http://taligarsiel.com/Projects/howbrowserswork1.htm#Browsers_error_tolerance\">错误的情况</a>包括错误使用<code>&lt;br&gt;</code>，离散表格，过于复杂的标记层级结构。错误的html或body结束标记等。Webkit的具体代码展示略。</p>\n<h4 id=\"CSS解析\"><a href=\"#CSS解析\" class=\"headerlink\" title=\"CSS解析\"></a>CSS解析</h4><p>和HTML不同，CSS是上下文无关的语法，可以使用简介中描述的各种解析器进行解析。词法语法（词汇）是针对各个标记用正则表达式定义的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">comment   \\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\/</span><br><span class=\"line\">num   [0-9]+|[0-9]*&quot;.&quot;[0-9]+</span><br><span class=\"line\">nonascii  [\\200-\\377]</span><br><span class=\"line\">nmstart   [_a-z]|&#123;nonascii&#125;|&#123;escape&#125;</span><br><span class=\"line\">nmchar    [_a-z0-9-]|&#123;nonascii&#125;|&#123;escape&#125;</span><br><span class=\"line\">name    &#123;nmchar&#125;+</span><br><span class=\"line\">ident   &#123;nmstart&#125;&#123;nmchar&#125;*</span><br></pre></td></tr></table></figure>\n\n<p>其中<code>ident</code>表示标识符，如类名。<code>name</code>是元素ID。</p>\n<p>语法则是采用 BNF 格式描述的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ruleset</span><br><span class=\"line\">  : selector [ &#x27;,&#x27; S* selector ]*</span><br><span class=\"line\">    &#x27;&#123;&#x27; S* declaration [ &#x27;;&#x27; S* declaration ]* &#x27;&#125;&#x27; S*</span><br><span class=\"line\">  ;</span><br><span class=\"line\">selector</span><br><span class=\"line\">  : simple_selector [ combinator selector | S+ [ combinator? selector ]? ]?</span><br><span class=\"line\">  ;</span><br><span class=\"line\">simple_selector</span><br><span class=\"line\">  : element_name [ HASH | class | attrib | pseudo ]*</span><br><span class=\"line\">  | [ HASH | class | attrib | pseudo ]+</span><br><span class=\"line\">  ;</span><br><span class=\"line\">class</span><br><span class=\"line\">  : &#x27;.&#x27; IDENT</span><br><span class=\"line\">  ;</span><br><span class=\"line\">element_name</span><br><span class=\"line\">  : IDENT | &#x27;*&#x27;</span><br><span class=\"line\">  ;</span><br><span class=\"line\">attrib</span><br><span class=\"line\">  : &#x27;[&#x27; S* IDENT S* [ [ &#x27;=&#x27; | INCLUDES | DASHMATCH ] S*</span><br><span class=\"line\">    [ IDENT | STRING ] S* ] &#x27;]&#x27;</span><br><span class=\"line\">  ;</span><br><span class=\"line\">pseudo</span><br><span class=\"line\">  : &#x27;:&#x27; [ IDENT | FUNCTION S* [IDENT S*] &#x27;)&#x27; ]</span><br><span class=\"line\">  ;</span><br></pre></td></tr></table></figure>\n\n<p>如其中的<code>ruleset</code>表示，这个规则集是一个选择器，或者由逗号和空格（S表示空格）分隔的多个（数量可选）选择器。规则集包含了大括号，以及其中的一个或多个（数量可选）由分号分隔的声明。</p>\n<p>Webkit使用Flex和Bison解析器生成器，通过 CSS 语法文件自动创建解析器。Firefox 使用的是人工编写的自上而下的解析器。这两种解析器都会将CSS文件解析成<code>StyleSheet</code>对象，且每个对象都包含CSS规则。</p>\n<h4 id=\"JS和CSS的处理\"><a href=\"#JS和CSS的处理\" class=\"headerlink\" title=\"JS和CSS的处理\"></a>JS和CSS的处理</h4><blockquote>\n<p>这也是经常的考点</p>\n</blockquote>\n<h5 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h5><p><strong>解析器遇到<code>&lt;script&gt;</code>标记时会立即解析并执行脚本。文档的解析将停止，直到脚本执行完毕</strong>。如果脚本是外部的，那么解析过程会停止，直到从网络同步抓取资源完成后再继续。此模型已经使用了多年，也在HTML4和HTML5规范中进行了指定。</p>\n<p>脚本标注为<strong>defer</strong>时，它不会停止文档解析，而是等到解析结束才执行。HTML5中还增加了一个选项<code>async</code>，可将脚本标记为异步，在资源下载完毕后立即执行。</p>\n<h5 id=\"预解析\"><a href=\"#预解析\" class=\"headerlink\" title=\"预解析\"></a>预解析</h5><p>WebKit和Firefox都进行了这项优化。在执行脚本时，其他线程会解析文档的其余部分，找出并加载需要通过网络加载的其他资源。通过这种方式，资源可以在并行连接上加载，从而提高总体速度。但是，<strong>预解析器不会修改DOM树</strong>，而是将这项工作交由主解析器处理；预解析器只会解析外部资源（例如外部脚本、样式表和图片）的引用。</p>\n<h5 id=\"样式表\"><a href=\"#样式表\" class=\"headerlink\" title=\"样式表\"></a>样式表</h5><p>理论上来说，应用样式表不会更改DOM树，因此似乎没有必要等待样式表并停止文档解析。但这涉及到一个问题，就是脚本在文档解析阶段会请求样式信息。如果当时还没有加载和解析样式，脚本就会获得错误的回复。</p>\n<p>从而，Firefox在样式表加载和解析的过程中，会禁止所有脚本。而对于WebKit而言，仅当脚本尝试访问的样式属性可能受尚未加载的样式表影响时，它才会禁止该脚本。</p>\n<h4 id=\"呈现树\"><a href=\"#呈现树\" class=\"headerlink\" title=\"呈现树\"></a>呈现树</h4><p>在DOM树构建的同时，浏览器还会构建另一个树结构：呈现树（Render Tree）。这是由可视化元素按照其显示顺序而组成的树，也是文档的可视化表示。它的作用是让您按照正确的顺序绘制内容。</p>\n<p>Firefox将呈现树中的元素称为“框架”。WebKit使用的术语是呈现器或呈现对象。呈现器知道如何布局并将自身及其子元素绘制出来。</p>\n<p>每个呈现器都表示一个矩形区域，通常对应于相关节点的CSS框，这一点在CSS2规范中有所描述。它包含诸如宽度、高度和位置等几何信息。框的类型会受到与节点相关的<code>display</code>样式属性的影响。下面是Webkit根据<code>display</code>属性的不同，针对同一个DOM节点创建不同呈现器的例子：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">RenderObject* <span class=\"title\">RenderObject::createObject</span><span class=\"params\">(Node* node, RenderStyle* style)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  Document* doc = node-&gt;<span class=\"built_in\">document</span>();</span><br><span class=\"line\">  RenderArena* arena = doc-&gt;<span class=\"built_in\">renderArena</span>();</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  RenderObject* o = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">switch</span> (style-&gt;<span class=\"built_in\">display</span>()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> NONE:</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> INLINE:</span><br><span class=\"line\">      o = <span class=\"built_in\">new</span> (arena) <span class=\"built_in\">RenderInline</span>(node);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> BLOCK:</span><br><span class=\"line\">      o = <span class=\"built_in\">new</span> (arena) <span class=\"built_in\">RenderBlock</span>(node);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> INLINE_BLOCK:</span><br><span class=\"line\">      o = <span class=\"built_in\">new</span> (arena) <span class=\"built_in\">RenderBlock</span>(node);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> LIST_ITEM:</span><br><span class=\"line\">      o = <span class=\"built_in\">new</span> (arena) <span class=\"built_in\">RenderListItem</span>(node);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">   ...</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"和DOM树关系\"><a href=\"#和DOM树关系\" class=\"headerlink\" title=\"和DOM树关系\"></a>和DOM树关系</h5><p>呈现器和DOM元素是一一对应的，但是呈现树则不是。<strong>非可视化的DOM元素不会插入在呈现树中</strong>，例如<code>head</code>元素，或是<code>display</code>设为none的元素。同时，还有<strong>一些DOM元素对应着多个可视化对象</strong>，例如<code>select</code>元素。格式无效的HTML元素会根据CSS规范作出调整，如inline元素中同时包裹了block和inline元素（只能包含其中一种）。最后，<strong>有些呈现对象的位置和DOM节点位置不同</strong>，如浮动定位和绝对定位这样脱离文档流的元素。</p>\n<p><img src=\"/blog/blog/images/browser/rendertree.png\"></p>\n<h5 id=\"构建过程\"><a href=\"#构建过程\" class=\"headerlink\" title=\"构建过程\"></a>构建过程</h5><p>在Firefox中，<strong>展示层被注册为DOM更新的监听器</strong>。在监听到DOM改动后，展示层会把将框架创建工作委派给<code>FrameConstructor</code>，由其构造器解析样式并创建框架。</p>\n<p>在WebKit中，<strong>解析样式和创建呈现器的过程称为attachment</strong>。每个DOM节点都有一个<code>attach</code>方法用于完成此项工作。attach是<strong>同步</strong>进行的，将节点插入DOM树需要调用新的节点<code>attach</code>方法。</p>\n<p>处理<code>html</code>和<code>body</code>标记会构建呈现树根节点。这个根节点呈现对象对应于CSS规范中所说的<em>容器block</em>，这是最上层的 block，包含了其他所有block。它的尺寸就是视口，即浏览器窗口显示区域的尺寸。Firefox称之为<code>ViewPortFrame</code>，而WebKit称之为<code>RenderView</code>。这就是文档所指向的呈现对象。呈现树的其余部分以DOM树节点插入的形式来构建。</p>\n<p>W3C的CSS2.1规范中有提到<a href=\"https://www.w3.org/TR/CSS21/intro.html#processing-model\">解析模型</a>的问题。</p>\n<h5 id=\"样式计算\"><a href=\"#样式计算\" class=\"headerlink\" title=\"样式计算\"></a>样式计算</h5><p>构建呈现树时，需要计算每个呈现对象的可视化属性。这是通过每个元素的样式来完成的。样式包括来自各种来源的样式表、inline样式元素（即style属性）和HTML中的可视化属性（如<code>bgColor</code>, <code>width</code>）。样式表的来源包括浏览器的默认样式表、由网页作者提供的样式表以及由浏览器用户提供的用户样式表等。</p>\n<p>样式计算存在着许多困难：1）样式数据庞大，2）为元素查找匹配规则的过程复杂，3）CSS的层叠规则复杂。针对这些问题，firefox和Webkit有不同的处理方法。</p>\n<p>Webkit会引用样式对象（RenderStyle）。这些对象在某些情况下可被不同同级节点共享，这些节点还有下面的要求：</p>\n<ul>\n<li>鼠标状态相同，如都是<code>:hover</code></li>\n<li>没有元素ID</li>\n<li>tag名应匹配</li>\n<li>class属性应匹配</li>\n<li>链接状态（如<code>:active</code>）和焦点状态（如<code>:focus</code>）相同</li>\n<li>映射属性的集合完全相同</li>\n<li>不应被属性选择器匹配</li>\n<li>不能有任何inline样式属性</li>\n<li>不能使用同级选择器</li>\n</ul>\n<p>Firefox为简化运算，使用了另外两种树，<strong>规则树</strong>和<strong>样式上下文树</strong>，如下图所示。Webkit则通过DOM节点指向样式对象来实现。样式上下文包含端值。要计算出这些值，应按照正确顺序应用所有的匹配规则，并将其从逻辑值转化为具体的值。例如，如果逻辑值是屏幕大小的百分比，则需要换算成绝对的单位。</p>\n<p><img src=\"/blog/blog/images/browser/firefoxstyletree.png\"></p>\n<h6 id=\"规则树\"><a href=\"#规则树\" class=\"headerlink\" title=\"规则树\"></a>规则树</h6><p>规则树的设计将所有匹配规则都存储在树中，它包含了所有匹配规则。路径的路径中的底层节点拥有较高的优先级。规则树包含了所有已知规则匹配的路径。规则的存储是延迟进行的。规则树不会在开始的时候就为所有的节点进行计算，而是只有当某个节点样式需要进行计算时，才会向规则树添加计算的路径。</p>\n<p>原文从两个角度分析了规则树如何减少工作量：<strong>结构划分</strong>和<strong>通过规则树计算样式上下文</strong>。</p>\n<p>样式上下文可分割成多个结构。这些结构体包含了特定类别（如<code>border</code>或<code>color</code>）的样式信息。结构中的属性都是继承的或非继承的。继承属性如果未由元素定义，则继承自其父代。非继承属性（也称为“重置”属性）如果未进行定义，则使用默认值。</p>\n<p>规则树通过缓存整个结构（包含计算出的端值）为我们提供帮助。这一想法假定底层节点没有提供结构的定义，则可使用上层节点中的缓存结构。</p>\n<p>在计算某个特定元素的样式上下文时，我们首先计算规则树中的一条对应路径，或者使用一条现有的路径。然后我们沿此路径应用规则，在这个样式上下文中填充结构。我们从路径中拥有最高优先级的底层节点（通常也是最特殊的选择器）开始，并向上遍历规则树，直到结构填充完毕。</p>\n<p>如果该规则节点对于此结构没有任何规范，那么我们可以实现更好的优化：寻找路径更上层的节点，找到后指定完整的规范并指向相关节点即可。这是最好的优化方法，因为整个结构都能共享。这可以减少端值的计算量并节约内存。 </p>\n<p>如果我们找到了部分定义，就会向上遍历规则树，直到结构填充完毕。如果我们找不到结构的任何定义，那么假如该结构是<strong>继承</strong>类型，我们会在上下文树中指向父代的结构，这样也可以共享结构。如果是<code>reset</code>类型的结构，则会使用默认值。</p>\n<p>如果最特殊的节点确实添加了值，那么我们需要另外进行一些计算，以便将这些值转化成实际值。然后我们将结果缓存在树节点中，供子代使用。如果某个元素与其同级元素都指向同一个树节点，那么它们就可以<strong>共享整个样式上下文</strong>。</p>\n<p>下面用一个例子来讲解上面晦涩的说明：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;err&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div1&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        this is a <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;big&quot;</span>&gt;</span> big error <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        this is also a</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;big&quot;</span>&gt;</span> very  big  error<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span> error</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;err&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;div2&quot;</span>&gt;</span>another error<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;<span class=\"attribute\">margin</span>:<span class=\"number\">5px</span>;<span class=\"attribute\">color</span>:black&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.err</span> &#123;<span class=\"attribute\">color</span>:red&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.big</span> &#123;<span class=\"attribute\">margin-top</span>:<span class=\"number\">3px</span>&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span> <span class=\"selector-tag\">span</span> &#123;<span class=\"attribute\">margin-bottom</span>:<span class=\"number\">4px</span>&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#div1</span> &#123;<span class=\"attribute\">color</span>:blue&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#div2</span> &#123;<span class=\"attribute\">color</span>:green&#125;</span><br></pre></td></tr></table></figure>\n\n<p>为了简便起见，我们只需要填充两个结构：color 结构和 margin 结构。color 结构只包含一个成员（即“color”），而 margin 结构包含四条边。 形成的规则树如下图所示</p>\n<p><img src=\"/blog/blog/images/browser/styletree.png\"></p>\n<p>假设我们解析 HTML 时遇到了第二个<code>&lt;div&gt;</code>标记，我们需要为此节点创建样式上下文，并填充其样式结构。经过规则匹配，我们发现该<code>&lt;div&gt;</code>的匹配规则是第1、2和6条。这意味着规则树中已有一条路径可供我们的元素使用，我们只需要再为其添加一个节点以匹配第6条规则（规则树中的F节点）。我们将创建样式上下文并将其放入上下文树中。新的样式上下文将指向规则树中的F节点。</p>\n<p>现在我们需要填充样式结构。首先要填充的是<code>margin</code>结构。由于最后的规则节点(F)并没有添加到<code>margin</code>结构，我们需要上溯规则树，直至找到在先前节点插入中计算过的缓存结构，然后使用该结构。我们会在指定<code>margin</code>规则的最上层节点（即B节点）上找到该结构。</p>\n<p>我们已经有了<code>color</code>结构的定义，因此不能使用缓存的结构。由于<code>color</code>有一个属性，我们无需上溯规则树以填充其他属性。我们将计算端值（将字符串转化为RGB等）并在此节点上缓存经过计算的结构。</p>\n<p>第二个<code>&lt;span&gt;</code>元素处理起来更加简单。我们将匹配规则，最终发现它和之前的<code>span</code>一样指向规则G。由于我们找到了指向同一节点的同级，就可以共享整个样式上下文了，只需指向之<code>span</code>的上下文即可。</p>\n<h6 id=\"处理规则简化匹配\"><a href=\"#处理规则简化匹配\" class=\"headerlink\" title=\"处理规则简化匹配\"></a>处理规则简化匹配</h6><p>样式规则来源于外部样式表、inline样式属性、HTML可视化属性。后两者很容易匹配。CSS规则可能会棘手，可以对它进行一些处理，便于访问。</p>\n<p>样式表解析完毕后，系统会根据选择器将CSS规则添加到某个哈希表中。这些哈希表的选择器各不相同，包括ID、类名称、标记名称等，还有一种通用哈希表，适合不属于上述类别的规则。如果选择器是ID，规则就会添加到ID表中；如果选择器是类，规则就会添加到类表中，依此类推。这种处理可以大大简化规则匹配。我们无需查看每一条声明，只要从哈希表中提取元素的相关规则即可。以下面的CSS为例</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-class\">.error</span> &#123;<span class=\"attribute\">color</span>:red&#125;</span><br><span class=\"line\"><span class=\"selector-id\">#messageDiv</span> &#123;<span class=\"attribute\">height</span>:<span class=\"number\">50px</span>&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">div</span> &#123;<span class=\"attribute\">margin</span>:<span class=\"number\">5px</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<p>第一条规则将插入类表，第二条将插入ID表，而第三条将插入标记表。对于下面的HTML代码段：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;error&quot;</span>&gt;</span>an error occurred <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;messageDiv&quot;</span>&gt;</span>this is a message<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>我们首先会为p元素寻找匹配的规则。类表中有一个<code>error</code>键，在下面可以找到<code>p.error</code>的规则。div元素在ID表（键为 ID）和标记表中有相关的规则。剩下的工作就是找出哪些根据键提取的规则是真正匹配的了。</p>\n<h6 id=\"正确的层叠顺序\"><a href=\"#正确的层叠顺序\" class=\"headerlink\" title=\"正确的层叠顺序\"></a>正确的层叠顺序</h6><p>样式对象具有与可视化属性一一对应的属性（均为CSS属性但更为通用）。如果某个属性未由任何匹配规则所定义，那么部分属性可由父代元素样式对象继承。其他属性具有默认值。不过如果定义不止一个，就会出现麻烦，这时需要通过层叠顺序来解决。</p>\n<p>某个样式属性的声明可能会出现在多个样式表中，也可能在同一个样式表中出现多次。<strong>层叠</strong>顺序的重要性正体现在这里。根据CSS2规范，层叠的顺序为（优先级从低到高）：</p>\n<ol>\n<li>Browser declarations</li>\n<li>User normal declarations</li>\n<li>Author normal declarations</li>\n<li>Author important declarations</li>\n<li>User important declarations</li>\n</ol>\n<p>同样顺序的声明则会根据<strong>特异性(specity)<strong>进行排序，然后再是其</strong>指定顺序</strong>。HTML可视化属性会转换成匹配的CSS声明。它们被视为低优先级的Author normal declaration。</p>\n<p>那么特异性是什么意思呢？根据<a href=\"https://www.w3.org/TR/selectors/#specificity\">CSS3 selectors specificity</a>中的定义（和CSS2.1几乎一样），一个选择器的优先级计算如下：</p>\n<ol>\n<li>如果声明来自于<code>style</code>属性，而不是带有选择器的规则，则记为1，否则记为0 (&#x3D; a)</li>\n<li>记为选择器中ID属性的个数 (&#x3D; b)</li>\n<li>记为选择器中其他属性和伪类的个数 (&#x3D; c)</li>\n<li>记为选择器中元素名称和伪元素的个数 (&#x3D; d)</li>\n</ol>\n<p>将四个数字按a-b-c-d这样连接起来（位于大数进制的数字系统中），构成特异性。所使用的进制取决于上述类别中的最高计数。例如，如果a&#x3D;14，可以使用十六进制。如果a&#x3D;17，那么需要使用十七进制；不过在正常使用中，几乎不会使用到如此深嵌套层级的选择器。规范中给出的例子很好地演示了这种系统的工作方式。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*             &#123;&#125;  <span class=\"comment\">/* a=0 b=0 c=0 d=0 -&gt; specificity = 0,0,0,0 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">li</span>            &#123;&#125;  <span class=\"comment\">/* a=0 b=0 c=0 d=1 -&gt; specificity = 0,0,0,1 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:first</span>-line &#123;&#125;  <span class=\"comment\">/* a=0 b=0 c=0 d=2 -&gt; specificity = 0,0,0,2 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">li</span>         &#123;&#125;  <span class=\"comment\">/* a=0 b=0 c=0 d=2 -&gt; specificity = 0,0,0,2 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ol</span>+<span class=\"selector-tag\">li</span>      &#123;&#125;  <span class=\"comment\">/* a=0 b=0 c=0 d=3 -&gt; specificity = 0,0,0,3 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span> + *<span class=\"selector-attr\">[rel=up]</span>&#123;&#125;  <span class=\"comment\">/* a=0 b=0 c=1 d=1 -&gt; specificity = 0,0,1,1 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span> <span class=\"selector-tag\">ol</span> <span class=\"selector-tag\">li</span><span class=\"selector-class\">.red</span>  &#123;&#125;  <span class=\"comment\">/* a=0 b=0 c=1 d=3 -&gt; specificity = 0,0,1,3 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">li</span><span class=\"selector-class\">.red</span><span class=\"selector-class\">.level</span>  &#123;&#125;  <span class=\"comment\">/* a=0 b=0 c=2 d=1 -&gt; specificity = 0,0,2,1 */</span></span><br><span class=\"line\"><span class=\"selector-id\">#x34y</span>         &#123;&#125;  <span class=\"comment\">/* a=0 b=1 c=0 d=0 -&gt; specificity = 0,1,0,0 */</span></span><br></pre></td></tr></table></figure>\n\n<p>找到匹配的规则之后，应根据级联顺序将其排序。WebKit对于较小的列表会使用冒泡排序，对较大的列表使用归并排序。</p>\n",
            "tags": [
                "HTML",
                "CSS",
                "DOM"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2017/04/06/mobile-uiue-experience/",
            "url": "http://shenlvmeng.github.com/blog/2017/04/06/mobile-uiue-experience/",
            "title": "移动端页面切图自适应方案和体验优化经验",
            "date_published": "2017-04-06T14:16:00.000Z",
            "content_html": "<p>最近在做活动页切图时，遇到了针对不同尺寸移动设备屏幕适配的问题。相信这个问题是有移动端前端开发经验的攻城狮们都遇到过的。再加上一些优化体验，这里简单写一些经验。</p>\n<h3 id=\"像素完美\"><a href=\"#像素完美\" class=\"headerlink\" title=\"像素完美\"></a>像素完美</h3><p>像素完美是UI设计师的终极目标之一（其余的还有分辨率无关，多平台体验一致等）。但是切图中不可避免地会使用到类似<code>background-image</code>这样设置背景CSS样式的属性，之后再将一些交互元素通过绝对定位或是其他方式放在它视觉上应该出现的位置。在移动端设备宽度不一时，交互元素的位置如何保值像素完美的一致呢。</p>\n<p>最容易想到的方法是<strong>百分比布局</strong>，保证设计师设计的美美的UI界面可以自适应地等比扩充到整个页面。不过这样会让交互元素的位置摆放很难办，难以保证设备兼容性。<strong>flex布局</strong>也是种常见的解决方案，但距离像素完美还有距离。</p>\n<p>于是，我在上一次实践中，采用了<strong>固定宽度</strong>的处理方式（这并不是一种好的实践），CSS样式写起来大概是下面这样的。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">414px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.bkg</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;./bkg.png&#x27;</span>);</span><br><span class=\"line\">  <span class=\"attribute\">background-size</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-repeat</span>: repeat-y;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>margin: 0 auto</code>是为了保证PC端居中的兼容性。这么写可以让交互元素定位时没有了设备宽度不同的后顾之忧。不过，在页面打开后，宽度较大使得页面出现横向滚动条，在绝大多数的移动端页面都不是种好的体验。的确，可以在<code>meta</code>标签中，设置<code>user-scalable=yes</code>来实现宽度上的自适应。但是，放开了页面缩放的限制也不是好的实践方式。</p>\n<p>这次活动页参考的使用<strong>rem</strong>的方式（淘宝最早实践的）是一种明显更好的方法。<code>rem</code>是CSS3中出现的新属性，它是root em的缩写。和<code>em</code>不同的是，<code>rem</code>使用整个html的<code>font-size</code>作为尺寸的参考。只需要改变html的<code>font-size</code>，所有使用了<code>rem</code>属性的元素大小都会等比例地变化。于是，下面的一段代码轻松地实现了<strong>移动端</strong>的自适应方案。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"keyword\">function</span>(<span class=\"params\">win, doc</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> docEl = doc.<span class=\"property\">documentElement</span>,</span><br><span class=\"line\">    resizeEvt = <span class=\"string\">&#x27;onorientationchange&#x27;</span> <span class=\"keyword\">in</span> <span class=\"variable language_\">window</span> ? <span class=\"string\">&#x27;orientationchange&#x27;</span> : <span class=\"string\">&#x27;resize&#x27;</span>,</span><br><span class=\"line\">    recalc = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> clientWidth = docEl.<span class=\"property\">clientWidth</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!clientWidth) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (clientWidth &gt;= <span class=\"number\">750</span>) &#123;</span><br><span class=\"line\">       docEl.<span class=\"property\">style</span>.<span class=\"property\">fontSize</span> = <span class=\"string\">&#x27;100px&#x27;</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        docEl.<span class=\"property\">style</span>.<span class=\"property\">fontSize</span> = <span class=\"number\">100</span> * (clientWidth / <span class=\"number\">750</span>) + <span class=\"string\">&#x27;px&#x27;</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  <span class=\"comment\">//省去addEventListener兼容性处理</span></span><br><span class=\"line\">  win.<span class=\"title function_\">addEventListener</span>(resizeEvt, recalc, <span class=\"literal\">false</span>);</span><br><span class=\"line\">  doc.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;DOMContentLoaded&#x27;</span>, recalc, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;)(<span class=\"variable language_\">window</span>, <span class=\"variable language_\">document</span>);</span><br></pre></td></tr></table></figure>\n\n<p>代码里假设UI设计稿原始宽度为750px。大意是：</p>\n<ul>\n<li>页面宽度超过750px时，<code>document</code>的字体大小恒为100px，此时页面中涉及尺寸的CSS样式部分统统用<code>&#123;像素值&#125; / 100 rem</code>书写。之所以使用100px正是为了换算时方便</li>\n<li>页面宽度小于750px时，<code>document</code>等比缩小字体大小，页面中使用<code>rem</code>的元素都会等比缩小。从而保证交互元素不错位。</li>\n</ul>\n<p>效果类似<a href=\"https://m.taobao.com/#index\">淘宝手机站</a>。使用<code>rem</code>布局需要注意:</p>\n<ul>\n<li>在<code>&lt;head&gt;</code>中放置这段代码，保证在页面元素渲染前确定<code>font-size</code>大小，避免<em>闪屏</em>现象出现影响体验。</li>\n<li>PC端可以使用<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries\">媒体查询</a>，<code>rem</code>在移动端使用较多</li>\n<li><code>rem</code>方案可以使用在页面的一部分，在宽度固定的元素中使用flex这样的方案</li>\n</ul>\n<h3 id=\"用户体验\"><a href=\"#用户体验\" class=\"headerlink\" title=\"用户体验\"></a>用户体验</h3><p>上个活动页中遇到了一些优化体验的小地方，列在下面。</p>\n<ul>\n<li>禁止用户选中页面元素。这么做可以避免长按屏幕的选中，很明显地提升体验。<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">  -moz-user-select: none;</span><br><span class=\"line\">  -webkit-user-select: none;</span><br><span class=\"line\">  -ms-user-select: none;</span><br><span class=\"line\">  -khtml-user-select: none;</span><br><span class=\"line\">  user-select: none;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>禁止一些手机上为手机号码和邮箱地址进行的特殊处理<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;format-detection&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;telephone=no&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;format-detection&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;email=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>禁止页面缩放，很常见的需求<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;viewport&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;width=device-width, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>为二维码单独切图，可以解决长按二维码无法识别的问题</li>\n<li>输入框获得焦点时自动上移。可以通过<code>document.scrollTop</code>或设置输入框部分<code>position:fixed</code>实现</li>\n</ul>\n",
            "tags": [
                "CSS",
                "移动端",
                "UI",
                "自适应",
                "rem"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2017/03/18/how-to-construct-css/",
            "url": "http://shenlvmeng.github.com/blog/2017/03/18/how-to-construct-css/",
            "title": "BEM和CSS方法论",
            "date_published": "2017-03-18T08:49:06.000Z",
            "content_html": "<p>CSS是一种“奇怪”的编程语言，用来描述网页的样式。使用起来很简单，却由于自身的缺陷（只有全局作用域、没有模块化）使得它很难像真正的编程语言那样，有软件工程的办法适用。</p>\n<h2 id=\"BEM\"><a href=\"#BEM\" class=\"headerlink\" title=\"BEM\"></a>BEM</h2><p><a href=\"https://en.bem.info/\">BEM</a>是一个方法论，是一套使用CSS的惯例和约定，用于写出更具有维护性和重用性的CSS代码。BEM由<a href=\"https://yandex.com/company/\">Yandex</a>公司提出，目前已被广泛采用。它和其他的CSS的规范如<a href=\"http://oocss.org/\">OOCSS</a>，<a href=\"http://smacss.com/\">SMACSS</a>并不冲突。它们都用来提高CSS文件的可维护性。</p>\n<h3 id=\"规范\"><a href=\"#规范\" class=\"headerlink\" title=\"规范\"></a>规范</h3><p><strong>BEM</strong>的三个字母分别代表块（<strong>block</strong>）、元素（<strong>element</strong>）、修饰符（<strong>modifier</strong>）。根据<a href=\"http://getbem.com/introduction/\">官网</a>的介绍：</p>\n<ul>\n<li><code>Block</code>代表一个独立的抽象的组件</li>\n<li><code>Element</code>代表依附于<code>Block</code>的后代，用来形成一个完整的<code>block</code></li>\n<li><code>Modifier</code>代表<code>Block</code>或是<code>Element</code>的不同状态或版本，用来改变默认样式</li>\n</ul>\n<p>另外：</p>\n<ul>\n<li><strong>不要使用文档的层级结构</strong></li>\n<li><strong>在标签嵌套时，只使用一层嵌套</strong>，通过class名标注标签</li>\n</ul>\n<p>其中<code>Element</code>命名时在<code>Block</code>后添加两个短横线<code>--</code>，<code>Modifier</code>在<code>Block</code>后添加两个下划线<code>__</code>。<strong>所有的CSS均绑定到标签的class上</strong>，确保样式的重用性。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.block</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block__element</span>&#123;&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.block--modifier</span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>之所以采用两个短划线和下划线，是为了让用户自定义的块命名中可以含有单个短划线和下划线。</p>\n<p>下面是官网的样例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form form--theme-xmas form--simple&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;form__input&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">&quot;form__submit form__submit--disabled&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.form</span> &#123; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.form--theme-xmas</span> &#123; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.form--simple</span> &#123; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.form__input</span> &#123; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.form__submit</span> &#123; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.form__submit--disabled</span> &#123; &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h3><p>BEM正如上面介绍的那样，只是一套规范。在使用的时候会感觉类名有些冗长和奇怪。不过它带来的好处是很有价值的。</p>\n<p>另外，<strong>没有必要在每个地方都使用BEM规范</strong>。对于独立的一条CSS样式，写成BEM格式的写法并没有必要。对于考虑使用BEM的人来讲，可能最重要的是从哪里到哪里使用BEM。</p>\n<h2 id=\"OOCSS\"><a href=\"#OOCSS\" class=\"headerlink\" title=\"OOCSS\"></a>OOCSS</h2><p>写CSS代码很简单，但是写出可维护的CSS代码比其他语言就要更难了。因此，大牛们提出了OOCSS、SMACSS这样的<strong>设计模式</strong>来让事情更容易。OOCSS（Object Oriented CSS）即面向对象的CSS，它的关键在于创建在页面中创建模块化可重用的对象（HTML和CSS的结合体）。</p>\n<p>根据OOCSS之父Nicole Sullivan的说法，OOCSS重点在于：</p>\n<ol>\n<li>独立文档结构与样式</li>\n<li>独立文档容器和内容</li>\n</ol>\n<p>使用容易理解的话来说，就是从HTML结构上解脱出来，增加CSS class的重复利用。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">nav</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav--main&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span>.........<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span>.........<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span>.........<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>上面的例子里，业务代码经常会将CSS选择器写成<code>nav ul li a</code>这样的写法。这么做过渡依赖原有的HTML文档结构。原有的文档结构改变时，CSS就必须跟着重构。因此，建议直接给<code>a</code>标签绑定class，或写成<code>nav--main a</code>的写法。</p>\n<p>第二，减少使用id<strong>作为CSS的选择器</strong>。尽量使用class，类似<a href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\">OOP</a>中的概念，抽出重复的部分，定义在一个class中。像下面这样，定义基本的类<code>button</code>，并通过<code>button-default</code>和<code>button-primary</code>来拓展基本类。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;button button-default&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;button button-primary&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>总结一下，OOCSS的优势在于它可以减少CSS的代码减少加载时间（当然的），<strong>语义化的类名</strong>增强逻辑性和SEO，CSS样式可以轻松拓展，</p>\n<p>缺点在于它适合大型网站的开发，在小型项目中似乎用不到这种<em>40米的长刀</em>，同时没有巧妙地使用，创建的组件会适得其反增加，增加维护难度。</p>\n<h2 id=\"SMACSS\"><a href=\"#SMACSS\" class=\"headerlink\" title=\"SMACSS\"></a>SMACSS</h2><p><a href=\"https://smacss.com/\">SMACSS</a>(读作”smacks”)全称为Scalable and Modular Architecture for CSS。它也是CSS的框架规范之一，目标是让”<strong>keep CSS more organized and more structured, leading to code that is easier to build and easier to maintain（作者Jonathan Snook语）</strong>“</p>\n<p>SMACSS使用了一套5个类别来划分CSS，这种组织和结构规范了CSS写法，提高了CSS使用效率。</p>\n<ul>\n<li><strong>Base rules</strong> 类似与<code>reset.css</code>和<code>normalize.css</code>的效果，为文档的标签设置默认样式，<strong>应该只包含单独的标签选择器</strong></li>\n<li><strong>Layout rules</strong> 将文档分成诸如header，article，footer这样的各个部分，为布局中的每个部分设置样式</li>\n<li><strong>Module rules</strong> 页面中可重用部分的样式，在layout中出现多次，使用时避免出现标签选择器</li>\n<li><strong>State rules</strong> 用于描述element的不同状态，和基本规则组合使用。</li>\n<li><strong>Theme rules</strong> 类似与“皮肤”的概念，更改整个网站的主题。</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p><a href=\"https://github.com/css-modules/css-modules\">CSS Modules</a>和上面的思路要来的不大一样。它着眼于解决作用域和模块依赖的问题，采取的做法是重写class名。在React，Vue中每个组件中的CSS样式就做了这样的处理，保证的模块间的CSS文件不相冲突。</p>\n<p>在通过JavaScript绑定到特定class的标签上时，也造成了CSS维护的不变。必要的时候可以为HTML标签赋予专为JavaScript使用的类名。如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;nav--main__item js-nav--main__item&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span>&gt;</span>whatever<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>CSS是一门看起来很简单的语言，但是它的简单性也提升了工程中的使用难度。为了增强它的可用性。许多名为”xxxCSS”的方法论和机制等被发明，类似Sass，SCSS，Compass，Less，stylus，BEM，SMACSS，OOCSS，ACSS，CCSS等。在使用CSS时，可以尝试使用上面的规范，遵守一些<a href=\"http://cssguidelin.es/\">法则</a>，以写出更pure的代码。</p>\n<h2 id=\"扩展阅读\"><a href=\"#扩展阅读\" class=\"headerlink\" title=\"扩展阅读\"></a>扩展阅读</h2><ul>\n<li><a href=\"http://getbem.com/\">BEM</a></li>\n<li><a href=\"https://smacss.com/book\">SMACSS Book</a></li>\n<li><a href=\"http://www.w3cplus.com/css/oocss-concept\">OOCSS——概念篇</a></li>\n<li><a href=\"http://www.w3cplus.com/css/css-sass-scss-compass-less-bem-smacss-oocss-acss-ccss-wtfss.html\">CSS, Sass, SCSS, Compass, Less,BEM, SMACSS, OOCSS, ACSS, CCSS, WTFSS?</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000000388784\">编写可维护的CSS</a>(翻译自<a href=\"http://cssguidelin.es/\">CSS Guildelines</a>)</li>\n<li><a href=\"https://github.com/css-modules/css-modules\">CSS Modules</a></li>\n</ul>\n",
            "tags": [
                "CSS",
                "命名法"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2016/04/03/front-end-note-2/",
            "url": "http://shenlvmeng.github.com/blog/2016/04/03/front-end-note-2/",
            "title": "前端学习小计-CSS3和Flex",
            "date_published": "2016-04-03T12:57:26.000Z",
            "content_html": "<p>此篇承接上篇CSS和html5标签。写一些CSS3的新特性，flex布局和JS的基础知识。</p>\n<h2 id=\"CSS3\"><a href=\"#CSS3\" class=\"headerlink\" title=\"CSS3\"></a>CSS3</h2><p>CSS3是较新的层叠样式表的规范，其中的一些特性并未得到现行浏览器的支持。需要在样式前面加上-ms-, -moz-或是-webkit-，才可获得最好的浏览器支持。</p>\n<p>边框：CSS3支持设置圆角矩形（border-radius），边框阴影（box-shadow）甚至边框图片（border-image）.</p>\n<p>背景：设置背景大小和重复方式（background-size，background-repeat），设置背景所属范围和绘制区域（background-origin，background-clip）</p>\n<p>文本效果：文本阴影（text-shadow），断词方式（word-wrap），断句方式（word-break）</p>\n<p>字体：支持从外部导入字体（font-face）</p>\n<p>2D，3D变换：transform，有rotate，translate，scale，skew，translateX，translateY，rotateX，rotateY等属性。</p>\n<p>渐变：transition，选择属性，时间和变换函数。一般结合伪类（如:hover）使用。</p>\n<p>动画：keyframe（设置关键帧）+animation（决定动画的名称，持续时间，周期，方向等等）</p>\n<p>多列：column-count，column-gap，column-rule，column-span等属性</p>\n<p>用户界面：resize支持用户自己调整元素大小等等。</p>\n<p>更多内容可以参考<a href=\"http://www.w3school.com.cn/css3/index.asp\">W3scool的CSS3讲解</a>。</p>\n<h2 id=\"Flex布局\"><a href=\"#Flex布局\" class=\"headerlink\" title=\"Flex布局\"></a>Flex布局</h2><p>Flex是一种十分方面的布局方式，可以轻松实现居中对其等需求和响应式布局。目前在较新的浏览器中有支持。Flex需要在display属性中指定为flex。从而使得这个容器有了flex的特点。</p>\n<p>flex-direction：指定伸缩容器的主轴方向，即子元素伸缩的方向。有row，row-reverse，column，column-reverse等值。其中row是常用且默认的。</p>\n<p>flex-wrap：控制伸缩容器是单行或是多行，即侧轴新行的堆放方向。有no-wrap，wrap，wrap-reverse等值。默认值为no-wrap。</p>\n<p>flex-flow：通常将flex-direction和flex-wrap结合起来用flex-flow统一表示。</p>\n<p>align-items：控制容器内伸缩项目的侧轴对齐方式。有flex-start，flex-end，center，stretch，baseline等值。</p>\n<p>justify-content：主轴上伸缩项目的对齐方式。有flex-start，flex-end，center，space-between，space-around等值。</p>\n<p>align-content：多行间在伸缩容器里的对齐方式，有flex-start，flex-end，center，space-between，space-around，stretch等值。</p>\n<p>order：通过css动态更改子元素的排列顺序。默认为0，值越大顺序越靠前，可以取负值。</p>\n<p>flex-grow，flex-basis，flex-shrink等是更加复杂的用法。这里从略。结合@media screen and (max-width: xxxpx or min-width: xxxpx){ css code}会有很好的响应式布局效果。</p>\n<p>更多内容和展示效果，可以在<a href=\"http://www.w3cplus.com/css3/flexbox-basics.html\">w3plus的flex</a>讲解中找到。</p>\n<h2 id=\"JS与html经验小结\"><a href=\"#JS与html经验小结\" class=\"headerlink\" title=\"JS与html经验小结\"></a>JS与html经验小结</h2><p>不成篇幅，这里用列表的形式给出。</p>\n<ol>\n<li>alert()弹出对话框，无返回值；confirm()弹出确认框，返回boolean；prompt()弹出信息框，返回用户输入。</li>\n<li>document，window，element等是html的js接口中的常用对象，具体可以<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API\">MDN的技术文档</a>。</li>\n<li>element代表了页面DOM结构的节点，有文本节点和元素节点的区别。</li>\n<li>document中的常用函数包括getElementById，getElementsByTagName， getElementsByClassName，createElement等，element中有innerHtml，style，classname等属性值。</li>\n<li>添加元素，appendChild，insertBefore，都需要父元素调用，通过parentNode获得。反之，可以通过firstChild，lastChild，nextSibling等获知子元素情况。删除元素使用removeChild。</li>\n<li>parseInt()是JS的内建函数，用来将字符串转换为整型数，须开头为数字且遇到非数字为止。JS默认均用浮点数存储所有数据，通过isNaN判断是否为数字，isFinite判断是否为无穷。</li>\n<li>array是JS的基础数据类型之一，以键值对的形式存储，和hashtable很像，有push, reverse, sort, shift, unshift, push, pop, join，reduce等用法。</li>\n<li>有foreach的用法</li>\n<li>函数也是对象，有诸如arguments，length等属性。可以作为返回值或是输入值。甚至有制造函数的函数。</li>\n</ol>\n<p>更多内容可见<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\">MDN的技术文档</a>。</p>\n",
            "tags": [
                "css",
                "flex",
                "javascript"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2016/03/21/front-end-note-1/",
            "url": "http://shenlvmeng.github.com/blog/2016/03/21/front-end-note-1/",
            "title": "前端学习小计-H5标签",
            "date_published": "2016-03-21T04:37:45.000Z",
            "content_html": "<p>前言：与实验室同学参加百度前端学院，做了几个任务，做小小的总结如下。</p>\n<h2 id=\"html5标签\"><a href=\"#html5标签\" class=\"headerlink\" title=\"html5标签\"></a>html5标签</h2><p>html5标签增加了标签的语义化，更有助于爬虫爬取，代码阅读。对比无意义的div span等标签，article aside section等新标签的语义化更有助于文档结构化。</p>\n<ul>\n<li>article：独立的个体，可以是文章，博客等等。语义上article和article间是独立不相关的。</li>\n<li>section：彼此互补的部分，section间是有共同联系，互补的。section间共同构成一个整体。</li>\n<li>header：article的标题部分，可以是标题，作者，时间等等。</li>\n<li>hgroup：当标题部分的标题很多时，用hgroup包起来。只用h标签就能完成就不需要hgroup。</li>\n<li>aside：侧边栏，与article的主体部分相隔离，可以是额外介绍，可以是用户注册等。</li>\n<li>nav：导航栏，放置网站logo，导航列表等等。</li>\n<li>footer：尾注，可以是版权声明，帮助等等。</li>\n<li>caption：表题。可有可无。</li>\n<li>figure：放置图片，内设img标签。</li>\n<li>figcaption：图片标题</li>\n<li>cite&#x2F;var&#x2F;code&#x2F;samp&#x2F;kbd：引用、变量、代码、范例、键盘输入域</li>\n<li>datalist：输入列表</li>\n<li>time：时间，放置时间等，内有datetime属性</li>\n</ul>\n<p>使用html5标签，格式化文档，将大大增加代码可读性。</p>\n<h2 id=\"css布局\"><a href=\"#css布局\" class=\"headerlink\" title=\"css布局\"></a>css布局</h2><p>block代表块级元素，有宽和高独占一行；inline代表内联元素，无宽和高，不独占；inline-block内联块元素，不独占一行，有宽和高。</p>\n<p>position的取值有4中。static：默认，在文档流中；relative：相对于原位置位移，不移出文档流；absolute：相对于父容器位移，移出文档流；fixed，相当于屏幕位移，移出文档流；sticky，综合relative和fixed设置阈值。</p>\n<p>完成多栏设置时，可用inline-block,position:absolute,float。其中float适用性最广，inline-block最简洁，position最笨。使用float时，注意清除浮动。</p>\n",
            "tags": [
                "css",
                "html5"
            ]
        }
    ]
}