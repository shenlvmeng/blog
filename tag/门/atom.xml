<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://shenlvmeng.github.com/blog</id>
    <title>Shenlvmeng&#39;s Blog • Posts by &#34;门&#34; tag</title>
    <link href="http://shenlvmeng.github.com/blog" />
    <updated>2023-11-30T14:06:46.000Z</updated>
    <category term="总结" />
    <category term="制度" />
    <category term="道德" />
    <category term="文官" />
    <category term="万历" />
    <category term="明朝" />
    <category term="读书笔记" />
    <category term="展望" />
    <category term="2018" />
    <category term="2019" />
    <category term="flag" />
    <category term="2020" />
    <category term="2021" />
    <category term="2022" />
    <category term="2023" />
    <category term="面试" />
    <category term="前端" />
    <category term="FAQ" />
    <category term="HTML" />
    <category term="CSS" />
    <category term="style guide" />
    <category term="编程" />
    <category term="范式" />
    <category term="设计" />
    <category term="艺术" />
    <category term="质量" />
    <category term="async_hooks" />
    <category term="cls-hooked" />
    <category term="logId" />
    <category term="录音" />
    <category term="getUserMedia" />
    <category term="AudioContext" />
    <category term="PCM" />
    <category term="WAVE" />
    <category term="二叉搜索树" />
    <category term="算法" />
    <category term="回忆" />
    <category term="老朋友" />
    <category term="C" />
    <category term="Hash" />
    <category term="布隆过滤器" />
    <category term="字符串检索" />
    <category term="canvas" />
    <category term="流程图" />
    <category term="d3" />
    <category term="g6" />
    <category term="zrender" />
    <category term="processOn" />
    <category term="SDN" />
    <category term="cbench" />
    <category term="安装说明" />
    <category term="绘图" />
    <category term="动画" />
    <category term="攻略" />
    <category term="流水账" />
    <category term="成都" />
    <category term="重庆" />
    <category term="武汉" />
    <category term="重构" />
    <category term="代码" />
    <category term="代码风格" />
    <category term="数据可视化" />
    <category term="爬虫" />
    <category term="chrome" />
    <category term="crx" />
    <category term="扩展" />
    <category term="CORS" />
    <category term="跨域" />
    <category term="盒模型" />
    <category term="浮动" />
    <category term="Reactive Programming" />
    <category term="JavaScript" />
    <category term="Cycle.js" />
    <category term="Dart" />
    <category term="最佳实践" />
    <category term="引流" />
    <category term="universal-link" />
    <category term="app-link" />
    <category term="脚手架" />
    <category term="degit" />
    <category term="git" />
    <category term="设计模式" />
    <category term="类" />
    <category term="接口" />
    <category term="抽象类" />
    <category term="DOM" />
    <category term="Docker" />
    <category term="ONOS" />
    <category term="控制器" />
    <category term="虚拟化" />
    <category term="笔记" />
    <category term="UX" />
    <category term="UED" />
    <category term="准则" />
    <category term="Java" />
    <category term="Ruby" />
    <category term="反射" />
    <category term="编程范式" />
    <category term="鸭子类型" />
    <category term="管理" />
    <category term="效率" />
    <category term="知识工作者" />
    <category term="卓有成效" />
    <category term="Elm" />
    <category term="框架" />
    <category term="函数式编程" />
    <category term="虚网映射" />
    <category term="Javascript" />
    <category term="并发" />
    <category term="event loop" />
    <category term="覆盖率" />
    <category term="端到端测试" />
    <category term="istanbul" />
    <category term="istanbuljs" />
    <category term="JavaSript" />
    <category term="Express" />
    <category term="源码" />
    <category term="代码覆盖率" />
    <category term="istanbul-middleware" />
    <category term="代码插桩" />
    <category term="require钩子" />
    <category term="babel-plugin-istanbul" />
    <category term="css" />
    <category term="html5" />
    <category term="flex" />
    <category term="javascript" />
    <category term="roadmap" />
    <category term="闭包" />
    <category term="Haskell" />
    <category term="monad" />
    <category term="后端" />
    <category term="管理后台" />
    <category term="egg.js" />
    <category term="工作流" />
    <category term="pull request" />
    <category term="golang" />
    <category term="语言学习" />
    <category term="黑客与画家" />
    <category term="创业" />
    <category term="骑行" />
    <category term="海南" />
    <category term="图文" />
    <category term="reflow" />
    <category term="repaint" />
    <category term="命名法" />
    <category term="成功学" />
    <category term="自我建设" />
    <category term="HTTP" />
    <category term="HTTP/2" />
    <category term="SPDY" />
    <category term="QUIC" />
    <category term="HTTPS" />
    <category term="状态码" />
    <category term="网络攻击" />
    <category term="介绍" />
    <category term="图片渲染" />
    <category term="html2canvas" />
    <category term="dom-to-image" />
    <category term="electron" />
    <category term="indexedDB" />
    <category term="异步" />
    <category term="Generator" />
    <category term="thunk" />
    <category term="async" />
    <category term="函数表达式" />
    <category term="对象" />
    <category term="继承" />
    <category term="类型转换" />
    <category term="==" />
    <category term="类型判断" />
    <category term="猫" />
    <category term="杀手" />
    <category term="管理学" />
    <category term="领导力" />
    <category term="梯队" />
    <category term="移动端" />
    <category term="UI" />
    <category term="自适应" />
    <category term="rem" />
    <category term="Electron" />
    <category term="GUI" />
    <category term="gpx" />
    <category term="template" />
    <category term="Electron Builder" />
    <category term="PWA" />
    <category term="方法论" />
    <category term="夜话" />
    <category term="多线" />
    <category term="生活" />
    <category term="密码" />
    <category term="密钥" />
    <category term="技改" />
    <category term="Vue" />
    <category term="gulp" />
    <category term="瀑布流" />
    <category term="电影" />
    <category term="PHP" />
    <category term="参考" />
    <category term="思维" />
    <category term="学习能力" />
    <category term="右脑" />
    <category term="经济学" />
    <category term="宏观经济学" />
    <category term="术语" />
    <category term="GDP" />
    <category term="CPI" />
    <category term="储蓄" />
    <category term="投资" />
    <category term="金融市场" />
    <category term="股票" />
    <category term="债券" />
    <category term="美联储" />
    <category term="失业" />
    <category term="货币" />
    <category term="现值" />
    <category term="准备金" />
    <category term="货币中性" />
    <category term="通货膨胀" />
    <category term="汇率" />
    <category term="购买力" />
    <category term="净出口" />
    <category term="资产净流出" />
    <category term="总需求" />
    <category term="总供给" />
    <category term="流动性偏好" />
    <category term="乘数效应" />
    <category term="菲利普斯曲线" />
    <category term="微观经济学" />
    <category term="供求" />
    <category term="贸易" />
    <category term="市场" />
    <category term="税" />
    <category term="剩余" />
    <category term="外部性" />
    <category term="公共物品" />
    <category term="公共资源" />
    <category term="生产成本" />
    <category term="利润" />
    <category term="垄断" />
    <category term="价格歧视" />
    <category term="寡头" />
    <category term="垄断竞争" />
    <category term="生产要素市场" />
    <category term="贫困" />
    <category term="消费者选择理论" />
    <category term="不对称信息" />
    <category term="政治经济学" />
    <category term="行为经济学" />
    <category term="VSCode" />
    <category term="编辑器" />
    <category term="IDE" />
    <category term="hybrid" />
    <category term="JSBridge" />
    <category term="Web Worker" />
    <category term="Service Worker" />
    <category term="习惯" />
    <category term="lint" />
    <category term="editorconfig" />
    <category term="commit message" />
    <category term="量子物理" />
    <category term="史话" />
    <category term="埋点" />
    <category term="raven.js" />
    <category term="前端监控" />
    <category term="文本编辑器" />
    <category term="quill" />
    <category term="结构化数据" />
    <category term="React" />
    <category term="Hooks" />
    <category term="函数组件" />
    <category term="复用" />
    <category term="状态管理" />
    <category term="redux" />
    <category term="MobX" />
    <category term="代码质量" />
    <category term="重来" />
    <category term="requestAnimationFrame" />
    <category term="TypeScript" />
    <category term="路书" />
    <category term="gpx解析" />
    <category term="EXIF" />
    <category term="人类" />
    <category term="生存" />
    <category term="基因" />
    <category term="响应式编程" />
    <category term="RxJS" />
    <category term="成长" />
    <category term="业务" />
    <category term="思想" />
    <category term="程序设计" />
    <category term="心理学" />
    <category term="自我" />
    <category term="社会思维" />
    <category term="社会影响" />
    <category term="文化" />
    <category term="性别" />
    <category term="从众" />
    <category term="说服" />
    <category term="临床诊断" />
    <category term="陪审团" />
    <category term="司法" />
    <category term="物质主义" />
    <category term="健康" />
    <category term="社会关系" />
    <category term="偏见" />
    <category term="攻击行为" />
    <category term="亲密关系" />
    <category term="友谊" />
    <category term="爱情" />
    <category term="利他" />
    <category term="冲突" />
    <category term="和解" />
    <category term="软技能" />
    <category term="理财" />
    <category term="健身" />
    <category term="自我营销" />
    <category term="学习" />
    <category term="商业模式" />
    <category term="产品" />
    <category term="校园网" />
    <category term="互联网" />
    <category term="技术" />
    <category term="web开发" />
    <category term="哲思" />
    <category term="择偶观" />
    <category term="validator" />
    <category term="大文件" />
    <category term="visibilityChange" />
    <category term="IntersectionObserver" />
    <category term="图种" />
    <category term="draggable" />
    <category term="webpack" />
    <category term="z-index" />
    <category term="git submodule" />
    <category term="object-fit" />
    <category term="object-position" />
    <category term="BroadcastChannel" />
    <category term="extract-text-webpack-plugin" />
    <category term="lottie" />
    <category term="backface-visibility" />
    <category term="egret" />
    <category term="mock" />
    <category term="SSO" />
    <category term="autoprefixer" />
    <category term="polyfill" />
    <category term="Android" />
    <category term="ffmpeg" />
    <category term="React Hooks" />
    <category term="rollup" />
    <category term="CDN" />
    <category term="DNS" />
    <category term="CNAME" />
    <category term="架构" />
    <category term="组件" />
    <category term="ssh" />
    <category term="fis-receiver" />
    <category term="tmux" />
    <category term="origami" />
    <category term="promise" />
    <category term="encodeURI" />
    <category term="encodeURIComponent" />
    <category term="axios" />
    <category term="charles" />
    <category term="黑色幽默" />
    <category term="朋友" />
    <category term="梦" />
    <category term="濒死" />
    <category term="江南" />
    <category term="苏州" />
    <category term="无锡" />
    <category term="宜兴" />
    <category term="湖州" />
    <category term="南浔" />
    <category term="游记" />
    <category term="随笔" />
    <category term="群众" />
    <category term="理论" />
    <category term="实效" />
    <category term="测试" />
    <category term="长沙" />
    <category term="杭州" />
    <category term="湖南" />
    <category term="核酸" />
    <category term="美食" />
    <category term="云南" />
    <category term="丽江" />
    <category term="大理" />
    <category term="青岛" />
    <category term="济南" />
    <category term="山东" />
    <category term="西北" />
    <category term="银川" />
    <category term="西宁" />
    <category term="青海湖" />
    <category term="西海镇" />
    <category term="茶卡盐湖" />
    <category term="厦门" />
    <category term="感受" />
    <category term="C语言" />
    <category term="树" />
    <category term="主干开发" />
    <category term="GitFlow" />
    <category term="GithubFlow" />
    <category term="typescript" />
    <category term="类型系统" />
    <category term="webrtc" />
    <category term="RTMP" />
    <category term="首屏时间" />
    <category term="性能优化" />
    <category term="公司" />
    <category term="个人发展" />
    <category term="战略" />
    <category term="晋升" />
    <category term="哲学" />
    <category term="幸福" />
    <category term="人生" />
    <category term="叔本华" />
    <category term="Unix" />
    <category term="Rollup" />
    <category term="mouseout" />
    <category term="mouseleave" />
    <category term="lint-staged" />
    <category term="吸顶" />
    <category term="图片组件" />
    <category term="形式系统" />
    <category term="不完全性" />
    <category term="隐喻" />
    <category term="哥德尔" />
    <category term="巴赫" />
    <category term="埃舍尔" />
    <category term="济州" />
    <category term="西归浦" />
    <category term="城山" />
    <category term="咸德" />
    <category term="人工智能" />
    <category term="心智" />
    <category term="自指" />
    <category term="图灵" />
    <category term="马列主义" />
    <category term="恩格斯" />
    <category term="家庭" />
    <category term="国家" />
    <category term="阶级" />
    <category term="氏族" />
    <category term="哲学史" />
    <category term="孔子" />
    <category term="老子" />
    <category term="儒家" />
    <category term="道家" />
    <category term="佛教" />
    <category term="禅宗" />
    <category term="理学" />
    <category term="心学" />
    <category term="计算机" />
    <category term="微机原理" />
    <category term="门" />
    <category term="操作系统" />
    <category term="数字电路" />
    <category term="2024" />
    <entry>
        <id>http://shenlvmeng.github.com/blog/2023/11/30/language-hidden-behind-computer/</id>
        <title>《Code》—— 从手电筒到计算机</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2023/11/30/language-hidden-behind-computer/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;大纲向&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;《Code: The Hidden Language of Computer Hardware and
Software》书名挺长，但是本好书。要是大学时期的老师按照书里的思路展开计算机专业部分的课程，我也不至于学了两年编程还是囫囵吞枣，只能邯郸学步。书里顺带还涉及了信号系统、数字电路等计算机外的部分内容，简直不能更适合当做信息工程或通信工程专业学生的课外读物。相比国内大学教材居高临下式的填鸭式讲法，我看到的几本国外教材（&lt;a
href=&#34;https://shenlvmeng.github.io/blog/2018/05/01/sicp-note/&#34;&gt;计算机程序的构造和解释&lt;/a&gt;、Gilbert
Strang的&lt;a
href=&#34;https://book.douban.com/subject/34820335/&#34;&gt;线性代数&lt;/a&gt;）由浅入深、循循善诱的展开方式友好了许多。《Code》这本书虽然严格来说不算教材，只是计算机原理入门，但也相当适合和微机原理有缘分的人买来看看。浅显的文笔不会阻碍你深刻认识到计算机工作原理。&lt;/p&gt;
&lt;p&gt;全书1-10章对于计算机相关专业学生来说，很易理解，读起来很快。但从11章起到17章自动操作，内容突然有深度起来，读起来颇有思维体操的感觉。在18章了解芯片历史，短暂歇口气后，从19章到22章，你将完整了解到操作系统是怎么建立起来的。在此基础上，最后3章里介绍编程语言时，就一点也不突兀，很好理解了。&lt;/p&gt;
&lt;h2 id=&#34;作者序&#34;&gt;作者序&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;内存和外存的区别体现了实际需求和可观性能的矛盾，简单说就是我们目前找不到同时具备两种存储所有优点（既快又持久）的存储媒介&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;至亲密友&#34;&gt;至亲密友&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;编码就是交流&lt;/li&gt;
&lt;li&gt;2个不同事物通过组合，可以表示所有信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;编码与组合&#34;&gt;编码与组合&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;摩尔斯电码&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;布莱叶盲文和二进制码&#34;&gt;布莱叶盲文和二进制码&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
href=&#34;https://zh.wikipedia.org/wiki/%E7%9B%B2%E6%96%87&#34;&gt;布莱叶盲文&lt;/a&gt;用6个位置的凸点有无编码表示字符&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;手电筒的剖析&#34;&gt;手电筒的剖析&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;电压、电流、电阻、欧姆定律、功率&lt;/li&gt;
&lt;li&gt;开关的两种状态&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;绕过拐角的通信&#34;&gt;绕过拐角的通信&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;电路的串联、并联&lt;/li&gt;
&lt;li&gt;电路的尺寸极限&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;电报机和继电器&#34;&gt;电报机和继电器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;利用电磁现象的电报机和继电器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数字和计数&#34;&gt;数字和计数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;十进制的来源&lt;/li&gt;
&lt;li&gt;其他进制和二进制&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二进制数&#34;&gt;二进制数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;二进制是最简单的数字系统&lt;/li&gt;
&lt;li&gt;利用冗余可以消除信息里噪音的影响&lt;/li&gt;
&lt;li&gt;通用产品代码（条形码）的编码方式
&lt;ul&gt;
&lt;li&gt;奇偶校验&lt;/li&gt;
&lt;li&gt;模校验字符&lt;/li&gt;
&lt;li&gt;正反可读&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;逻辑与开关&#34;&gt;逻辑与开关&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;布尔代数的来源&lt;/li&gt;
&lt;li&gt;布尔代数的集合解释&lt;/li&gt;
&lt;li&gt;布尔代数的电路表示&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;门&#34;&gt;门&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;自此章起，终于开始进入数字电路到计算机的领域，&lt;strong&gt;逻辑门是其中最基础的单元&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;串并联和与或门&lt;/li&gt;
&lt;li&gt;与或非门的继电器表示&lt;/li&gt;
&lt;li&gt;与非门和或非门的继电器表示&lt;/li&gt;
&lt;li&gt;德摩根律&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二进制加法器&#34;&gt;二进制加法器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;二进制表示下的加法
&lt;ul&gt;
&lt;li&gt;或门（结果输出）+ 与非门（进位输出）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;半加器和全加器（考虑了进位输入的半加器）&lt;/li&gt;
&lt;li&gt;8个全加器构成的&lt;strong&gt;8位加法器&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;行波进位&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;如何实现减法&#34;&gt;如何实现减法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;补码和反码：用来将减法转化为加法&lt;/li&gt;
&lt;li&gt;有符号数和无符号数
&lt;ul&gt;
&lt;li&gt;有符号数首位1表示负数&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;反馈与触发器&#34;&gt;反馈与触发器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;反馈是更复杂电路的基础&lt;/li&gt;
&lt;li&gt;振荡器：单纯取反后反馈到输入端的电路
&lt;ul&gt;
&lt;li&gt;周期和频率&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;更复杂的反馈可以构成记忆电路状态的&lt;strong&gt;触发器&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;RS触发器，可以记忆置位和复位的值&lt;/li&gt;
&lt;li&gt;D型触发器，在保持位为1时，才会保存数据端输入&lt;/li&gt;
&lt;li&gt;D型触发器构成的8位&lt;strong&gt;锁存器&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;电平触发和边沿触发&lt;/li&gt;
&lt;li&gt;边沿触发的D型触发器&lt;/li&gt;
&lt;li&gt;分频器和8位行波计数器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;字节和十六进制&#34;&gt;字节和十六进制&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;字节的来源
&lt;ul&gt;
&lt;li&gt;8位的长度刚好可以表示大多数书面语言的基本字符，对于象形文字，用2个字节也够了&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;字节的十六进制表示&lt;/li&gt;
&lt;li&gt;十六进制和二进制的转换&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;存储器结构&#34;&gt;存储器结构&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;8-1选择器和3-8译码器&lt;/li&gt;
&lt;li&gt;8×1RAM：结合了选择器和译码器的8位锁存器
&lt;ul&gt;
&lt;li&gt;译码器和选择器的选择信号相同，这个信号也可以叫做&lt;strong&gt;地址&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;8×1RAM里各比特相互独立&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;将2个8×1RAM用共享地址的方式连接到同一个地址/数据/写操作端上，可以得到8×2RAM&lt;/li&gt;
&lt;li&gt;将2个8×1RAM组合1个2-1选择器和一个1-2译码器，可以得到一个16×1RAM&lt;/li&gt;
&lt;li&gt;RAM的存储容量是2&lt;sup&gt;地址输入端个数&lt;/sup&gt;&lt;/li&gt;
&lt;li&gt;KB、MB、TB、PB、EB&lt;/li&gt;
&lt;li&gt;64K×8RAM需要2个字节表示的地址&lt;/li&gt;
&lt;li&gt;RAM需要恒定的电流来维持数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;自动操作&#34;&gt;自动操作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;振荡器 + 16位计数器 + 64K×8RAM + 8位加法器构成的自动累加器&lt;/li&gt;
&lt;li&gt;代码和数据的区分
&lt;ul&gt;
&lt;li&gt;单独用一块64K×8RAM存储代码，代码指导机器如何操作&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;操作码和操作数&lt;/li&gt;
&lt;li&gt;第3个字节：操作数的存储地址
&lt;ul&gt;
&lt;li&gt;避免了顺序存储的问题&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;新的寻址方式：Jump指令
&lt;ul&gt;
&lt;li&gt;从指定地址开始寻址指令&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;计算机区分于计算器的基础：条件跳转指令
&lt;ul&gt;
&lt;li&gt;零转移/进位转移/非零转移/无进位转移&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;算术逻辑单元，ALU&lt;/li&gt;
&lt;li&gt;助记符表示下的机器码
&lt;ul&gt;
&lt;li&gt;MOV/LOD/STO/ADD/SUB/ADC/SBB/JMP/...&lt;/li&gt;
&lt;li&gt;汇编语言、手动汇编&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;从算盘到芯片&#34;&gt;从算盘到芯片&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;算盘&lt;/li&gt;
&lt;li&gt;对数表、对数尺&lt;/li&gt;
&lt;li&gt;机械计算器&lt;/li&gt;
&lt;li&gt;自动织布机与打孔的金属卡片&lt;/li&gt;
&lt;li&gt;巴贝奇的差分机和解析机&lt;/li&gt;
&lt;li&gt;赫尔曼·霍尔瑞斯的制表机
&lt;ul&gt;
&lt;li&gt;再次基础上，他成立了IBM&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;从MARK I到13000个继电器的MARK II&lt;/li&gt;
&lt;li&gt;Grace Murray Hopper发现的第一个“bug”&lt;/li&gt;
&lt;li&gt;真空管的发明&lt;/li&gt;
&lt;li&gt;图灵的贡献
&lt;ul&gt;
&lt;li&gt;图灵机，可计算性&lt;/li&gt;
&lt;li&gt;图灵测试法&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ENIAC，此时仍在使用十进制数&lt;/li&gt;
&lt;li&gt;冯诺依曼和他的EDVAC
&lt;ul&gt;
&lt;li&gt;二进制数&lt;/li&gt;
&lt;li&gt;存储代码和数据的存储器&lt;/li&gt;
&lt;li&gt;程序计数器寻址&lt;/li&gt;
&lt;li&gt;允许条件跳转&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;香农和信息论&lt;/li&gt;
&lt;li&gt;维纳和控制论&lt;/li&gt;
&lt;li&gt;UNIVAC&lt;/li&gt;
&lt;li&gt;晶体管的发明和半导体&lt;/li&gt;
&lt;li&gt;NPN晶体管&lt;/li&gt;
&lt;li&gt;集成电路（IC），又叫芯片
&lt;ul&gt;
&lt;li&gt;TTL（晶体管-晶体管逻辑，响应快功率高）和CMOS（互补金属氧化物半导体，响应慢功率低）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;摩尔定律&lt;/li&gt;
&lt;li&gt;Intel 4004，第一块计算机芯片，或者说微处理器&lt;/li&gt;
&lt;li&gt;Intel 4040，Intel 8008&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;两种典型的微处理器&#34;&gt;两种典型的微处理器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Intel 8008的改进：Intel 8080和Motorola 6800&lt;/li&gt;
&lt;li&gt;Intel 8080
&lt;ul&gt;
&lt;li&gt;振动器输入&lt;/li&gt;
&lt;li&gt;电源输出&lt;/li&gt;
&lt;li&gt;接地&lt;/li&gt;
&lt;li&gt;寻址信号&lt;/li&gt;
&lt;li&gt;控制信号&lt;/li&gt;
&lt;li&gt;数据信号&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;汇编里的助记符只是方便我们使用，处理器只能读取字节&lt;/li&gt;
&lt;li&gt;8080中设置更方便处理器读取信息的寄存器&lt;/li&gt;
&lt;li&gt;直接寻址和间接寻址&lt;/li&gt;
&lt;li&gt;栈和程序计数器&lt;/li&gt;
&lt;li&gt;Call命令和子程序&lt;/li&gt;
&lt;li&gt;内存映像I/O和中断&lt;/li&gt;
&lt;li&gt;Motorola 6800&lt;/li&gt;
&lt;li&gt;little-endian（Intel方式）和big-endian（Motorola方式）
&lt;ul&gt;
&lt;li&gt;高低位字节存储方式在Intel和Motorola芯片里不同，Intel是低字节在前，Motorola则是高字节在前&lt;/li&gt;
&lt;li&gt;命名来源于《吉列佛游记》里关于吃鸡蛋前先敲碎哪个头的讨论&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;8080被应用在第一台家用电脑Altair 8800上&lt;/li&gt;
&lt;li&gt;Apple II应用了6800的MOS技术改进版6502&lt;/li&gt;
&lt;li&gt;IBM在IBM PC(IBM
5150)里使用了8088芯片，8088芯片的内部结构和8086类似，和8080的操作吗不兼容&lt;/li&gt;
&lt;li&gt;x86系列微处理器包括1982年发布的186和286芯片。之后又发布了32位的386和后续的486以及Intel
Pentium系列微处理器，尽管指令集不断扩展，但都支持8086起的所有处理器操作码&lt;/li&gt;
&lt;li&gt;Macintosh采用了Motorola的68000微处理器，并从1994年起使用RISC（精简指令集计算机）微处理器体系的PowerPC微处理器&lt;/li&gt;
&lt;li&gt;流水线技术（pipelining）和Cache（高速缓冲存储器）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ascii码和字符转换&#34;&gt;ASCII码和字符转换&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Baudot码/Murray编码
&lt;ul&gt;
&lt;li&gt;转义&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ASCII码
&lt;ul&gt;
&lt;li&gt;7位编码&lt;/li&gt;
&lt;li&gt;控制字符&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;BCD编码&lt;/li&gt;
&lt;li&gt;8位的ASCII码&lt;/li&gt;
&lt;li&gt;中日韩字符编码&lt;/li&gt;
&lt;li&gt;2字节的Unicode编码
&lt;ul&gt;
&lt;li&gt;支持象形文字&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;总线&#34;&gt;总线&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;总线信号
&lt;ul&gt;
&lt;li&gt;地址信号&lt;/li&gt;
&lt;li&gt;数据输入信号&lt;/li&gt;
&lt;li&gt;数据输出信号&lt;/li&gt;
&lt;li&gt;控制信号&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;MCA总线/PCI总线&lt;/li&gt;
&lt;li&gt;SRAM、DRAM&lt;/li&gt;
&lt;li&gt;电子射线管（CRT）&lt;/li&gt;
&lt;li&gt;水平回归、垂直回归&lt;/li&gt;
&lt;li&gt;隔行扫描&lt;/li&gt;
&lt;li&gt;分辨率&lt;/li&gt;
&lt;li&gt;键盘实现&lt;/li&gt;
&lt;li&gt;磁带&lt;/li&gt;
&lt;li&gt;软盘和磁盘
&lt;ul&gt;
&lt;li&gt;磁道和扇区&lt;/li&gt;
&lt;li&gt;直接内存访问技术（DMA）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;操作系统&#34;&gt;操作系统&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;PROM、EPROM&lt;/li&gt;
&lt;li&gt;文件系统&lt;/li&gt;
&lt;li&gt;CP/M&lt;/li&gt;
&lt;li&gt;引导系统&lt;/li&gt;
&lt;li&gt;API&lt;/li&gt;
&lt;li&gt;QDOS -&amp;gt; MS-DOS
&lt;ul&gt;
&lt;li&gt;层次文件系统&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;UNIX和UNIX思想
&lt;ul&gt;
&lt;li&gt;GNU&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;多任务&lt;/li&gt;
&lt;li&gt;内存管理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;定点数和浮点数&#34;&gt;定点数和浮点数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;定点：小数点的位置总在数的某个特定位置&lt;/li&gt;
&lt;li&gt;浮点：基于科学计数法
&lt;ul&gt;
&lt;li&gt;4个字节的单精度&lt;/li&gt;
&lt;li&gt;8个字节的双精度&lt;/li&gt;
&lt;li&gt;IEEE标准浮点数&lt;/li&gt;
&lt;li&gt;精度问题&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;数字协同处理器&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;高级语言和低级语言&#34;&gt;高级语言和低级语言&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;第一个编写汇编器的人需要手工对程序汇编。之后新的汇编器可以在已有的计算机上编写，利用已有的汇编器进行汇编，这种方式也叫&lt;strong&gt;交叉汇编&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;编译器（程序 -&amp;gt; 机器码）&lt;/li&gt;
&lt;li&gt;FORTRAN，科学计算语言&lt;/li&gt;
&lt;li&gt;ALGOL，高级语言的鼻祖
&lt;ul&gt;
&lt;li&gt;for循环&lt;/li&gt;
&lt;li&gt;if语句&lt;/li&gt;
&lt;li&gt;块、变量声明&lt;/li&gt;
&lt;li&gt;数组&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;计算机科学又像工程，又像艺术&lt;/li&gt;
&lt;li&gt;COBOL，第一个成功为商业系统使用的程序设计语言&lt;/li&gt;
&lt;li&gt;BASIC&lt;/li&gt;
&lt;li&gt;解释型语言，边读边执行&lt;/li&gt;
&lt;li&gt;Pascal、Turbo Pascal&lt;/li&gt;
&lt;li&gt;Ada&lt;/li&gt;
&lt;li&gt;C，BCPL（Basic CPL）的后继者&lt;/li&gt;
&lt;li&gt;LISP、APL&lt;/li&gt;
&lt;li&gt;面向对象程序设计语言&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;图形化革命&#34;&gt;图形化革命&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;用户界面&lt;/li&gt;
&lt;li&gt;SAGE
&lt;ul&gt;
&lt;li&gt;光笔&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;鼠标&lt;/li&gt;
&lt;li&gt;Xerox，PARC，Alto工程&lt;/li&gt;
&lt;li&gt;图形界面和图形对象&lt;/li&gt;
&lt;li&gt;Macintosh和Mac系统&lt;/li&gt;
&lt;li&gt;Windows系统&lt;/li&gt;
&lt;li&gt;面向对象语言
&lt;ul&gt;
&lt;li&gt;SmallTalk语言&lt;/li&gt;
&lt;li&gt;C++&lt;/li&gt;
&lt;li&gt;Java&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;集成开发环境（IDE）&lt;/li&gt;
&lt;li&gt;文本信息编码
&lt;ul&gt;
&lt;li&gt;RTF&lt;/li&gt;
&lt;li&gt;PostScript&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;计算机图形
&lt;ul&gt;
&lt;li&gt;矢量 -&amp;gt; CAD（计算机辅助设计）&lt;/li&gt;
&lt;li&gt;光栅 -&amp;gt; 位图&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;CCD（电荷耦合器）
&lt;ul&gt;
&lt;li&gt;光感度不同对应不同的像素值阵列（模拟信号 -&amp;gt; 数字信号）&lt;/li&gt;
&lt;li&gt;数码相机、CD、DVD、VCD&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;数据压缩
&lt;ul&gt;
&lt;li&gt;无损压缩
&lt;ul&gt;
&lt;li&gt;游程长度编码（RLE）&lt;/li&gt;
&lt;li&gt;GIF和LZW压缩&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;有损压缩
&lt;ul&gt;
&lt;li&gt;JPEG&lt;/li&gt;
&lt;li&gt;OCR&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;脉冲编码调制技术（PCM）
&lt;ul&gt;
&lt;li&gt;ADC（模拟数字转换器）和DAC（数字模拟转换器）&lt;/li&gt;
&lt;li&gt;采样率和奈奎斯特采样定律&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;语言识别&lt;/li&gt;
&lt;li&gt;MIDI合成器&lt;/li&gt;
&lt;li&gt;MPEG&lt;/li&gt;
&lt;li&gt;调制和解调&lt;/li&gt;
&lt;li&gt;Internet
&lt;ul&gt;
&lt;li&gt;WWW&lt;/li&gt;
&lt;li&gt;HTTP&lt;/li&gt;
&lt;li&gt;CGI&lt;/li&gt;
&lt;li&gt;JavaScript&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;--END--&lt;/em&gt;&lt;/p&gt;
</content>
        <category term="代码" />
        <category term="计算机" />
        <category term="微机原理" />
        <category term="门" />
        <category term="操作系统" />
        <category term="数字电路" />
        <updated>2023-11-30T14:06:46.000Z</updated>
    </entry>
</feed>
