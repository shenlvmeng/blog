{
    "version": "https://jsonfeed.org/version/1",
    "title": "Shenlvmeng's Blog • All posts by \"visibilitychange\" tag",
    "description": "Be sharp, my friend.",
    "home_page_url": "http://shenlvmeng.github.com/blog",
    "items": [
        {
            "id": "http://shenlvmeng.github.com/blog/2018/05/23/some-tips-2/",
            "url": "http://shenlvmeng.github.com/blog/2018/05/23/some-tips-2/",
            "title": "工作中的遇到的一些小知识 2",
            "date_published": "2018-05-23T15:12:30.000Z",
            "content_html": "<h2 id=\"一个合法检测的Validator\"><a href=\"#一个合法检测的Validator\" class=\"headerlink\" title=\"一个合法检测的Validator\"></a>一个合法检测的Validator</h2><p>合法检测是在有表单或数据提交时常见的需求，随手撸了一个。由于考虑的业务场景比较复杂，代码也有点臃肿。拓展时，只需要修改上面的提示信息常量和新的test方法即可。也支持自己传入判断函数和message，针对比较复杂的校验情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"variable constant_\">TYPE_VALIDATE_MESSAGE</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">isNumber</span>: <span class=\"string\">&#x27;不是一个数字&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">isObject</span>: <span class=\"string\">&#x27;不是一个对象&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">isArray</span>: <span class=\"string\">&#x27;不是一个数组&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">lt</span>: <span class=\"string\">&#x27;数值过大&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">gt</span>: <span class=\"string\">&#x27;数值过小&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">st</span>: <span class=\"string\">&#x27;长度过短&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">ht</span>: <span class=\"string\">&#x27;长度过长&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">notEmpty</span>: <span class=\"string\">&#x27;需要非空&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">len</span>: <span class=\"string\">&#x27;长度不合规范&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">in</span>: <span class=\"string\">&#x27;不在可选范围内&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">reg</span>: <span class=\"string\">&#x27;无法匹配指定模式&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 供validate使用</span></span><br><span class=\"line\">util.<span class=\"property\">test</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">isObject</span>: <span class=\"function\"><span class=\"params\">_</span> =&gt;</span> <span class=\"title class_\">Object</span>(_) === _,</span><br><span class=\"line\">    <span class=\"attr\">isNumber</span>: <span class=\"function\"><span class=\"params\">_</span> =&gt;</span> <span class=\"keyword\">typeof</span> _ == <span class=\"string\">&#x27;number&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">isArray</span>: <span class=\"function\"><span class=\"params\">_</span> =&gt;</span> <span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(_),</span><br><span class=\"line\">    <span class=\"attr\">notEmpty</span>: <span class=\"function\"><span class=\"params\">_</span> =&gt;</span> _.<span class=\"property\">length</span> &gt; <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"attr\">lt</span>: <span class=\"function\">(<span class=\"params\">num, limit</span>) =&gt;</span> num &lt; limit,</span><br><span class=\"line\">    <span class=\"attr\">gt</span>: <span class=\"function\">(<span class=\"params\">num, limit</span>) =&gt;</span> num &gt; limit,</span><br><span class=\"line\">    <span class=\"attr\">st</span>: <span class=\"function\">(<span class=\"params\">_, limit</span>) =&gt;</span> _.<span class=\"property\">length</span> &lt; limit,</span><br><span class=\"line\">    <span class=\"attr\">ht</span>: <span class=\"function\">(<span class=\"params\">_, limit</span>) =&gt;</span> _.<span class=\"property\">length</span> &gt; limit,</span><br><span class=\"line\">    <span class=\"attr\">in</span>: <span class=\"function\">(<span class=\"params\">_, range</span>) =&gt;</span> ~range.<span class=\"title function_\">indexOf</span>(_),</span><br><span class=\"line\">    <span class=\"attr\">len</span>: <span class=\"function\">(<span class=\"params\">_, length</span>) =&gt;</span> _.<span class=\"property\">length</span> === length,</span><br><span class=\"line\">    <span class=\"attr\">reg</span>: <span class=\"function\">(<span class=\"params\">_, reg</span>) =&gt;</span> reg.<span class=\"title function_\">test</span>(_)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 数据校验</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: shenlvmeng</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@params</span> value &#123;any&#125; 校验数值 输入单个数值使用verify校验 输入对象使用verifyMap校验</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@method</span> verify 校验单个数值</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@method</span> verifyMap 校验对象</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">Object</span>&#125; 包含success和message的对象</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">util.<span class=\"property\">validate</span> = <span class=\"function\">(<span class=\"params\">value</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 方便传递到外界修改</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> message = &#123; <span class=\"attr\">content</span>: <span class=\"string\">&#x27;&#x27;</span> &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">verify</span>(<span class=\"params\">val, validators, key</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(validators)) validators = [validators];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> validators.<span class=\"title function_\">every</span>(<span class=\"function\"><span class=\"params\">v</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> isRight;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (util.<span class=\"property\">test</span>.<span class=\"title function_\">isObject</span>(v)) &#123;</span><br><span class=\"line\">                isRight = util.<span class=\"property\">test</span>[<span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(v)[<span class=\"number\">0</span>]](val, <span class=\"title class_\">Object</span>.<span class=\"title function_\">values</span>(v)[<span class=\"number\">0</span>])</span><br><span class=\"line\">                !isRight &amp;&amp; (message.<span class=\"property\">content</span> = <span class=\"string\">`<span class=\"subst\">$&#123;key || val&#125;</span><span class=\"subst\">$&#123;TYPE_VALIDATE_MESSAGE[<span class=\"built_in\">Object</span>.keys(v)[<span class=\"number\">0</span>]]&#125;</span>`</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                isRight = util.<span class=\"property\">test</span>[v](val);</span><br><span class=\"line\">                !isRight &amp;&amp; (message.<span class=\"property\">content</span> = <span class=\"string\">`<span class=\"subst\">$&#123;key || val&#125;</span><span class=\"subst\">$&#123;TYPE_VALIDATE_MESSAGE[v]&#125;</span>`</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> isRight;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 单个数值使用</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@params</span> validators &#123; String|Array|Object &#125; 校验函数 必须是util中已定义的函数</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@params</span> String 类型时为函数名; Object类型时为函数名和对应入参; Array时为以上的列表 </span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"title function_\">verify</span>(<span class=\"params\">validators</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">success</span>: <span class=\"title function_\">verify</span>(value, validators),</span><br><span class=\"line\">                <span class=\"attr\">message</span>: message.<span class=\"property\">content</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 校验整个对象时使用</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@params</span> config &#123; Object &#125; 校验函数 针对Object中每个key的校验</span></span><br><span class=\"line\"><span class=\"comment\">         * <span class=\"doctag\">@params</span> 每个key的value服从verify的格式，当key为function类型时交给调用方自己处理</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"title function_\">verifyMap</span>(<span class=\"params\">config</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!util.<span class=\"property\">test</span>.<span class=\"title function_\">isObject</span>(value)) <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&#x27;Invalid value type. It should be an Object.&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                <span class=\"attr\">success</span>: <span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(config).<span class=\"title function_\">every</span>(<span class=\"function\"><span class=\"params\">key</span> =&gt;</span> (</span><br><span class=\"line\">                    <span class=\"keyword\">typeof</span> config[key] === <span class=\"string\">&#x27;function&#x27;</span> ? config[key](value[key], message)</span><br><span class=\"line\">                    : <span class=\"title function_\">verify</span>(value[key], config[key], key))</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                <span class=\"attr\">message</span>: message.<span class=\"property\">content</span>,</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>实际应用中发现，<code>verifyMap</code>方法用的比较多。使用样例如下;</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">examine</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> util.<span class=\"title function_\">validate</span>(formData).<span class=\"title function_\">verifyMap</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">userName</span>: [<span class=\"string\">&#x27;notEmpty&#x27;</span>, &#123; <span class=\"attr\">st</span>: <span class=\"number\">6</span> &#125;, &#123; <span class=\"attr\">ht</span>: <span class=\"number\">15</span> &#125;],</span><br><span class=\"line\">        <span class=\"attr\">password</span>: [<span class=\"string\">&#x27;notEmpty&#x27;</span>, &#123; <span class=\"attr\">st</span>: <span class=\"number\">6</span> &#125;, &#123; <span class=\"attr\">ht</span>: <span class=\"number\">15</span> &#125;],</span><br><span class=\"line\">        <span class=\"attr\">age</span>: [<span class=\"string\">&#x27;isNumber&#x27;</span>, &#123; <span class=\"attr\">lt</span>: <span class=\"number\">18</span> &#125;],</span><br><span class=\"line\">        <span class=\"attr\">gender</span>: &#123;<span class=\"attr\">in</span>: [<span class=\"string\">&#x27;male&#x27;</span>, <span class=\"string\">&#x27;female&#x27;</span>]&#125;,</span><br><span class=\"line\">        <span class=\"attr\">email</span>: &#123;<span class=\"string\">&#x27;reg&#x27;</span>: <span class=\"regexp\">/email pattern/</span>&#125;,</span><br><span class=\"line\">        <span class=\"attr\">isAccepted</span>: <span class=\"function\">(<span class=\"params\">value, message</span>) =&gt;</span> value ? value : (message.<span class=\"property\">content</span> = <span class=\"string\">&#x27;请接收用户协议&#x27;</span>, <span class=\"literal\">false</span>)</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Linux清理大文件\"><a href=\"#Linux清理大文件\" class=\"headerlink\" title=\"Linux清理大文件\"></a>Linux清理大文件</h2><ul>\n<li><code>df -h</code>查看存储情况</li>\n<li><code>du -sh * | grep G</code>查找当前目录下大于1G的大文件，挨个确认删除即可</li>\n</ul>\n<h2 id=\"当前页面窗口活动状态检查\"><a href=\"#当前页面窗口活动状态检查\" class=\"headerlink\" title=\"当前页面窗口活动状态检查\"></a>当前页面窗口活动状态检查</h2><p>利用<code>visibilityChange</code>API，配合<code>visibilityState</code>检查窗口状态。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// subscribe to visibility change events</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;visibilitychange&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// fires when user switches tabs, apps, goes to homescreen, etc.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">visibilityState</span> === <span class=\"string\">&#x27;hidden&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = <span class=\"string\">&#x27;Baby, Come Back!&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// fires when app transitions from prerender, user returns to the app / tab.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">visibilityState</span> === <span class=\"string\">&#x27;visible&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"property\">title</span> = defaultTitle;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"IntersectionObserver\"><a href=\"#IntersectionObserver\" class=\"headerlink\" title=\"IntersectionObserver\"></a>IntersectionObserver</h2><p>监测页面元素和视口的交错关系的DOM API，目前浏览器支持度不高。可以用来方便地实现懒加载和页面无限滚动。</p>\n<p><a href=\"http://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html\">参考</a></p>\n<h2 id=\"图种\"><a href=\"#图种\" class=\"headerlink\" title=\"图种\"></a>图种</h2><ul>\n<li>Windows，<code>copy /b image.jpg+zip.rar output.jpg</code>，更改输出图片后缀为rar得到压缩包</li>\n<li>Linux，<code>cat image.jpg zip.rar &gt; output.jpg</code>，同上</li>\n</ul>\n<h2 id=\"draggable-with-Vue\"><a href=\"#draggable-with-Vue\" class=\"headerlink\" title=\"draggable with Vue\"></a>draggable with Vue</h2><p>业务中有拖拽需求，在试用多个轮子后，最终选择了<a href=\"https://jexordexan.github.io/vue-slicksort/?selectedKind=Vertical%20sorting&selectedStory=Simple%20list&full=0&addons=1&stories=1&panelRight=0&addonPanel=storybook/actions/actions-panel\">vue-slicksort</a></p>\n<ul>\n<li>Vue Draggable</li>\n<li>Vue Dragula</li>\n<li>Vue slicksort</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>GitHub名</th>\n<th>流行度</th>\n<th>依赖&#x2F;原理</th>\n<th>功能完善度</th>\n<th>文档完善度</th>\n<th>使用舒适度</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>vuedraggable</td>\n<td>star数3859，很流行</td>\n<td>依赖sortable.js，后者依赖HTML5的draggable API</td>\n<td>功能丰富强大，有很多别人踩过的坑</td>\n<td>文档比较丰富</td>\n<td>通过组件包裹形式使用 侵入性小 优</td>\n<td>有兼容性问题，Chrome66.0.3359.181 Mac OSX 10.13.1下无法通过拖动换位</td>\n</tr>\n<tr>\n<td>vue-dragula</td>\n<td>star数100+，上次更新1年前</td>\n<td>依赖dragula.js</td>\n<td>功能一般</td>\n<td>不完善，几乎都是dragula的API</td>\n<td>通过<code>Vue.use</code>的形式 + directives的方式引入，侵入式一般</td>\n<td>使用效果不好，实现时没有拖动和移动的动效</td>\n</tr>\n<tr>\n<td>vue-slicksort</td>\n<td>star数100+，更新较活跃</td>\n<td>0依赖，不基于HTML5 drag API，支持触摸屏，兼容性好</td>\n<td>功能一般，支持平面拖动</td>\n<td>较完善，有样例、API解释和FAQ</td>\n<td>略糟糕，需要使用mixin的形式，通常意味着额外的组件定义</td>\n<td>展示效果优秀，能满足需求</td>\n</tr>\n</tbody></table>\n<p>综上，考虑到只有vue-slicksort能满足需求，故选择之。</p>\n",
            "tags": [
                "validator",
                "大文件",
                "visibilityChange",
                "IntersectionObserver",
                "图种",
                "draggable"
            ]
        }
    ]
}