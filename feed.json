{
    "version": "https://jsonfeed.org/version/1",
    "title": "Shenlvmeng's Blog",
    "description": "Be sharp, my friend.",
    "home_page_url": "http://shenlvmeng.github.com/blog",
    "items": [
        {
            "id": "http://shenlvmeng.github.com/blog/2023/10/16/source-of-family-and-country/",
            "url": "http://shenlvmeng.github.com/blog/2023/10/16/source-of-family-and-country/",
            "title": "家庭和国家的起源",
            "date_published": "2023-10-16T13:41:59.000Z",
            "content_html": "<p>看这本书兴起于对国家本质的好奇，在豆瓣上搜寻，看到了这本《家庭、私有制和国家的起源》。它也误打误撞成为我看的第一本马列主义书籍。本书成书于十九世纪80年代，作为集成马克思“未完成的工作”，恩格斯在马克思对于《古代社会》（摩尔根著于1877）评论的基础上，补充了更多实证材料，旨在探寻阶级社会产生前的历史，深入阐述人类历史的发展规律，从而丰富唯物主义理论内涵。</p>\r\n<p>书里的重要思路在于:</p>\r\n<ol type=\"1\">\r\n<li>突出了“两个生产”的理论，即生活资料的生产（通过劳动生产自己的生命）和人自身的生产（通过生育生产他人的生命）。<strong>历史的决定性因素归根到底就是生活的生产和再生产</strong>。</li>\r\n<li>阐述了<strong>家庭的产生和发展是受到特定社会经济关系的制约</strong>，也因此，“特定的经济基础决定了妇女在私有制通知下必然出于不平等地位”</li>\r\n<li>通过实例向读者娓娓道来<strong>私有制</strong>和<strong>阶级</strong>的演变过程，以及到达某个阶段时<strong>国家</strong>的出现和它的阶级本质</li>\r\n</ol>\r\n<blockquote>\r\n<p>国家是承认：这个社会陷入了不可解决的自我矛盾，分裂为不可调和的对立面而无力摆脱</p>\r\n</blockquote>\r\n<blockquote>\r\n<p>“随着阶级的消失，国家也不可避免地要消失。在生产者自由平等的联合体的基础上按新方式来组织生产的社会，将把全部国家机器放到它应该去的地方，即放到古物陈列馆去，同纺车和青铜斧陈列在一起。”</p>\r\n</blockquote>\r\n<h2 id=\"序言\">序言</h2>\r\n<p>在1884年的初版序言中，恩格斯强调了历史的决定性因素，即生活的生产和再生产。劳动越不发展，劳动产品的数量，从而社会的财富越受到限制，社会制度在较大程度上就会受到血族关系的支配。</p>\r\n<p>初版发行后，作品被翻译成了意大利、罗马尼亚、丹麦、法文等多个语言版本，在1891年的版本里，恩格斯对内容做了调整，又补充了一些史料。将巴霍芬的《母权论》（1861）和之后一些对于家庭史的研究发展引入到序言中。巴霍芬对家庭史的研究开了个头，它提出了下面的观点：</p>\r\n<ol type=\"1\">\r\n<li>最初人们实行不受限制的性行为</li>\r\n<li>这种“淫游”关系排除了任何可以确切认知的父亲，因此只能按照母系——母权制——计算</li>\r\n<li>妇女作为母亲，作为年轻一代唯一确切的亲长，享有高度的尊敬和威望</li>\r\n</ol>\r\n<p>而后麦克伦南和拉伯克关于外婚制、内婚制以及群婚的研究则存在一些错误假设。直到摩尔根的《古代社会》提出氏族，以及氏族从母权制演化到父权制的观点，正是本书的基础。</p>\r\n<h2 id=\"史前文明阶段\">史前文明阶段</h2>\r\n<p>将人类史前史划分成3个阶段——蒙昧时代、野蛮时代和文明时代，书中主要探讨前两个时代，和它向文明时代的过渡。</p>\r\n<ul>\r\n<li>蒙昧时代\r\n<ul>\r\n<li>低级阶段，人们生活在森林中，以果实、根茎、坚果为食，音节清晰的语言是这个时代的成就</li>\r\n<li>中级阶段，也可以<strong>使用火</strong>和食用鱼类开始，人类可以在火中烤熟淀粉质的根茎，同时武器的发明也带来附加食物——<strong>猎物</strong></li>\r\n<li>高级阶段，<strong>弓箭</strong>发明，有定居成村落的萌芽，有一定生活资料的掌握，如木质容器、芦苇编成的笼子、石器</li>\r\n</ul></li>\r\n<li>野蛮时代\r\n<ul>\r\n<li>低级阶段，学会<strong>制陶术</strong>和动物驯养繁殖以植物的种植，在不同大陆有不同的驯养动物以及作物</li>\r\n<li>中级阶段，在东大陆以驯养家畜开始，西大陆上则是靠灌溉来栽培食用植物以及在建筑里使用土坯（晒干的土砖）和石头；畜群的产生还导致游牧生活的出现</li>\r\n<li>高级阶段，从铁矿石的冶炼开始，并随着拼音文字的发明及其在文献记录里的应用过渡到文明时代，在这个阶段，人们已经可以大规模耕作土地，即<strong>田野农业</strong></li>\r\n</ul></li>\r\n</ul>\r\n<h2 id=\"家庭\">家庭</h2>\r\n<p>这章将介绍<strong>家庭</strong>随着社会生产的发展从群婚制一步步向专偶制，以及母权制向父权制的演变。家庭发展的基础是，在类人猿的生活中，需要以群的力量和集体行动弥补个体自卫能力的不足。家庭中父母、子女、兄弟、姊妹的称呼并不是单纯的荣誉称号，而代表完全确定、异常郑重的相互义务，这些义务的总和构成民族的社会制度的实质。</p>\r\n<p>在人类性生活初期阶段的杂乱状态被称为“淫游”而很少提及，但实际上在哺乳动物中，智力发展的程度和性关系形式间，并没有严格的关联。按照摩尔根的观点，在这种杂乱的性关系原始阶段，发展出了下面4种家庭形式:</p>\r\n<ul>\r\n<li><strong>血缘家庭</strong>，这是家庭的第一个阶段，它只排斥了祖先和子女间以及双亲和子女互为夫妻的权利和义务。除此以外的同胞兄弟姊妹、到表兄弟姊妹，再到更远一点的同辈兄弟姊妹，都互为兄弟姊妹，从而也<strong>互为夫妻</strong>。目前，这种关系已经无法找到，但有证据可以证明它是存在过的</li>\r\n<li><strong>普那路亚家庭</strong>。如果说家庭组织的第一个进步是排除了长辈和晚辈的性关系。那么第二个进步就对于<strong>姊妹和兄弟</strong>也排除了这种关系。准确点说，就是禁止同胞兄弟姊妹及其子女、孙子女、曾孙子女之间的结婚，甚至禁止旁系兄弟姊妹间结婚。根据摩尔根的说法，这个过程主要是<strong>自然选择</strong>推动的。这个演变也推动了<strong>氏族</strong>的建立。在群婚制中，孩子的父亲是不确定的，孩子的母亲是确定的，因此，世系只承认<strong>母系</strong>。在普那路亚家庭里就可以分成2个典型集团，一列同胞姊妹和血统较远的姊妹连同她们的子女以及她们母方的同胞兄弟和血统较远的兄弟（不能成为她们的丈夫）和其他人，而前者正是原始形态的氏族成员。</li>\r\n<li><strong>对偶制家庭</strong>，在对偶制家庭中，排除了一切亲属间的近亲结婚，一个男子可以有许多妻子，而一个妻子也可以有许多丈夫。在共产制家户经济中，大多数或全体妇女都属于同一氏族，而男子则来自不同氏族。对偶制家庭产生于蒙昧时代和野蛮时代交替的时期，是野蛮时代特有的家庭形式。随着生产的发展，男性原先拥有的财产——劳动工具逐步变多（畜群、奴隶），然而根据社会的母权制习惯，他的子女并不能继承他的财产。因此随着财富增加，丈夫在家庭中占据比妻子更重要的角色，另一方面驱使传统继承机制被废除已适应这种趋势，知道最后母权制被渐渐推翻，转为父权制。</li>\r\n<li><strong>专偶制家庭</strong>，它是从对偶制家庭中产生的，它的胜利是文明时代开始的标志。它是建立在丈夫的统治下的，其目的就是<strong>生育有确凿生父的子女，以继承他的财产</strong>。专偶制绝不是来源于个人性爱的自然因素，而是以经济条件为基础，即<strong>私有制对原始的来自自然的公有制的胜利为基础</strong>。根据恩格斯的观点，这种婚姻是权衡利弊的婚姻，利益比爱更能成为婚姻的基础。只有在被压迫阶级中，即无产阶级中，没有了财产集成的羁绊，性和爱才成为对妇女关系的常规。恩格斯驳斥了法学家关于婚姻本就是双方自愿缔结，拥有平等权利义务的观点，他认为这种表面上的平等，实际上在现实因素里根本无所谓平等。只有在资本家阶级的特权都被废除，双方阶级在法律上有完全平等的权利和义务时，妻子被压迫的本质才能显露出来。妇女解放的1个前提条件就是，<strong>重新回到公共事业中</strong>（经济基础决定上层建筑），而要达到这一点，要求个体家庭消除作为社会经济单位的属性。</li>\r\n</ul>\r\n<p>上面家庭形式的变更，背后是经济基础的变化。行将到来的社会变革，至少将把绝大多数可继承、耐久的财富——生产资料——变为社会所有，这将完全实现专偶制，妇女的地位也将发生很大转变，随着生产资料收归公有，个体家庭不再是社会的经济单位，私人的家务变成社会的视野，孩子的抚养和教育成为公共的事情。只有这样，个人的性爱才会成为专偶制的重要因素，而不像资产阶级中，起决定性因素是家族的利益而非个人意愿，婚姻是阶级的婚姻。到那时，专偶制因为财产关系烙上的2个特征才会消失：男子的统治和婚姻的不可解除。</p>\r\n<h2 id=\"易洛魁人的氏族\">易洛魁人的氏族</h2>\r\n<p>下面我们用对易洛魁人的研究，感受氏族形式下的社会形态。</p>\r\n<p><strong>氏族</strong>是野蛮人进入到文明时代为止甚至更靠后一段时间的共有制度。也是国家出现之前的社会基本制度。在不同民族中，都有对应的词语去表示。易洛魁人的氏族是<strong>母权制</strong>的。每个氏族有下面这样的习俗：</p>\r\n<ul>\r\n<li>氏族会选举酋长，酋长在氏族内的权力是<strong>父亲般、纯粹道义的性质</strong>，它手里没有强制的手段；类似地，军事首领酋帅也仅仅在出征时才可发号施令</li>\r\n<li>氏族可以任意罢免酋长和酋帅，这是男女共同决定的，被罢免的人会成为普通战士</li>\r\n<li>氏族的任何成员<strong>不得在氏族内部通婚</strong></li>\r\n<li>死者的财产归同氏族人所有，男子死后由同胞兄弟、姊妹和母亲的兄弟。由于上面一条规则，夫妇间不能彼此继承，同时<strong>子女不得继承父亲</strong></li>\r\n<li>同氏族人必须互相援助、保护；在受到外族人侵害时，要帮助报仇。个人依靠氏族保证安全，也帮助氏族保证安全</li>\r\n<li>氏族有固定的人名。来标识人属于该氏族</li>\r\n<li>氏族可以接纳外人入族，并吸收为部落的成员</li>\r\n<li>氏族有共同的墓地</li>\r\n<li>氏族有议事会，<strong>它是氏族一切成年男女享有平等表决权的民主集会</strong>。在这个议事会上选举、罢免酋长、酋帅和其他一系列重要决定。<strong>它是氏族的最高权力机关</strong>。</li>\r\n</ul>\r\n<p>上面这些印第安人氏族特征能看出来，它的全体成员都是自由人，相互保卫自由；他们是由<strong>血亲纽带</strong>集合起来的同胞。自由、平等、博爱是氏族的基本原则。而氏族又是印第安人社会制度的单位。</p>\r\n<p>多个亲缘关系较近的氏族形成<strong>胞族</strong>。胞族也有类似氏族的一些职能习惯，如选举酋长、巫术集会等。几个胞族构成一个<strong>部落</strong>。部落有下面的特点:</p>\r\n<ul>\r\n<li>有自己的地区和名称，地区间存在着不小的中立地区</li>\r\n<li>有独特、仅为这个部落所用的房檐</li>\r\n<li>有隆重委任或罢免氏族选出的酋长和军事首领的权利</li>\r\n<li>有共同的宗教观念（神话）和崇拜仪式</li>\r\n<li>有管理公共事务的部落议事会</li>\r\n<li>有些部落里，会有个最高领袖，但他的<strong>权利很小</strong></li>\r\n</ul>\r\n<p>这种纯朴的氏族制度里，家户经济是由一组家庭按共产制共同经营的，土地是全部落的财产，仅由小小的园圃归家户经济暂时使用。它是建立在生产极不发达的基础上，广大地区人口稀少，人还受外部大自然支配。这种自然形成的共同体随着生产的发展在之后就被打破。</p>\r\n<h2 id=\"希腊人的氏族\">希腊人的氏族</h2>\r\n<p>在希腊人从氏族向国家的演变中，就能看到在易洛魁人中没有发生的过程。首先，希腊人中母权制已经让位给父权制，希腊人的氏族和易洛魁人有类似的氏族特点：</p>\r\n<ul>\r\n<li>共同的宗教祭祀和祀奉一定神所拥有的的特权。这种神被假想成氏族的男始祖</li>\r\n<li>共同的墓地</li>\r\n<li>相互继承权</li>\r\n<li>受侵害时提供帮助、保护和支援的相互义务</li>\r\n<li>一定情况下爱，主要是事关孤女或女继承人时，在氏族内部通婚的权利和义务</li>\r\n<li>至少在某些情况下拥有共同财产</li>\r\n<li>接纳外人入族的权利，这是用家庭接纳的办法实现的</li>\r\n<li>选举和罢免酋长的权利</li>\r\n</ul>\r\n<p>类似地，希腊人里也有氏族形成胞族，胞族形成部落的过程。在希腊人的部落内部，氏族、胞族和部落还保留了一定独立性，他们住在有城墙保护的城市里，人口数目随着畜群增加、农业扩展和手工业萌芽增长；从而就出现了<strong>财产的差别</strong>，随之就产生了贵族分子，为占有更好的徒弟，掠夺战争和奴隶也成为公认的制度。希腊人的部落和部落联合的<strong>小民族</strong>有下面的特点：</p>\r\n<ul>\r\n<li>常设的权力机关为议事会，议事会最初由酋长组成，随着人数增加太多，便造成了发展和加强贵族分子的机会。在国家的设立后，这种议事会就变成元老院</li>\r\n<li>人民大会，由议事会召集，来解决各种重要事务，所有男子都可以发言，人民大会是最高级的权力</li>\r\n<li>军事首长，和酋帅类似</li>\r\n</ul>\r\n<p>由子女继承的父权制，促进了财产积累在家庭中，并且使家庭变成和氏族对立的力量；财产的差别，通过世袭贵族和王权的最初萌芽形成，对社会制度发送反作用，推动了氏族的崩溃。现在缺少这样一个机关：它不仅使正在开始的社会分裂为阶级的现象永久化，而且使有产者阶级剥削无产者阶级的权利以及前者对后者的统治永久化。从而，<strong>国家</strong>就被发明出来了。</p>\r\n<h2 id=\"雅典国家的产生\">雅典国家的产生</h2>\r\n<p>这一章借古雅典的演变过程来看，反对人民、武装的国家机关是怎么替代氏族、胞族和部落，和其中自我武装的人民的。</p>\r\n<p>英雄时代时，雅典人有4个部落，12个胞族。此时，土地已不属于氏族，而是分割成为私人财产。海上贸易日渐发达，由于地产买卖和农业、手工业、商业、航海业分工进一步发展，氏族、胞族和部落额成员，很快<strong>杂居</strong>起来。这样，在胞族、部落的领域内就有了本民族但非本团体的外人。之前的制度没法管理他们。这扰乱了氏族制度的正常活动。</p>\r\n<p>于是<a\r\nhref=\"https://zh.wikipedia.org/zh-hans/%E5%BF%92%E4%BF%AE%E6%96%AF\">提修斯</a>实行了新的制度，雅典设立了一个中央管理机关，之前各部落独立管理的一些事务，成为公共事务，移交给设在雅典的公共议事会管辖。从而产生了<strong>凌驾于各部落和氏族的普遍适用的民族法</strong>。这便是摧毁氏族制度额第一步。据说是提修斯规定的第二个制度，即把全体人民分为贵族、农民和手工业者三个阶层，<strong>赋予贵族担任公职的独占权</strong>。虽然没有规定各阶级任何权利的不同，但它表明，<strong>有特定家庭的成员担任氏族的公职，成为了不可争辩的权利</strong>。这些因拥有财富本来就有势力的家庭，开始在氏族之外联合成一种独特的特权阶级，刚刚萌芽的国家，就使这种霸权行为神圣化。</p>\r\n<p>在易洛魁人中，生产匮乏，生产出的产品<strong>完全由生产者支配</strong>。而希腊人中，畜群和奢侈品的私人占用，引起了私人间的<strong>交换</strong>，让产品变成了<strong>商品</strong>。生产者不再直接消费自己的产品，而是通过交换失去对产品的支配权。一个社会只要消灭这种交换，便不能保持对它自己的生产的支配，不能长久保持自己生产过程的社会效果的控制。随着商品生产和土地所有制，随后出现了<strong>货币</strong>。各种生产部门之间分工日益明确让居民根据自己的职业形成不同的集团，每个集团都有新的共同利益。这种新的利益在氏族里没法处理。另外奴隶的出现远远超过自由民。他们既没有权利，也不受法律保护。上述总总，都表示氏族制度走到了尽头。</p>\r\n<p>迄今<strong>一切的革命，都是保护一种所有制和反对另一种所有制</strong>。在雅典人的军事力量设置里，出现了根据地区组建军队的设计。它一方面替代了全体人民共同武装的公共权力，另一方面不依靠亲属集团而依靠<strong>居住地区</strong>来划分人民。这都削弱了氏族制度。在梭伦的革命中，议事会和军队的组成也和私有财产的多寡有关。以上种种使旧的氏族制度失去最后的残余。在克里斯提尼革命中，新制度撇开了以氏族和胞族为基础的4个就部落，替代它们的是新的<strong>只依居住地区</strong>划分公民的新组织。全阿提卡划分为100个区域（德莫），选举各自的长官，10个德莫形成一个地区部落，部落有长官和自己的军事组织。</p>\r\n<p>在这个新制度下，血族制度的各种机关受到排挤不再过问公事，下降为私人性质的团队和宗教社团。可以看到，国家的本质特征是，和<strong>人民大众分离的公共权力</strong>。国家在比较年轻的状态时，还有旧的氏族观念下的雅典人宁可被警察逮捕，也不愿意成为警察。而警察正是公共权力的代表。不过这种新制度是适合雅典人新的社会状况的，这也可以从财富、商业和工业的迅速繁荣看得出来。</p>\r\n<h2 id=\"罗马的氏族和国家\">罗马的氏族和国家</h2>\r\n<p>氏族和氏族向国家演变的过程，同样在罗马人身上发生过。</p>\r\n<p>在罗马建城的传说里，最早在这里定居的是由各种氏族联合成的一个部落。这些氏族有着下面一些制度，和上面提过各地的氏族并无什么差别：</p>\r\n<ul>\r\n<li>氏族成员的相互继承权</li>\r\n<li>共同的目的</li>\r\n<li>共同的宗教节日</li>\r\n<li>氏族内不得通婚</li>\r\n<li>共同的地产</li>\r\n<li>氏族人间有相互保护和援助的义务</li>\r\n<li>使用氏族名称的权利</li>\r\n<li>接纳外人入族的权利</li>\r\n<li>选举和罢免酋长的权利</li>\r\n</ul>\r\n<p>类似地，也有胞族和部落。只有成为氏族的成员，才可以属于罗马人民。氏族酋长总是从每个氏族的同一家庭选出的习俗，也造成了最初的部落显贵。随着罗马城以及靠政府扩大的罗马地区人口日益增加，他们来自征服地区或移民；他们人身自由，可以占有地产、纳税、服兵役，<strong>但不属于氏族使他们不可担任任何官职</strong>。随着他们规模的不断扩大，为了解决他们和氏族居民的冲突，塞尔维乌斯·图利乌斯这位军事领袖参照希腊特别是索伦指定了类似的新制度。</p>\r\n<ul>\r\n<li>新的人民大会不分居民和新国民</li>\r\n<li>服兵役的男子按财产分成6个阶级，每个阶级的投票权不一，其中财产最多的阶级票数占优</li>\r\n<li>设立4个地区部落，享有一切政治权利</li>\r\n</ul>\r\n<p>从而，在罗马王政废除前，一个人血缘为基础的古代社会制度就这样炸毁了，代之而来的是一个新的，以<strong>地区划分</strong>和<strong>财产差别</strong>为基础的真正的国家制度。在王权废除后，制度进一步发展，带来了惊人的贫富差距，也给德意志野蛮人打开了门户。</p>\r\n<h2 id=\"凯尔特人和德意志人的氏族\">凯尔特人和德意志人的氏族</h2>\r\n<p>在凯尔特和日耳曼人中，也存在氏族的形式。威尔士人和爱尔兰人中土地还是共同耕作的。爱尔兰氏族中，如果某一成员死亡，一户经济不存在，部落首领便把所有土地在其他各户间进行重新分配。在苏格兰，氏族制度是随着1745年其余被镇压而灭亡的。</p>\r\n<p>德意志人在随着匈奴人入侵西迁到罗马领地前，曾以氏族的形式组织。人们按血族居住，土地公共分配。同样地，军队也是以氏族的组织来编的。在塔西佗的《日耳曼尼亚志》里，有人认为舅父和外甥的血缘关系，甚至比父子的血缘关系还要神圣和紧密，这也是<strong>母系氏族</strong>残余的表现——对于姊妹的儿子比自己的儿子要更加神圣地保护。这种残余还体现在德意志人<strong>对女性的尊敬</strong>上，他们甚至在最重要的事情上也听取妇女的意见。不过在塔西佗时代，母权制已经让位给父权制了：父亲的遗产由子女继承，如果没有子女，就由兄弟及叔伯和舅父继承。</p>\r\n<p>在德意志人中，耕地经过了从氏族到共产制家庭公社共同耕作的过程，而最后向现代鼓励的家庭逐渐过渡。在凯撒时代，一部分德意志人刚刚定居下来，一部分人尚在寻找定居的地方，不过生产资料的生成已经取得了明显的进步，整个民族从野蛮时代的中级向高级阶段进化。相应的，酋长议事会和人民大会等制度出现，部落联盟里的军事首长已经图谋夺取专制。在征服了罗马帝国后，宫廷里的奴隶和被释奴隶形成了新的贵族，另外，<strong>扈从队</strong>这种军事领袖的私人武装逐步发展了独立自主参与战争的私人团体。这一方面促进了王权的诞生，另一方面使武装的目的不再是自卫，而成了<strong>掠夺</strong>。扈从队成员同时也是新贵族成员的一个来源。德意志人发展到这个程度，氏族制度的末日也到来了。</p>\r\n<h2 id=\"德意志人国家的形成\">德意志人国家的形成</h2>\r\n<p>罗马人消灭了氏族制度，并用<strong>罗马国家</strong>作为联合各民族形成新民族的纽带。不过在国家形成后，便成为了残酷剥削的工具，大量农民迅速破产，被释努力和破产的自由民日益增多，仅剩的自由小农。为了不受管理、法官和高利贷者的侵害，往往托庇于有权势者寻求保护。有权势者从而获得徒土地的所有权。</p>\r\n<p>德意志野蛮人的入侵把罗马人从自己的国家里解放了出来，大量土地被重新分配。随着德意志人和罗马人的融合，<strong>氏族亲属性质联系渐渐让位给地区性质的联系</strong>。氏族消失在马尔克公社中。另外对于被征服者的统治也与氏族制度不相容。这驱使氏族制度机关必须转化为国家机关。于是，军事首长的权力转变为王权的时机就来了。法兰克王国中，人民的财产——大片徒弟变成王室的财产，一部分赠与或赏赐给扈从队和宫廷里的宠儿。他们就靠牺牲人民成为了新贵族。</p>\r\n<p>不仅如此，王国幅员广阔，不能再召集酋长议事会，它也因此很快被国王的固定亲信所代替，旧的人民大会也越来越变成纯粹是下级军事首长和新贵的会议。之前由自由民组建的卫国军，现在由新贵的仆从组成的军队代替。之后，自由的法兰克农民也陷入了罗马农民的一样情况——丧失自由，强制劳役。</p>\r\n<p>上面种种国家的诞生中能看到，社会制度和社会生产是密切相关的。德意志人给古老罗马注入的活力，和种族无关，而只是他们的野蛮状态和<strong>氏族制度</strong>而已。他们的自由意识和把一切公共的事情看做自己的事情的民主本能正是罗马人丧失的一切本质。以马尔克公社保存下来的一部分氏族制度让封建国家里被压迫阶级即使在最严苛的中世纪也能有地方性的团结和抵抗。他们之前实行的比较温和的隶属形式，也给罗马国家里的被奴役者提供了作为阶级<strong>逐渐解放</strong>的手段。以上种种正是野蛮时代生命力的证明。</p>\r\n<h2 id=\"野蛮时代和文明时代\">野蛮时代和文明时代</h2>\r\n<p>前面几章，我们已经在希腊人、罗马、德意志人身上看到了氏族制度的解体。接下来将探讨这种变化的一般经济条件。氏族制度和部落联盟是自然形成的结构，它能够处理这样组织起来的社会内部一切可能发生的冲突。氏族制度的伟大同时也是它的局限，就在于这里没有统治和奴役，<strong>没有权利和义务</strong>的分别。参与公共事务、血族复仇这些对氏族成员看来就像吃饭喝水一样自然。</p>\r\n<p>氏族时期的人口极其稀少，分工只存在于两性之间。男女分别是自己所制造和使用的工具的所有者，对于男子是武器、渔猎工具，妇女则是家内用具。随着驯养动物的出现，游牧民族从其余野蛮人群中分离出来，这也是第一次社会大分工。游牧部落的丰富生活资料也带来了最初的<strong>经常性交换</strong>。它不同于更早的偶然性交换。此时，不同部落成员间的交换逐渐发展，交换成为一种经常制度发展和巩固起来。牲畜在此时起到了货币的作用。</p>\r\n<p>同时，园圃种植业里，耕地最初交给氏族使用，随后交给家庭公社，最后交给个人。不过他们对耕地只有一定的占有权。这一阶段的工业成就里，织布机出现，矿石冶炼和金属加工发展起来。一切部门（畜牧业、农业、家庭手工业）的生产增加使人的劳动力能够生产出<strong>超出维持劳动力所需的产品</strong>。同时，这也增加了每个成员所负担的每日劳动量，吸收劳动力成为人们向往的事情。战争提供了劳动力：俘虏变成了奴隶。这也带来了奴隶制。</p>\r\n<p>畜群从部落和氏族向家庭过渡后，由于谋求生活资料更多是男人的事情，且是他们的财产。因此，牲畜和牲畜交换来的商品和奴隶也是他们的。这一财产分配的变化，使男子优于负责家务劳动的妇女在家中占统治地位。这里已经表明：</p>\r\n<blockquote>\r\n<p>只要妇女仍然被排除于社会的生产劳动之外而只限于从事家庭的私人劳动，那么妇女的解放，妇女同男子的平等，现在和将来都是不可能的。妇女的解放，只有在妇女可以大量地、社会规模地参加生产，而家务劳动只占她们极少的功夫的时候，才有可能。</p>\r\n</blockquote>\r\n<p>在野蛮时代的高级阶段，各种社会生产的充分发展，使得如此多活动已经不能由同一个人进行了；于是发生了第二次大分工：手工业和农业。从而带来了直接以交换为目的的生成，即<strong>商品生产</strong>，紧接着而来的是贸易。<strong>生产率增长提高了劳动力价值</strong>，奴隶不再是助手，他们被分配去劳动。除了自由民和奴隶的区别，又出现了富人和穷人的差别。社会又有了新的阶级划分。各家庭的财产差别，摧毁了旧的共产制家庭公社和这种公社实行的共同耕作。这与对偶制婚配向专偶制演变是并行发生的。个体家庭开始成为社会经济单位。日益稠密的居民，使得各亲属部落融合成一个民族，并拥有整个领土。人民大会和军事领袖出现。战争目的变成掠夺财富，成了经常性行为。掠夺战争加强了最高军事首长和下级军事首长的权利，习惯性从同一家庭选举的办法在父权制实行后，渐渐变成世袭制。</p>\r\n<p>野蛮时代高级阶段日益增加的一部分产品直接是为了交换而生产。它又带来了新的分工：创造了一个<strong>不再从事生产而只从事产品交换</strong>的阶级——商人。这个阶级也带来了金属货币即铸币。货币借贷也带来了<strong>利息</strong>和<strong>高利贷</strong>。除了货币财富还出现了地产的财富，完全自由的土地所有权，不仅意味着不折不扣毫无限制地占有土地的可能性，同时也意味着<strong>将之出让</strong>的可能性。土地现在可以成为出卖和抵押的商品了。随着这些出现，财富迅速聚集到一个很少人数的阶级中，而奴隶的强制性劳动构成了整个社会上层建筑赖以建立的基础。</p>\r\n<p>对于兴起的种种新因素，氏族制度显得软弱无力：</p>\r\n<ul>\r\n<li>奴隶、被保护民、外地人公民杂居</li>\r\n<li>新的利益和氏族制度格格不入</li>\r\n<li>城市对立于农村</li>\r\n</ul>\r\n<p>氏族制度成长于没有任何内部对立的社会，<strong>除了舆论以外，没有任何强制手段</strong>。而今，它不能调和社会中各阶级不断尖锐的矛盾。它被分工及其后果是社会分裂为阶级的制度替代——那就是<strong>国家</strong>。</p>\r\n<p>根据上面所述，先前的一切发展阶段在生产的本质上都是<strong>共同的生产</strong>，消费也是在或大或小的共产制共同体内直接<strong>分配</strong>产品。这时产品不可能越出生产者的支配范围，衍生出文明时代里那种鬼怪般异己的力量。但是<strong>分工</strong>破坏了生产和占有的共同性。商品不再是为了自己消费而是为了交换而生产。商品的交换如此错综复杂，生产者<strong>丧失了对自己生活领域内全部生产的支配性</strong>，同时社会的生产也不是由共同制定的计划，而是由盲目的规律来调节，从而出现周期性的商业危机。随着奴隶制、农奴制和现在的雇佣劳动制，人也可以成为商品——人力是可以交换和消费的。下面一些经济特征出现：</p>\r\n<ul>\r\n<li>金属货币，货币资本、利息、高利贷出现</li>\r\n<li>出现了生产者之间的中间阶级——商人</li>\r\n<li>出现了土地私有制和抵押</li>\r\n<li>出现了作为占统治地位的生产形式——奴隶劳动</li>\r\n</ul>\r\n<p>文明时代还有遗嘱继承这样的全新社会制度。鄙俗的贪欲和个人财富是文明时代最重要的目的。文明时代的基础是一个阶级对另一个阶级的剥削。生产的每一进步，同时也是被压迫阶级即大多数人生活状况的退步。最后，摩尔根对文明时代的评断被用来作为全书结尾：</p>\r\n<blockquote>\r\n<p>自从进入文明时代依赖，财富的增长是如此巨大，它的形式是如此繁多，它的用途是如此广泛……，以致这种财富对人民来说已经<strong>变成了一种无法控制的力量</strong>。<strong>人类的智慧在自己的创造物面前感到迷惘而不知所措了</strong>。然而，总有一天，人类的离职一定会强健到能够支配财富……。社会的利益绝对地高于个人的利益，必须使这两者处于一种公正而和谐的关系之中。……社会的瓦解，即将成为以财富为唯一的最终目的的那个历程的终结，因为这一历程包含着自我消灭的因素。管理的民主，社会中的博爱，权利的平等，教育的普及，将揭开社会的下一个更高的阶段，经验、理智和科学正在不断向这个阶段努力。<strong>这将是古代氏族的自由、平等和博爱的复活，但却是在更高级形式上的复活</strong>。</p>\r\n</blockquote>\r\n",
            "tags": [
                "马列主义",
                "恩格斯",
                "家庭",
                "国家",
                "阶级",
                "氏族"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2023/09/28/g-e-b-2/",
            "url": "http://shenlvmeng.github.com/blog/2023/09/28/g-e-b-2/",
            "title": "GEB —— 集异璧之大成 下",
            "date_published": "2023-09-28T11:43:09.000Z",
            "content_html": "<p>下半部分对人工智能、计算机的探讨和前半部分有相通之处。</p>\r\n<h2 id=\"描述的层次和计算机系统\">描述的层次和计算机系统</h2>\r\n<blockquote>\r\n<p>描述、组块化、旁效现象</p>\r\n</blockquote>\r\n<p>上半部分对WJ谜题的讨论以及对哥德尔、巴赫的赏析中，就出现过不同的层次，日常中<strong>描述是有层次的</strong>。人由几十万亿个细胞组成，但日常行为却根本没法描述到每个细胞的层级。人工智能里也有和层次相关的追求，即如何构造一个系统，接收一个层次的描述，去生成另一个层级的描述。关于这方面的研究很久前就开始了，荷兰心理学家阿德里安·德·格鲁特发现大师对于棋局的感知是<strong>组块化的</strong>。他感知的是整个棋局的战略态势（很类似《程序员思维修炼》里的<a\r\nhref=\"https://shenlvmeng.github.io/blog/2020/05/31/pragmatic-thinking-and-learning/#%E6%91%98%E5%BD%95-2\">R型思维</a>）。大师在对局期间，会识别棋局的<strong>模式</strong>，对庞大可能性的树状结构做修剪。从而嗅出更大获胜可能的选择，这种直觉是涌现的。</p>\r\n<p>计算机系统其实很类似，也有层次的概念。庞大复杂的计算机系统也是基于模块化思路一层层构成的。从最底层的存储器、CPU、字，到有限的机器指令、机器语言，再到编译语言、解释语言、算法，层次一点点提高。运行着的程序也有着上面每个层面上的描述，层次越靠下，需要的描述就越多。计算机为了减少用户的负担，掩盖了绝大多数的低层的复杂度，只暴露最高的几个层次。其他系统也是如此，飞机的乘客并不需要知道当前的风速、油箱还有多少燃料。</p>\r\n<p>计算机这些年的发展里，涌现出更多的高级语言，向人工智能做着努力；不过<strong>计算机的全部潜能已经存在于它所有的机器指令集中</strong>，指令集就是它的原子能力集合。每种高层次语言都使用着“能力空间”里的不同区域，语言并没有强迫程序员编写某类特定程序，但为他做某些事提供了便利。用不同的语言编程，就像使用不同的调式编曲，每种调式都有自己的感情色彩。人工智能要求的计算机层级可能比我们想象的还多不少。</p>\r\n<p>软件和硬件也是不同层级的一种表达，就像脑细胞是硬件，想象是软件，我们无法使我们的神经元更快或者更慢些，或控制它们重连。但我们仍然可以控制自己的思维方式。软件是无法超越硬件存在的，我们自己也能意识到。本书意在两者间需要一些调和途径。</p>\r\n<p>在低层和高层间还有一些中间层次，就像空气分子和气候间还有局部风暴这种描述。我们日常感知的这样的中间层次可能也只是高层的一部分。从最底层的夸克向上，原子物理学家有原子核的图景，化学家有通过电子构成的小分子图景，分子生物学家又可以构成大分子相互作用领域，细胞生物学家基于大分子组块化说明细胞的作用方式。科学间临近的层次间可能没那么“隔离”，不过两个相距较远的层次就没有太大关系了。人们相互沟通交往，可不需要了解夸克、原子理论、化学键、蛋白质、细胞、器官生理学等知识。当然，这种组块化<strong>牺牲了确定性来获得简单性</strong>。让我们可以<strong>或然地估计</strong>他人的感觉。一般来说也够用了。这种掩盖了复杂性的高层组块化描述，让低层像是黑盒。你甚至根本不知道低层做了什么。不过还好，稳定的低层子系统可以得出“可靠地”独立于自身系统的结论。这种结论是无法用低层词汇表描述的。</p>\r\n<p>本章最后抛出来一个“旁效现象”的说法，一个高层系统从不同的角度看有很多的“旁效现象”，这些现象往往是系统内各个层次成千上万因素相互作用的结果，不可能从某个低层找到一个答案。就像一个短跑运动员100米成绩10秒5，不代表身体的某处存着这个数字；一个人上当受骗也不代表他大脑某处有个“上当中枢”。</p>\r\n<h3 id=\"蚂蚁赋格\">蚂蚁赋格</h3>\r\n<p>这篇很长的小品，借食蚁兽、螃蟹、阿基里斯围绕蚂蚁群体和个体关系的讨论，类比人的心智，借由符号、信号等概念，给读者心智模型的感性印象。在意识系统中，我们只能从符号层次感受自己，而无法在更低的层次感受到意识。要理解整个结构，就需要忽略组成结构的基本单元。</p>\r\n<h2 id=\"大脑和思维\">大脑和思维</h2>\r\n<blockquote>\r\n<p>符号、信号、过程性知识、描述性知识</p>\r\n</blockquote>\r\n<p>本章对人类大脑的思维的运行方式做了艰深难懂的探讨，首先，<strong>人的思维一定是依赖于大脑硬件中的客观存在的</strong>，而且我们也能发现特定的记忆也是和局部区域的功能相关的。然而从神经元的底层生物反应到高层思维间的领域，却没人能说得清楚。以视觉为例，视觉细胞可以分为三层：简单的、复杂的、超复杂的。我们看到祖母出现在眼前当然也不会是有一个“祖母细胞”在发挥作用。不过正如刚才所说，没有人知道复杂细胞和超复杂细胞的输出在哪里或如何转换成对祖母形状、位置、图形、面容这些有意义的识别。</p>\r\n<p>视觉的形成会有一个汇集的过程，在光线射在视网膜上时，你可以感觉到有什么东西在脑海中<strong>结晶</strong>了，这个过程是在视网膜作用的稍迟一些。为了更好描述思维过程，书里用“符号”这种抽象概念掩盖了底层神经元的作用过程。这里的<strong>符号</strong>比较像是日常生活中可以用一个词或者一个固定短语描述出来的事物。</p>\r\n<p>在人的思维里，也有<strong>类</strong>和<strong>例</strong>的区分，思维善于从已有的类中制造新的例，如听到“乒乓球运动员张三”时，脑海里会想象出运动员的形象和乒乓球的场景，这也是人类想象力的基础，让人可以创造自己的人工宇宙；另外，思维也可以将一个实例作为一个新生类的范例，在补充更多的上下文和真实世界有更多相互作用后，从这个例（孩童状态）中创造新的类（成人状态），如听到“乒乓球运动员张三”的声音，知道他的历史成绩，看了他的比赛，甚至有了他的签名。之后，“张三”脱胎成为新的类。思维中激活张三便不需要其他类的帮助。在昆虫的世界里，书中以黄蜂为例，可能只有孤立的例，而没有类存在。</p>\r\n<p>在符号的激活通讯上，符号在大脑神经元中的存储可能是重叠而并非独立的，激活通讯同时在许多神经元上发生，就像水波可以同时承载多个波源一样。符号的唤醒也是交织在一起同时又能彼此区分的。单个符号并不能被隔离出来，它的个性体现在和其他符号的彼此联系上。我们目前没法用更精确的语言去描述这种彼此联系，而这种可以基于抽象符号描述的思维方式，是思维软件性的证明，也是智能“可抽取性”的基础。因为符号本身是可以做到移植性的。</p>\r\n<p>在人工智能的研究里，有过程性知识和描述性知识两种区分，前者是显式贮存地址读取的，后者是演绎式的。举个例子，“广州市有多少人”的问题会触发你读取知识点答出；而“房间里有多少人”则会触发你一个过程化方法被调用。我们日常感知的物理学和其他学科常识通常是过程性的，而有些问题则在这两种类型之间，如“唱一首生日快乐歌”。</p>\r\n<h3 id=\"英法德中组曲\">英法德中组曲</h3>\r\n<p>小品中的诗中掺杂了很多自创字和短语，为下文介绍思维中的映射准备了例子。</p>\r\n<h2 id=\"心智和思维\">心智和思维</h2>\r\n<blockquote>\r\n<p>自想国、自我意识、子系统</p>\r\n</blockquote>\r\n<p>上一章中，对大脑和思维用符号进行了模拟化的描述。不同大脑间存在着一些重构，即对于可选符号的对应和符号触发模式的对应。书中以上篇小品的翻译为例，自创字的含义会通过其偏旁去猜测其意思，在英法德的翻译中也有类似的猜测。而这种猜测也意味着不同国家的读者在读这篇小品的过程中，大脑里也有粗略的同构。</p>\r\n<p>在之后，作者又用自想国为例，描述了一个事实——你所想象出的地图轮廓或多或少来自真实世界的地图（这里暗示人无法想象出没有经历过的东西）。以自想国作比喻，作者用意有双关。除了上面提到的引申之外，也借由自想国中的都市、城镇和公路类比思维中的符号和触发通路。人在自想国中旅游也是因为，当外界环境类似时，类似的触发通路也会触发同样的符号。当然，不同的人身上也会存在细微的差别。</p>\r\n<p>之后，书中话锋一转，开始讨论语言文化对母语者思维的影响。之后聊到在翻译外文作品的时候，保留文字原意意味着不完全忠于原文的本土化改造。就像本书尤其这几节所做的一样。作者借由威佛尔对翻译的理解，认为翻译应该像是解码文字中描述的客观意义，而不只是做字面的转译。在程序语言领域，不同语言写成的程序，可以在高层次上抽象出“概念骨架”。那么大脑可以这么做么？</p>\r\n<p>作者认为可以，因为我们可以用组块化去描述我们的意识活动，即虽然对于一个给定的符号，可能存在不止一条合理的触发通道，但在特定环境下，只会选择其中一条。人类往往是矛盾的混合体，在统一起来后，在某个特定时刻只表现出其中一个方面。</p>\r\n<p>上面的讨论和上一章可以说别无二致，但聊到<strong>自我意识</strong>后，问题复杂了起来。人们是如何觉察到符号的触发过程，即自我意识呢？这是个自指的过程。作者认为意识是系统的一种性质，每当系统有触发模式的符号时，这种性质就会出现。这个描述很显然过于简单。之后文中提出<strong>子系统</strong>的概念试图解释，子系统是过度生长的符号，可以翻译一种思维模式，从而可以自己产生符号。子系统不仅可以体现自我意识，和可以借助自己的符号去<strong>尽量模拟</strong>他人的意识，有点像换位思考。这样的子系统一旦触发，几乎是自主的，就像有灵魂一样。不过我认为这段描述仍不够，解释不了这样的子系统是如何自生产符号的，以及它无限递归地意识到它自己存在时，符号和触发链路是如何工作的。</p>\r\n<p>本章最后用稍显明晰的卢卡斯文章材料收尾，文章里也提到，意识物可以无限递归地认识到它认识到什么事物，更关键的是，在思想无限进行下去的同时它还能自我运作起来。这意味着它能处理哥德尔式的自指问题，而机器却不行。也许机器的复杂度存在<strong>临界点</strong>，就像核裂变一样。超出这个临界点，机器就可以形成心智，而我们无法预测它将如何运转。对于这种可以回答哥德尔式问题的东西，我们也许已不能用机器去叫它们。</p>\r\n<h3 id=\"咏叹调及其种种变奏\">咏叹调及其种种变奏</h3>\r\n<p>这篇小品从巴赫创作哥德堡变奏曲的年份1742年引入了哥德巴赫猜想和乌龟猜想，讨论了命题证明中判定的有限和无限两种情况。Cantor在小品前后的前后呼应，以及金币被偷的前后呼应也很有趣。其中Cantor作为数学家名字出现在皮包上多个数学家名字的对角线里也是很绝。</p>\r\n<h2 id=\"bloop和floop和gloop\">BlooP和FlooP和GlooP</h2>\r\n<blockquote>\r\n<p>算法、对角线法、停机问题、丘奇-图灵论题</p>\r\n</blockquote>\r\n<p>在两章对于人类意识的讨论后，又回到对于递归可验证和计算机算法的探讨。从TNT中我们可以发现，一个<strong>充分复杂到可以反映自身的有序系统是不可能有序的</strong>。换句话说，一个足够强力到可以验证“全部原始递归真理”的系统总会遇到一个它无法验证的命题。</p>\r\n<p>接着，书里带着探索事件背后规律的想法继续展开。为了讨论自然数，接着把<strong>数论和计算机算法关联起来</strong>，首先BlooP（Bounded\r\nloop）语言被发明出来，它的控制结构包含分支、<strong>有界</strong>循环（for\r\nloop），以及退出循环的QUIT、退出过程的ABORT。这样写出的BlooP过程（procedure）即BlooP函数，另外我们约定接受一个唯一的参数N且输出YES或NO的BlooP函数被称为<strong>测试</strong>，它可以用来验证一些命题。像计算机编程里一样，之前定义过的每个BlooP过程都可以直接被拿来当做一个组块（模块化）。</p>\r\n<p>在这样的BlooP语言里，我们可以写一个定义质数的BlooP测试PRIME?，伪代码像下面这样</p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEFINE PROCEDURE</span><br><span class=\"line\">&quot;PRIME?&quot;[N]:</span><br><span class=\"line\">BLOCK 0:BEGIN</span><br><span class=\"line\">  IF N=0,THEN:</span><br><span class=\"line\">  QUIT BLOCK 0;</span><br><span class=\"line\">  CELL(0)&lt;-2 # 把CELL(0)置为2</span><br><span class=\"line\">  LOOP AT MOST MINUS[N,2] TIMES:</span><br><span class=\"line\">  BLOCK 1:BEGIN</span><br><span class=\"line\">    IF REMAINDER[N, CELL(0)]=0,</span><br><span class=\"line\">    THEN:</span><br><span class=\"line\">    QUIT BLOCK 0;</span><br><span class=\"line\">    CELL(0)&lt;-CELL(0)+1</span><br><span class=\"line\">  BLOCK 1:END;</span><br><span class=\"line\">  OUTPUT&lt;-YES;</span><br><span class=\"line\">BLOCK 0:END.</span><br></pre></td></tr></table></figure>\r\n<p>可以用BlooP定义出来的过程都可以预知终止结果，这样的函数叫做<strong>原始递归函数</strong>，而可以这么验证的性质被称为<strong>原始递归谓词</strong>。哥德巴赫猜想也可以很轻松写出一个BlooP测试，另一方面，也可以用BlooP函数写一些计算自然数的功能，如阶乘、求余数、斐波那契数列，甚至是用哥德尔配数法表示的定理。</p>\r\n<p>在讨论FlooP之前，有必要再次赘述下<strong>可表示性</strong>和<strong>可表现性</strong>，前者是指能否将一个自然语言的性质形式化表述出来，比如可以轻易用TNT串表示出，一个数b具有“乌龟性质”（作者在上节小品里提的哥德巴赫猜想的2-1=1版本）。但是可表现性意味着，该谓词的全部为真的实例皆为定理，全部为假的实例均为非定理。这也是TNT作为一个公理系统到底有多强力的体现。虽然这种完全性在后面将被发现不存在，但TNT对于<strong>原始递归谓词</strong>来说还是完全的，即如果数论中某个陈述的真假可以在可预知时间段内判定，那在TNT中一定也是可判定的。</p>\r\n<p>那么存在非原始递归么？我们可以设想一个存放所有BlooP程序的库，<strong>B库</strong>。它必然是无穷大的。之后，我们在库里筛选出满足下面条件的过程：</p>\r\n<ul>\r\n<li>只接受1个参数</li>\r\n<li>返回数字</li>\r\n</ul>\r\n<p>之后将筛选过后的特殊程序称作蓝程序（Bloo发音近似blue，P指代Program），由于蓝程序由有限的字符集组成，我们可以按照程序代码在ASCII码中的字典序来排列，这样每一个蓝程序都可以有一个唯一的索引编号。从而用<code>蓝程序&#123;k&#125;[N]</code>来表示第k个蓝程序。</p>\r\n<p>之后用康托尔使用的<strong>对角线法</strong>，可以制造一些不能在BlooP中编程的函数。我们不妨称之为蓝对角，定义如下：</p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">蓝对角[N] = 1 + 蓝程序&#123;#N&#125;[N]</span><br></pre></td></tr></table></figure>\r\n<p>这样的蓝对角不能存在于蓝程序中，因为假如存在，它一定有一个编号，假设为X。那么根据蓝程序的定义<code>蓝对角[N] = 蓝程序&#123;X&#125;[N]</code>，代入X可以得到<code>蓝对角[X] = 蓝程序&#123;X&#125;[X]</code>；同时根据蓝对角的定义，代入X可以得到<code>蓝对角[X] = 1 + 蓝程序&#123;X&#125;[X]</code>，两者相互矛盾。从而意味着一定存在<strong>非原始递归函数</strong>，映射到数论中，一定存在某个数论中的函数没法在可预测的步数内被算出来。实际上，对于每个给定的N，蓝对角可以转化到蓝程序从而步数可预测，但每个N的步数预测不能结合成一个朴实的方法去预测<code>蓝对角[N]</code>的计算步数。</p>\r\n<p>对角线论证源于康托尔论证如果建立一个实数登记表，那么会不可避免的排除一些实数。论证过程上，构造了一个这样的表然后按<strong>对角线的形式</strong>取第n行第n列，之后将每个数都减1，这样得到的数总有一位和每一行都不一样，从而排除于表之外。这个证明过程实质上用了<strong>两种方式使用了同一个整数</strong>（横向和纵向索引），在蓝对角里也是如此（程序索引序号和输入参数）。</p>\r\n<p>看到了BlooP的局限性，我们可以发明一个FlooP（Free\r\nLoop）语言。它的μ算子可以包括一个无穷的循环。</p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MU-LOOP</span><br><span class=\"line\">BLOCK n:BEGIN</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">BLOCK n:END</span><br></pre></td></tr></table></figure>\r\n<p>假设用它来验证妙极性（角谷猜想最后的1-4-2-1-4-2循环），那么，如果输入的N是妙极的，那么程序会返回YES，如果是非妙极的，那么要么程序返回非1-4-2的循环，要么干脆没有返回永不停歇。后面这种情况就是个<strong>无终止过程</strong>。对于FlooP多出来的无终止过程，可以和有终止过程分成两类。那么对于每个FlooP程序，我们是否可以通过一个复杂的<strong>有终止过程</strong>的检测可以得到它是否无终止过程呢？如果存在这种检测，我们就可以通过它的返回验证妙极性和乌龟猜想了。</p>\r\n<p>首先我们需要改造BlooP，让它可以接受程序而非数字。哥德尔配数可以帮我们完成。将程序的字符映射成数字即可。阿兰·图灵使用对角线法类似的思路（往这种终止检验程序中输入它自己的哥德尔数）证明不存在这样的BlooP函数。书中用另外的方法做了证明。</p>\r\n<p>类似蓝对角，我们构造同样的<strong>绿对角</strong>（绿灯和free对应）：<code>绿对角[N]=1+绿程序&#123;N&#125;[N]</code>。现在问题来了，由于F库中还存在无终止过程，我们需要把它们剔除。刚才提到的“终止检测器”可以帮我们实现，经过它的过滤得到的绿程序我们可以叫做红程序（总会遇到红灯停下）。之后红对角会面临和蓝对角一样的困境。</p>\r\n<p>要么我们用GlooP表示一个比FlooP更强大的存在，要么接受不存在这样的终止检测器。但实际上，我们现在的计算机语言只能做到FlooP的地步。阿兰·图灵和阿朗佐·丘奇定理独立论证了不存在这样的GlooP：</p>\r\n<ul>\r\n<li>人能计算的就是机器能计算的</li>\r\n<li>机器能计算的就是FlooP能计算的</li>\r\n<li>人能计算的也就是FlooP能计算的</li>\r\n</ul>\r\n<h3 id=\"g弦上的咏叹调\">G弦上的咏叹调</h3>\r\n<p>小品里对使用-引用做了讨论，提出了自引用的说法，如“‘放在其引文形式后面得到假句子’放在其引文形式后面得到假句子”。</p>\r\n<h2\r\nid=\"论tnt及有关系统中形式不可判定的命题\">论TNT及有关系统中形式不可判定的命题</h2>\r\n<blockquote>\r\n<p>证明对、㧟摁、算术㧟摁、哥德尔第二定理、ω不完全性</p>\r\n</blockquote>\r\n<p>在上面的小品引导下，本章逐步用自引用和反例构成悖论，体现TNT的ω不完全性。首先，在前面的章节里能看到，通过<strong>哥德尔配数法</strong>，TNT有自省能力，即可以表述自身。再结合上一章中的<strong>对角线方法</strong>，两个关键概念已经集齐。</p>\r\n<p>为了制造自我指涉，首先引入<strong>证明对</strong>的概念——<strong>两个自然数（m和n）形成一个证明对，当且仅当m是TNT推导的哥德尔数，n是推导最后一行（即结论）的哥德尔数</strong>。例如：</p>\r\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WJ</span><br><span class=\"line\">WJJ</span><br><span class=\"line\">WJJJJ</span><br><span class=\"line\">WUJ</span><br></pre></td></tr></table></figure>\r\n<p>从而m=3131131111301和n=301时构成证明对。TNT也是一个道理。要证明一对mn是证明对是很简单的，观察m代表的推导过程有无问题，以及n是不是最后一行的结论。从而</p>\r\n<ul>\r\n<li>“是证明对”这个性质是原始递归的，即可以用一个BlooP程序测试；进一步地，<strong>可以被一个有两个自由变元的公式在TNT中体现</strong>（这一步很关键）</li>\r\n<li>要断定n是一个<strong>定理数</strong>，就是要找到一个m和n构成证明对</li>\r\n</ul>\r\n<p>上面提到的BlooP测试程序写成TNT的形式，用WJU系统可以叫做<code>WJU-PROOF-PAIR&#123;a,a'&#125;</code>，自由变元<code>a</code>和<code>a'</code>可以接受2个WJU形式系统的哥德尔数，检测它们是否构成证明对。同样的，在TNT系统里叫做<code>TNT-PROOF-PAIR&#123;a,a'&#125;</code>。假设我们要表示<code>0=0</code>是TNT定理，那么TNT公式可以写成<span\r\nclass=\"math inline\">\\(∃a:TNT-PROOF-PAIR\\{a,\r\nSSS...SSS0/a&#39;\\}\\)</span>，其中有a’的值666,111,666（<code>0=0</code>）个S。OK，目前为止，我们已经将是TNT定理数<strong>表示</strong>出来了</p>\r\n<p><span\r\nclass=\"math display\">\\[∃a:TNT-PROOF-PAIR\\{a,a&#39;\\}\\]</span></p>\r\n<p>但并未担保这个性质原始递归。之后，让我们将<strong>代入</strong>引入到哥德尔数里，代入即将所有自由变元都用数字替换。同样的，哥德尔数表示后也可以做这个替换，例如将<span\r\nclass=\"math inline\">\\(a=a\\)</span>替换为<span\r\nclass=\"math inline\">\\(SS0=SS0\\)</span>，对应的哥德尔数就从262,111,262替换为123,123,666,111,123,123,666。容易看到这个<code>哥德尔数&lt;-&gt;插入的具体数字&lt;-&gt;结果哥德尔数</code>的关系是<strong>原始递归</strong>的，即可以写一个BlooP测试，验证给的3个数字是否满足这个关系（都翻译回TNT表示，再观察即可）。从而，可以用一个有三个自由变元的TNT公式来体现。</p>\r\n<p><span class=\"math display\">\\[SUB\\{a,a&#39;,a&#39;&#39;\\}\\]</span></p>\r\n<p>将满足上面关系的3个数代入公式，就可以得到一个TNT定理。例如<span\r\nclass=\"math inline\">\\(SUB\\{SSS...SSS0/a,SS0/a&#39;,SSS...SSS0/a&#39;&#39;\\}\\)</span>，其中第一个参数有262,111,262个S，第三参数有123,123,666,111,123,123,666个S。</p>\r\n<p>接下来引入“<strong>算术㧟摁</strong>”（自引用）的概念，试图把<code>TNT-PROOF-PAIR</code>和<code>SUB</code>合成一个单一的TNT句子。我们定义将<strong>公式自身的哥德尔数代入公式</strong>称为㧟摁，得到一种谈论自身的公式的感觉。首先需要一个至少一个自由变元的公式如<span\r\nclass=\"math inline\">\\(a=S0\\)</span>，接入代入它的哥德尔数262,111,123,666得到<span\r\nclass=\"math inline\">\\(SSS...SSS(262,111,123,666个S)0=S0\\)</span>。既然是代入，<strong>算术㧟摁</strong>就可以用<span\r\nclass=\"math inline\">\\(SUB\\{a&#39;&#39;,a&#39;&#39;,a&#39;\\}\\)</span>来表示，里面前两个参数是相同的，可以观察到对角线法的影子，这里数<code>a''</code>既作为公式的哥德尔数，又作为代入的数字。为了便于使用，我们简记为</p>\r\n<p><span\r\nclass=\"math display\">\\[ARITHMOQUINE\\{a&#39;&#39;,a\\}\\]</span></p>\r\n<p>用汉语说就是，<code>a'</code>是哥德尔数为<code>a''</code>的公式做算术㧟摁（即代入<code>a''</code>）所得公式的哥德尔数，换句话说，<strong>a'是a''的算术㧟摁化</strong>。</p>\r\n<p>现在为止，两个组件都有了。现在给出那个<strong>㧟摁一个提及㧟摁的句子</strong>。</p>\r\n<p><span\r\nclass=\"math display\">\\[~∃a:∃a&#39;:&lt;TNT-PROOF-PAIR\\{a,a&#39;\\}&gt;∧ARITHMOQUINE&lt;a&#39;&#39;,a&#39;&gt;\\]</span></p>\r\n<p>这个符号串当然有一个哥德尔数，叫它<code>u</code>吧。我们现在要㧟摁这个符号串，即把唯一的自由变元<code>a''</code>替换成u。得到<span\r\nclass=\"math inline\">\\(~∃a:∃a&#39;:&lt;TNT-PROOF-PAIR\\{a,a&#39;\\}&gt;∧ARITHMOQUINE&lt;SSS...SSS(u个S)/a&#39;&#39;,a&#39;&gt;\\)</span>。考虑到它和哥德尔的用法接近，我们叫它<code>G</code>。好的，现在问题来了</p>\r\n<ol type=\"1\">\r\n<li>G的哥德尔数是什么？</li>\r\n<li>G怎么解释？</li>\r\n</ol>\r\n<p>首先，既然G是对原符号串的㧟摁化，那么<strong>G的哥德尔数自然是u的算术㧟摁化</strong>。好，看第二个问题，从字面意义翻译可以得到“不存在数a和a’使得（1）它们形成TNT证明对，同时（2）a'是u的算术㧟摁化”。根据刚才的加粗，G的哥德尔数就是u的算术㧟摁化。那么肯定是a出了问题。现在可以简化翻译成“没有一个数a能与u的算术㧟摁化形成TNT证明对”，换句话说，“以u的算术㧟摁化为哥德尔数的<strong>公式G不是TNT定理</strong>”。那么这句话本身是谁呢？就是<code>G</code>。因此，我们可以得到最终翻译：</p>\r\n<p>“G不是TNT定理”（G是这句话本身）</p>\r\n<p>我们构造出了一个TNT元语言句子。这句看着就有悖论意味的话可以很容易找到矛盾。如果G这句话是定理，那么G就是TNT中的真理，这和G在说的矛盾。如果G不是定理，那么就存在一个不是TNT定理的真理，也有矛盾。这个定理在TNT系统中<strong>无法判断真假</strong>。上面这段过程用TNT和数论的语言结合自引用的思路构造出了悖论。</p>\r\n<p>哥德尔在论文中，对于在可以“自我反映的元数学”中证明TNT的一致性做了探讨。但最终通过类似上面的构造证明只要TNT一致——用TNT符号写出的一致性语句不是个TNT定理。可见纵然TNT在<strong>表示</strong>事物时，反省能力很强，但要<strong>证明</strong>这些事物，反省能力就比较差了。</p>\r\n<p>本书在第8章第一次介绍印符数论的的时候提到过ω不完全性，即无法从特例到规律。上面找到的G就是一个例子。将里面a''替换成每个具体的数，都可以验证为真，但对G就无法判断。可以用第8章的方法，人为定义G的真假，来朝非欧几何一样的方向发展，但无论怎么加都会和我们对自然数的认识抵触。书里发明了超自然数和广义自然数的概念来解释，它们和自然数的性质没什么区别，但可以兼容<span\r\nclass=\"math inline\">\\(G\\)</span>或者<span\r\nclass=\"math inline\">\\(~G\\)</span>。G和~G的证明需要无穷步，因此不会干扰正常的自然数性质，对正常生活没有影响，但对元数学家有很重要。在本章最后，作者又将丢番图方程是否有整数解和数论中的G关联了起来。</p>\r\n<h3 id=\"生日大合唱哇哇哇呜啊呜啊呜啊\">生日大合唱哇哇哇呜啊呜啊呜啊</h3>\r\n<p>小品里乌龟用近乎无理取闹的方式给了ω答案模式和之后的各种迭代，只为证明阿基里斯生日的事实，同时为下章试图跳出系统的构造方法设好铺垫。</p>\r\n<h2 id=\"跳出系统\">跳出系统</h2>\r\n<blockquote>\r\n<p>多重分叉，本质不完全性</p>\r\n</blockquote>\r\n<p>在上一章里，我们发现在TNT里存在一个“漏洞”——存在一个不可判定的句子G。那如果把这个漏洞补上呢，构造一个TNT+G的形式系统。对于TNT+G也可以同样<span\r\nclass=\"math inline\">\\((TNT+G)-PROOF_PAIR{a,a&#39;}\\)</span>的思路构造一个G'（用TNT+G的字符串表示我在形式系统TNT+G中不可证）来制造矛盾。这种不断给漏洞打正反命题的方式（G，~G）在TNT下形成了多重分叉的树。</p>\r\n<p>然而，加入补丁后的形式系统仍可以找到“我在形式系统X中不可证”的字符串。所有这些“漏洞”构造方式相似，似乎可以找到一条公理模式<span\r\nclass=\"math inline\">\\(G_{ω}\\)</span>来表示所有这些G、G'、G''。那么我们把<span\r\nclass=\"math inline\">\\(G_{ω}\\)</span>加入到TNT中呢，能否补全这个漏洞。但既然有一个模子<span\r\nclass=\"math inline\">\\(G_{ω}\\)</span>来刻画G，也会有一种方法用算术模子来描述其对应的哥德尔数。用公式<span\r\nclass=\"math inline\">\\(OMEGA-AXIOM{a}\\)</span>描述，它的解释是<strong>a是出自<span\r\nclass=\"math inline\">\\(G_{ω}\\)</span>一条公理的哥德尔数</strong>。借助这个公式，就可以在<span\r\nclass=\"math inline\">\\(TNT+G_{ω}\\)</span>内部体现<strong><span\r\nclass=\"math inline\">\\(TNT+G_{ω}\\)</span>证明对</strong>的更复杂的概念。从而可以用一模一样的套路构造一个用来算术㧟摁的字符串，之后继续不可判定。我们叫它<span\r\nclass=\"math inline\">\\(TNT+G_{ω+1}\\)</span>。为什么<span\r\nclass=\"math inline\">\\(G_{ω}\\)</span>没法生成出<span\r\nclass=\"math inline\">\\(G_{ω+1}\\)</span>呢？答案是它自身还没有“聪明”到意识这一点。就像乌龟制造“不能播放的唱片”一样。</p>\r\n<p>依照哥德尔的手段，一个系统本身的性质在证明对概念之内得到反映，然后再针对它使用这些性质，就可以“以子之矛，攻子之盾”。一个系统不论多复杂，都能进行哥德尔配数，因而就能定义证明对。这其实和康托尔的对角线法类似——<strong>明确地排列</strong>一组实体。在康托尔的办法里，实数们的“详细梳理完毕”导致了无法自圆其说。在构造出不在列表里的数L后，把它添加进去试图弥补漏洞，只会得到一个新的漏洞L'。一旦<strong>确定了唱机的“体系结构”</strong>，唱机就必然会被找到弱点。因此TNT患上的是<strong>本质不完全性</strong>——这种不完全性就是TNT的基础组成部分。事实上，在一个系统里，能否利用哥德尔的自指办法构造不可判定的字符串，只依赖下面三个条件：</p>\r\n<ol type=\"1\">\r\n<li>系统要做足够丰富，以便容纳所有关于数的描述，不管是真是假（能构造命题）</li>\r\n<li>所有一般递归关系都可以用系统公式体现（能进行推导）</li>\r\n<li>公理和根据系统规则得到的印符模式，都能通过<strong>有限过程</strong>来辨识（能形式化证明）</li>\r\n</ol>\r\n<p>任何这样的系统在内部存在“黑洞”，这种系统强得能有自指句子，也因此自我崩塌。</p>\r\n<p>书中后面引用了卢卡斯的观点——由于哥德尔式论证的存在，人类思想具有某种难以捉摸、不可名状的特点，这使得“机械自动机”——计算机无法达到人工智能的高度。看起来很显而易见，毕竟人们总能跳出系统，在机器身上实施哥德尔手段（思路类似于计算机依赖刻板的内部编码-&gt;同构于形式系统-&gt;可以完成原始递归算术-&gt;上了哥德尔的“圈套”），所以我们总是知道的更多。作者并不赞同这种观点，本质在于我们总是<strong>处于系统之外</strong>，但机器不是，就像二维生物无法想象三维生物的细节一样。看起来我们在写出哥德尔方法的公式，但我们写出哥德尔方法的过程也是机械式的从ω到ω+1，再到<span\r\nclass=\"math inline\">\\(ω_{ω}\\)</span>，<span\r\nclass=\"math inline\">\\(ω_{ω+1}\\)</span>，而无法跳出系统之外。</p>\r\n<p>更直观一点，人本身也无法很好处理哥德尔手段的文字圈套，即<strong>悖论</strong>，如“我这句话是假话”、“只给不给自己理发的人理发的理发师”。人的大脑也没法做到前后一致的理解。人类无法超越自身就像计算机无法跳出自身一样。TNT可以讨论自身，却不能跳出自身——一个计算机程序可以修改自己，但不能违背自己的指令。</p>\r\n<p><strong>跳出自身，化身观察者</strong>成为了后面的论题。书里从文学作品说到禅宗。禅宗顿悟的过程也是这样的过程——<strong>逐步加深一个人的自我意识，逐步扩展“系统”的范围，最终感到和整个宇宙一致，突破自己达成顿悟</strong>。</p>\r\n<h3 id=\"一个烟民富于启发性的思想\">一个烟民富于启发性的思想</h3>\r\n<p>小品里讨论了自我复制的病毒、尝试拍摄自身的摄影机和显示器、自我指代的马格利特的画作。</p>\r\n<h2 id=\"自指和自复制\">自指和自复制</h2>\r\n<blockquote>\r\n<p>自复制、副本、印符遗传学、串、基、酶、氨基酸、核糖体、翻译、转录、DNA、mRNA、tRNA、蛋白质、中心法则、反馈、分化</p>\r\n</blockquote>\r\n<p>在上章借助自指构造矛盾后，这一章开头给出了很多自指或者自复制的例子，包括但不限于：</p>\r\n<ul>\r\n<li>本句子有七个字这种自我描述的句子</li>\r\n<li>可以打印自身函数体的程序</li>\r\n<li>打印自身哥德尔数的程序</li>\r\n<li>凯姆式自复制（输入一条会导致打印自身的错误信息）</li>\r\n</ul>\r\n<p>在对原件和复件做了不同层级的探讨后，引入了本章的主要内容：作者发明的印符遗传学，和遗传学相似但又有些改造的模型，在分子生物学之上、遗传学之下。印符遗传学有着和遗传学一样的<strong>基</strong>：</p>\r\n<ul>\r\n<li>A（腺嘌呤）</li>\r\n<li>C（胞嘧啶）</li>\r\n<li>G（鸟嘌呤）</li>\r\n<li>T（胸腺嘧啶）</li>\r\n</ul>\r\n<p>在前面的章节我们已经发现了这四个字母碰巧也可以代表A（阿基里斯，Achilles），C（螃蟹，Crab），G（基因，Gene），T（乌龟，Tortoise）把这些符号连一起可以构成<strong>串</strong>，串可以被印符酶（简称为<strong>酶</strong>）操作，移动、插入、删除等等。另外，嘌呤（A、G）和嘧啶（C、T）可以相互配对，其中A和T、C和G。酶可以使用的指令有15种，它们都有一个3个字母的代号，就像机器语言里一样，如cut、mov、rpy等，这样一个指令称为<strong>氨基酸</strong>，酶正是由氨基酸构成的。因此，一个串会按照氨基酸的指令逐步被处理，最终得到新串。</p>\r\n<p>那么串和酶还有什么关系呢？刚刚得到的新串，可以按照一个新的规则（书中叫做印符遗传密码）在核糖体里“翻译”成一个个氨基酸，并最终构成酶。例如，AC可以翻译为cut。具体可以参见下面的表格。</p>\r\n<table>\r\n<thead>\r\n<tr class=\"header\">\r\n<th></th>\r\n<th>A</th>\r\n<th>C</th>\r\n<th>G</th>\r\n<th>T</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"odd\">\r\n<td>A</td>\r\n<td></td>\r\n<td>cut(s)</td>\r\n<td>del(s)</td>\r\n<td>swi(r)</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>C</td>\r\n<td>mvr(s)</td>\r\n<td>mvl(s)</td>\r\n<td>cop(r)</td>\r\n<td>off(l)</td>\r\n</tr>\r\n<tr class=\"odd\">\r\n<td>G</td>\r\n<td>ina(s)</td>\r\n<td>inc(r)</td>\r\n<td>ing(r)</td>\r\n<td>int(l)</td>\r\n</tr>\r\n<tr class=\"even\">\r\n<td>T</td>\r\n<td>rpy(r)</td>\r\n<td>rpu(l)</td>\r\n<td>lpy(l)</td>\r\n<td>lpu(u)</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>注意到表格单元格的最后，括号里的符号表示了氨基酸的前进方向，这也形成了酶的三级结构，s代表straight，l代表left、r代表right。之后我们把第一段氨基酸调整到指向右边，那么根据最后一段的指向，分别代表酶初始化挂载的基是A还是C、G、T。可以发现，在确定酶的三级结构上，所有氨基酸都发挥了作用。另外，AA代表标点符号，标识一段串的结尾。</p>\r\n<p>读串并生成新的酶的过程，实际上由核糖体完成。至此，我们就可以从最初的串生成新的酶，新的酶又可以继续作用在串上形成新的酶，如此不断往复。在印符遗传学里，中心法则就是<strong>酶-印符操作-&gt;串-核糖体翻译-&gt;酶</strong>。在这个循环里，串既充当了程序的作用，又充当了数据的作用。到这里，又和TNT有点像了。</p>\r\n<p>生物学里的情况和这里很像。DNA就是“串”，蛋白质就是“酶”。DNA由核苷酸长链组成，核苷酸上的基标识了不同的核苷酸，正是A、C、G、T。核苷酸间通过共价键紧密连接，DNA双链间互补的核苷酸通过弱得多的氢键相连。在细胞核内部，DNA的一条链通过RNA聚合酶<strong>转录</strong>得到信使RNA（mRNA）。RNA和DNA的不同在于U（尿嘧啶）取代了T和A配对。核糖体其实不止制造酶，而是所有蛋白质。同时氨基酸共有20多种。mRNA在核糖体上的<strong>翻译</strong>过程和印符遗传密码类似，不过是以三个基为单位，如CAU产生组氨酸（his）。氨基酸间通过更强的共价键（肽键）组成蛋白质，蛋白质的三级结构比印符遗传学复杂得多，最终的结构和每个酶的关系目前也没有结论。在翻译过程中，需要的氨基酸，由对应的转运RNA（tRNA）运送过来。最后，UAA、UAG、UGA发挥着印符遗传学里AA的标点作用，表示一段翻译的结束。从DNA到蛋白质的过程便是如此。蛋白质和音乐有着一些相似，氨基酸就像印符，其连接起来组成的二级和三级结构就像旋律、乐章给人的乐曲感。并行工作的RNA聚合酶和核糖体产出多个蛋白质就像卡农的多个声部一样。</p>\r\n<p><strong>RNA聚合酶和核糖体（由蛋白质和rRNA组成）外加DNA就组成了一个自复制的最小支撑系统</strong>，DNA在其中既作为待复制的“数据”，又作为需要执行什么操作的“指令”。从DNA到蛋白质的过程称为<strong>基因表达</strong>。蛋白质再往上若干个我们无法把握的层次从遗传型跃升到表现型，从而决定人的精神、心智、物理表现。遗传学的中心法则和TNT的中心法则一一映射，其中DNA即TNT串，mRNA即数论描述，蛋白质即元TNT的陈述，遗传密码即哥德尔编码。有意思的是，数理逻辑在嘌呤一方（算术化（Arithemetization）、哥德尔（Godel）），分子生物学在嘧啶一方（翻译（Translation），克里克（Crick）），同时A和T构成基对，C和G构成基对。</p>\r\n<p>那么问题来了？按这个映射，哥德尔不完全定理对应什么？借《对位藏头诗》小品里的唱机和唱片，得到这样的描述</p>\r\n<p><em>总可以设计一个DNA串，如果把它注入到细胞中，在被转录时它将促使一些将会毁掉这个细胞的蛋白质或DNA生成出来</em></p>\r\n<p>当然这在分子生物学家那里看来有些诡异。不过和噬菌体摧毁大肠杆菌有点像。噬菌体的DNA通过伪装绕过了大肠杆菌细胞内的酶的检查，使之可以被核糖体翻译出来。有趣的是噬菌体（T方）和细胞（Cell）的TC之争就像乌龟（Tortoise）和螃蟹（Crab）之争。<strong>对于能否在特定的细胞内形成的“噬菌体句子”，在数理逻辑里有对应的描述——汉肯句子</strong>。隐式汉肯句子在说“存在某个符号串序列是我的推导”，显示汉肯句子是说“这里描述的符号串序列...就是我的推导”。前者就像只给DNA病毒组成编码的自组装病毒，可以自行利用化学亲和力链接，后者还加上了组装需要的酶。</p>\r\n<p>细胞分化形成不同功能的细胞，最终形成不同形态。这个过程是通过阻遏让基因不被表达实现的，诱导物又可以和阻遏蛋白结合，阻止阻遏的发生。整体来看，细胞里发生的这一切的机制比人为设计出来的形式系统都要深奥的多。在这各种过程里，DNA、蛋白质、核糖体、tRNA分子它们即可以作为“数据”、也可以作为“程序”、也可以作为“解释程序”或者“处理机”。巧合的是，人工智能研究里也有着把看上去不同的所有方面混为一谈的趋势。</p>\r\n<h3 id=\"的确该赞美螃蟹\">的确该赞美螃蟹</h3>\r\n<p>小品里把TNT命题类比乐曲，命题的真假类比乐曲是否悦耳。</p>\r\n<h2 id=\"丘奇图灵塔斯基和别的人\">丘奇、图灵、塔斯基和别的人</h2>\r\n<blockquote>\r\n<p>丘奇定理、塔斯基-丘奇-图灵定理、拉马努金、真理</p>\r\n</blockquote>\r\n<p>在上一章把话题引向生物学后，这一章又回到对于思维的讨论。书中在“大脑与思维”一章里实际上已经做了很多探讨，思维有无数层面，它还有一个形式化的硬件层级（可以叫它基底）。在从下到上的不断“组块化”下，每一步都会损失严格性，直到顶层复杂到我们找不到词汇去思考规律。</p>\r\n<p>在小品里螃蟹似乎有一种<strong>直觉</strong>可以区分出音乐是不是优美。然而这违背了丘奇定理：<strong>没有切实可靠的方法来区分TNT的定理和非定理</strong>。类似地还有塔斯基-丘奇-图灵的描述：没有切实可靠的方法来区分真的数论语句和假的数论语句。它还有许多表述形式：</p>\r\n<ul>\r\n<li>标准形式：把数分成两类的任何一个心智过程都可以用FlooP程序来描述</li>\r\n<li>大众过程形式：把数分成两类的任何一个可以用语言完美传达的心智过程都可以用FlooP程序来描述</li>\r\n<li>同构形式：把数分成两类的任何一个可以用语言完美传达的心智过程都可以用FlooP程序来描述，且<strong>心智过程和FlooP在下面意义上同构：某个层次上，计算机和大脑执行的步骤间存在对应</strong></li>\r\n</ul>\r\n<p>拉马努金和一些神童似乎有神谕一般突破这种限制的能力，似乎能绕过数学、分析的方法解决问题，不过这只是因为这些人的中间步骤完成的十分迅速而已，他们也不是通过某种顿悟式的闪念来得到答案。有一个简单的证据是，当数字变大时，答案出来的就慢了。</p>\r\n<p>大脑的神经元活动作为基质，本身并没有意义，它之上各种符号的意义是在进化环境中作为后效出现的。因此计算机在模拟神经元网络时，原则上可以用可执行的计算来描述。可以因此给出丘奇-图灵命题的另外2种形式:</p>\r\n<ul>\r\n<li>微观形式：生物体各组成部分的行为可以用计算机来模拟，也就是说，任何元素的行为都可以用一个FlooP程序来计算到任意精确的程度</li>\r\n<li>简化论形式：<strong>全部的大脑过程可以用一个可计算的基质导出</strong>，这也是人工智能可行性的理论基础；人工智能的一个意义在于可能会有一些意义重大的智能特征是漂浮在这种生物大脑基质以外的基质之上的。</li>\r\n</ul>\r\n<p>当然，人工智能绝不只是简单的大脑模拟。</p>\r\n<p>回到螃蟹的问题，美感是不是大脑过程；对此，作者认为大脑能做的某些事情都可以用计算机来模拟，但计算机不能代替灵魂。尽管美感是个非理性过程，但不代表它和计算机就不相容。因为，<strong>低层次的理性不妨碍高层次的非理性</strong>。大脑都是由简单的神经元组成，但也会想出悖论，换句话说，<strong>大脑是理性的，但心智不是</strong>。书里用类似的说法，驳斥了卢卡斯机器不如心智的观点，然后给出了丘奇-图灵论题的最后一种形式。</p>\r\n<ul>\r\n<li>人工智能形式：任何种类的四年制过程都可以用计算机程序模拟，而程序语言和FlooP一样强，也可以说递归函数都可以用这种语言程序化。</li>\r\n</ul>\r\n<p>美来源于形式，形式通过共鸣来传达，无法语言传递。字面意义的“句法性质”很好表述，但是形式的<strong>语义</strong>方面则需要无尽头的检验，它是经验编码的，和无数客体存在联系，且在不同人心里都可能引起不同解释器的反应。</p>\r\n<h3 id=\"施德鲁人设计的玩具\">施德鲁，人设计的玩具</h3>\r\n<p>小品展示了“施德鲁”这个新的AI模型对语言的理解。</p>\r\n<h2 id=\"人工智能回顾\">人工智能：回顾</h2>\r\n<blockquote>\r\n<p>图灵测试、人工智能、知识表示</p>\r\n</blockquote>\r\n<p>图灵在自己对计算机和智能的研究中，提出过图灵测验的过程，即机器能否在交谈中向人隐藏自己是机器的能力，图灵对于机器是否能有思维的讨论在那个年代遇到了许多反对意见。在作者的年代，人工智能很显然进步了许多，后面的篇幅对于人工智能的发展现状做了简单的综述式的介绍。</p>\r\n<p>人工智能的起步很早，在19世纪，布尔和德·摩根就提出了“思维定律”——本质上是命题演算——因此迈出人工智能软件的第一步。随着时代的服战，越来越多“智能”的成果涌现出来。似乎<strong>某个心智功能被程序化之后，人们一旦习惯这种存在便不再把它当做“真正的思维”本质成分</strong>。换句话说，目前为止，<strong>人工智能是尚未做到的部分</strong>。书里列出了人工智能的下面一些领域：</p>\r\n<ul>\r\n<li>机器翻译</li>\r\n<li>博弈\r\n<ul>\r\n<li>象棋</li>\r\n<li>跳棋</li>\r\n<li>围棋</li>\r\n<li>五子棋</li>\r\n<li>扑克</li>\r\n<li>桥牌</li>\r\n</ul></li>\r\n<li>数学定理证明</li>\r\n<li>数学符号处理\r\n<ul>\r\n<li>积分</li>\r\n<li>化简</li>\r\n<li>级数求和</li>\r\n</ul></li>\r\n<li>视觉\r\n<ul>\r\n<li>文本识别</li>\r\n<li>图像识别</li>\r\n</ul></li>\r\n<li>听觉\r\n<ul>\r\n<li>词汇识别</li>\r\n<li>语句时别</li>\r\n</ul></li>\r\n<li>自然语言理解\r\n<ul>\r\n<li>特定领域回答问题</li>\r\n<li>复杂句的语法分析</li>\r\n<li>基于现实世界理解一段话</li>\r\n<li>解决有歧义的指代关系</li>\r\n</ul></li>\r\n<li>自然语言生成\r\n<ul>\r\n<li>抽象的诗</li>\r\n<li>随机的语段</li>\r\n<li>输出内部知识表示</li>\r\n</ul></li>\r\n<li>创造艺术\r\n<ul>\r\n<li>写诗</li>\r\n<li>写小说</li>\r\n<li>计算机绘画（AIGC）</li>\r\n<li>音乐创作</li>\r\n</ul></li>\r\n<li>类比思维\r\n<ul>\r\n<li>启发式数学证明</li>\r\n</ul></li>\r\n<li>学习\r\n<ul>\r\n<li>形成概念</li>\r\n<li>参数调整</li>\r\n</ul></li>\r\n</ul>\r\n<p>后面的章节里，对各领域做了简单的介绍，在机器翻译、棋类策略、数学证明、音乐创作里都能看到，机器似乎只是把编程者的思维具体展现了出来，它本身还是做的机械式的事情。在定理证明里，人工智能使用了问题分解的手段，把一个总目标分解成要推导的局部目标，然后在不断递归，最终到可以明确看到路径的地步。不过问题分解的路径也是有讲究的，有些看似“绕远路”的路径实际上在全局上确实更近的解法。而发现这一点需要一些<strong>直觉</strong>，也许这种直觉就是智能的灵光一闪。这也像在之前讨论过的W方式和J方式，需要W方式跳出系统观察才能发现捷径。</p>\r\n<p><strong>知识表示</strong>在人工智能李也是重要的命题，它可以以描述性（死记硬背）的也可以是过程性（需要推导）的，前者像是DNA，存储体积更小，像是“<strong>数据</strong>”一样；后者像是蛋白质，体积更大但有可操作性，就像“<strong>程序</strong>”一样。组块化的知识之间也可能存在着相互联系。知识的表示和加工有<strong>演绎式</strong>和<strong>类比式</strong>。前者更像数理逻辑里的推导过程，后者则通过同构的思路唤起知识。当一个人在遗忘的时候，往往是指<strong>失去了通往相关信息的通路，而不是物理上删除或损坏了</strong>。</p>\r\n<p>在本章的后半段，书中对自然语言和音乐的语法做了探讨。最后对“施德鲁”里使用的高级Planner语言做了介绍，自然语言里<strong>句法</strong>和<strong>语义</strong>的混杂让语句的理解变得困难，一个解决办法就是通过设计Planner这样的高级语言去提供更靠近自然语言的可能性。</p>\r\n<h3 id=\"对实\">对实</h3>\r\n<p>小品里，借由阿基里斯和螃蟹邀请乌龟和树懒来家里做客看橄榄球赛，展示了一个可以展现不同假设反应到实际的电视机，小品和电视机里都出现了矛盾的画面，比如两只左手。</p>\r\n<h2 id=\"人工智能展望\">人工智能：展望</h2>\r\n<blockquote>\r\n<p>框架、邦加德问题、模板、同一性检测器、概念网络、元描述、酶、裂变、聚变、受迫匹配</p>\r\n</blockquote>\r\n<p>在小品里，能看到一些偏离现实的虚拟场景，就像是“差一点儿”或者“万一……，那么”的这种想象。人类似乎很容易很容易在固定一些不变的场景下，想象可变部分变化后的样子。这也许这是创造力和洞察力来源的根本。同时，人们很容易区分出三种符号：</p>\r\n<ul>\r\n<li>有的符号是常量，我们默认它们不变，作为大背景出现，例如三维的世界，或者是看足球赛时候的规则</li>\r\n<li>有的符号是参量，在需要的时候变化，作为动态背景出现，例如天气、球赛的场地</li>\r\n<li>有的符号是变量，就是在心智里面最容易“滑来滑去”的部分</li>\r\n</ul>\r\n<p>在人工智能研究中，存在<strong>框架</strong>的概念，框架可以理解成一套上下文，在不提供更多信息时它带有默认值，如夜晚的框架就会有一个月亮，框架之间也可以相互插入。后面作者用邦加德问题来谈论了模式识别里的一些方法论，并类比人类从基因里集成的难以捉摸的性质。如</p>\r\n<ul>\r\n<li>预处理成原子微词汇表，如三角形，原型</li>\r\n<li>更高层一点的描述，如上、下、大、小、平行、靠近</li>\r\n<li>使用<strong>模板</strong>试图构造描述，利用<strong>同一性检测器</strong>概括模式规律。其中模板通过微词汇关联得到的<strong>概念网络</strong>来启发式生成，而同一性检测器则去检查模板的正确性</li>\r\n<li>有的模式可能需要在更高层总结，这时需要用<strong>滑动</strong>来尝试，从而“发明”一些概念</li>\r\n<li>更进一步的，可以在得到的模板里发现共性，从而得到<strong>元描述</strong>，譬如，某个模板里的槽都会被填入“三次”</li>\r\n<li>有时还需要用集聚和过滤的办法来忽略一些细节抑或关注一些系列</li>\r\n</ul>\r\n<p>之后，书里将邦加德问题里的思路联系到科学研究和人类思维中，甚至是和酶做了类比，进入提出符号聚变和裂变的概念。这段意在将好几个不同领域的概念放到一起找相同点，但写得有点神神叨叨了。之后对于概念骨架（比喻对象间的共同点）和多重表示（一个概念的多种理解来跟比喻对象匹配上）的介绍也是有点陶醉在自己的世界里。</p>\r\n<p>在之后，书里提出了“出入口”的概念，即脑海里的意象——事件、对象、思想——都有一个“把柄”，譬如收音机的把柄可以是“音乐产生器”或者“烦恼解除器”，在这些把柄间存在精神隔板，避免人在自由联想时过于自由。但这种隔板也不百分百牢靠，就像懂得多种语言的翻译在翻译某个词的时候，就可能想到另外一种语言上的答案。</p>\r\n<p>在艺术作品里，<strong>受迫匹配</strong>经常出现。即强行寻找意象和本质的深刻同构，事物的各种细节是如此之多，以至于这种同构基本都能成功。譬如在政治漫画里画了一个政治家和一头大象，观者总有办法将他们关联起来。当然受迫匹配也有优劣之分，要不能太浅显也不能太牵强才是最妙的。就像和弦一样，离得太近太远都不好听，得是恰好的距离。</p>\r\n<p>本章最后，作者用设问的方式抛出了10个和人工智能未来有关的问题，里面比较有意思的观点有：</p>\r\n<ul>\r\n<li>程序在有人类一样复杂的情感前，只能谱写机械式的乐曲，缺失灵魂</li>\r\n<li>情感无法在机器中模拟，机器只能做到哭这件事情，但没法体会到哭代表的情绪</li>\r\n<li>人工智能的终点做加法可能比现在的机械计算机还慢</li>\r\n<li>当人工智能足够智能时，人将无法精准控制它，就像人无法精准控制另一个人一样</li>\r\n<li>终极人工智能可能和我们想象的很不同，人看待终极人工智能时也许并不能理解，就像人无法理解另一颗星球上拥有智能的外星人一样</li>\r\n</ul>\r\n<h3 id=\"树懒卡农\">树懒卡农</h3>\r\n<p>这则小品用树懒、阿基里斯、乌龟同构了巴赫的《音乐的奉献》中一首卡农，并命名树懒卡农。</p>\r\n<h2 id=\"怪圈或缠结的层次结构\">怪圈。或缠结的层次结构</h2>\r\n<blockquote>\r\n<p>缠结、怪圈、证据、心智、符号-对象、主义、无限升高的卡农</p>\r\n</blockquote>\r\n<p>本章作为全书最后一章，试图在上面所有章节谈论的事情间寻找一种共性。在开头，作者引入了塞缪尔的机器不具有创造性的观点——“机器所表现出来的‘意向’是实现已明确化的人类程序员的意向，或是依照程序员所指定的规则从这些意向中导出的子意向”，因此对意愿的任何机械化都需要一种无穷回归，因为机器在得到指令前不会做任何事。但其实像人一样，有些最底层的规则——它们不需要依赖“元规则”——是嵌入在硬件中的。就像人的动机都来自遗传的物理基质。</p>\r\n<p>在之后，梳理给出了可以自我表示的跳棋、作者三角形、艾舍尔的《画手》三个例子，它们都涉及自我指代的缠结层次，但也都有一个独立在缠结层次外的“不受影响”的观察层次，就像W方式一样。自我表示的跳棋里是不变的规则，作者三角形里是看书的读者，艾舍尔的《画手》里则是画作的欣赏者。在人类大脑心智中，缠结的符号层次下也有独立的神经元层次。</p>\r\n<p>现实生活也有能发现这种怪圈，比如政府里相互的信用背书，又或者伪科学证伪中对于证据的无穷递归证明，最终都可以通过更低层次的限制解决争议。不过要把哥德尔映射到其他学科上时，也不能迷信的<strong>逐字逐句翻译</strong>。它带来的只是启发价值，譬如</p>\r\n<ul>\r\n<li>我们人类在认识自己的心智和大脑时，是否也存在某种模糊的哥德尔式循环，限制个人认识自己心灵时所能达到的程度。</li>\r\n<li>所有元数学和计算理论中的限制性定理都说明：<strong>一旦表示自身结构的能力达到某个临界点，那就无法完整地表示自己</strong></li>\r\n<li>任何人都无法摆脱自我的神秘性，你可以幻想但没法跳出自己之外</li>\r\n<li>在科学领域经常被批评偏向主体-客体“二元论”，之前研究被观察对象很多，现在也开始更多研究观察者了，譬如量子力学里观察者相关研究和人工智能</li>\r\n<li>艺术中也有符号-对象二分法，符号即想表达的内容，对象即意象。在现代艺术中，也开始刻意混淆“使用”和“谈论”。譬如一些语义错觉画里赤裸地突出体现对象（马格利特作品里画之外的水果，烟斗）、Cage著名的《4分33秒》直接将空白作为符号。艺术作品本身的<strong>框架效应</strong>会让欣赏者试图寻找里面的意义，而艺术家本意则仅仅只是对象本身，这种禅宗式的艺术对象传达了缠结的层次结构，这也是现代艺术难懂的原因</li>\r\n</ul>\r\n<p>那么哥德尔定理会限制我们的心智吗？看起来是不会的。<strong>我们从神经元到符号中间的层次模糊和对心智的不可捉摸背后并非一定有某种哥德尔式的缠结。这可能仅仅是命运的一个偶然结果</strong>。我们大脑的进化碰巧未能强到理解它自己。但就像我们用W方式从更高角度去解释G的非定理性，也可能存在某个解释心智的高层方式，只是我们还没发现或发现不了而已。</p>\r\n<p>我们的意识和思想归根到底还是基于底层的<strong>物理因果关系</strong>，不过是不同层次的“共鸣”形成了几乎不可分析的高层符号。<strong>也只有到符号这个层次，我们才能谈论自我意志的存在</strong>，它在更下的层次只是无情的自然规律，而并非出自任何深切渴望。但这种符号并不能控制在它之下的所有内部过程，使得它的工作过程看起来是一种“直觉”，而缺乏完全的理解。</p>\r\n<p>本章的最后，又回到艾舍尔的《画廊》和巴赫《无限升高的卡农》，这两个作品里都有着自指的缠结。而在《无限升高的卡农》里，借助了<strong>谢泼德音调</strong>看起来在不断升高，但最后又回到原声调，就像本书一样，以巴赫《音乐的奉献》开始，又以它做结。</p>\r\n<h3 id=\"六部无插入赋格\">六部无插入赋格</h3>\r\n<p>最后一个小品借用阿基里斯、螃蟹、乌龟、“作者”、巴比奇、图灵6个角色，类比《六部无插入赋格》中的6个声部，最终引出本书和巴赫的《六部无插入赋格》和全书开头形成回环，实在是妙极。不仅如此，其中的内容设计也尽显精妙：</p>\r\n<ul>\r\n<li>阿基里斯开头在收音机里听到的讨论自由意志和决定论的6个学者类比小品里的6个角色</li>\r\n<li>“没有这种噪音我照样行”共出现6次，就像6个声部，最后一次是变奏的“有这种噪音我照样行”</li>\r\n<li>作者直接进入小品里作为角色出场，和书中的角色对话，打破了第四面墙，形成了神奇的缠结结构</li>\r\n<li>“无插入赋格”在小品里通过插在句子中10次出现，其中有1次3连出现和1次倒序连带正序出现</li>\r\n<li>“甭提多棒了”在小品里5次出现</li>\r\n<li>巴比奇和图灵相互编程实现对方实现了一种缠结</li>\r\n<li>“作者”和乌龟的交流介绍了本小品用人物模拟声部的思路，达成了自指</li>\r\n<li>螃蟹主题的音符是C-Eb-G-Ab-B-B-A-B，倒过来正是Babbage,C，即巴比奇</li>\r\n<li>“作者”、螃蟹、巴比奇三人用几乎一样的语段类比螃蟹主题里的波音</li>\r\n<li>乌龟、巴比奇、图灵三人用几乎一样的语段类比三和弦</li>\r\n<li>在小品后半段通过拆字的方式在语段中嵌入了“侯世达”，类比了巴赫在六部无插入赋格里的最高两个声部嵌入了自己的名字[BACH]</li>\r\n<li>小品的最后，大家在开始阅读本书之前，准备演奏《音乐的奉献》中《六部无插入赋格》，就像全书的开头一样，所以这个小品其实也是序章的引子，就像最后一句写的那样</li>\r\n</ul>\r\n<blockquote>\r\n<p>“<strong>无插入赋格</strong>”之后<strong>插入</strong>导言将<strong>赋</strong>有“无穷升高的卡农”的风<strong>格</strong></p>\r\n</blockquote>\r\n<p><em>--END--</em></p>\r\n",
            "tags": [
                "基因",
                "隐喻",
                "哥德尔",
                "巴赫",
                "埃舍尔",
                "人工智能",
                "心智",
                "自指",
                "图灵"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2023/08/25/tour-to-jeju/",
            "url": "http://shenlvmeng.github.com/blog/2023/08/25/tour-to-jeju/",
            "title": "济州岛7天环岛骑行攻略",
            "date_published": "2023-08-25T12:48:20.000Z",
            "content_html": "<blockquote>\r\n<p>攻略向，流水账向</p>\r\n</blockquote>\r\n<p>一转眼，距上次<a\r\nhref=\"https://shenlvmeng.github.io/blog/2021/10/20/taihu-lark-riding/\">太湖环游记</a>已过去近2年，去年因为某凯喜结良缘外加疫情因素，和圣僧改在湖南参加婚礼，取消了一次长途骑行计划，并在酒席上约好2024必要延续骑游传统。路线选择上，最初计划的大西北路线，诸如独库、兰州-嘉峪关因为基友证照等原因被排除掉。最终在备选的长白山和济州岛中选择了后者。因为住宿环境更友好，且从上海出发仅需1个小时，实在是很方便了。时间上，为了避开热门节假日，在8月中选择了一个工作周，加上前后的周末，一共8天行程。其中4天用来环岛，分别住宿在岛的东南西北，剩下4天里，2天来回交通，1天休息购物，1天游览景点。</p>\r\n<h2 id=\"序关于骑行\">序：关于骑行</h2>\r\n<p>在选择尽量贴海的路的情况下，逆时针沿外环环岛一圈约220km，累计爬升1300m左右，拆成4天，每天50km到60km，一方面强度偏向休闲骑比较友善，同时路上停留的大静（西）、西归浦（南）、城山（东）都是有面向游客的配套设施，也能满足骑行完化身游客模式的需求。选择逆时针的原因是，一路上的自行车道基本都在马路靠海一侧，逆时针方便许多。每天骑行路线如下，原则上是不过分绕路的情况下尽量靠海。不得不说，济州的环海公路真得足够靠海，且路况良好。</p>\r\n<ul>\r\n<li><a href=\"https://www.strava.com/activities/9637362561\">Day1 济州 -\r\n大静</a>，里程64km，爬升322m</li>\r\n<li><a href=\"https://www.strava.com/activities/9643837670\">Day2 大静 -\r\n西归浦</a>，里程41km，爬升512m</li>\r\n<li><a href=\"https://www.strava.com/activities/9650037938\">Day3 西归浦 -\r\n城山</a>，里程55km，爬升285m</li>\r\n<li><a href=\"https://www.strava.com/activities/9657320038\">Day4 城山 -\r\n济州</a>，里程59km，爬升258m</li>\r\n</ul>\r\n<p>另外，环岛长途骑行一定<strong>注意安全</strong>。一方面，济州岛有不少丘陵的地形，有些路的坡度可以超过10%，且有些海边的路较窄，有急弯，对于还不熟悉车感的公路车，一定要小心。（本人就因为下坡太陡，未刹住闸发生了车辆追尾，受了些皮外伤）。另一方面，城区或镇里没有专门的自行车道，需要在人行道上骑；人行道骑起来会很颠，对于急性子的骑友，会直接骑在机动车道上（有些当地骑友就是这么干的）甚至闯红灯。骑行时<strong>注意防晒</strong>，济州岛的风景和天气关系很大，晴天是最好看也是最好玩（能下海）的时候，也是最晒的时候。能物理防晒最好，做不到也要给脖子、脸上（尤其是鼻子）、手臂、手背、膝盖、小腿涂好防晒霜，否则很容易晒伤脱皮。</p>\r\n<p>沿途的补给还算方便，有非常密集的便利店覆盖，包括711和当地的品牌CU，GS25。可以随时补水和补充碳水，等同于国内加油站便利店的存在。对于骑行人员可以说很友善了。</p>\r\n<p>车辆上，可以选择现场租车或把车寄过去。租车有多家店铺选择，我们是在<a\r\nhref=\"https://biketrip.co.kr/shop/main/index.php\">biketrip</a>上提前预约，然后去现场付款提车的，shimano圈刹105套件公路车，4天116000KRW，约合人民币<strong>626</strong>元。车况较老旧，但性能还不错。纠结寄车还是现场租车可以对比下价格。Biketrip的店铺距离济州国际机场很近，可以乘坐公交到月城村或直接步行前往，直接在地图上搜索biketrip即可找到。可能由于语言不通，双方的英语都有口音，感觉老板有点没有耐心。附近除了biketrip还有其他的租车点，也可以试试看。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtkEkt.jpg\"\r\nalt=\"biketrip车店\" />\r\n<figcaption aria-hidden=\"true\">biketrip车店</figcaption>\r\n</figure>\r\n<p>当地也可以租机动车，但我们没有试过，需要自己做下功课。</p>\r\n<h2 id=\"序关于衣食住行\">序：关于衣食住行</h2>\r\n<p>参考<a\r\nhref=\"https://www.mfa.gov.cn/wjbzwfwpt/kzx/tzgg/202303/t20230329_11050798.html\">济州总领馆关于中国公民赴济的领事提醒</a>韩国济州道对中国公民实施免签入境政策，但免签不等于无条件入境。在入境前，完整填写入境卡和健康申报，一般不会有什么问题。最好保证护照有效期在半年以上，白本护照也没有关系。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtkF0A.jpg\" alt=\"入境卡\" />\r\n<figcaption aria-hidden=\"true\">入境卡</figcaption>\r\n</figure>\r\n<p>手机通讯上，可以选择提前在国内买韩国<strong>流量卡</strong>，适合双卡双待手机，优势是价格相对便宜。也可以选择<strong>国外流量包</strong>，配合开启手机的国际漫游，优势是不需要换机或者换卡。我图省事选择了后者的方案，7天的流量套餐148元，可以提前在国内办理，办理完成开启国际漫游后，出现漫游流量时才会自动开启，不用担心提前开启。漫游流量套餐可以直接在运营商app里搜索“国际漫游”办理，对比在支付宝里搜索的套餐可以选择多一个国家，更加自由，且价格一样。济州当地的<strong>免费wifi</strong>非常普及，每个公交站都搭配有免费wifi，所以也可以留意下，剩一些流量。</p>\r\n<p>在济州消费，最简单的方式有一张<strong>visa信用卡</strong>，虽然银联卡和微信、支付宝在大多数连锁便利店、餐馆也支持，但支持度最好的是visa信用卡，各种店没有见过不能刷的。当然也可以提前去银行换一些现金以备不时之需。我本次取了300000KRW（约合1700左右），因为路上经常刷基友的信用卡，如果不是刻意去用现金是花不完的。另外附赠一个简单感性的价格心算公式：<strong>韩币去掉3个0乘以5，再稍微加一点点就是人民币的价格</strong>。</p>\r\n<p>吃喝上，我和基友主要采用开盲盒的方式，碰到有眼缘的就定下来。除了一顿烤肉和一顿烤鱼之外，其他的像是豆腐汤、炸鸡、脊骨汤、石锅拌饭这些店我们吃下来一般是人均是70左右。如果想看是否对国人的口味，可以在大众点评上搜一下店名，不过在济州或者西归浦城区里才会比较好用。餐馆里一般会有英文菜单，基本的4、6级水平就能应付。</p>\r\n<p>酒店上，济州分新济州和老济州，新济州位于机场南边，免税店、各种药局位于这里，购物更方便，免税店附近可以无压力中文沟通，相对老济州较小；老济州位于机场东边，东门市场、七星街位于这里，本地人更集中，更有烟火气。可以根据自己需求选择居住的区域。新老济州间距离不远，也有非常多公交相互来往，不用担心交通问题。其他如西归浦、城山等因为城区不大，直接选择住在城区里即可。酒店可以直接在国内平台上预定，如携程、飞猪等，入店时出示身份信息即可。价格有高有低，高的有住济州君悦这种2000一晚的，低的有100多的青旅民宿，根据自身需要选择即可，一般200多到300多的价位就能住到还可以的。但需要注意：</p>\r\n<ul>\r\n<li>酒店一般不提供洗漱用品，如牙膏牙刷，有的可以在酒店前台购买</li>\r\n<li>绝大多数房间套餐不含早餐，早餐额外收费较贵</li>\r\n<li>入住时间<strong>下午3点之后</strong>，退房时间<strong>上午11点之前</strong></li>\r\n<li>酒店一般会有冰箱，1人1瓶冰水，夏天很爽</li>\r\n<li>一定要注意区分<strong>双人床房</strong>和<strong>双床房</strong>，差一个字少一张床，血泪教训</li>\r\n</ul>\r\n<p>出行上，公交本身已经足够方便，公交站很密集，在郊区也是如此，我们环岛骑行的一路上都能看到很多公交站。公交站里可以切换语言，看不同线路的到站时间。机场内或者市区的便利店里都可以办理公交卡，工本费4000KRW，一次乘车1500KRW左右，充10000KRW大概勉强支持了我2天新老济州来往和去咸德和机场的公交费。乘车时记得上车下车要<strong>刷2次卡</strong>，另外下车前<strong>记得按STOP按钮</strong>，否则到站没有人上车时会直接开走。打车可以下载KaKao\r\nT，但需要本地的手机号，且价格较高，所以我们没有打过车。地图导航上，可以用naver\r\nmap或者百度地图也可以。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtkimd.jpg\" alt=\"公交站\" />\r\n<figcaption aria-hidden=\"true\">公交站</figcaption>\r\n</figure>\r\n<p>沟通上，在新济州免税店和附近，较多店铺可以使用中文沟通，其他城区可以使用英文沟通，在村镇里可能以翻译软件\r\n+\r\n手脚比划。这里推荐Papago或者google翻译，在不知道招牌或者菜单的意思而且又没有英文菜单时，可以识图翻译，很方便。</p>\r\n<h2 id=\"day-1上海---济州\">Day 1：上海 -&gt; 济州</h2>\r\n<p>上海（UTC+8）和济州（UTC+9）差了1个时区，济州时间要晚1个小时，我们晚上7点10分从浦东机场出发，实际只在空中飞行了1个小时（甚至比去武汉还近），但到济州时已经是当地时间9点半了，在飞行到一半的时候，空姐就发好了入境卡和健康申报给大家填写。填写建议用英文，但其实也没有太多规矩，我身边用中文填写的代购小姑娘也能顺利入境。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtkkTI.jpg\" alt=\"济州机场\" />\r\n<figcaption aria-hidden=\"true\">济州机场</figcaption>\r\n</figure>\r\n<p>出机场比较匆忙，没有买公交卡，我们只能步行3公里到酒店，顺便在路上的便利店买了张公交卡。也许是在新济州的缘故，便利店里有许多国人换大额的50000韩元，以至于到我的时候已经没有零钱可以破钱，只好刷基友的信用卡。等在酒店办好入住已经是晚上11点。躺在床上，打开电视，随便换了换台，居然还有《不能说的秘密》看。真是神奇。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtkCOH.jpg\"\r\nalt=\"不能说的秘密\" />\r\n<figcaption aria-hidden=\"true\">不能说的秘密</figcaption>\r\n</figure>\r\n<p>为了第二天赶路，还没欣赏多久杰伦的电影，就赶紧躺下。</p>\r\n<h2 id=\"day-2济州---大静\">Day 2：济州 -&gt; 大静</h2>\r\n<p>一早起来，本来打算坐公交前往租车点，在发现要等30分钟后，我们果断选择步行2.7公里前往。车店比照片里看着要老旧一些，车也是一样，庆幸的是调试下来性能并无大碍，老板简单地把车和配件准备好，告诉我们回来的那天他不在，车锁好挂在门口的架子上就行。民风真是淳朴呢。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtVUc8.jpg\" alt=\"车的合影\" />\r\n<figcaption aria-hidden=\"true\">车的合影</figcaption>\r\n</figure>\r\n<p>在穿越了颠簸的城区后，出了城之后终于可以拥有独立的自行车道。在沿着一周西路（Iljuseo-ro）继续骑行6、7公里后，可以看到一个下坡去往更贴海岸的<strong>涯月海岸路（Aewolhaean-ro）</strong>，这条路去往<strong>涯月邑</strong>的同时，也有10公里左右的很贴海岸的公路可以骑行。路上还偶遇了当地的骑行车队，热情地像我们打了招呼。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtVt9P.jpg\"\r\nalt=\"城区自行车道\" />\r\n<figcaption aria-hidden=\"true\">城区自行车道</figcaption>\r\n</figure>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtZEDg.jpg\"\r\nalt=\"涯月海岸路\" />\r\n<figcaption aria-hidden=\"true\">涯月海岸路</figcaption>\r\n</figure>\r\n<p>实际上，对于靠海的路，不仅有专门的骑行道，也会有响应的蓝色路牌指引，所以注意观察的话，不太容易走错路。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtV8AA.jpg\" alt=\"蓝色路牌\" />\r\n<figcaption aria-hidden=\"true\">蓝色路牌</figcaption>\r\n</figure>\r\n<p>在到达涯月邑后，这段滨海路线又回到一周西路（Iljuseo-ro）主路，天空虽然晴空万里、烈日当空，庆幸的是风是凉爽干燥的，能够吹散身上的燥热，这点体验比在上海好不少。沿主路骑行3公里右拐上<strong>翰林海岸路</strong>（Hallimhae-an-ro），这里又是一条滨海公路前往翰林港。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtVN1f.jpg\" alt=\"涯月邑\" />\r\n<figcaption aria-hidden=\"true\">涯月邑</figcaption>\r\n</figure>\r\n<p>小路在有自行车道的同时，车流也少了很多，再加上海岸路蜿蜒曲折，随着车子前进，在缓坡间上上下下，风景一层层展开，骑起来颇有趣味。也许是日头正盛，一路上除了渔港里忙碌的工人，看不到行人，很是安静祥和。眼看时间已近饭店，我们在CU便利店稍作休整，品尝了第一顿当地韩餐——拉面。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/24/pPtkfnH.jpg\"\r\nalt=\"翰林海岸路\" /> <img\r\nsrc=\"https://s1.ax1x.com/2023/08/24/pPtmQnU.jpg\" alt=\"泡面\" /></p>\r\n<p>当地基本所有的便利店都有泡面需要的开水，甚至还有煮面机用于喜欢煮面不喜泡面的顾客。对于骑行路上的补给实在是很方便。吃饱喝足，开始处理餐余垃圾，济州实施较为严格的垃圾分类，路上除了集中的垃圾回收站外，看不到路边的垃圾桶，需要在酒店、餐馆或便利店丢弃。便利店里很贴心的已经准备了各种分类的垃圾箱，甚至湿垃圾箱还提供了干湿分离的篮子，实在贴心。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtkhBd.jpg\" alt=\"煮面机\" />\r\n<figcaption aria-hidden=\"true\">煮面机</figcaption>\r\n</figure>\r\n<p>再次启程，穿过<strong>翰林港</strong>，右拐上翰林路，无需多远就能看到翰林公园对面的<strong>狭才海水浴场（협재해변）</strong>和<strong>金陵海水浴场（금능해수욕장）</strong>，绿地蓝天白滩，海上游客不少，但又不至于人山人海，看起来就赏心悦目。在后续的环岛路上，这样的沙滩浴场手脚并用都数不过来，不得不感慨济州岛无与伦比的海岸线条件。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtk2cD.jpg\"\r\nalt=\"狭才海水浴场\" />\r\n<figcaption aria-hidden=\"true\">狭才海水浴场</figcaption>\r\n</figure>\r\n<p>只可惜我还有目的地在身，简单拍了照便继续出发。继续回到一周西路（Iljuseo-ro）时，天阴欲雨，到达<strong>板浦里</strong>时雨渐大，我们找了个房檐躲雨，顺便小憩一会儿。旁边碰巧是<strong>板浦浦口（판포\r\n포구）</strong>，有不少浮潜和戏水的人。淅沥的小雨似乎并没有办法浇灭他们的欢乐。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtVJht.jpg\" alt=\"板浦里\" />\r\n<figcaption aria-hidden=\"true\">板浦里</figcaption>\r\n</figure>\r\n<p>天公给面子，不出20分钟，雨歇。在头毛三岔口靠右走头新路（Dusin-ro）进入头毛里，骑过2个路口，在<strong>翰京海岸路（HangyeongHaean-ro）</strong>三岔口右拐，进入这天第3个滨海路线，沿路有许多风力发电机，还能看到在海岸清理垃圾的学生。济州的海岸以黑色的火山岩为主，很有特色。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/24/pPtZP8P.jpg\" alt=\"头毛里\" />\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtVGtI.jpg\"\r\nalt=\"风力发电机\" /></p>\r\n<p>沿着翰京海岸路一路靠右骑行，可以到达<strong>高山（Gosan）</strong>，在镇里的<strong>晚霞海岸路（Noeulhaean-ro）</strong>路口，或高山西二街（Gosanseo-2-gil）路口右转到海边便是第一天的最后一段滨海路线，经过水月峯（Suwolbong）后便是长达十几公里极贴海的晚霞海岸路，恰好正是下午4、5点的时间，已经开始弱下来的阳光在广阔的洋面上留下成片的金鳞。克服一路的暴晒便是享不尽的海景，幸而还有一阵阵的清爽凉风。晚霞海岸路依旧是很好的路况，机动车很少且有独立的非机动车道。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/24/pPtZAKS.jpg\"\r\nalt=\"晚霞海岸路-1\" /> <img\r\nsrc=\"https://s1.ax1x.com/2023/08/24/pPtZFv8.jpg\"\r\nalt=\"晚霞海岸路-2\" /></p>\r\n<p>驶过这段路线回到一周西路（Iljuseo-ro）后，离<strong>大静（Daejeong）</strong>已经很近了。不到1公里后，靠右进入摹瑟浦（Moseulpo）和松岳山（Mt.Songaksan）方向，终于到了第1天的目的地——大静。大静算是岛西侧最大的城镇的，我们订在了海边的一个motel，价格300+RMB，结果没想到看走了眼订了个“双人床房”，想换房的时候被告知已经没有选择了。庆幸的是房间两个方向的窗户均靠海，有一个朝西的窗户和阳台恰是欣赏夕阳的绝佳地点，伴着海声不能更惬意。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/24/pPtkRje.jpg\"\r\nalt=\"大静海景-1\" /> <img\r\nsrc=\"https://s1.ax1x.com/2023/08/24/pPtZigf.jpg\" alt=\"大静海景-2\" /></p>\r\n<p>赏完日落已是7点半，我们开始在镇里觅食。也许是城镇规模不大，很多店8点关门，难得遇到一个有国人的点也是如此。抱着开盲盒的心态逛了一圈，最终也只有<strong>bhc连锁炸鸡店</strong>还开着。兴许炸鸡是现炸的，在加我们只有2桌顾客的情况下，苦苦等了30分钟才上菜（后来吃的很多店上菜也很慢，兴许是预制菜科技还没推广的原因）。作为第一顿当地正餐，味道一般，和家附近韩国街的炸鸡差不多。还好期待也不高。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtk4HA.jpg\" alt=\"炸鸡\" />\r\n<figcaption aria-hidden=\"true\">炸鸡</figcaption>\r\n</figure>\r\n<p>大静不算大，再加上吃完炸鸡已是9点，我们兜了圈买了第二天的早餐便回了酒店。</p>\r\n<h2 id=\"day-3大静---西归浦\">Day 3：大静 -&gt; 西归浦</h2>\r\n<p>这天又是以经典韩餐——拉面开始。提前补充了无机盐和碳水，全身防晒全副武装，我们朝着松岳山进发。路线依旧是滨海的<strong>最南端海岸路（Choenamdanhaean-ro）</strong>，在经过<strong>海母海水浴场（하모해수욕장）</strong>后，就算是告别大静了，也许是海滩较小，也许是时间尚早，有可能是济州海滩太多，这里没什么人。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtQkJH.jpg\"\r\nalt=\"海母海水浴场\" />\r\n<figcaption aria-hidden=\"true\">海母海水浴场</figcaption>\r\n</figure>\r\n<p>不到10公里的样子，爬一个缓坡就能看到右手边的松岳山，这也是第二天诸多爬坡的第一个。在坡顶能俯瞰东海和远处造型独特的<strong>山房山（산방산）</strong>。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/24/pPtmlBF.jpg\" alt=\"松岳山\" />\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtmfu8.jpg\" alt=\"俯瞰\" /></p>\r\n<p>下坡朝着山房山前进，告别最南端海岸路，靠右进入<strong>兄弟海岸路（Hyeongjehaean-ro）</strong>，又是一段无死角的绝美海景和沙滩，山房山也在逐渐靠近，在进入龙头里（Yongmeori）后，左转沿沙溪南路进入<strong>山房路（Sanbang-ro）</strong>，这也是第二个难度稍大一点的爬坡。在爬坡图中可以近距离欣赏这座奇特的山，坡顶回头可以看到从松岳山一路过来的海岸。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/24/pPtmKXT.jpg\"\r\nalt=\"山房山-1\" /> <img src=\"https://s1.ax1x.com/2023/08/24/pPtmucV.jpg\"\r\nalt=\"山房山-2\" /></p>\r\n<p>经过一个大下坡，沿着山房路便可以来到<strong>和顺（Hwasun）</strong>，考虑到东面因为地形原因没有沿海路线，我们沿<strong>和顺路（Hwasun-ro）</strong>回到主路一周西路（Iljuseo-ro），不到1公里右转进入<strong>大平甘山路（Daepyeonggamsan-ro）</strong>便可继续贴海前进。这一路又是几个艰苦的爬坡，图中还能看到一个挺有意思的博物馆。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/24/pPtQPoD.jpg\" alt=\"大下坡\" />\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtQVSA.jpg\"\r\nalt=\"博物馆\" /></p>\r\n<p>大平甘山路爬坡到顶后，已经可以远远看见山下的小镇和远处的海边。接着是一个长放坡到道路尽头可以来到和<strong>礼来路（Yerae-ro）</strong>的交叉口，我们在路边的CU便利店尝试了当地人喜欢的冰杯\r\n+ 袋装饮料的组合，组合下来一杯10+RMB的样子，看来还是蜜雪冰城划算。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/24/pPtQSL6.jpg\" alt=\"坡顶\" />\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtQCdO.jpg\" alt=\"冰杯\" /></p>\r\n<p>在这个路口左转会看到一个环岛，可以选择沿礼来路（Yerae-ro）直走，或者右转到离海岸更近的<strong>礼来海岸路（Yeraehaean-ro）</strong>继续欣赏海景。由于受到河东侧高尔夫俱乐部阻碍，需要沿礼来海岸路（Yeraehaean-ro）一路爬坡回到主路再继续南下。赶上下午1、2点毒辣的太阳，一路无甚风景，隐去不表。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/25/pPtYZ4K.jpg\" alt=\"礼来路\" />\r\n<figcaption aria-hidden=\"true\">礼来路</figcaption>\r\n</figure>\r\n<p>在回到一周西路（Iljuseo-ro）的路口靠右行驶，沿<strong>天帝渊路（Cheonjeyeon-ro）</strong>行驶一小段，右拐到<strong>中文观光路（Jungmungwangwang-ro）</strong>便来到中文旅游区，之所以叫这个名字倒不是因为当地说中文的人多，而是音译过来的，它位于西归浦市西部，有一些值得一逛的旅游景点：<strong>柱状节理带（갯깍\r\n주상절리）</strong>、<strong>天帝渊瀑布（천제연폭포）</strong>、<strong>中文海水浴场（중문해수욕장）</strong>等。提到的这几个景点就在中文观光路（Jungmungwangwang-ro）沿路附近。旅游区内酒店挺多，风景宜人，很安静。我们在拐角的M记体验了一把异国的感觉，菜式不如国内。我点的上海burger就是平替加蔬菜版的麦辣鸡腿堡。有意思的是，这里的饮料杯是硬质塑料的，不能丢进垃圾桶需要归还。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtMxQ1.jpg\" alt=\"麦当劳\" />\r\n<figcaption aria-hidden=\"true\">麦当劳</figcaption>\r\n</figure>\r\n<p>吃饱喝足沿中文观光路（Jungmungwangwang-ro）一个大下坡来到中文川的天际二桥上，桥两边风景甚是壮观。过桥直行沿环岛靠右骑上伊鸥路（Ieodo-ro）边来到中文洞和大浦洞的交接，柱状节理带就在第一个岔路右拐的海边。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtm4Hg.jpg\" alt=\"中文川\" />\r\n<figcaption aria-hidden=\"true\">中文川</figcaption>\r\n</figure>\r\n<p>继续沿这条路直行，路两边还能看到还未成熟的成片柑橘。之后又是上上下下的爬坡。鉴于日头实在太晒，我和基友在一个路口的便利店停下补充冰杯，顺便坐在阴凉下享受peace的一刻，老板人很热心，脸上总是笑着，虽然不太会说英语，但还是费劲地教了我们怎么扔掉垃圾。在听说我们是要骑行环岛时，也是很兴奋，只可惜没有听懂他在说什么。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/24/pPtMzsx.jpg\" alt=\"冰杯-1\" />\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtQPoD.jpg\"\r\nalt=\"冰杯-2\" /></p>\r\n<p>告别老板后，经过一个下坡可以到达江汀洞（GangJeong-dong）的邮轮码头附近，可能是附近还有个军事基地，路边环岛上张贴着有趣的标语。类似的标语在江汀桥上也能看到，桥下是一条入海的小河，河水看起来冰凉刺骨，正适合现在的温度，有一些当地人在其中戏水，又是羡慕当地人的一天。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/24/pPtQAWd.jpg\" alt=\"标语\" />\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtmhDS.jpg\"\r\nalt=\"江汀桥\" /></p>\r\n<p>过桥后继续前行经过一个市镇可以来到和世界杯路的交叉口，左转可以看到济州世界杯足球场，但我们当天的目的地是西归浦，于是继续直行，靠右骑行告别伊鸥路（Ieodo-ro）进入天平路。此时离西归浦市就很近了，已经有种市郊的感觉，还能看到从西归浦女子高中放学的女学生，经过最后一个爬坡便可以看到市区的轮廓。下午完美阳光的滋养下，万物的饱和度达到完美，随便一张路边的照片都像是来自宫崎骏的动画电影。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/24/pPtQ9eK.jpg\"\r\nalt=\"西归浦-1\" /> <img src=\"https://s1.ax1x.com/2023/08/24/pPtm174.jpg\"\r\nalt=\"西归浦-2\" /></p>\r\n<p>进入市区后，最终我们在一个爬坡的末尾到达了终点。酒店在市区西侧，距离<strong>每日偶来市场（매일올레시장）</strong>不远，窗外也能看到远处的海。200+RMB的3人间属实捡了大便宜。韩国的这种市场挺像国内菜市场和南锣鼓巷的结合，几个街区的大小，是有屋顶的，路面挺干净，路两侧有卖小吃和特产的，也有真得卖菜或卖海产品的。西归浦好歹也是和济州一样的市，比大静还是更有人气。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/25/pPtYuge.jpg\"\r\nalt=\"偶来市场-1\" /> <img\r\nsrc=\"https://s1.ax1x.com/2023/08/24/pPtmIEQ.jpg\" alt=\"偶来市场-2\" /></p>\r\n<p>从偶来市场出来，我们最终决定在烤肉店解决晚餐，感谢店员的社交边界感，在我们鬼鬼祟祟地用翻译软件扫描门口韩文菜单，并没来和我们搭讪。烤肉一般，不如家附近韩国街的西塔老太太。饭后，我们闲逛到七十里餐饮一条街边的子邱里文化艺术公园（Jaguri\r\nPark），视图融入到当地人的日常生活中。夜晚并不热，这里很像家乡的广场，能看到小孩玩水、年轻人直播，草坪上情侣窃窃私语，海岸边大海轻轻冲刷。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/24/pPtmRjf.jpg\"\r\nalt=\"jaguri-park\" />\r\n<figcaption aria-hidden=\"true\">jaguri-park</figcaption>\r\n</figure>\r\n<p>兴尽而返，晒足6个小时忘擦防晒的小腿时刻提醒着我下次不要忘记给它也涂点防晒霜。</p>\r\n<h2 id=\"day-4西归浦---城山\">Day 4：西归浦 -&gt; 城山</h2>\r\n<p>让人庆幸又让难办的是，骑行的第三天又是一个晴天。由于提前踩好了点，我们很轻松到达了前一天的子邱里文化艺术公园。白天的公园又是一番景象，散心的人们都消失了，氛围反而更安静了下来。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/25/pPtBLDS.jpg\"\r\nalt=\"白天的子邱里\" />\r\n<figcaption aria-hidden=\"true\">白天的子邱里</figcaption>\r\n</figure>\r\n<p>沿着<strong>七十里路（Chilsimni-ro）</strong>一路可以经过<strong>正房瀑布（정방폭포）</strong>和<strong>小正房瀑布（소정방폭포）</strong>。过桥后右拐上<strong>甫木浦海岸路（Bomokpo-ro）</strong>，路较窄，但风景极佳。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/25/pPtYJ4f.jpg\"\r\nalt=\"甫木浦海岸路-1\" /> <img\r\nsrc=\"https://www.helloimg.com/images/2023/08/25/oiZKXS.jpg\"\r\nalt=\"甫木浦海岸路-2\" /></p>\r\n<p>骑行不久便可路过<strong>下晓牛沼海滩（하효 쇠소깍\r\n해변）</strong>，海滩难得一见是黑沙，也是第一次见到，很有趣。接着沿牛沼路（Soesokkak-ro）回到一周东路（Iljudong-ro），路上还可以看到神奇的牛沼河谷的风景。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/25/pPtYn3D.jpg\"\r\nalt=\"牛沼沙滩\" /> <img\r\nsrc=\"https://www.helloimg.com/images/2023/08/25/oiRkNA.jpg\"\r\nalt=\"牛沼河谷\" /></p>\r\n<p>骑上一周东路（Iljudong-ro）后，一路无甚风景可看，遂提速至30，在玉美里（위미리）西靠右沿太尉路穿过玉美（위미리）直行可以到达南原邑（남원읍）。在即将进入市镇的路口右拐到<strong>南泰海岸路（Namtaehaean-ro）</strong>，可以沿着南原邑的海岸线继续前进。刚一右拐，熟悉的海景就显露了出来，顿时一扫疲惫。海风里还能隐约嗅到大海的独特腥味。海岸路上人不多，游客大多在<strong>南原龙岩海水游泳场（제주남원용암해수풀장）</strong>里。这个游泳场看起来并不是纯天然的，难怪没有叫做海水浴场。</p>\r\n<figure>\r\n<img src=\"https://www.helloimg.com/images/2023/08/25/oiZU2C.jpg\"\r\nalt=\"南泰海岸路-1\" />\r\n<figcaption aria-hidden=\"true\">南泰海岸路-1</figcaption>\r\n</figure>\r\n<p>过了游泳场就又回到了郊外，海水拍打着黝黑的火山岩，路上没了车辆行人安静了下来，只剩身边风的呼啸，远处灯塔无言注视着一切。偶尔也能在路上看到当地的骑友，速度相近，就像是多了个骑行伙伴一样。在路上还能看到海女在工作。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/25/pPtYGUP.jpg\"\r\nalt=\"南泰海岸路-2\" /> <img\r\nsrc=\"https://s1.ax1x.com/2023/08/25/pPtDp3q.jpg\" alt=\"海女\" /></p>\r\n<p>没过多久南泰海岸路（Namtaehaean-ro）又汇入到一周东路（Iljudong-ro）。我们好不容易在路边找到一家CU，可惜店里没有坐的地方，只能在店外顶着太阳享用拉面韩餐，这一顿的葡萄冰杯和前一天的桃子冰杯尝起来味道没啥区别，也是比较重的香精味道。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/25/pPtY1HI.jpg\" alt=\"午餐\" />\r\n<figcaption aria-hidden=\"true\">午餐</figcaption>\r\n</figure>\r\n<p>过了便利店没多远，跟着蓝色骑行指示牌右转进入<strong>民宿海岸路（Minsokhaean-ro）</strong>，路上会经过济州民俗村博物馆，这一路又是绝美的海景。最终路线在表善里（Pyoseon-ri）的<strong>表善海滩</strong>绕回到主路，表善海滩的进深实在是夸张，海滩沿着海岸线的长度并不算长，但是垂直于海岸线的进深长的夸张，以至于从马路到海边要走很远，甚至还能在沙滩上看到小河。从路上往海看，游客像蚂蚁一般渺小。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/25/pPtBOHg.jpg\"\r\nalt=\"表善海滩-1\" /> <img\r\nsrc=\"https://s1.ax1x.com/2023/08/25/pPtBvNj.jpg\" alt=\"表善海滩-2\" /></p>\r\n<p>回到一周东路（Iljudong-ro）后，在前方当地骑行伙伴的带领下，又是一路30+的狂飙，最终在喜珍加油站附近右拐到当天最后一条海岸路线——<strong>环海长城路（Hwanhaejangseong-ro）</strong>。一到小路，瞬间没了机动车，海景和海风让骑行变得格外peace，酷热和炙烤似乎也可以暂时忘却。路上能看到当地人在晾晒海产品，</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/25/pPtYtC8.jpg\" alt=\"晒鱿鱼\" />\r\n<img src=\"https://s1.ax1x.com/2023/08/25/pPtBqu8.jpg\"\r\nalt=\"peaceland\" /></p>\r\n<p>骑行不到10公里，距离新阳（Sinyang）和城山（Seongsan）方向也越来越近。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/25/pPtBHjf.jpg\"\r\nalt=\"环海长城路\" /> <img\r\nsrc=\"https://s1.ax1x.com/2023/08/25/pPtB7gP.jpg\" alt=\"新阳路牌\" /></p>\r\n<p>当能看涉地可支和城山日出峰时，距离目的地就不远了，看到时间还早，踩踏板的腿的轻松了不少。<strong>涉地岬（Seopjikoji）</strong>和<strong>城山邑（Seongsan-ri）分</strong>别位于两个造型独特的半岛，其中城山的半岛更为狭长，像一只脚伸出去。<strong>城山日出峰（성산일출봉）</strong>占了前脚掌，城山港占了后脚跟。两地风景极佳，是看海的好去处。其中城山港坐船还可以前往<strong>牛岛（Udo）</strong>，牛岛不大，1日游足够，果冻海还有没有海带的沙滩很绝。</p>\r\n<p><img src=\"https://www.helloimg.com/images/2023/08/25/oiZ6VD.jpg\"\r\nalt=\"涉地可支-1\" /> <img\r\nsrc=\"https://s1.ax1x.com/2023/08/25/pPtDSCn.jpg\" alt=\"涉地岬路牌\" /></p>\r\n<p>在涉地岬的海湾附近拐到<strong>涉地可支路25号街（Seopijikoji-ro\r\n25beon-gil）</strong>，我们继续向城山进发。选择住在涉地岬的可以在环海长城路（Hwanhaejangseong-ro）终点处右拐一路靠右行驶进入<strong>涉地可支路（Seopjikoji-ro）</strong>。北行沿日出路（Ilchul-ro）就到了。日出路右侧也能到海边，但海滩小且风景一般，主要以看山为主。城山里很小，我们订的房间就在日出峰山下不远，虽然没有阳台，但推开后窗就能尽览山的一面。</p>\r\n<p><img src=\"https://s1.ax1x.com/2023/08/25/pPtYm9O.jpg\"\r\nalt=\"日出峰-1\" /> <img\r\nsrc=\"https://www.helloimg.com/images/2023/08/25/oiR8In.jpg\"\r\nalt=\"日出峰-2\" /></p>\r\n<p>城山日出峰形成于很久前的火山喷发口，上面的图片并不能体现它的全貌，实际上日出峰是一个突出的青春痘的形状。它是韩国第一批世界自然遗产。经开发后，有步道可以走到山顶，海拔约180m，从售票处出发步行需要30分钟左右。在山顶可以俯瞰城山村和海面，很是壮观。无需买票的免费路线也可以走一小段到山脚临海的北边。总体还是很值得一看的。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/25/pPtYKjH.jpg\"\r\nalt=\"城山日出峰\" />\r\n<figcaption aria-hidden=\"true\">城山日出峰</figcaption>\r\n</figure>\r\n<p>也许是地方小，晚饭的烤鱼我们是指手画脚外加翻译软件的帮助下解决的。饭后简单在村里逛了逛。城山邑不大，不消多久就兜了一圈，附近有个被半岛包围的内海，傍晚时分，风轻云淡，开阔平静的水面仿佛能倒映伸出看客的心绪。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/25/pPtBjEQ.jpg\" alt=\"内海\" />\r\n<figcaption aria-hidden=\"true\">内海</figcaption>\r\n</figure>\r\n<p>夜色降临，趁着游客散的差不多，转头来到日出峰。俯瞰灯火点亮的城山邑又是一番风味。</p>\r\n<figure>\r\n<img src=\"https://s1.ax1x.com/2023/08/25/pPtBx4s.jpg\" alt=\"夜色\" />\r\n<figcaption aria-hidden=\"true\">夜色</figcaption>\r\n</figure>\r\n<h2 id=\"day-5城山---济州\">Day 5：城山 -&gt; 济州</h2>\r\n<p>最后的一日的路线相对简单，沿闲岛路（Hando-ro）过了内海的闸门桥，靠右进入<strong>迎日海岸路（Haemajihaean-ro）</strong>。起初的一片海条件一般，可能也是由于天色稍阴，虽然同时海滨公路，风景对比前几天可谓平平。路上经过的<strong>下岛海水浴场（하도해수욕장）</strong>和<strong>细花海水浴场（세화해수욕장）</strong>人都不算太多。快到西门洞（Seomun-dong）时，几乎要下起雨来。</p>\r\n<figure>\r\n<img src=\"https://www.helloimg.com/images/2023/08/25/oiRURR.jpg\"\r\nalt=\"海水浴场\" />\r\n<figcaption aria-hidden=\"true\">海水浴场</figcaption>\r\n</figure>\r\n<p>幸而天气很给面子，11点左右天气转晴，沿着迎日海岸路（Haemajihaean-ro）兜兜转转经过<strong>月汀里海水浴场（월정리\r\n해수욕장）</strong>时，海滩上已能看到很多练习冲浪的人。远处还有许多风车点缀。</p>\r\n<figure>\r\n<img src=\"https://www.helloimg.com/images/2023/08/25/oiRTkC.jpg\"\r\nalt=\"月汀里海水浴场\" />\r\n<figcaption aria-hidden=\"true\">月汀里海水浴场</figcaption>\r\n</figure>\r\n<p>海岸路很长，又约骑了10来公里，路线在<strong>金陵海水浴场（김녕해수욕장）</strong>截止，一路遇到不少当地的骑行车队，金陵海水浴场不大，但沙很干净。我们在浴场边的便利店稍作休息，旁边还看到了一个全副武装的Trek老大爷，装备很专业。</p>\r\n<figure>\r\n<img src=\"https://www.helloimg.com/images/2023/08/25/oiRcDu.jpg\"\r\nalt=\"金陵海水浴场\" />\r\n<figcaption aria-hidden=\"true\">金陵海水浴场</figcaption>\r\n</figure>\r\n<p>告别浴场靠右侧分别沿金陵路（Gimnyeong-ro）和一周东路（Iljudong-ro）骑行3公里就到了咸德邑（Hamdeok-ri）。继续靠右沿新北路（Sinbuk-ro）和<strong>鸟咸海岸路（Johamhaean-ro）</strong>可以近距离感受<strong>咸德海水浴场（함덕해수욕장）</strong>。也许是距离济州市区较近，这里的游客不少。</p>\r\n<p><img src=\"https://www.helloimg.com/images/2023/08/25/oiR6b6.jpg\"\r\nalt=\"咸德-1\" /> <img\r\nsrc=\"https://www.helloimg.com/images/2023/08/25/oiRgAz.jpg\"\r\nalt=\"咸德-2\" /></p>\r\n<p>沿鸟咸海岸路（Johamhaean-ro）继续前行。我们在戀北亭（연북정）附近又被trek老大爷追上。大爷很热情地向我们打了声招呼，之后扬长而去。</p>\r\n<p><img src=\"https://www.helloimg.com/images/2023/08/25/oiRru5.jpg\"\r\nalt=\"大爷\" /> <img\r\nsrc=\"https://www.helloimg.com/images/2023/08/25/oiRNj9.jpg\"\r\nalt=\"海岸\" /></p>\r\n<p>之后顺着新北路（Sinbuk-ro）和一周东路（Iljudong-ro）进入三养二洞（Samyang2-dong），就真正进入了济州市区。进了城区，自行车道也随之消失，不得不骑上人行道，外加市区内坡度较大，上下坡都比较折磨，骑行体验大打折扣。一路沿东门路\r\n- 西门路 -\r\n龙门路就可回到租车的地方。果然如老板所说，大门紧锁，我们自觉地还了车，上了锁。在附近月城村（Wolseong\r\nVillage）坐公交前往酒店，圆满结束了这220km的环岛骑行。</p>\r\n<p><img src=\"https://www.helloimg.com/images/2023/08/25/oiRz9g.jpg\"\r\nalt=\"城区人行道\" /> <img\r\nsrc=\"https://www.helloimg.com/images/2023/08/25/oiR7kM.jpg\"\r\nalt=\"东门市场远眺\" /></p>\r\n<p>酒店在老济州市政厅附近，交通方便，人气鼎盛，晚餐的豆腐汤 +\r\n饺子勉勉强强，啤酒倒是不错。</p>\r\n<figure>\r\n<img src=\"https://www.helloimg.com/images/2023/08/25/oiRI1P.jpg\"\r\nalt=\"豆腐汤\" />\r\n<figcaption aria-hidden=\"true\">豆腐汤</figcaption>\r\n</figure>\r\n<h2 id=\"day-6购物\">Day 6：购物</h2>\r\n<p>骑行结束了，但旅行并未结束。我们没有按最初计划再去爬个<strong>汉拿山</strong>，倒不是因为时间问题（从市区坐公交前往仅需1个小时，从西归浦出发更快），而是考虑体力有限。于是第二天以<strong>购物</strong>为主。</p>\r\n<p>新济州是购物天堂，步行街、免税店、药局等距离不远，很好逛，也很好买。免税店主要指<strong>乐天免税店</strong>和<strong>新罗免税店</strong>，两家店不远，可以货比三家，价格因为退税的缘故很多都比国内便宜。也许是新罗附近其他购物点更多，店内人气明显更足，代购都要更多一些，大家都是大包小包。经济基础决定上层建筑，为了照顾中国消费者，不仅各种标语都以中文为主，导购们也都能做到几乎无障碍中文交流。新罗免税店附近的药局、饭馆也是一副唐人街的样子，服务员很多国人，也可以刷微信支付宝。<strong>宝健路步行街</strong>一片也有很多店可以一逛，也是可以免税的，有的达到额度可以现场免税。不能现场退税的话，需要拿着退税单在机场值机处先自助登记，通过海关后，去<strong>16号登机口</strong>对面退税。退税时，可以选择现金或者电子转账，现金可以当场拿到，电子转账则需要一定工作日。另外，有的免税店买完之后也需要机场提货，同样是在通过海关后，凭借护照和机票在<strong>20号登机口</strong>对面提取。</p>\r\n<figure>\r\n<img src=\"https://www.helloimg.com/images/2023/08/25/oiRvGv.jpg\"\r\nalt=\"乐天免税店\" />\r\n<figcaption aria-hidden=\"true\">乐天免税店</figcaption>\r\n</figure>\r\n<p>男人的购买力人尽皆知。不过阴差阳错在来的飞机上加了一位代购社恐（社交恐怖分子）的微信，一天20来条代购广告极大丰富了我的购买清单。不禁感慨职业代购的感染力，我的消费欲望也开始蠢蠢欲动。经过精炼总结她的广告，外她提到的“好物”包括但不限于</p>\r\n<ul>\r\n<li>Olive young里烘焙贝果片，味道比较像是带点甜味的馍片，味道不错。Olive\r\nyoung像是Innisfree的感觉，代购社恐推荐的其他面膜啥的我没看太懂</li>\r\n<li>药局里的VC含片、VC软糖、益生菌条、祛疤膏、脚气膏、口腔溃疡膏、妇科药、护肝片、冻伤膏，新罗/乐天免税店旁边的药局里都有中文导购，也可以去了现问</li>\r\n<li>SKII面膜，每片比国内便宜10多元的样子，乐天免税店1盒9折，2盒85折，新罗办卡也有优惠</li>\r\n<li>各种包包</li>\r\n<li>各种烟酒</li>\r\n</ul>\r\n<p>虽然也不知道分配，但抱着先买再说我也买了不少。再加上韩元需要在大脑里换算一道，让价格变成单纯的数字，险些失去理智。快速完成购物任务后，我们坐车回到老济州，去<strong>东门市场</strong>看了看，顺便带了些<strong>柑橘巧克力</strong>和<strong>柑橘酥</strong>（济州生产柑橘），东门市场和西归浦偶来市场比较像，但规模更大些，路更窄些。东门市场附近的<strong>七星街</strong>有很多运动品牌，人不算多，想要挑一身运动装备的可以去看看，里面还有一家较大的卖Crocs（洞洞鞋）的店。</p>\r\n<p>提着大包小包忙完购物任务后，我们又顶着大太阳，爬了市政厅的大上坡，差点噶过去。最后推荐下新济州的24小时土豆脊骨汤，大众点评分挺高，味道确实不错。</p>\r\n<figure>\r\n<img src=\"https://www.helloimg.com/images/2023/08/25/oiR00Y.jpg\"\r\nalt=\"24小时土豆脊骨汤\" />\r\n<figcaption aria-hidden=\"true\">24小时土豆脊骨汤</figcaption>\r\n</figure>\r\n<h2 id=\"day-7咸德\">Day 7：咸德</h2>\r\n<p>放弃爬汉拿山后，我们选择了更休闲了咸德海水浴场一日游。考虑到太阳毒辣，我们在附近的中餐馆吃完饭又睡了个午觉后才出发。这家店的海鲜饭还不错，50+RMB，但料很足。</p>\r\n<figure>\r\n<img src=\"https://www.helloimg.com/images/2023/08/25/oiR9aQ.jpg\"\r\nalt=\"中餐馆\" />\r\n<figcaption aria-hidden=\"true\">中餐馆</figcaption>\r\n</figure>\r\n<p>等坐公交到了咸德海水浴场时，已是下午5点，日头已温柔下来，浴场是免费的，但使用遮阳伞下的座位会有人来收费。海水除了有一些海带外，还是很干净的，也没有扎脚的岩石。</p>\r\n<p><img src=\"https://www.helloimg.com/images/2023/08/25/oiRMxD.jpg\"\r\nalt=\"咸德海水浴场-1\" /> <img\r\nsrc=\"https://www.helloimg.com/images/2023/08/25/oiR29S.jpg\"\r\nalt=\"咸德海水浴场-2\" /></p>\r\n<p>日落时分，可以在附近海边的咖啡厅2楼，简单点个甜点，坐在露天的吧台上，享受海景和清凉的海风，别提多自在了。注意不要点奶茶，齁甜。</p>\r\n<figure>\r\n<img src=\"https://www.helloimg.com/images/2023/08/25/oiRbjo.jpg\"\r\nalt=\"咖啡厅\" />\r\n<figcaption aria-hidden=\"true\">咖啡厅</figcaption>\r\n</figure>\r\n<p>咖啡厅西侧还有一段路伸向大海，临近日落，在路上可以拍到360度无死角的晚霞，完美贴合这一天养生的主旋律。</p>\r\n<p><img src=\"https://www.helloimg.com/images/2023/08/25/oiRwAE.jpg\"\r\nalt=\"日落-1\" /> <img\r\nsrc=\"https://www.helloimg.com/images/2023/08/25/oiRpEX.jpg\"\r\nalt=\"日落-2\" /></p>\r\n<p>眼看日头落下，乌云从远处扑来，我们兴尽而返，在附近乘坐公交，打道回府，等回到市区天又放晴。</p>\r\n<h2 id=\"day-8济州---上海\">Day 8：济州 -&gt; 上海</h2>\r\n<p>虽然这天是晚上10点的飞机，但为了避免意外，我们简单逛了逛当地超市，买了些趁手零食，便坐公交去了机场，顺便把最后一点现金也花掉。出关很顺利，可能是排队人太多，安检比国内还松一些。早知如此，完全可以趁大家都排完队再去值机和安检。由于时区的原因，到达浦东的时候，也还是10点多，神奇的感觉。和基友道别前，我们约好下次继续这种风格的骑游。</p>\r\n<p>回头想想，这趟旅程还挺幸运的，没有遇到糟糕的天气，基本全程晴天，虽然晒了点受了点罪，但却打包眼福。同时人和车也没有出什么意外，作为第一趟出国行，很是庆幸了。出发前，我也没做啥功课，定的酒店以及吃的餐馆就像是开盲盒一样。结果第一天看到了日落，第二天200+租到了3人间，后面几天酒店的位置也很方便。开的餐馆盲盒，有一些甚至还挺好吃的。可能只有不带攻略和明确目标的旅游，一直去体验去经历，才能有这样结果吧。</p>\r\n<p>回到家后，和老婆约定陪她再去一次济州岛，不骑车的那种。不骑车是我提出的，毕竟济州没有她最信赖的货拉拉后勤保障。</p>\r\n<p><em>--END--</em></p>\r\n",
            "tags": [
                "攻略",
                "骑行",
                "济州",
                "西归浦",
                "城山",
                "咸德"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2023/04/23/g-e-b-1/",
            "url": "http://shenlvmeng.github.com/blog/2023/04/23/g-e-b-1/",
            "title": "GEB —— 集异璧之大成 上",
            "date_published": "2023-04-23T14:23:22.000Z",
            "content_html": "<p>19年得知通过豆瓣得知GEB一书时，该书初版已许多年，求之不得。幸而在21年该书再次印刷，且准备再版。于21年底果断购入。读之甚欢，虽有些艰深，但远不止镇柜神书那么简单。这一点和《失控》相比显得高下立判。</p>\n<h2 id=\"引子：《逻辑的奉献》\"><a href=\"#引子：《逻辑的奉献》\" class=\"headerlink\" title=\"引子：《逻辑的奉献》\"></a>引子：《逻辑的奉献》</h2><blockquote>\n<p>自指、怪圈、哥德尔定理、人工智能</p>\n</blockquote>\n<p>从巴赫的《音乐的奉献》谈起，由<strong>卡农</strong>和<strong>赋格</strong>这种带有自指音乐形式转述至艾舍尔自指矛盾的画，并发现这种形式和<strong>哥德尔不完全定理</strong>中构造自指怪圈有着异曲同工的感觉。这种怪圈似乎是固有的，<strong>系统禀赋</strong>的。不论是康托集合论里的悖论还是逻辑学里的罗素悖论，都是自指在数理逻辑中“搞破坏式”的表现。在哥德尔发表他的定理之后，图灵和丘奇从不同的角度提出不完全定理在计算机领域的应用——可计算性。</p>\n<h3 id=\"三部创意曲\"><a href=\"#三部创意曲\" class=\"headerlink\" title=\"三部创意曲\"></a>三部创意曲</h3><p>这里用小品的方式引出阿基里斯，乌龟两位主角，还顺带介绍了芝诺悖论和艾舍尔画的莫比乌斯环。</p>\n<h2 id=\"WU谜题\"><a href=\"#WU谜题\" class=\"headerlink\" title=\"WU谜题\"></a>WU谜题</h2><blockquote>\n<p>形式系统、系统内外、判定过程</p>\n</blockquote>\n<p>这一节以一个预设的WJU形式系统开始，用字符串替代公理、定理，让读者对形式系统有一个初步的感性认识。作者给出了一个题目，以WJ字符串为系统的起始，基于以下4条推导规则，是否能得出WU。</p>\n<ul>\n<li>规则1：WJ后可以跟上U</li>\n<li>规则2：Wx可以替换为Wxx，其中x为任意字符串</li>\n<li>规则3：每处JJJ可以替换为U</li>\n<li>规则4：每处UU可以被直接去掉</li>\n</ul>\n<p>形式系统内的变换类似上面这样的字符变换。以此聊开去，对比人和机器，人在做一段时间运算后，会发现其中的<strong>性质</strong>，通过<strong>洞察力</strong>可以理解这里面的<strong>模式</strong>，可以灵活地跳出<strong>系统</strong>的边界之外。而对于机器，除非你告诉它这么做，它会不厌其烦地，从WJ开始，一直往下<strong>机械地</strong>计算出所有的字符串组合，完全不会意识到自己在做什么。人类在做事时，不需要刻意去区分系统内外，就可以很自然做到意识到系统的存在。而这也是机器做不到的一点。</p>\n<p>回到这个WJU形式系统，你可以用机器的方式推导（J方式），也可以用人类的形式思考（W方式），譬如发现规则1和2增大字符串长度，3和4则是缩短字符串长度。最后的U形式对应禅宗的处事态度。判定过程意味着，在WJU这样的形式系统中，可以在有限时间内给出定理的判定结果。然而两条缩短规则让某条定理（如WU）的证明变得困难甚至不能完成。</p>\n<h3 id=\"二部创意曲\"><a href=\"#二部创意曲\" class=\"headerlink\" title=\"二部创意曲\"></a>二部创意曲</h3><p>用循环嵌套命题的形式引出下一周即将提到的形式系统、</p>\n<h2 id=\"数学中的意义和形式\"><a href=\"#数学中的意义和形式\" class=\"headerlink\" title=\"数学中的意义和形式\"></a>数学中的意义和形式</h2><blockquote>\n<p>形式系统、公理模式、同构</p>\n</blockquote>\n<p>在上一节WU谜题的之外，用另一个pq系统来介绍形式系统。pq系统有无数个公理。但这些公理可以用一个共同的模式生成，即x-qxp-，其中x只由横杠-组成，在公理以外，有着一条简洁的推导规则，得到所有的定理：</p>\n<ul>\n<li>若xqypz是一条定理，那么x-qypz-也是一条定理</li>\n</ul>\n<p>在这么一个形式系统下，经过观察可以发现其中的<strong>模式</strong>：加法的遗传特性。且这个系统只有简单的一条增长规则，即在定理不断枚举的同时，也在不断变长，这使得pq系统不同于WJU系统，可以通过从顶向下的回溯或从底向上的生成来判定每一条定理是否属于系统。</p>\n<p>实际上，作者发明的pq系统是和现实世界的加法法则是<strong>同构</strong>的，q即equals，p即plus，-即1，在这个映射下，pq系统即一个描述加法的形式系统。这种同构也是对形式系统的一种“<strong>解释</strong>”。在高层次存在一个真理和定理的对应，这种对应在你选取对于p、q、-符号的解释前不容易发现。对于形式系统的<strong>解释</strong>选取也是很有讲究的，存在着能类比到现实世界的有意义的解释和无意义的解释。</p>\n<p>形式系统本无意义，需要解读者赋予意义，这和语言中的意义就不一样。语言中的意义是<strong>主动的</strong>，围绕符号的意义可以让我们创建新的规则，譬如—-q-p-p-p，代表4&#x3D;1+1+1+1；形式系统里的意义是<strong>被动的</strong>，你可以根据意义去解读字符串，但是只能在给定规则里行动，不能创造新的。对于逐字符解读可以产生合语法句子的字符串，就可以称为<strong>良构字符串</strong>。</p>\n<p>现实和形式系统是<strong>相互独立</strong>的，并不依赖于两者间的同构关系。除了简单的加法法则，几乎整个现实世界也都可以用形式系统来抽象。这里仅以数学为例，我们所熟知的算术规则也是形式系统里的定理，映射到现实世界里，仅通过有穷情况下的验证是不够的。借助一些推导规则，可以应用到所有的数上。关于数的定理，对于“两个整数的和”这种，我们还能通过计数去同构现实世界，但对于“有无穷个素数”这种，就需要借助符号的推理。这个证明过程由许多滴水不漏的步骤联系在一起，这也暗示着存在一个<strong>结构模式</strong>可以把这些陈述串起来，这个模式可以用特定风格的词汇或符号来展示。浓缩之后，看起来平滑过渡的每一句话里包含了许多“原子化”的推理过程。</p>\n<h3 id=\"无伴奏阿基里斯奏鸣曲\"><a href=\"#无伴奏阿基里斯奏鸣曲\" class=\"headerlink\" title=\"无伴奏阿基里斯奏鸣曲\"></a>无伴奏阿基里斯奏鸣曲</h3><p>借字谜和艾舍尔的镶嵌画，讨论图案和衬底，引出下节的话题。</p>\n<h2 id=\"图形和衬底\"><a href=\"#图形和衬底\" class=\"headerlink\" title=\"图形和衬底\"></a>图形和衬底</h2><blockquote>\n<p>印符规则、非定理、图形、衬底、递归可枚举集</p>\n</blockquote>\n<p>在上节pq系统的基础上，让我们设想一个Px的定理，其中x代表素数长度的横杠。首先回归WJU系统和pq系统，里面生成代表定理的字符串时，用到下面这样的<strong>印符规则</strong>：</p>\n<ul>\n<li>读入并识别有限字符集中任意一个符号</li>\n<li>写入任意一个符号</li>\n<li>把任意<strong>一些</strong>符号从一处搬到另一处</li>\n<li>删除任意一些符号</li>\n<li>检查一个符号是否和另一个相同</li>\n<li>保存并使用之前得到的定理</li>\n</ul>\n<p>用和加法规则相同的思路，可以制造一个tq系统，同样地，用一个<strong>公理模式</strong>开始：对于任意x，xqxt-，其中x仅由-组成；再加上一个推理规则：对于任意x、y、z，如果xqytz，那么可以得到xyqytz-，其中x、y、z仅由-组成。随便选取几个例子，站在“系统”外面观察下模式就能看出乘法的模式了。如果看了pq系统一节，可以很容易做到。在tq系统基础上，也可以定义能够刻画合数的定理：x、y、z仅由短杠-组成，如果xqy-tz-是定理，那么Cx是定理。使用W方式就能看到，<code>x = (y+1) * (z+1)</code>的模式，x的短杠数目即是合数。另外，使用J方式，不考虑短杠背后的含义，可以机械式验证一个Cx是不是定理。</p>\n<p>现在，我们考虑如何定义一个刻画素数的定理。一个最简单的想法就是给出上面的否定形式，即x仅由-组成，如果Cx<strong>不是</strong>一个定理，那么Px是一个定理。但是其中Cx是否是一个定理并不在我们的印符规则中。印符规则只能让你看到定理是否在之前得出的定理集中，并没有一个“<strong>非定理集</strong>”给你查询。到目前为止，刻画素数的定理还只是作为Cx系统的“空洞”出现，并不能看到其中的形式。</p>\n<p>作者在这里举了艾舍尔的一些绘画例子，有些图案在构成图形的同时，其衬底也可以作为一种图形存在。当然了，大多数情况下，可识别的形状外，其<strong>负空间</strong>不可识别。类比到作者提出的印符数论（TNT），既有所有定理集合的负空间，也有定理空间的变形副本（通过否定每个定理得到）。这两者是否能等价呢？结果先预告下，不可以。</p>\n<ul>\n<li>非定理集中存在真理</li>\n<li>否定每个定理得到的集合之外存在假理</li>\n</ul>\n<p>当然，在素数这个具体case下，是可以用一个“正空间”等价到“负空间”上的。不过更普遍的情况下，<strong>存在一个形式系统，其负空间（非定理集）不是任何一个形式系统的正空间（定理集）</strong>。换句话说，<strong>存在非递归的递归可枚举集</strong>。其中递归即指艾舍尔画中那种相呼应特性，递归可枚举即可以发现其中的模式。其实以自然数为例，我们以固定模式抠出其中的元素，剩余元素构成的空洞就像一幅画的负空间，大概率很难找到一种显而易见的模式来定义。</p>\n<p>回过头来说素数，实际上是可以找到这么样的定理的。首先我们正面定义出刻画<strong>不可整除</strong>的定理。给出起始的公理模式，x、y仅由-组成，xyBZCx为公理；再给出推理规则，如果xBZCy是定理，那么xBZCxy也是定理。其中BZC就代表不整除的性质。使用W方式就能理解了。在BZC的基础上，定义素数，素数不能被1和自身以外的数整除，所以从2开始，公理模式：如果–BZCz，那么zMY–是个定理；再给出推理规则：如果zMYx和x-BZCz都是定理，那么zMYx-也是定理。这两步已经构造出了无因子性。再补充一个规则，如果z-MYz是定理，那么Pz-是个定理；同时设置一个公理P–。之后的素数就可以一个个向后推广。素数的情况还比较简单，形式系统的复杂性，有向前向后推导的各种情况，导致了哥德尔定理、图灵的停机问题出现。</p>\n<h3 id=\"对位藏头诗\"><a href=\"#对位藏头诗\" class=\"headerlink\" title=\"对位藏头诗\"></a>对位藏头诗</h3><p>用藏头的对话致敬了巴赫将BACH嵌入《赋格的艺术》的尾巴。同时阿基里斯和乌龟关于所有唱机总有播放不了的唱片的讨论，同构暗示哥德尔不完全定理。</p>\n<h2 id=\"一致性、完全性和几何学\"><a href=\"#一致性、完全性和几何学\" class=\"headerlink\" title=\"一致性、完全性和几何学\"></a>一致性、完全性和几何学</h2><blockquote>\n<p>完全性、一致性、非欧几何、未定义项</p>\n</blockquote>\n<p>在第三章的末尾，作者从龟的角色给出了唱片和唱机的小品。在这个小品上，对于任何一种唱机都有自己播放不了的唱片，播放会导致自己的摧毁。这个故事用同构的方式给哥德尔不完备定理一个感性的秒描绘。哥德尔的定理说明不存在这么一个形式系统：任何一个真陈述都可以作为系统中的定理。这段陈述涉及对<strong>一致性</strong>和<strong>完全性</strong>的描述。为了解释这两种属性，我们还是从pq系统来看，我们为最初的pq系统增加一种公理模式：</p>\n<ul>\n<li>xqxp-，其中x由-组成</li>\n</ul>\n<p>之前的加法解释在现在的pq系统下出现了错位的现象，–q-p-和-q-p-都是定理，在加法解释下，系统有不一致性。我们可以调整一下解释，把q解释为小于等于，挽回之前的同构，使系统重新具有一致性。</p>\n<p>几何学里也有类似的情形。在欧几里得的《几何原理》中，从最基本的概念和定义开始，构建了庞大的严格的欧几里得几何体系。不过欧几里得对其中最基本的“点”，“线”，“圆”下的定义，没有办法和现实世界里的“点”，“线”，“圆”区分出来。因此一些下意识就潜入了他的证明。当然这只是经典著作里的些微瑕疵。欧几里得在公设上的缺乏严格也导致后续非欧几何的出现。《几何原理》的前4个公设简洁和优美：</p>\n<ul>\n<li>直线段可以连接两个点</li>\n<li>直线上的任意直线段可以任意眼神</li>\n<li>任意直线段可以以一个端点为圆心，自己为半径做一个圆</li>\n<li>一切直角彼此相等</li>\n</ul>\n<p>而第5条公设相比之下就显得格格不入的“丑陋”：</p>\n<ul>\n<li>两条直线和第三条直线相交时，在第三条直线的一侧，三条直线所夹成的内角和如果小于两个直角的和，那么在这一侧，那两条直线延长足够远后一定会相交</li>\n</ul>\n<p>用更好懂的说法，即给定一条直线，和直线外一点，过该点有且只有一条直线和给定直线平行。欧几里得本人在几何证明中也尽量避免使用第5条公设。他之后的许多数学家尝试用前4条公设去推理第5条公设失败后，转换思路去否定第5条公设，之后试图寻找系统内的矛盾。最终导致非欧几何的诞生，实际上，当你摆脱现实世界中“直线”的先入为主的理解后，就能获得非欧几何的新视角。例如，在椭圆几何中，过直线外一点，没有直线与该线平行。椭圆几何中的点和线，分别可以理解为一个球上的一对<strong>对径点</strong>（球内直径的两个点）和球上的一个<strong>大圆</strong>。像这样，赋予“点”，“线”新的解释，我们就朝着几何的形式化又进了一步。这种抽离日常意义的词，就叫做<strong>未定义项</strong>。他们的意义是我们另外灌注进去的。</p>\n<p>几何的完全形式化，需要我们把每个词都抽离成上面那样的未定义项。形式系统中这些符号的被动意义，需要人们观察者寻找一套可以同构联系符号的概念。符号可能有很多有意义的解释，例如pq系统中，将p解释成“等于”，q解释成“减”。回头来看形式系统（在某个解释下）的<strong>一致性</strong>，这里可以给一个严格的定义：</p>\n<ul>\n<li>其中<strong>每个</strong>定理经过解释后，都是一个真陈述</li>\n</ul>\n<p>一致性也分<strong>内部一致性</strong>，和<strong>外部一致性</strong>。前者是说所有定理经过解释后，是彼此相容没有相互矛盾；后者是说每个定理解释后，是<strong>真的</strong>，那么系统加上解释是与外部世界一致的。当然这个“外部世界”不一定是我们生活的这个世界，可以是任何想象的世界，在其中的文学规则、生物规则、物理规则、数学规则甚至逻辑规则都可以和现实世界不一样。通常我们会尽量保留数学规则、逻辑规则和现实一样。</p>\n<p>回头看非欧几何的启示，我们在构造几何学的时候，有些词具有不变的意义，作为<strong>骨骼</strong>；另一些则可以调整，即未定义项，作为血肉。调整未定义项添加新的规则公理，就可以在固定符号意义的形式系统A的基础上，构造一个形式系统B、C、D……。<strong>我们获得新知识、新词汇、感知不熟悉的事物时，也是以类似这种分层的形式进行的</strong>。在看到艾舍尔那些视错觉的画时，这种分层的认识遇到了困境，局部的认识没法凑成一个一致性的完整解释。但其实，这时还有一种办法，就是放弃每层对符号的解释，让画面里的每一处线条都是无意义的符号。这种彻底的<strong>逃避</strong>途径，有点像禅宗式的<strong>U方式</strong>。</p>\n<p>那么数论是不是也和欧几里得几何一样，对未定义项给出不同解释，就可以得到不同分支。实际上，我们还是需要保留一些最基本的不可变的部分，和逻辑一起构成“核心数论”（类似前四条公设组成的“核心几何学”），这也被称为皮亚诺算术。在这个基础上，数论也是分叉的理论，有标准和非标准的，且有无穷多个。当然在实际应用中，无需感知它们。</p>\n<p>如果一致性是符号获得被动意义的<strong>最低条件</strong>，那么<strong>完全性</strong>就是最高条件。一致性在说“系统中的每个东西都是真的”，完全性则是倒过来“所有由系统中的符号构成的真陈述（良构字符串）都可以由系统产生”。最初的pq系统在解释下，是一个只有两数加法的想象世界，具备完全性和一致性。增加了一个公设解释后，我们给出的小于等于解释就是一致但不完全的，尽管定理产生的都是真陈述，但-q–p—这种真陈述，就没有办法在系统里生产出来。这里我们有2种解决办法，<strong>往系统增加规则</strong>让系统更“强”或<strong>紧缩解释</strong>。这里我们选择后者——把小于等于解释中的q改成“等于或加1后等于”，此时系统重新恢复完全性。可以看到，<strong>解释会改变系统的完全性和一致性</strong>。</p>\n<p>在形式化数论中，也会面临不完全性，在那里我们会被迫采用增加规则的手段来让系统完全。哥德尔不完全定理就在说任何<strong>强有力</strong>的系统，由于能力较强，反而是不完全的。</p>\n<h3 id=\"和声小迷宫\"><a href=\"#和声小迷宫\" class=\"headerlink\" title=\"和声小迷宫\"></a>和声小迷宫</h3><p>小品中用推入露、弹出锅酥、煮调饮等印象模拟程序中的入栈、出栈。同时糅合了艾舍尔的凸和凹作品，引出鬼神、元鬼神、元元鬼神关于无限递归的场景。在鬼神部分的故事中，有两点最是妙趣至极：</p>\n<ul>\n<li>对于造物神的递归定义（造物神——物色的——神怪）</li>\n<li>向鬼神给出的悖论愿望（我这个愿望不被实现）导致系统停机</li>\n</ul>\n<h2 id=\"递归结构和递归过程\"><a href=\"#递归结构和递归过程\" class=\"headerlink\" title=\"递归结构和递归过程\"></a>递归结构和递归过程</h2><blockquote>\n<p>递归、RTN、人工智能、不可预知性、侯世达定律</p>\n</blockquote>\n<p>递归是计算机领域里很常用的一个概念，每次递归<strong>进栈</strong>（push）后，新的工作是低一个层次的更简单的原工作，在完成新工作后<strong>出栈</strong>（pop）回到原来的上下文。堆栈在这个过程中会记录打断当前工作的位置还有所处的环境。在音乐中也有相同的应用，每一次的变调都相当于把一个新的调式推入堆栈，在回到主调时，会有种“如释重负”的感觉（栈空）。<strong>紧张和解决是音乐的核心</strong>。然而对于普通的音乐听众，并没有一个非常可靠和很深的堆栈。在巴赫的《和声小迷宫》中，听众就很容易在急剧变化的调子中迷失方向。</p>\n<p>语言中也存在递归，我们在理解语言时，大脑也在维护着一个心理堆栈。作者这里给出了一个递归迁移网（RTN)的例子，展示构造自然语言时也有递归过程。递归可以是自己调用自身，或者借助两个过程相互调用，但一定有一个<strong>终结条件</strong>，避免递归进入无限循环。</p>\n<p>之后，作者由用递归的图像模式给出了和斐波那契数列的联系</p>\n<ul>\n<li>图像的递归模式：G(n) &#x3D; n - G(G(n-1)), G(0)) &#x3D; 0</li>\n<li>斐波那契数列：F(n) &#x3D; F(n-1) + F(n-2)</li>\n</ul>\n<p>在递归的规则复杂起来之后，就不再能那么明显地感受到斐波那契这样明显的模式。比如Q(n) &#x3D; Q(n-Q(n-1))+Q(n-Q(n-2))这种。从磁场强度和粒子变换中也能看到同样的递归规律。我们在重温下递归的意义——<strong>递归是在不同层次上出现“同一”事物，但它们又不是完全相同的</strong>。这些事物有着映射关系，虽然它们不完全相同，但有着相同的功能关系让每次递归看起来“<strong>风格</strong>”相同，就像艾舍尔的画一样。</p>\n<p>在弈棋程序的超前搜索树中，也有着递归的过程，AI在计算下一步的时候，要站在对方的角度考虑走一步之后如何计算，这个递归足够复杂时，就像上面的Q(n)序列，AI变得难以找到一种模式，体现出<strong>智能</strong>的特点。程序甚至可以设计成可以修改自身，或者修复、扩展自身。递归的神奇特点在<strong>侯世达定律</strong>中也有体现：</p>\n<blockquote>\n<p>做事花费的时间总比预期要长，即使你在预期时考虑了侯世达定律</p>\n</blockquote>\n<h3 id=\"音程增长的卡农\"><a href=\"#音程增长的卡农\" class=\"headerlink\" title=\"音程增长的卡农\"></a>音程增长的卡农</h3><p>小品以俳句为引子，找到了BACH音程和CAGE音程的联系，巧合的是Bach和Cage也是两个音乐家的名字。</p>\n<h2 id=\"意义位于何处\"><a href=\"#意义位于何处\" class=\"headerlink\" title=\"意义位于何处\"></a>意义位于何处</h2><blockquote>\n<p>信息、意义、遗传型、表现型、自动唱机、外在消息、内在消息</p>\n</blockquote>\n<p>这章主要聊了<strong>意义是一条消息所固有的，还是智能或是机器和消息交互后产生的</strong>。首先，意义被提取的过程一定有一个信息携带者，等待信息揭示者发现某种同构关系来提取或解释消息。就像唱片的槽纹模式和声音的同构被唱机提取出来一样。DNA的遗传型和表现型也是相似但又不完全一样的例子。相对唱机演绎声音，DNA表现遗传特征要复杂了太多太多，以至于没有人能讲明白之间的关系。因此唱片和声音的同构可以叫做<strong>平凡同构</strong>，DNA的遗传型和表现型间的同构可以称作<strong>异常同构</strong>。</p>\n<p>我们先看唱片，音乐并没有隐藏在唱机中，而且我们也能以任意精确程度去匹配唱片的片段和输出的音乐，唱片和唱机也能很好地分离开。这么看，消息的意义似乎是固有的，唱片所蕴含的意义不随唱机转移。再看DNA，情况不一样了起来，DNA必然也包含了遗传信息，但是它依赖必须的化学环境来表现这些遗传信息，缺少了环境，DNA的意义就不能被揭示出来。</p>\n<p>唱片的意义在于播放时，声音激活大脑中的适当结构，激发听者的一些情感。似乎对于唱片的释读早就<strong>内置</strong>在我们的大脑里。如果信息在本质上具有足够的内在逻辑，一旦遇到足够智能的生物，环境就能自动的建立起来。这样的话，我们就可以说消息的意义是一种固有性质。在这个假设下，信息可以分为3层：</p>\n<ul>\n<li><strong>内在消息</strong>：理解内在消息就是抽取发送人要传递的意义</li>\n<li><strong>框架消息</strong>：就是确认需要一种解码机制</li>\n<li><strong>外在消息</strong>：理解外在消息就是建造或知道如何建造能够解译内在消息的解码机制</li>\n</ul>\n<p>消息必须具有某种<strong>触发器</strong>一样的东西，传递出它包含有意义，就像罗塞塔石碑上的重复符号一样。从某个角度看，欣赏音乐、艺术作品也是一个解译内在消息的过程。其中作品传递的<strong>风格</strong>和外在消息以及解码技术表述的是一件事情。外在消息的“触发器”能否被人发现是无法预知的，在消息内写上“这是一条需要破译的消息”也是不行的。外在消息的本性就决定了它们无法被任何显式语言所传达，解码过程是个启发式的，就像是涌现出来的一样。</p>\n<p>这么看来，消息内的意义能否被发现，和解读它的智能关系甚密，譬如发现唱片内的螺线型沟槽又或者发现图案上使用了日文字母。<strong>智能似乎自带发现外在消息触发器的能力，并且一旦发现就可以对这些消息进行解码</strong>。在这个基础上，如果我们承认意义是消息所固有的，只等着智能去发现，就是在承认消息的释读机制是具有普遍性、自然界中的基本形式。然而，这样的话分布在宇宙各处的智能生物对于消息处理也要具有不变性。这显然有些<strong>人类沙文主义</strong>或是<strong>地球沙文主义</strong>。我们无从知道其他智能会不会像人类智能一样解读我们看起来很显然的消息。</p>\n<p>如果我们要像外星智能传达消息表达斐波那契数列的规律信息，仅仅在金属板上蚀刻2个星号，肯定不如刻上前n项更容易暴露触发器。后者的长遗传型传送的外在消息更多，这就使内在消息得以被读出。再举个例子，我们往外星发送巴赫和Cage的唱片，Cage的曲子就难理解了许多，因为能够欣赏Cage作品需要熟知固定音乐在近几十年的发展轨迹，这样的听众本身就内赋了作品的独立反叛意义，唱片只是简单起个触发作用。而这仅限于地球。相反，讽刺的是，欣赏巴赫的作品就远不需要那么多文化知识。这也体现出了奇妙的一点：<strong>智能喜好模式化，厌恶随机性</strong>。回到DNA的例子里，要恢复遗传型蕴含的信息，需要极大程度地理解DNA需要的环境，才能完好地表现出表现型。那么，在恢复的过程，什么时候才能说已经达到或者隐含了表现型呢？这在某些国家是个高度敏感的话题（堕胎）。</p>\n<h3 id=\"半音阶幻想曲，及互格\"><a href=\"#半音阶幻想曲，及互格\" class=\"headerlink\" title=\"半音阶幻想曲，及互格\"></a>半音阶幻想曲，及互格</h3><p>小品里阿基里斯尝试用命题演算证明乌龟所说自己的壳是&#x2F;不是绿色的矛盾，这也引出了下章的讨论内容。</p>\n<h2 id=\"命题演算\"><a href=\"#命题演算\" class=\"headerlink\" title=\"命题演算\"></a>命题演算</h2><blockquote>\n<p>命题演算、形式化、半解释、元理论</p>\n</blockquote>\n<p>小品里阿基里斯朴素的命题演算并没有说服乌龟，这章用符号化的形式系统来模拟命题演算。我们用P、Q、R这样的符号表标识一个原子，将由<code>~</code>、<code>∧</code>、<code>∨</code>、<code>&lt;</code>、<code>&gt;</code>、<code>→</code>符号和原子按指定规则组成的串成为良构串（即命题）。同时给出<strong>合并</strong>（<code>P∧Q</code>是定理可以得到<code>P</code>和<code>Q</code>都是定理）、<strong>分隔</strong>（<code>P</code>和<code>Q</code>都是定理可以得到<code>P∧Q</code>是定理）、<strong>双重反转</strong>规则作为串生成的基本规则来产生更多良构串（命题）。对于包含<code>→</code>符号的串，也有一个<strong>幻想规则</strong>。</p>\n<p>预设一个良构串X，把它当成定理，根据已有规则推导，生成另一个良构串Y，那么可以说X就是Y的前提，Y就是X的结果。记作<code>&lt;x-&gt;y&gt;</code>。</p>\n<p>在这个基础上，借助双重反转规则，可以很容易得到<code>&lt;P→~~P&gt;</code>这样的定理。在幻想规则的层级不止一层时，还有一个<strong>搬入规则</strong>，即在一个“幻想”中，更高层级“幻想”里的定理都可以拿来并使用，借助这个规则，又可以生成<code>&lt;P→&lt;Q→&lt;P∧Q&gt;&gt;&gt;</code>这样的定理（可以发现，这正是分隔规则的符号化，幻想规则就是命题演算的符号化过程）。</p>\n<p>当然，除了上面这些规则，还有很多别的：</p>\n<ul>\n<li><strong>分离规则</strong>：如果<code>x</code>和<code>&lt;x→y&gt;</code>都是定理，那么<code>y</code>也是定理</li>\n<li><strong>异位规则</strong>：<code>&lt;x→y&gt;</code>和<code>&lt;~y→~x&gt;</code>是可以互换的</li>\n<li><strong>德摩根规则</strong>：<code>&lt;~x∧~y&gt;</code>和<code>~&lt;x∨y&gt;</code>是可以互换的</li>\n<li><strong>思维陀螺规则</strong>：<code>&lt;x∨y&gt;</code>和<code>&lt;~x→y&gt;</code>是可以互换的</li>\n</ul>\n<p>可以很容易发现，<code>~</code>、<code>∧</code>、<code>∨</code>、<code>&lt;</code>、<code>&gt;</code>、<code>→</code>这些符号和逻辑符号的关系。从上面规则生成出来的定理也可以轻松对应现实世界中的逻辑命题。当一个人解释命题演算里的定理，<strong>而不解释其中的原子</strong>时，作者称之为<strong>半解释</strong>。例如<code>P∨~P</code>可以半解释为P或者非P。可以发现，命题演算中生成的定理被半解释时，会被人们视作普遍为真的句子。</p>\n<p>在命题演算的帮助下，可以用印符规则生成普遍为真的语句，这些宇宙里的核心真理似乎是有规律的。在上面的解释下，命题演算里的定理都是真语句。那么我们能证明这一点吗？又或者说，我们知道系统是否一致吗？是否有可能有一个定理<code>x</code>按照规则推导可以得到<code>~x</code>。这个问题的证明等效去证明上面那些规则，可以想到，随之而来的还会有证明的证明，证明的证明的证明……最外层系统总是需要一个未经证明的假设，是凭我们的信仰接受的。就像阿基里斯和乌龟谈话里，要从<code>&lt;&lt;A∧B&gt;→Z&gt;</code>和<code>&lt;A∧B&gt;</code>证明到<code>Z</code>，需要先证明符号化的<code>&lt;&lt;&lt;&lt;A∧B&gt;→Z&gt;∧&lt;A∧B&gt;&gt;→Z&gt;</code>。</p>\n<p>让我们再回头审视那些规则，我们在用推导出来的<strong>定理图式</strong>作为导出规则生成其他定理时，使用的是<strong>W方式</strong>，这种关于命题演算的理论可以叫做“元定理”，即关于定理（可导出的串）的定理（被证明的结果）。在使用W方式时实际上已经失去的系统的形式性，W方式是在系统之外的。只有J方式是在系统里的。然后要生成更多的定理，必然需要这种“捷径”。即使把元理论抽象成形式系统，也依然会有元元理论去加快命题演算中的定理推导。</p>\n<p>那么一个推理理论能否包含自己的元理论呢？事情并不简单，因为系统“对自身思考”时，实际上也是运用了W方式站在<strong>系统外边</strong>做的观察。然而后面的章节里会提出一个系统可以达成这样的目标，当然，在推演时也是要十分小心J方式和W方式的不同的。</p>\n<p>命题演算很像以某种方式进行的推理，但是推理的规则和人的思维是不一样的。一个证明是非形式化的东西，是思维的产物，本身包含了思维各种复杂的特点，最终“感觉是对的”。而推导是证明的人造对应物，用意是去使用逻辑结构形式化达到同样的目标。<strong>任何一种简单性都会带来一种特殊类型的复杂性</strong>。就像证明就依赖了人思维语言的复杂性。书中在这里使用了<code>&lt;P∧~P&gt;</code>构造出<code>&lt;&lt;P∧~P&gt;→Q&gt;</code>这样一个矛盾。在数学中，人们通常通过修正系统来应对矛盾。譬如在这里可以通过限制幻想规则使用要求新增命题的关联性来限制Q的加入。后一章中通过构造一个更大的系统，来将这种不完全或不一致从子系统的命题演算错误转移为较大系统的毛病。</p>\n<h3 id=\"螃蟹卡农\"><a href=\"#螃蟹卡农\" class=\"headerlink\" title=\"螃蟹卡农\"></a>螃蟹卡农</h3><p>小品借互文的形式（即全文对称）致敬的巴赫的螃蟹卡农作品，同时螃蟹提到的DNA双螺旋结构也和互文有呼应。此外引入DNA里的CGTA碱基对，和螃蟹（Crab）、基因（Gene）、乌龟（Tortoise）、阿基里斯（Achilles）的首字母一一对应，实在妙绝。</p>\n<h2 id=\"印符数论\"><a href=\"#印符数论\" class=\"headerlink\" title=\"印符数论\"></a>印符数论</h2><blockquote>\n<p>TNT、自由变元、量化变元、ω不完全系统、形式推理</p>\n</blockquote>\n<p>印符数论（TNT，Typographical Number Theory）预期把数论形式化在印刷符号中。在TNT中先要定义一些原子；</p>\n<ul>\n<li>数字：0、S0、SS0、SSS0，其中S标识是它后面那个东西的后继</li>\n<li>变元和术语：用a、b、c、d、e这样的小写字母表示不确定的数，+和·标识加和乘，&#x3D;表示相等</li>\n<li>上一章命题演算中的<strong>符号</strong>也可以拿来使用</li>\n</ul>\n<p>这样我们就能构成一些基本的句子了，句子一般都有真假。但像$(b+S0)&#x3D;SS0$这样的则不具有，因为其中有<strong>自由变元</strong>b，这样的公式也被称为<strong>开公式</strong>。使用<code>∃</code>和<code>∀</code><strong>量词</strong>可以将开公式转化为可以判断真假的<strong>闭公式</strong>。譬如$∃b:(b+S0)&#x3D;SS0$这样的存在断言和$∀b:(b+S0)&#x3D;SS0$这样的全称断言。在量词管辖下的变元称为<strong>量化变元</strong>。结合上量词，我们可以表示更加丰富的数论命题。譬如，“5是素数”可以表示为：</p>\n<p>$$~∃a:∃b:SSSS0&#x3D;(SSa·SSa)$$</p>\n<p>现在我们已经能<strong>形式化</strong>地给出命题的串描述了，我们怎么判断他们的真假性呢，即给出一个<strong>良构串</strong>的形式。首先看良构串的部件：</p>\n<ul>\n<li>数字：0和前面加上了S的0</li>\n<li>变元：a、b、c、d、e或者字母上面加<code>&#39;</code>的形式</li>\n<li>项：数字或变元或前面加了S的项，如$SSa’$、$S(Sa·(Sb·Sc))$，根据是否有变元，项可以分为确定项和非确定项</li>\n</ul>\n<p>使用上面的部件，下面是一些组成规则：</p>\n<ul>\n<li>原子：如果s和t是项，那么$s&#x3D;t$是原子</li>\n<li>否定：前面加了<code>~</code>的良构公式也是良构的</li>\n<li>复合：x和y是良构公式的话，那么<code>&lt;x∨y&gt;</code>、<code>&lt;x∧y&gt;</code>、<code>&lt;x→y&gt;</code>也是良构</li>\n<li>量化：如果u是变元，x是一个包含自由变元u的良构公式，那么$∃u:x$和$∀u:x$也是良构公式</li>\n</ul>\n<p>这样我们就得到了可以判断真假的TNT良构公式形成规则表，举例：不同的自然数有不同的后继可以表示为$&lt;∀a:∀b:&lt;a≠b→Sa≠Sb&gt;&gt;$。当然，用这样原始的形式表述“b是2的某次方”这样的命题时还是很吃力的。不过最起码现在已经有了一个基础。在这个基础上，我们要补充公理和推理规则，首先，我们将命题演算中所有规则接纳进来，之后给出下面5条公理：</p>\n<ul>\n<li>公理1：$∀a:~Sa&#x3D;0$</li>\n<li>公理2：$∀a:(a+0)&#x3D;0$</li>\n<li>公理3：$∀a:∀b:(a+Sb)&#x3D;S(a+b)$</li>\n<li>公理4：$∀a:(a·0)&#x3D;0$</li>\n<li>公理5：$∀a:∀b:(a·Sb)&#x3D;((a·b)+a)$</li>\n</ul>\n<p>1是关于0的性质，2、3关于加法、4、5关于乘法。看起来和皮亚诺公设很像，但并不一样，作者用鬼神的比喻给了出来：</p>\n<ul>\n<li>怪物是一个神怪（0是一个自然数）</li>\n<li>每一个神怪都有一个元（所有自然数都有后继）</li>\n<li>怪物不是任何神怪的元（0不是任何自然数的后继）</li>\n<li>不同的神怪有不同的元（不同自然数的后继不同）</li>\n<li>如果怪物有X，并且每个神怪都把X传给它的元，那么所有神怪都得到X（数学归纳法）</li>\n</ul>\n<p>之后，我们可以继续给出一些可以操作TNT元素的规则：</p>\n<ul>\n<li>特称规则：如果u是串x中的一个变元，且$∀u&#x3D;x$是一个定理，那么x也是定理，而且任意替换x中的u为其他串也都是定理，但要保证替换规则一样，且替换u的项不能包含在x中被量化的变元</li>\n<li>概括规则：和特称规则相反，我们可以把全程量词放回到定理中，即x是定理u是串x中的一个变元，那么$∀u&#x3D;x$是一个定理，当然，在幻想规则中，不允许对自由出现在幻想中的变元应用概括</li>\n<li>互换规则：如果u是一个变元，那么$∀u:<del>$和$</del>∃u:$在定理中任意位置都可以互换</li>\n<li>存在规则：一个项如果在定理中出现任何次，那么可以用一个<strong>还未出现</strong>在定理中的变元替代，之后在最前面补充上它的存在量词<code>∃</code>，例如$∀a:<del>Sa&#x3D;0$可以把里面的0替换成$∃b:∀a:</del>Sa&#x3D;b$</li>\n</ul>\n<p>围绕<code>=</code>还有下面这些规则：</p>\n<ul>\n<li>对称：如果$r&#x3D;s$是一个定理，那么$s&#x3D;r$也是一个定理</li>\n<li>传递：如果$r&#x3D;s$和$s&#x3D;t$都是定理，那么$r&#x3D;t$也是定理</li>\n<li>后继：如果$r&#x3D;t$是一个定理，那么$Sr&#x3D;St$是一个定理；相反如果$Sr&#x3D;St$是一个定理，那么$r&#x3D;t$是一个定理</li>\n</ul>\n<p>在上面这些基础上已经可以推导出很多基础但丰富的定理了，不过一些尝试发现，这个体系还缺少了<strong>概括</strong>的能力。例如，我们可以从0+0&#x3D;0，推出0+S0&#x3D;S0，再继续往后推，但却没法得到$∀a:(0+a)&#x3D;0$。这时我们急需一个规则：如果这样一个金字塔的所有串都是定理，那么用来概括它们的全称量化的串也是定理。然而这没法在J方式下使用，它是在系统外思考的W方式。这种系统的缺陷被称为<strong>ω不完全性</strong>。一个看起来很显然的定理却没法在ω不完全系统中证明。就像非欧几何里面也是对未完全定义的“点”和“线”不补全了定义一样。</p>\n<p>我们补上一条归纳规则：设u是一个变元，X{u}是一个u在其中自由出现的良构公式，如果$∀u:&lt;X{u}→X{Su&#x2F;u}&gt;$以及X{0&#x2F;u}二者都是定理，那么$∀u:X{u}$也是一个定理。这样整个形式推理似乎补全了。我们可以用彻底形式化的方式来推理，当然这么做是十分费力的，结合W方式会让它更好用。那么要证明TNT系统的一致性，有没有可能有比TNT系统更简单的方式呢？结果是没有。最起码要和TNT一样完全。</p>\n<h3 id=\"一首无的奉献\"><a href=\"#一首无的奉献\" class=\"headerlink\" title=\"一首无的奉献\"></a>一首无的奉献</h3><p>小品借由禅宗的探讨，对系统完全性和一致性上做了探讨。禅宗中的无门和和对佛性的追求和围绕系统一致性和完全性的追求也有共同之处。</p>\n<h2 id=\"无门和哥德尔\"><a href=\"#无门和哥德尔\" class=\"headerlink\" title=\"无门和哥德尔\"></a>无门和哥德尔</h2><blockquote>\n<p>无门、整体论、WU谜题、哥德尔配数、编码</p>\n</blockquote>\n<p>禅宗的基本教条就是：没有任何方法能刻画禅宗是什么。词语和真理是不相通的，至少词语无法捕捉到真理。文中对于禅宗公案的展示，表现出禅宗对二元论的反对，推崇整体论。而对词语的普通使用，甚至包括自己的知觉都表示你把自己当做世界<strong>当中</strong>的一个客体，从而远离了“道”。然而禅宗也是一个系统，不可能成为自己的元系统，总有东西处在禅宗之外，是无法用禅宗完全了解或说清楚的。</p>\n<p>这时，我们回头看WU谜题，我们把WJU中的J看成1个<strong>洞</strong>，起始定理是1个洞，要判断是否有没有洞的情况。WJU系统中的4条规则分别：</p>\n<ul>\n<li>规则1：不改变洞的数目</li>\n<li>规则2：让洞的数目翻倍</li>\n<li>规则3：让洞减少3</li>\n<li>规则4：不改变洞的数目</li>\n</ul>\n<p>由此看到，仅借助规则2和3没有办法让洞从1个变为3的倍数，自然无法推导出WU的答案。然而并非所有谜题都像WU这么好解。借助<strong>哥德尔配数</strong>，我们可以把所有形式系统的问题都转为数论描述，从而可以使用更为强大的数论。以WJU系统为例，我们可以把每个符号映射为1个数字，按照形状相似分别可以：</p>\n<ul>\n<li>W &lt;-&gt; 3</li>\n<li>J &lt;-&gt; 1</li>\n<li>U &lt;-&gt; 0</li>\n</ul>\n<p>那么，31就是起始的公理，规则1、2、3、4也分别可以用数字规则描述，譬如规则1可以表示为31后可以追加1，即31 -&gt; 31 * 10 + 1。这样用哥德尔配数表示出来的形式系统就具有<strong>二重性</strong>，一重是印符规则的理解，一重的数字背后的数论理解。印符和算术规则是可以等价的。</p>\n<p>再联想我们上节中的TNT系统。「30是一个WJU数」也可以翻译成TNT记号（尽管它极其复杂）。同样地，这个TNT符号也有印符和数论的两重意义。有人可能会说理解哥德尔配数后的编码需要额外知道编码的知识，但只要是无损编码，现实中不存在什么未编码的消息，只有我们熟悉和不熟悉的编码。</p>\n<p>形式化表述数论的TNT系统本身也可以哥德尔配数，将TNT中用到的原子符号都使用数字组成的密码子表述，类似$(S0+S0)&#x3D;SS0$也可以用数字表述出来。从而<strong>一串数字是不是一个TNT数的另一层含义就是一个数论语句是不是一个TNT定理</strong>。这也导致了一个结论：TNT的一个串有一个数论中的解释，而数论中的一个陈述的第二意义是TNT的一个陈述。</p>\n<p>那么我们现在要找到一个TNT串，称之为G，它是关于它自己的，具体来说G的被动含义是「G不是TNT的定理」（当然G也有哥德尔配数的数论含义）。那么我们只要创造出这么一个G，根据TNT的完备性，G是一个真理，则「G不是一个定理」，反之亦然。这个TNT串反应的某个自然数的算属性值无法被TNT确定既真又假。从而违背了一致性。</p>\n<p><em>上篇结</em></p>\n",
            "tags": [
                "形式系统",
                "不完全性",
                "隐喻",
                "哥德尔",
                "巴赫",
                "埃舍尔"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2022/12/30/2022-to-2023/",
            "url": "http://shenlvmeng.github.com/blog/2022/12/30/2022-to-2023/",
            "title": "2022-to-2023",
            "date_published": "2022-12-30T10:31:02.000Z",
            "content_html": "<h1 id=\"2022回顾暨2023畅想\"><a href=\"#2022回顾暨2023畅想\" class=\"headerlink\" title=\"2022回顾暨2023畅想\"></a>2022回顾暨2023畅想</h1><blockquote>\n<p>2021-2022: <a href=\"https://shenlvmeng.github.io/blog/2021/12/22/2021-to-2022/\">https://shenlvmeng.github.io/blog/2021/12/22/2021-to-2022/</a></p>\n</blockquote>\n<p>2022比想象中过去得要快，这一年是紧贴时代脉搏一起脱轨的一年。生活的很多方面也不免受到影响。在日常琐事之中也埋着个人命运的一条主线——告别单身，走向家庭。在上面两个基调的影响下，回头看看过去1年拍过的照和写下的博文，似乎比往年少了些浓墨重彩的趣事。也许生活本身的难以预料琢磨，才是它令人着迷的地方吧。</p>\n<h2 id=\"2022回顾\"><a href=\"#2022回顾\" class=\"headerlink\" title=\"2022回顾\"></a>2022回顾</h2><p>书籍阅读上，经过大半年的努力，完成大部头《代码大全》的阅读；同时，神书《GEB》在进行中。读书进度受疫情影响较大，经常因为居家办公而打断。</p>\n<ul>\n<li><a href=\"https://shenlvmeng.github.io/blog/2022/03/03/all-about-code/\">关于编码的一切 ——《代码大全》 上</a></li>\n<li><a href=\"https://shenlvmeng.github.io/blog/2022/08/25/all-about-code-2/\">关于编码的一切 ——《代码大全》 下</a></li>\n</ul>\n<p>小说的阅读倒是没受到丝毫影响，剩余的推理和刑侦小说一本不落的看完了。去年未完成的X、Y、Z的悲剧还有《犹大之窗》比想象中出彩。去年剩下的管理学书籍在工作中实在有些屠龙之术的处境，对于我这样的入行年限，研究这么高深的管理学技巧有捡了芝麻丢了西瓜的嫌疑。所以先暂时搁置。一项全新领域的研究也在《GEB》的阅读中有一定收获，其关于自我指代、悖论的介绍既艰深又有趣。</p>\n<p>今年的黑天鹅事件比去年只多不少，先是3月份魔都疫情爆发导致封城3个月到6月初，我也是既20年在湖北隔离2个月后，体验到更久禁足的滋味。在家早起抢菜、做饭洗碗、白天下楼排队核酸、晚上跟着刘畊宏上下翻飞，快递动辄等个数月，数个节假日都只能在家庆祝。这种脱轨的生活在相册里体现就是清一色的做饭返图，在身体上体现就是精打细算的吃喝和锻炼让体重最多减了10斤，在竞技技术上体现就是出色的分手厨房技术，在脸上体现就是我已经记不起嘉雯化妆之后的样子。管中窥豹，可以想见我和嘉雯天天都在做些啥。因为这个原因，2022年3个硬菜的目标算是超额完成，卤牛肉、卤蛋、炸鸡柳、糖醋排骨、葱油拌面、鱼汤、骨头汤，这些以前不会尝试的大菜也算是给隔离时光带来了些许挑战的乐趣。隔离在家的3个月也算是部分弥补了之前异地的4个月里我和嘉雯聚少离多的场面。每天低头不见抬头见的同居生活，似乎并没有让我俩觉得枯燥，反而过得有滋有味的，属实奇妙。</p>\n<p>待6月初接触禁足后，车还没骑过，2022业已过半。扑朔迷离的疫情形式和管控手势下，长途骑行和旅行也成了开盲盒。本来打算在国庆来一次上海到宁波的旅行，由于凯哥的婚礼被迫取消，2022也因此没了唯一的长途骑行机会。不过，能带着嘉雯参加我最好兄弟的婚礼，还是很棒的，基友也一同去了邵东。我和嘉雯还趁着机会见缝插针在长沙和杭州<a href=\"https://shenlvmeng.github.io/blog/2022/10/14/tour-to-changsha-and-hangzhou/\">玩了一圈</a>。这趟旅途也是意外满满，看来2022并不适合旅行。livehouse和旅行一样，因为疫情并未履行。饮酒频率在封控的上半年，作为苦中作乐的方式，一直保持不高不低的频率。在凯哥婚礼的晚上俩人喝high了导致吐个没完差点影响旅行后，一直戒酒至今。运动上，骑行和游泳的频率比去年有所下降，早睡早起也间歇性遵守。出外娱乐上，我俩还是以吃为主，但更多是熟悉的老店，可能是疫情让人变宅，探店的兴致也受到了影响。</p>\n<p>每年都会有新的兴趣，2022也不例外。疫情在家莫名其妙燃起了桌游的兴趣，通过视频了解了美式、德式各种桌游的风格，隔三差五屯起了桌游。一度每个周末要组织2场桌游局，快乐的同时感觉大脑和嗓门也得到了充分的锻炼。为此家里还专门置办了一个书柜，其中1&#x2F;3用来放我买回来的桌游。另外，我俩对于拼图的兴趣也让我们陆续买了3件2000片的大幅拼图，看着整幅画面从最开始的零散到逐渐完整，成就感满满。社交上，在那些桌游局中认识了不少嘉雯的朋友。中秋时候带嘉雯回了趟老家，相处得也很是愉快。因为老大哥尚在北京出差，去沈阳的计划没能成行。</p>\n<p>工作上，似乎和之前有了不一样的认识，在转换了工作角色和工作位置后，渐渐找到了新位置的感觉。虽然和之前在教育的时候很不一样，但也胜在踏实和轻松。尽管团队规模也不算大，但也在尝试之前没有做过的东西，且有一定的学习和产出，整体还是朝好的方向发展的。回头想想自己去年的定位，可能有点过于浮躁和眼高手低了。在公司的定位下，还不需要我有多高的管理技巧，而需要有这种技巧的位置，我是否真得准备好了呢？看看现在扮演这些角色的人，他们的一天是不是你想要过的呢？这么想完之后，我又觉得现在这样也挺好。作为一只下金蛋的鸡，能保持自己一直下出金蛋也不错。至于下一步的计划，不能心急，还要慢慢积累。去年说的脚踏实地的状态，大概就是我现在的态度。我觉得这不算躺平，也算是在付着应付的责任。</p>\n<p>时间来到12月，防疫政策陆续放松，情理之中又在意料之外，大家恢复自由身的同时，医疗和药物资源的挤兑也带来了一些困难。谢天谢地，在药品并不齐备的情况下，我和嘉雯的家人暂时扛过了第一波疫情高峰，成为了康。期待明年春暖花开之后，生活秩序恢复到疫情前的模样。</p>\n<h2 id=\"2022小结\"><a href=\"#2022小结\" class=\"headerlink\" title=\"2022小结\"></a>2022小结</h2><ul>\n<li>继续脚踏实地</li>\n<li>身体才是本钱</li>\n<li>只要方向是对的，好事就会不疾不徐地发生</li>\n<li>不要太“躺”，去做成一些事情，再小的也行</li>\n<li>两个人在一起久了之后，就成了命运共同体，很多事情要一同经历一同解决</li>\n<li>大脑像水车，书籍像水，只有不断往水车上浇水，才能保证大脑新鲜灵活</li>\n</ul>\n<h2 id=\"2023畅想\"><a href=\"#2023畅想\" class=\"headerlink\" title=\"2023畅想\"></a>2023畅想</h2><p>23年有些明确的路径，譬如求婚、领证、介绍双方父母认识，还有欠下的长途骑行和旅行等等。其他的就让它自然发生吧。</p>\n<ul>\n<li>家庭<ul>\n<li>接待父母来魔都1次</li>\n<li>回家看望家人1次</li>\n<li>求婚成功</li>\n<li>领证</li>\n</ul>\n</li>\n<li>个人<ul>\n<li>完成GEB的阅读</li>\n<li>为之后的身份转变体验积累知识</li>\n<li>升级对象的骑行体验</li>\n<li>控制体重在当前附近</li>\n<li>坚持骑行和游泳</li>\n</ul>\n</li>\n<li>生活<ul>\n<li>至少1次户外长途骑行</li>\n<li>至少1次旅行</li>\n<li>看一次livehouse</li>\n<li>继续保持探店的热情</li>\n</ul>\n</li>\n<li>事业<ul>\n<li>在划定方向上完成里程碑</li>\n<li>所在小方向上为团队每个成员确定定位</li>\n</ul>\n</li>\n</ul>\n<p>剩下的，就让它顺其自然吧。我们明年见。</p>\n<p>Bye~</p>\n",
            "tags": [
                "总结",
                "2022",
                "2023"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2022/10/14/tour-to-changsha-and-hangzhou/",
            "url": "http://shenlvmeng.github.com/blog/2022/10/14/tour-to-changsha-and-hangzhou/",
            "title": "长沙、杭州之行 —— 惊不惊喜、意不意外",
            "date_published": "2022-10-14T09:17:48.000Z",
            "content_html": "<blockquote>\n<p>后疫情时代，旅游消费也带上了运气成分，再没有“说走就走”般的潇洒</p>\n</blockquote>\n<h2 id=\"序：疫情\"><a href=\"#序：疫情\" class=\"headerlink\" title=\"序：疫情\"></a>序：疫情</h2><p>疫情管控下，旅行如同开盲盒。能去哪里玩耍并不由自己的财力喜好决定，也要仰仗病毒大人给面子。上海的病毒就格外不懂事，在打工人上班的工作日岁月静好，一临近节假日就格外来精神。中秋假期，和嘉雯就和病毒擦边而过，居家办公数日得以回家过节。这次国庆前也是提心吊胆，所幸所在区疫情未扩大，倒是一路辗转，核酸7天7检，在病毒边上跳舞。</p>\n<p>这次选定长沙主要是因为姚凯婚礼，我和圣僧也是一起放弃了长途骑行计划，来邵阳蹭蹭喜气。来都来了，就顺道去长沙看看，刚好嘉雯也没去过。</p>\n<h2 id=\"Day-1-婚礼\"><a href=\"#Day-1-婚礼\" class=\"headerlink\" title=\"Day 1 婚礼\"></a>Day 1 婚礼</h2><blockquote>\n<p>邵阳</p>\n</blockquote>\n<p>我们10月1日下午从上海南站出发，搭上前往邵阳的卧铺，嘉雯之前还未坐过卧铺，适应也挺快，躺床上一路晃晃悠悠，第二天一早便到了目的地。车窗外一片阳光普照，甚是美好。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw14P0.jpg\" alt=\"邵阳\"></p>\n<p>邵阳是个县级市，类似母亲老家枣阳的感觉。城市不大，尽管姚凯预定的酒店在城市的边缘，滴滴快车开了10多分钟就到了。在酒店大堂正巧碰到姚凯和伴郎在拍摄婚礼用的短片，人逢喜事，红光满面。我和嘉雯不便打扰人家的大喜之日，简单寒暄几句，住进了姚凯事先定好的房间。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw1oxU.jpg\" alt=\"酒店\"></p>\n<p>中午的婚礼现场很完美，主持人沉着冷静，凯哥表现可圈可点，整个流程也没有让人尬到脚趾扣地的情节，现场一片其乐融融，像是我未来的理想婚宴。婚宴过后，姚凯忙东忙西，我和嘉雯找了个号称邵东环境第一的网吧，吸了2个小时二手烟。屋内空调还坏了，老板一人发了根老冰棍想让我们冷静下来。</p>\n<p>在烟雾缭绕中拿到了首胜，做够了神仙，我们仓皇逃出，往市中心的百富广场走走。边走边走马观花地领略这里的风土民情。红绿灯对于这里的行人约束力并不强，大家秉承着实用主义至上的思路。路上无甚可逛，倒是见到了许多山寨品牌。晚上姚凯攒了个小局，可能是近2年不见，我俩喝得很尽兴，以至于我上头到夜里2点才睡下。</p>\n<h2 id=\"Day-2-美食\"><a href=\"#Day-2-美食\" class=\"headerlink\" title=\"Day 2 美食\"></a>Day 2 美食</h2><blockquote>\n<p>黄兴路、茶颜悦色、坡子街、南门口、电动车、东瓜山</p>\n</blockquote>\n<p>从邵阳去长沙的火车很早，一大早被嘉雯喊起来，胃里还是酒意，头脑天旋地转，脚如腾云驾雾，8点的火车，我在车上睡了一路，出站后又吃了个酒店楼下的<strong>杀猪粉</strong>，算是恢复了大半元气。杀猪粉里的胡椒粉放得很有诚意，一碗下来喉咙和胃里都是暖暖的。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw1I2T.jpg\" alt=\"杀猪粉\"></p>\n<p>来长沙的第一天，天气其实算是相当阳光明媚了。哦不，甚至是明媚得过了头，到了不打伞会晒伤的程度。也许是这个天气，又或许是郊区出现的零星病例，黄兴步行街上游客并没有想象中那么密集。作为长沙第一天的第一站，也是做好了敞开了胃吃一路的心里准备。这趟美食旅程从茶颜悦色自由开始。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw15GV.jpg\" alt=\"茶颜悦色-1\"></p>\n<p>长沙街头<strong>茶颜悦色</strong>的密度相当大，而这个相当大的极值恰在黄兴路步行街。本以为要排长队的奶茶店，在三步一茶颜的密度下，极大的提升了赏味体验。第一次我们尝试了幽兰拿铁和花木兰，风味果然名不虚传，恰逢活动两杯24，性价比拉满。坐在阴凉下抿一口，哈———，巴适。</p>\n<p><img src=\"/blog/\" alt=\"幽兰拿铁\"></p>\n<p>在等位中间，我们还尝试了大众点评推荐的刘记特色里脊肉，口感滑嫩，但口味偏咸，稍有些失望。中午我们顺道去了附近的<strong>德天顺盖码饭</strong>。招牌的孜然牛肉还有辣椒炒肉味道尚可，不过性价比略低。好好拍的话，应该还挺好出图。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw17MF.jpg\" alt=\"盖码饭\"></p>\n<p>吃完不像午饭的午饭，正赶上日头最毒辣的时候，在嘉雯的提醒下，<strong>臭豆腐</strong>是不可少的。我们顺道走到了坡子街，去了一家也是连锁店遍地的臭豆腐网红店，用了张优惠券买了个大份。俩人像砌墙一样，一人一块用臭豆腐砌到了嗓子眼。不得不说，从辣度上说，还是挺正宗的。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw1Hr4.jpg\" alt=\"臭豆腐\"></p>\n<p>既然吃了辣，解辣的奶茶自不能少，我俩浅排了个小队，坐在<strong>费大厨</strong>的门口，假装等号，享用着第二顿的茶颜悦色。栀子生椰就像涓涓细流，从墙砖的缝隙中滋润火热的胃。臭豆腐垒成的砖墙瞬间融化，胃口又找了回来。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw1bqJ.jpg\" alt=\"栀子生椰\"></p>\n<p>尽管已经不知道吃了多少，在坡子街走了走之后，我还能吃的壮志又回来了。路上遇到M记新品——红糖冰粉，入之。刚到长沙的这几个小时似乎一直在吃，但我发现不止是我，步行街上的人们也都化身饕餮。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw1LZ9.jpg\" alt=\"红糖冰粉\"></p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw1XI1.jpg\" alt=\"吃\"></p>\n<p>下午沿着步行街一路走到南门口，兜兜转转好不快活。不过直到第3天，我俩才发现步行街的地下一样精彩。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw1OaR.jpg\" alt=\"柠檬茶\"></p>\n<p>不知不觉，来到南门口的时候，时间已近5点，我俩在日头地下行色疲惫，想找个能歇歇脚吹吹空调的地方。秉承着光荣传统，我们骑着电动车去了网鱼网咖，并用充值体现我们对这家连锁企业的支持。</p>\n<p>嘉雯是第一次骑<strong>电动车</strong>，我虽是第二次，也比她强不少。只见她最开始慌慌张张，拒绝相信电动车有手就能骑比自行车还简单，没骑到几分钟后脸上就逐渐浮现出笑容。“啊，真香。”，我想她一定想这么喊出来。</p>\n<p>从网吧出来日头已经落下，我们要去寻找晚饭的觅食地点。才骑过一次电动车的嘉雯果断选择骑着去。骑电动车的简单快乐魔咒一定是她来长沙的最大收获。不过这可能也和养猫养狗一个道理，别人家的猫狗肯定比自己家的香，毕竟不用自己喂粮、洗澡、吸毛、铲屎就可以撸，只需办张6块钱的卡就能3次免费骑到不用自己充电的电动车，这也太爽了吧。看嘉雯掩饰不住的笑容就知道。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw1vPx.jpg\" alt=\"电动车\"></p>\n<p>拐到湘江中路后，便来到了风景最好的一段，虽然看不到江，但是一路晚风吹着，一边江边步道上不少市民游客漫步起舞，另一边高楼彩灯鳞次栉比迷乱人眼，这种不受约束自由的快乐可能正是旅行的一大意义吧。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw1xG6.jpg\" alt=\"高楼\"></p>\n<p>在意外发现<strong>馨砣粉店</strong>只有早上营业后，我们正巧赶上<strong>东瓜山</strong>夜市的时间，可能是晚上气温宜人，本就狭窄的东瓜山街头人头攒动，路边的摊位卖着酒酿汤圆、紫苏桃子、糖油坨坨，饭店多是烧烤，赤膊和半赤膊的人们流着汗翘着腿坐在长条板凳上，撸串碰杯，交谈混着叫号声满是喧闹。打开大众点评搜索，附近网红店，高分店不胜枚举，选择困难。不由得感慨，长沙这座城市，不论白天夜晚都是映入眼帘的小吃文化，不多带1个胃来，怕是得多带好多关于美食的遗憾离开。</p>\n<p>由于来的晚，加上对密集人群的天生厌恶，我俩并没有去朋友推荐的小龙虾店，将就选择了一家有空调的烧烤，对付着解决了晚饭的问题。下次要是再来，还是要赶早点，去那家<strong>天宝兄弟</strong>探探究竟。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw1zRK.jpg\" alt=\"东瓜山\"></p>\n<p>饭后，我们骑上电动车，沿着白沙路——韭菜园路一路直行回到酒店。路上还经过了<strong>天心阁</strong>。可惜时间有限，只是远远拍了张剪影。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3SxO.jpg\" alt=\"天心阁\"></p>\n<h2 id=\"Day-3-徒步\"><a href=\"#Day-3-徒步\" class=\"headerlink\" title=\"Day 3 徒步\"></a>Day 3 徒步</h2><blockquote>\n<p>糖油坨坨、橘子洲、岳麓山、冰箱贴</p>\n</blockquote>\n<p>由于前一夜空调不给力加上睡觉不踏实，早上起床就发觉有些感冒。想到晚上看到的望城区和天心区有病例，细思恐极。再加上西伯利亚远道而来的冷空气前锋已经来袭，天色阴沉了许多。实在是有点打扰游览的雅兴。洗漱过后，我们打起精神，先去太平街区转转。这里有点像宽敞版的南锣鼓巷，也许是疫情也许是天气，街头的人不多。我们叫了个糖油坨坨，垫了点肚子。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw39MD.jpg\" alt=\"糖油坨坨\"></p>\n<p>浅走了一段，在西牌楼的街上看到了传说中的<strong>公交新村粉店</strong>和<strong>笨罗卜湘菜</strong>。粉店环境一般，食客即吃即走，排队的人尚不算长，湘菜店则排好排到几百桌。我俩叫了雪里蕻牛肉粉，感觉不过如此，甚至不如酒店楼下的杀猪粉。考虑到价格10元出头，我们也没有太过抱怨。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3PqH.jpg\" alt=\"公交新村粉店\"></p>\n<p>吃饱喝足，我们沿湘江大桥走向橘子洲，恰如我7年前第一次来长沙那样。不同于那次8月底七月流火尚有暑热未散尽，此时桥面江风尽是萧瑟秋意，昨日的烈日高照完全不见了踪影。橘子洲角的绿树和江岸的高楼相互应和，我一边拍照一边握紧手机。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3Cse.jpg\" alt=\"湘江-1\"></p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3kdA.jpg\" alt=\"湘江-2\"></p>\n<p>沿着桥面的方向向对岸望去，岳麓山的曲线格外明显，那里正是我俩下午要去的地方。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3FZd.jpg\" alt=\"岳麓山\"></p>\n<p>在江中间下桥便到了橘子洲。下了桥看到核酸点排队人不多，为了保险，我们顺带做了个核酸（没想到第二天救了我们）。时间不充裕的情况下，想在橘子洲头看伟人头像和指点江山题字，小火车是必坐的，40元不限次数还算良心。只可惜头像周围的人实在太多，没有办法拍下我们仨的合影，我和嘉雯也不想和围栏边密密麻麻的人群一起凑热闹，只是坐在江滨的台阶上安静吹风。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3AII.jpg\" alt=\"头像\"></p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3Vit.jpg\" alt=\"广场\"></p>\n<p>坐太久不利于感冒康复，兴尽我俩又坐地铁来到湖南师大，准备吃个午饭再从岳麓书院方向爬<strong>岳麓山</strong>。没想到这里的人比昨天还要夸张，不禁感慨防疫的困难程度。最终花了1个小时终于拿到茶颜悦色和M记。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3ZJP.jpg\" alt=\"声声乌龙\"></p>\n<p>爬山的过程其实比想象中更快，依旧是从书院出口沿爱晚亭上山，依旧是走一段石板路走一段野路，欣慰的是嘉雯终于买到了心心念念的冰箱贴。山顶并不算高，也就200来米，铺设的柏油路上走满了游人。此时天色已不早，我俩赶在缆车卖票的最后时刻买到了下山的缆车，真是好险。单人下山只需25元，能坐10来分钟，还在俯瞰橘子洲、湘江两岸，性价比很高。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3eRf.jpg\" alt=\"缆车\"></p>\n<p>下了山已经是5点多了，天色渐暗，我们在虎头局吃了俩泡芙，也没有到处走走的念头，想着去网吧坐一会儿再去IFS逛逛，没想到因为胜率问题，还没拿到首胜就已经9点。屋外气温已不适合短袖出行，我俩干脆打道回府。</p>\n<h2 id=\"Day-4-意外\"><a href=\"#Day-4-意外\" class=\"headerlink\" title=\"Day 4 意外\"></a>Day 4 意外</h2><blockquote>\n<p>黄码、绿码、IFS</p>\n</blockquote>\n<p>早上起床，感冒没有好转，天气却进一步入冬，窗外下起了小雨，气温更低了。等来到地铁站准备前往五一广场时，发现健康码居然变黄了，这也是疫情这几天，健康码第一次变黄。想到最近3天也有2次核酸阴性，应该可以申诉转绿，于是回到酒店向所在社区报备，工作人员说可以再做一次核酸就可以变回来。我们便前往最近的核酸监测点做核酸，结果黄码的检测队伍已经排满了，只能去湖南第二人民医院去做。从队伍里的人聊天的内容看，健康码突然变黄的游客似乎并不少。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3uQS.jpg\" alt=\"黄码\"></p>\n<p>我们打了个车去往下一个核酸点，还好也就10分钟车程，令人哭笑不得的是，车还没到码就神奇地又变绿了。为了保险起见，我们还是打算做一次，正排着绿码核酸的队伍，健康码又变黄了。只能再去黄码队伍里排着，寒风里像我们这样排队的人并不少，也有挺多黄了又绿绿了又黄的。在网上搜了下黄码申诉的渠道，结果电话到最后都没有打通过。只能被迫下载极为难用的app，也不顾忌个人信息的安全问题，做了黄码专属核酸，填了申诉表单；填完也看不到申诉进度，只能祈祷黄码能早点转绿。在微博上搜了下#长沙 黄码#关键词，不出意外，受害者颇多，甚至也有当地人前来吐槽。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3MLQ.jpg\" alt=\"申诉\"></p>\n<p>做完核酸也到了午饭的时间，户外实在太冷，也没有心情和健康码前往五一广场吃湘菜，只能就地在马路对面的巡湘记解决。期间又经历了一次黄转绿转黄。而我已风轻云淡，伴随着黄码和因感冒失灵的鼻子，这顿饭吃得并不算香。不过，其中的豌豆还是相当不错。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3mz8.jpg\" alt=\"豌豆\"></p>\n<p>饭后码依旧是黄的，参考小上的经验，我们去韭菜园社区线下申诉，幸运的是因为做了3天两检，我们的情况可以通过填表申诉解决，欣然配合后社区提交疾控中心，说2个小时内解决。在码转绿之前也没有商场能容下我们，我俩只能再次光临网鱼网咖。由于抵达时间过早，码还没有变绿网吧小哥还收到了社区电话，结果等我俩打车准备回酒店的时候，码突然好了。在给网吧小哥解释后，我们在这里战斗了一个下午。</p>\n<p>晚饭时间，我们打车去了最后的目的地IFS，享用了最后的茶颜悦色，以一顿不辣的湘菜结束了第三天。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3Ksg.jpg\" alt=\"茶颜.jpg\"></p>\n<h2 id=\"Day-5-宅\"><a href=\"#Day-5-宅\" class=\"headerlink\" title=\"Day 5 宅\"></a>Day 5 宅</h2><blockquote>\n<p>杭州</p>\n</blockquote>\n<p>绿码坚强地坚持到了这一天一早，我们6点不到便启程前往长沙南车站，一路和满口湘普的滴滴司机交谈甚欢。经过4个小时车程，我俩成功“逃离”长沙，来了杭州。杭州东站的检疫措施一点不输长沙，偌大的站厅被划成迷宫，好在核酸效率很高，只用了10多分钟我们就坐上了去江边的地铁。</p>\n<p>杭州也是阴雨连绵，我们满心期待预定的江景房风景也打了折扣，江面和对岸的群山如同被盖上了薄纱。我俩感冒没好，也没有心情冒着雨去西湖散步，叫了个外卖奶茶吃饱喝足便回到床上躺下。嗯……果然还是茶颜悦色更胜一筹。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3lZj.jpg\" alt=\"江景\"></p>\n<p>晚上我们去附近的一家泰式餐厅南妈stay解决了晚饭，性价比还是不错的。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw31ds.jpg\" alt=\"南妈stay\"></p>\n<h2 id=\"Day-6-返程\"><a href=\"#Day-6-返程\" class=\"headerlink\" title=\"Day 6 返程\"></a>Day 6 返程</h2><p>旅程的最后一天，我们睡到12点才出发，雨还在淅淅沥沥下着，雾倒是消散了些，旅行的兴致已经没剩多少。商城里的点都德还是熟悉的味道，各种点心和在上海还有广州尝到的区别不大。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw3Giq.jpg\" alt=\"点都德\"></p>\n<p>饭后再商场里闲逛，发现居然有KTV，价格还算公道，于是在中包里度过了愉快的一个下午，唱到了许多许久未唱的老歌。</p>\n<p><img src=\"https://s1.ax1x.com/2022/10/14/xw33on.jpg\" alt=\"KTV\"></p>\n<p>从商场出来，时间也不早了，我们打着伞，拖着拉杆箱，坐地铁来到杭州站。晚上9点多久回到了上海，还是熟悉的上海南站。补做了车站的核酸，顺利回了家，结束了这次惊喜意外的国庆旅程。</p>\n<p>尽管和去年相比，因为核酸和天气多了意外，但也是我和嘉雯的第一次一起出发一起回家，期待下一次出发。坏天气总会过去，坏运气也是。</p>\n",
            "tags": [
                "随笔",
                "长沙",
                "杭州",
                "湖南",
                "核酸",
                "美食"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2022/08/25/all-about-code-2/",
            "url": "http://shenlvmeng.github.com/blog/2022/08/25/all-about-code-2/",
            "title": "关于编码的一切 ——《代码大全》 下",
            "date_published": "2022-08-25T14:37:19.000Z",
            "content_html": "<blockquote>\n<p>文接<a href=\"https://shenlvmeng.github.io/blog/2022/03/03/all-about-code/\">关于编码的一切 ——《代码大全》 下</a></p>\n</blockquote>\n<h2 id=\"软件质量\"><a href=\"#软件质量\" class=\"headerlink\" title=\"软件质量\"></a>软件质量</h2><p>在了解最基本的变量和语句组织后，这一部分围绕提高软件质量展开。</p>\n<h3 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h3><p>软件的外在质量特性体现在：</p>\n<ul>\n<li>正确性</li>\n<li>可用性</li>\n<li>效率</li>\n<li>可靠性</li>\n<li>健壮性</li>\n<li>适应性</li>\n<li>完整性</li>\n<li>精确性</li>\n</ul>\n<p>内在质量特性体现在：</p>\n<ul>\n<li>可维护性</li>\n<li>可扩展性</li>\n<li>可移植性</li>\n<li>可读性</li>\n<li>可测试性</li>\n<li>可理解性</li>\n</ul>\n<p>而改善软件质量可以有很多技术：</p>\n<ul>\n<li>确定目标</li>\n<li>测试策略</li>\n<li>非正式走查</li>\n<li>正式技术复查</li>\n<li>外部审查</li>\n</ul>\n<p>开发过程中可以通过量化结果、制作原型、控制变更等手段提升质量。</p>\n<ul>\n<li>不同的质量保障手段效率各不相同，多种缺陷检测办法结合、人工和计算机检测结合，效果会比单打独斗要好；然而没有任何一种错误检测办法可以解决全部问题</li>\n<li>越早引入软件的问题，修正代价越大，尽早开始代码质量保障工作</li>\n<li>需求或架构上的错误相比编码阶段会带来更广泛的影响</li>\n<li>改善质量可以降低开发成本</li>\n</ul>\n<h3 id=\"协同构建\"><a href=\"#协同构建\" class=\"headerlink\" title=\"协同构建\"></a>协同构建</h3><p>协同构建即在同行的帮助下完成代码构建。方式包括但不限于结对编程、正式检查、非正式技术复查、文档阅读等等。<strong>结对编程</strong>和<strong>技术性复查</strong>可以缩短开发周期，排查出更多错误，减少代码的维护时间。同时，同行间的协同构建也有助于快速提升公司开发者的开发水平。</p>\n<ul>\n<li>结对编程<ul>\n<li>结对编程中，一名程序员敲代码，另外一名注意有没有出现错误，以及考虑策略性问题</li>\n<li>成功秘诀<ul>\n<li>事先确定编程规范，避免琐碎争吵</li>\n<li>不编程的成员不能变成旁观者</li>\n<li>不需要在简单问题上使用结对编程</li>\n<li>灵活对结对成员轮换，让大家熟悉不同系统</li>\n<li>避免新手组队</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>正式检查<ul>\n<li>一种特殊的复查，与会主持人负责组织事宜，按计划、概述、准备、与会人（非作者）阐述代码、详查报告、跟进等步骤推进</li>\n<li>针对代码而非作者</li>\n<li>最终由作者负责如何处理缺陷</li>\n</ul>\n</li>\n<li>走查<ul>\n<li>走查是形式和流程都比较宽松的代码复查方式，时间较短，重点也在检查错误而非修正它们</li>\n</ul>\n</li>\n<li>代码阅读<ul>\n<li>类似Code Review，关注点主要在代码本身，而非会议</li>\n</ul>\n</li>\n<li>公开演示：类似showcase</li>\n</ul>\n<h3 id=\"开发者测试\"><a href=\"#开发者测试\" class=\"headerlink\" title=\"开发者测试\"></a>开发者测试</h3><p>测试分单元测试、组件测试、集成测试、回归测试、系统测试，前两部分通常由开发者进行，后三部分由专门的测试人员进行。测试按是否了解测试对象内部工作原理也可以分为黑盒测试和白盒测试。最后要注意，<strong>测试 ≠ 调试</strong>。</p>\n<p>对于开发者而言，测试天生有些特别：</p>\n<ul>\n<li>测试的目标是找出错误而非实现功能</li>\n<li>测试绝不可能彻底证明程序里没有错误</li>\n<li>测试无法改善软件质量，它本身只是一个指示器</li>\n</ul>\n<p>开发者测试在整个项目时间中大概占8% - 25%，在测试时有一些tips：</p>\n<ul>\n<li>写代码前先写测试用例，不会比后写多花功夫</li>\n<li>不止进行“干净测试”，也要考虑“肮脏测试”</li>\n<li>很容易对测试覆盖率过度乐观</li>\n</ul>\n<p>在现实世界中，要穷尽所有可能的输入是不可能的，<strong>测试不可能完全</strong>，有些方法会起到作用：</p>\n<ul>\n<li>使用<strong>路径数</strong>计算计算用例的<strong>最少</strong>数目，它可以保证所有代码的执行<ul>\n<li>通过子程序时，开始记1</li>\n<li>遇到<code>if</code>、<code>while</code>、<code>repeat</code>、<code>for</code>、<code>and</code>、<code>or</code>或等价物时，+1</li>\n<li>遇到每一个<code>case</code>语句，+1；没有缺省分支时，再+1</li>\n</ul>\n</li>\n<li><strong>数据流测试</strong>可以覆盖到数据的变化情况<ul>\n<li>数据有<strong>已定义</strong>、<strong>已使用</strong>、<strong>已销毁</strong>状态</li>\n<li>子程序控制流有<strong>已进入</strong>、<strong>已退出</strong>状态</li>\n<li>测试所有的<strong>已定义</strong>、<strong>已定义-已使用</strong>组合，注意其他的组合顺序</li>\n</ul>\n</li>\n<li>一个好的测试用例可以覆盖可数据数据的一大部分</li>\n<li>用启发式方法去<strong>猜测错误</strong></li>\n<li>留意<strong>边界值</strong>，如数组边界的off-by-one错误</li>\n<li>考察<strong>好数据</strong>和<strong>坏数据</strong><ul>\n<li>好数据：期望输入、最小正常值、最大正常值、旧数据兼容性</li>\n<li>坏数据：没有数据、过多数据、无效数据、长度错误、未初始化</li>\n</ul>\n</li>\n<li>使用容易验证结果的测试数据</li>\n</ul>\n<p>关于错误，也有一些先验的规律：</p>\n<ul>\n<li>符合八二法则、<strong>绝大多数错误通常和几个具有严重缺陷的子程序有关</strong></li>\n<li>大多数错误影响范围有限</li>\n<li>大多数构建错误来自编程人员的错误，多从自身想问题</li>\n<li>笔误是一个常见的问题根源</li>\n<li>错误理解需求也是常见原因</li>\n<li>大多数的错误都较易修正</li>\n<li>业界经验是，平均1000行代码发现1-25个错误，发布产品大概是1000行代码0.5个，</li>\n<li>同样留意，测试用例本身是否有误</li>\n</ul>\n<p>在当前的编程环境和工作条件下，容易找到很多测试框架，它们会包含脚手架、diff工具、测试数据生成器、覆盖率监测、日志记录、系统干扰器等。另外，自动化测试、测试问题复盘等对测试质量也有提升帮助。</p>\n<h3 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h3><p>调试（debug）是寻找错误根本原因和纠正错误的过程。它和测试一样，本身不是提升代码质量的方法，而是诊断代码缺陷的手段。</p>\n<ul>\n<li>调试の误区<ul>\n<li>纯靠猜测找到问题所在</li>\n<li>不去花时间理解程序和问题</li>\n<li>暂时性的掩盖问题</li>\n<li>把问题推给硬件，而不思考是不是出在自己身上</li>\n</ul>\n</li>\n<li>寻找缺陷的步骤<ul>\n<li>让错误状态稳定下来 &#x3D;&gt; 稳定复现</li>\n<li>收集相关数据，构造错误原因假说</li>\n<li>通过测试或检查代码证实或证伪假说</li>\n</ul>\n</li>\n<li>一个无法稳定重现的问题，可能和初始化或和时间有关系</li>\n<li>寻找缺陷的tips<ul>\n<li>构建缺陷假说时，要能合理解释所有测试用例</li>\n<li>定位缺陷困难时，及时补充更多的测试用例复现问题，用<strong>多视图</strong>的方式盲人摸象定位缺陷</li>\n<li>测试用例过于发散时，及时用用例否定一些假说</li>\n<li><strong>二分法</strong>缩小嫌疑范围</li>\n<li>检查<strong>最近修改</strong>或<strong>最近出过错</strong>的代码</li>\n<li>小黄鸭调试法</li>\n<li>暂时休息一下</li>\n<li>蛮力调试<ul>\n<li>抛弃有问题的代码，从头设计和编码</li>\n<li>抛弃整个程序，从头开始设计和编码</li>\n<li>不放过任何一个编译器错误</li>\n<li>手动遍历所有的循环</li>\n<li>更换编译环境或比那一起</li>\n<li>持续自动化测试</li>\n<li>显示代码中所有的打印日志信息</li>\n</ul>\n</li>\n<li>给启发式调试法一个deadline</li>\n<li>调试中避免心理惯性：人们总期望一个新现象类似他们见过的某种现象</li>\n</ul>\n</li>\n<li>修正缺陷<ul>\n<li>修正问题前确保已经很好地理解了</li>\n<li>理解程序而不仅是问题</li>\n<li>验证对错误的分析或理解</li>\n<li>保留最初的源代码</li>\n<li>治本，而不要治标</li>\n<li>一次只改一个地方</li>\n<li>搜寻代码中还有没有类似的缺陷</li>\n</ul>\n</li>\n<li>调试工具<ul>\n<li>源代码diff</li>\n<li>编译警告信息</li>\n<li>lint和代码自动修正</li>\n<li>性能剖测（profile）</li>\n<li>测试脚手架</li>\n<li>调试器</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"重构\"><a href=\"#重构\" class=\"headerlink\" title=\"重构\"></a>重构</h3><blockquote>\n<p>更多重构介绍可以参考这篇blog<a href=\"https://shenlvmeng.github.io/blog/2020/08/17/refactoring-design-improvement/\">重构 —— 代码的实用性与艺术性</a></p>\n</blockquote>\n<p>重构即在<strong>不改变软件外部行为的基础上，改变其内部结构</strong>。即便是管理完善的项目，每个月都会发生需求变化，稳定不变的需求是个童话。</p>\n<p>代码出现以下“坏味道”（smell）时，代表需要重构了。</p>\n<ul>\n<li>代码重复</li>\n<li>子程序冗长</li>\n<li>嵌套过深</li>\n<li>内聚性差</li>\n<li>参数列表过长</li>\n<li>类和继承关系不合理</li>\n<li>基本数据类型过多</li>\n<li>“流浪数据”传递</li>\n<li>无所事事的类</li>\n<li>命名不当</li>\n<li>难理解的注释</li>\n<li>全局变量</li>\n<li>子程序需要前置或后置处理</li>\n<li>过早设计或过度设计</li>\n<li>…</li>\n</ul>\n<p>重构分级别有下面一些手段</p>\n<ul>\n<li>数据级<ul>\n<li>具名常量</li>\n<li>更可读的变量</li>\n<li>函数替代表达式</li>\n<li>中间变量</li>\n<li>减少重复使用变量</li>\n<li>类型码转成类或枚举类型</li>\n<li>类封装</li>\n</ul>\n</li>\n<li>语句级<ul>\n<li>分解布尔表达式</li>\n<li>用可读名字的布尔函数替代布尔表达式</li>\n<li>合并条件语句中的重复代码片段</li>\n<li><code>break</code>或<code>return</code>替代循环控制变量</li>\n<li>多态替换条件语句</li>\n<li>null对象替代空值检测</li>\n</ul>\n</li>\n<li>子程序<ul>\n<li>内莲花</li>\n<li>提炼子程序</li>\n<li>转化为类</li>\n<li>增&#x2F;删参数</li>\n<li>合并&#x2F;拆分子程序</li>\n<li>读写操作分离</li>\n<li>传递成员&#x2F;类</li>\n</ul>\n</li>\n<li>类实现<ul>\n<li>值&#x2F;引用对象转化</li>\n<li>成员函数&#x2F;成员数据位置移动</li>\n<li>相似代码提炼到基类</li>\n<li>差异代码拆分到派生类</li>\n</ul>\n</li>\n<li>类接口<ul>\n<li>类拆分&#x2F;合并</li>\n<li>删除类</li>\n<li>去掉中间人</li>\n<li>继承替代委托</li>\n<li>委托替代继承</li>\n<li>引入外部成员函数</li>\n<li>引入扩展类</li>\n<li>封装不使用的成员函数</li>\n</ul>\n</li>\n<li>系统级<ul>\n<li>为无法控制的数据创建索引源</li>\n<li>工厂模式</li>\n<li>异常&#x2F;错误处理代码选型</li>\n</ul>\n</li>\n</ul>\n<p>要想让重构不影响日常功能开发，需要考虑</p>\n<ul>\n<li>有一个代码版本管理工具</li>\n<li>重构步伐小一点</li>\n<li>同一时间只做一个重构</li>\n<li><strong>重新测试</strong></li>\n<li>增加测试用例</li>\n<li>检查代码更改</li>\n<li>根据重构风险选择重构方法</li>\n<li>不要把重构当成糟糕设计的挡箭牌</li>\n<li>避免用重构代替重写</li>\n</ul>\n<p>重构可以在修改代码的时候进行，不论是增加修改子程序还是类，或者是修复缺陷。对于从未重构的糟糕代码，可以用一部分混乱的代码隔离复杂度，把理想规整的代码和混乱不堪的真实世界隔离开。</p>\n<h3 id=\"代码调整策略\"><a href=\"#代码调整策略\" class=\"headerlink\" title=\"代码调整策略\"></a>代码调整策略</h3><p>代码调整指出于<strong>性能</strong>考虑，对代码进行实现上的调整。本章主要讨论策略。</p>\n<ul>\n<li>动手前的考虑<ul>\n<li><strong>性能≠代码速度</strong></li>\n<li>想清楚你确实在解决一个需要解决的问题</li>\n</ul>\n</li>\n<li>调整考量<ul>\n<li>程序设计：设计架构时考虑整体性能，再为每个子系统、类设计要达到的资源占用目标</li>\n<li>和操作系统的交互</li>\n<li>代码编译</li>\n<li>硬件</li>\n<li>类和子程序设计</li>\n<li>代码调整</li>\n</ul>\n</li>\n<li>帕累托法则，又称八二法则，程序中20%的子程序耗费了80%的执行时间</li>\n<li>一些<strong>错误认知</strong><ul>\n<li>减少代码行数就可以减少资源占用</li>\n<li>特定的写法会比其他的更快，代码也会更小（<em>要看编译环境</em>）</li>\n<li>应当随时随地优化（<em>不成熟的优化不如不优化</em>）</li>\n<li>运行速度和正确性同样重要</li>\n</ul>\n</li>\n<li>先提升代码可维护性，在程序完成且表现正确后，再去提升系统性能</li>\n<li>常见的低效率来源<ul>\n<li>IO操作</li>\n<li>内存分页</li>\n<li>系统API调用</li>\n<li>脚本语言</li>\n</ul>\n</li>\n<li>性能测量：没有准确的性能测量就不要去做优化</li>\n<li>代码调整需要反复尝试，才能达到理想的性能提高</li>\n</ul>\n<h3 id=\"代码调整技术\"><a href=\"#代码调整技术\" class=\"headerlink\" title=\"代码调整技术\"></a>代码调整技术</h3><p>文接上章，本章讨论具体调整手段。</p>\n<ul>\n<li>代码调整和重构相反，大多数情况下是以牺牲程序可读性为代价换取更高的性能</li>\n<li>调整手段<ul>\n<li>逻辑<ul>\n<li>知道答案后停止判断</li>\n<li>按照出现频率调整判断顺序，把容易为真的判断放在最前面</li>\n<li>表驱动法代替复杂表达式</li>\n<li>惰性求值</li>\n</ul>\n</li>\n<li>循环<ul>\n<li>把判断提出循环体</li>\n<li>展开小循环</li>\n<li>合并循环</li>\n<li>减少循环体内的操作</li>\n<li>用哨兵值提前结束循环</li>\n<li>把最忙的循环放在最内侧</li>\n<li>用低强度的计算代替高强度计算，如加法替代乘法，乘法代替幂运算</li>\n</ul>\n</li>\n<li>数据<ul>\n<li>使用整型而非浮点数</li>\n<li>减少数组维度</li>\n<li>使用辅助索引</li>\n<li>使用缓存</li>\n</ul>\n</li>\n<li>表达式<ul>\n<li>利用恒等式简化代码复杂度</li>\n<li>削弱计算强度</li>\n<li>编译期初始化</li>\n<li>小心系统函数，为了兼容最糟情况，系统函数会比较复杂</li>\n<li>事先算出结果</li>\n<li>删除公共表达式</li>\n</ul>\n</li>\n<li>子程序<ul>\n<li>子程序改为内联</li>\n</ul>\n</li>\n<li>用低级语言重写</li>\n</ul>\n</li>\n<li>再次强调，<strong>没有性能优化测量就没有代码调整</strong></li>\n</ul>\n<h2 id=\"系统考虑\"><a href=\"#系统考虑\" class=\"headerlink\" title=\"系统考虑\"></a>系统考虑</h2><p>这一部分站在系统的角度考虑构建过程中的程序规模、集成、工具等问题。</p>\n<h3 id=\"程序规模带来的影响\"><a href=\"#程序规模带来的影响\" class=\"headerlink\" title=\"程序规模带来的影响\"></a>程序规模带来的影响</h3><p>软件规模的扩大可能会为你带来意料之外的大量问题。</p>\n<ul>\n<li>如果你习惯于开发小项目，那么你的第一个大型项目很可能会严重失控</li>\n<li><strong>沟通交流</strong>：项目成员的扩大带来的交流路径不是加性的，是<strong>乘性</strong>的</li>\n<li><strong>错误</strong>：项目规模的扩大也会带来更高的缺陷密度</li>\n<li><strong>生产率</strong>：大项目会带来更低的生产率</li>\n<li><strong>工作量</strong>：软件构建的工作量和项目大小是线性关系，而其他活动的工作量则是非线性增加</li>\n<li>不同规模的代码从小到大可以称作程序、产品、系统、系统产品，没能意识到它们间的不同也是估算偏差的出现来源</li>\n<li>项目越正规，就越重视<strong>方法论</strong>，不得不写的文档也会更多，撰写的文档也会更正规</li>\n</ul>\n<h3 id=\"构建管理\"><a href=\"#构建管理\" class=\"headerlink\" title=\"构建管理\"></a>构建管理</h3><p>构建管理是软件管理中的一部分。</p>\n<ul>\n<li>鼓励良好的编程实践<ul>\n<li>逐行复查</li>\n<li>代码签名</li>\n<li>鼓励最佳实践</li>\n</ul>\n</li>\n<li>配置管理：系统化定义项目工件和处理流程<ul>\n<li>需求和设计变更<ul>\n<li>遵循系统化的变更手续</li>\n<li>成组变更</li>\n<li>评估变更成本</li>\n<li>坏味道：频繁大量变更</li>\n</ul>\n</li>\n<li>软件变更：版本控制软件</li>\n<li>机器配置变更：机器镜像</li>\n</ul>\n</li>\n<li>评估构建进度表<ul>\n<li>评估项目规模和工作量是软件项目管理中最具挑战性的部分，平均水平的大型软件都要超时1年，超预算100%才能完成</li>\n<li>清楚说明软件需求</li>\n<li>使用不同方法评估再对比</li>\n<li>定期更新评估</li>\n<li>以下因素会影响软件开发进度，但不易被量化<ul>\n<li>开发者的经验和能力</li>\n<li>团队的动力</li>\n<li>管理质量</li>\n<li>可重用的代码数目</li>\n<li>人员流动性</li>\n<li>需求变更</li>\n<li>文档量</li>\n<li>分级安全环境</li>\n</ul>\n</li>\n<li>如果进度落后了要怎么办<ul>\n<li>扩充团队在<strong>项目任务不能分割并一一击破</strong>时，只会增加项目交流复杂度，并加速项目延期</li>\n<li>缩减项目范围，有限保证核心功能</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>度量：对项目特征进行度量可以评估项目进度和风险，当然保证ddl比收集度量数据更重要</li>\n<li>把程序员当人看<ul>\n<li>程序员1天大概有30%时间花费在“对项目没有直接好处”的非技术活动中</li>\n<li><strong>不同程序员间的努力和能力差异很大</strong>，不同团队在软件质量和生产率的差异上也很大，好的和坏的程序员都倾向于聚集在一起</li>\n<li>在代码风格的信仰问题上，使用“建议”或大多数人达成统一的指导规范</li>\n<li>优良的物理工作环境有助于提升程序员的生产率和生产质量</li>\n</ul>\n</li>\n<li>管理你的管理者：向上管理</li>\n</ul>\n<h3 id=\"集成\"><a href=\"#集成\" class=\"headerlink\" title=\"集成\"></a>集成</h3><p>集成方式也会影响到集成的质量。从频率上分，有<strong>阶段式集成</strong>和<strong>增量集成</strong>，在阶段式集成中，分为单元开发和系统集成两个阶段。增量集成中，程序是一点一点写出来并一点点拼接起来的。对比阶段式集成，增量集成有下面一些好处：</p>\n<ul>\n<li>易于定位错误</li>\n<li>更早在项目中取得系统级结果</li>\n<li>对项目结果更好的监控</li>\n<li>能在更短的开发计划中建造出整个系统</li>\n</ul>\n<p>而增量集成有下面一些常见策略：</p>\n<ul>\n<li><strong>自顶向下集成</strong>：先集成系统设计，再集成具体实现；优点是能更早有整个系统的大局观，缺点是在前期会加入很多底层的mock代码，且将调试过程推迟到项目后期</li>\n<li><strong>自底向上集成</strong>：和自顶向下相反，优点是很容易定位错误，缺点是丧失全局的认识，系统设计的问题在后期修改成本较高</li>\n<li><strong>三明治集成</strong>：先集成顶部的高层业务对象和底部的基础工具类，再集成中间层代码，整合了自顶向下和自底向上</li>\n<li><strong>风险导向的集成</strong>：鉴别不同类的风险级别，先集成风险高的</li>\n<li><strong>功能导向的集成</strong>：一次集成一组功能，它基本上不需要脚手架，且每次集成都能增强系统的功能性，且和面向对象设计比较好协同工作</li>\n<li><strong>T型集成</strong>：在集成高层对象后，先选中某个特定功能块，完成一次所有类的集成，这样可以作为MVP演练整个系统</li>\n</ul>\n<p>结合<strong>冒烟测试</strong>的“<strong>每日构建</strong>”（daily build）是软件集成的一种最佳实践。它能让产品每天都有进步，且让项目保持一个固定的脉搏。做好daily build，有下面一些建议</p>\n<ul>\n<li>不放过失败的build，保证每次build都能通过冒烟测试</li>\n<li>每天进行冒烟测试</li>\n<li>冒烟测试需要和代码一样“与时俱进”</li>\n<li>让daily build和冒烟测试<strong>自动化</strong></li>\n<li>要求开发人员构建前进行冒烟测试</li>\n<li>将修订保持合适的合并节奏，不要太密，也不要太疏</li>\n<li>在早上发布build，给潜在问题留下修复时间</li>\n<li>顶住需求压力，保证daily build和冒烟测试</li>\n</ul>\n<p>在daily build的基础上，可以很轻易地做到1日多次的<strong>持续集成</strong>。</p>\n<h3 id=\"编程工具\"><a href=\"#编程工具\" class=\"headerlink\" title=\"编程工具\"></a>编程工具</h3><blockquote>\n<p>工欲善其事，必先利其器</p>\n</blockquote>\n<p>现代化的编程环境下，有很多可以采用的编程工具：</p>\n<ul>\n<li>设计工具</li>\n<li>源代码工具<ul>\n<li>IDE</li>\n<li>文本替换工具</li>\n<li>diff工具</li>\n<li>merge工具</li>\n<li>源代码美化器</li>\n<li>接口文档生成</li>\n<li>代码模板&#x2F;代码生成</li>\n<li>命令行</li>\n<li>代码质量分析<ul>\n<li>linter</li>\n<li>metrics报告</li>\n</ul>\n</li>\n<li>重构代码<ul>\n<li>重构器</li>\n<li>代码翻译器</li>\n</ul>\n</li>\n<li>版本控制工具</li>\n<li>数据字典</li>\n</ul>\n</li>\n<li>可执行码工具<ul>\n<li>目标码生成<ul>\n<li>编译器、链接器</li>\n<li>build工具，如make、ant</li>\n</ul>\n</li>\n<li>程序库&#x2F;第三方库</li>\n<li>代码生成向导</li>\n<li>安装指引</li>\n</ul>\n</li>\n<li>调试</li>\n<li>测试</li>\n<li>代码调整<ul>\n<li>性能剖测</li>\n<li>汇编和反汇编</li>\n</ul>\n</li>\n</ul>\n<p>在Unix这样的工具导向环境下就更容易孕育编程工具，如grep、diff、sort、make、tar、line、sed、awk、vi等。几乎所有的大型组织都有自己的内部工具和支持团队，不少比市面上的还要优秀。针对特定项目，有时候也会开发特定的项目工具，如航天、保险、医疗等。对于个人开发，也可以使用脚本这种自动执行重复性杂务的工具。</p>\n<p>最后要澄清一个事实，<strong>编程工具并不能消灭人在编程里的核心地位</strong>，只是不断<strong>重塑</strong>（reshape）编程的含义。连接到其他软硬件的复杂接口，规章制度、业务规则这些计算机编程之外的复杂之源还是要人来应对。而被用来填补真实世界和解决问题的计算机之间鸿沟的人，被称作程序员。</p>\n<h2 id=\"软件工艺\"><a href=\"#软件工艺\" class=\"headerlink\" title=\"软件工艺\"></a>软件工艺</h2><p>编程是硬件与艺术的融合体，软件工艺是编程美学的一种体现。</p>\n<h3 id=\"布局与风格\"><a href=\"#布局与风格\" class=\"headerlink\" title=\"布局与风格\"></a>布局与风格</h3><p>编排出色的代码会带来<strong>视觉</strong>上和<strong>思维</strong>上的愉悦。</p>\n<ul>\n<li>基本原则<ul>\n<li>好的布局可以凸显程序的逻辑结构，也更符合人类直觉</li>\n<li><strong>傻子都会写计算机理解的代码，而优秀程序员写的是人能看懂的代码</strong></li>\n<li>高手的机型并非天生优于新手，而是高手具备某种知识结构，这种结构有助于高手记住特定类型的信息；因此当信息符合这些结构时，就可以被轻易的理解</li>\n<li>布局非信仰，要保持头脑开放，接受已被证实更好的方法</li>\n</ul>\n</li>\n<li>布局技术<ul>\n<li><strong>空白</strong><ul>\n<li>分组</li>\n<li>空行</li>\n<li>缩进</li>\n</ul>\n</li>\n<li>括号</li>\n</ul>\n</li>\n<li>布局风格：同一层级的语句缩进相同<ul>\n<li>纯块结构</li>\n<li>模仿块结构</li>\n<li>花括号指定边界</li>\n<li>行尾布局（不推荐）</li>\n</ul>\n</li>\n<li>控制结构布局<ul>\n<li>段落间的空行</li>\n<li>复杂的表达式拆分条件到多行</li>\n<li>不用<code>goto</code></li>\n</ul>\n</li>\n<li>单行语句布局<ul>\n<li>控制长度</li>\n<li>使用空格</li>\n<li>后续行缩进统一</li>\n<li>后续行结尾统一</li>\n<li><strong>一行一条语句</strong><ul>\n<li>减少复杂度</li>\n<li>读代码仅需自上而下</li>\n<li>不要在单行中多个操作</li>\n</ul>\n</li>\n<li>一行一个声明</li>\n</ul>\n</li>\n<li>注释风格<ul>\n<li>缩进和代码一致</li>\n<li>用空行和代码隔开</li>\n</ul>\n</li>\n<li>子程序布局<ul>\n<li>空行分段</li>\n<li>参数按标准缩进</li>\n</ul>\n</li>\n<li>类布局<ul>\n<li>头部注释 -&gt; 构造函数&#x2F;析构函数 -&gt; public子程序 -&gt; protected子程序 -&gt; private子程序和成员</li>\n<li>文件布局<ul>\n<li>一个文件一个类</li>\n<li>文件命名和类有关</li>\n<li>在文件中清晰分隔各子程序</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"自说明代码\"><a href=\"#自说明代码\" class=\"headerlink\" title=\"自说明代码\"></a>自说明代码</h3><p>本节专注于文档的特殊补充形式，即“注释”。</p>\n<ul>\n<li>在代码中起主要作用的并非注释，而是<strong>好的编程风格</strong></li>\n<li>注释的哲学<ul>\n<li>注释能提供更高层级的抽象</li>\n<li>重复注释根本没用</li>\n<li>注释写的不合适只会起反作用</li>\n</ul>\n</li>\n<li>注释类别：在代码完工后，只允许出现后三种<ul>\n<li>重复代码（Bad case）</li>\n<li>解释代码：当代码过于复杂到需要解释时，最好是改进代码，而不是添加注释</li>\n<li>代码标记，如<code>TODO</code>，<code>FIXME</code></li>\n<li>概述代码</li>\n<li>意图说明</li>\n<li>传达代码以外的信息，如版权声明、保密要求</li>\n</ul>\n</li>\n<li>高效注释<ul>\n<li>用伪代码法减少注释时间</li>\n<li>将注释如何到开发风格中</li>\n</ul>\n</li>\n<li>注释技术<ul>\n<li>注释单行<ul>\n<li>去掉无关注是</li>\n<li>减少行尾注释</li>\n<li>行尾注释只用于数据声明、维护标记、标记行尾等场景</li>\n</ul>\n</li>\n<li>注释代码段<ul>\n<li>应表达<strong>why</strong>而非<strong>how</strong></li>\n<li>代码本身应尽力组做好说明</li>\n<li>注明非常规用法</li>\n<li>错误或语言环境独特点要加注释</li>\n</ul>\n</li>\n<li>注释数据声明<ul>\n<li>数值单位</li>\n<li>允许范围</li>\n<li>输入限制</li>\n<li>全局数据</li>\n</ul>\n</li>\n<li>注释控制结构<ul>\n<li>循环结束的行尾注释是代码太复杂的征兆</li>\n</ul>\n</li>\n<li>注释子程序<ul>\n<li>注释要靠近说明的代码</li>\n<li>用简短的话进行说明</li>\n<li>注释声明参数</li>\n<li>可以使用Javadoc这种工具</li>\n<li>说明子程序的全局作用</li>\n</ul>\n</li>\n<li>注释类、文件、程序</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"个人性格\"><a href=\"#个人性格\" class=\"headerlink\" title=\"个人性格\"></a>个人性格</h3><p>软件工程是纯粹的脑力劳动。软件工程师研究工具和原材料的本质时，实际上是在研究人的智力、性格这种无形的东西。</p>\n<ul>\n<li>编程工作本质上是项难以监督的工作，你也需要对自己负责</li>\n<li>聪明和谦虚</li>\n<li>求知欲<ul>\n<li>形成自我意识</li>\n<li>实验</li>\n<li>学习成功项目</li>\n<li>阅读文档</li>\n<li>和同行交流</li>\n</ul>\n</li>\n<li>不屈不挠的诚实感</li>\n<li>交流和合作：<strong>编程首先是与人交流，然后才是和计算机交流</strong></li>\n<li>创造力和纪律</li>\n<li>懒惰：避免“实在懒”，追求“开明懒”和“一劳永逸的懒”</li>\n<li>可能不那么明显的性格<ul>\n<li>坚持：要时不时抬头开清方向</li>\n<li>经验：不同于其他行业，<strong>软件开发行业的经验比书本知识价值要小，基础知识变化很快</strong>，不存在越老越吃香的情况。不持续学习跟上潮流，仅靠经验吃饭，会被逐渐淘汰。</li>\n</ul>\n</li>\n<li>习惯<ul>\n<li>好习惯很重要</li>\n<li>不要用“没有习惯”替代“坏习惯”</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"软件工艺探讨的话题\"><a href=\"#软件工艺探讨的话题\" class=\"headerlink\" title=\"软件工艺探讨的话题\"></a>软件工艺探讨的话题</h3><p>《代码大全》全书都着重于软件构建的细节，本章从抽象的关注点出发，看看哪些方面会影响软件的工艺。</p>\n<ul>\n<li>软件开发的核心是致力于<strong>降低复杂度</strong>，管理复杂度是软件的核心使命，之前各章节提过了很多具体办法。各种形式的抽象都是管理复杂度的强大工具。<ul>\n<li>划分子系统</li>\n<li>仔细定义类接口</li>\n<li>保持接口抽象性</li>\n<li>避免全局变量</li>\n<li>避免深层次继承</li>\n<li>避免深度嵌套和循环</li>\n<li>不用<code>goto</code></li>\n<li>子程序短小精悍</li>\n<li>使用清晰明了的变量名</li>\n<li>使用规范和约定减少理解负担</li>\n</ul>\n</li>\n<li>软件开发和其<strong>过程</strong>密不可分，在多程序员参与的项目里，组织性的重要性超过了个人技能<ul>\n<li>坏的过程只会损耗脑力，好的过程则可以开发脑力到极限</li>\n</ul>\n</li>\n<li>首先为人写程序，然后才是机器，强调代码可读性，便于与同行沟通</li>\n<li>深入一门语言去编程，不浮于表面<ul>\n<li>杰出的程序员会考虑他们要干什么，然后才是怎么用手头的工具实现目标</li>\n</ul>\n</li>\n<li>借助<strong>规范</strong>集中注意力</li>\n<li>基于问题域编程<ul>\n<li>将程序划分为不同层级的抽象<ul>\n<li>第0层：操作系统的操作和机器指令</li>\n<li>第1层：编程语言结构和工具</li>\n<li>第2层：底层实现结构，如算法和数据结构</li>\n<li>第3层：低层问题域，这一层已经有问题域相关的操作原语可以使用</li>\n<li>第4层：高层问题域，你的非技术用户某种程度也应该可以看懂你的代码</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>编程是科学和艺术融合的一门工程学科</li>\n<li><strong>迭代</strong>在软件开发中是很正常的现象。软件设计是一个逐步精化的过程。</li>\n<li>将软件和信仰分离开<ul>\n<li>不要盲目跟风</li>\n<li>保持折中态度</li>\n<li>权衡各种技术，再做决定</li>\n<li>基于实验，保持开放心态</li>\n</ul>\n</li>\n</ul>\n<p>–END–</p>\n",
            "tags": [
                "编程",
                "范式",
                "设计",
                "艺术",
                "质量"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2022/03/03/all-about-code/",
            "url": "http://shenlvmeng.github.com/blog/2022/03/03/all-about-code/",
            "title": "关于编码的一切 ——《代码大全》 上",
            "date_published": "2022-03-03T15:09:50.000Z",
            "content_html": "<blockquote>\n<p>拿到它的时候，它已印刷了13年之久；能在京东上找到，也是极大的幸运。</p>\n</blockquote>\n<p>《代码大全》是一部又大又全的工具书，它涵盖了关于编程各个环节的充分经验，可以作为日程编程工作的指导。将其他教我如何编程的书中的内容做了一个打包。数月研读下来，难免有所遗忘。这里将其中的精华尽量记录下来，也作为对全书内容的一个回顾。</p>\n<h2 id=\"打好基础\"><a href=\"#打好基础\" class=\"headerlink\" title=\"打好基础\"></a>打好基础</h2><p>第1部分主要围绕构建为读者讲解什么是构建，和关于构建我们需要了解和准备的。也为后面展开具体编程细节和设计艺术打基础。</p>\n<h3 id=\"走进软件构建\"><a href=\"#走进软件构建\" class=\"headerlink\" title=\"走进软件构建\"></a>走进软件构建</h3><p>构建是软件开发的核心，构建的质量对软件质量有实质影响。</p>\n<h3 id=\"隐喻理解软件开发\"><a href=\"#隐喻理解软件开发\" class=\"headerlink\" title=\"隐喻理解软件开发\"></a>隐喻理解软件开发</h3><p>用隐喻可以帮助理解软件开发的过程。</p>\n<ul>\n<li>一个好的隐喻应该是简单的，忽略了不必要的细节，对概念进行内化和抽象，让人从更高层面思考问题，从而避免低层次错误</li>\n<li>隐喻更像<strong>启示</strong>，而非<em>算法</em></li>\n<li>对于编程来说，还是将问题概念化</li>\n<li>有一些常见的软件隐喻<ul>\n<li>写作&#x2F;耕作：这些隐喻不太合适</li>\n<li>养殖：增量、迭代、自适应、演进的成长概念</li>\n<li>建造：规划设计文档，使用现成组件</li>\n</ul>\n</li>\n<li>组合各种隐喻，不要过度引申隐喻，带来误导</li>\n</ul>\n<h3 id=\"提前准备\"><a href=\"#提前准备\" class=\"headerlink\" title=\"提前准备\"></a>提前准备</h3><p>提前准备，降低风险。</p>\n<ul>\n<li>前期准备的必要性<ul>\n<li>降低风险</li>\n<li>通过逻辑、类比、数据说服项目经理<ul>\n<li>开始大项目前需要制定计划</li>\n<li>程序员是食物链的最后一环，架构师吃掉需求，设计师吃掉架构，程序员消化设计</li>\n<li>发现错误的时间要尽可能接近引入错误的时间，可以尽量降低修复时间</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>判别你所在的软件领域<ul>\n<li>在软件开发中，适用迭代式开发法比适用序列式开发法的情况多得多</li>\n</ul>\n</li>\n<li>先清楚定义问题</li>\n<li>再正确认清需求<ul>\n<li>正式详尽地描述需求，是项目成功的关键<ul>\n<li>面向目标、契约式编程</li>\n</ul>\n</li>\n<li>稳定需求是可望而不可即的<ul>\n<li><strong>开发过程会帮助客户更好地理解自己的需求，这也是需求变更的主要来源</strong></li>\n</ul>\n</li>\n<li>应对需求变更<ul>\n<li>核对当前需求的质量（<em>需要有一个需求质量的核对表</em>），及时回退到需求设计环节</li>\n<li>确保每个人都知道变更的代价</li>\n<li>建立变更的控制流程</li>\n<li>要放弃么？</li>\n<li>考虑项目的商业价值</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>考虑架构设计<ul>\n<li>架构指整个系统的设计约束，不会细节到子系统或类的设计约束</li>\n<li>架构的组成部分<ul>\n<li>程序组织</li>\n<li>主要的类和类的继承体系</li>\n<li>数据结构设计</li>\n<li>业务规则描述</li>\n<li>UI设计</li>\n<li>资源管理：数据库连接、线程、句柄</li>\n<li>安全</li>\n<li>性能</li>\n<li>可扩展性</li>\n<li>国际化</li>\n<li>错误处理：纠正还是检测、主动还是被动</li>\n<li>输入输出</li>\n<li>容错性</li>\n<li>过度工程：明确设立期望目标</li>\n<li>“买”还是“造”：如果架构选择自己做，那么一定要证明自己定制的组件在某方面胜过现有的</li>\n<li>变更策略：如何应对变更</li>\n</ul>\n</li>\n<li>架构的总体质量<ul>\n<li>和所解决的问题和谐一致，看起来自然</li>\n<li>描述所有主要的决策动机</li>\n<li>优秀的架构很大程度和机器与编程语言无关</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>投入的时间一般在20%-30%</li>\n</ul>\n<h3 id=\"关键的构建决策\"><a href=\"#关键的构建决策\" class=\"headerlink\" title=\"关键的构建决策\"></a>关键的构建决策</h3><p>选择语言、技术、构建实践。</p>\n<ul>\n<li>高级语言表达力更强<ul>\n<li><strong>你思考的能力取决于你是否知道可以表达该思想的词汇</strong></li>\n</ul>\n</li>\n<li>提前讲好使用的<strong>编程约定</strong>，去统一编程语言的细节</li>\n<li>找准在技术浪潮中的位置<ul>\n<li>如果在浪潮后期，就可以持续使用稳定的功能；在浪潮前期，则需要花时间找到文档中没有说明的编程语言特性</li>\n<li>“深入一种语言去编程”，<strong>程序员现决定想表达的思想是什么，再决定如何使用特定语言的工具去表达这些思想</strong></li>\n</ul>\n</li>\n<li>选择构建实践</li>\n</ul>\n<h2 id=\"创建高质量代码\"><a href=\"#创建高质量代码\" class=\"headerlink\" title=\"创建高质量代码\"></a>创建高质量代码</h2><p>这一部分主要讲解类和子程序的设计和编码。</p>\n<h3 id=\"如何做设计\"><a href=\"#如何做设计\" class=\"headerlink\" title=\"如何做设计\"></a>如何做设计</h3><p>一些启发式准则和idea</p>\n<ul>\n<li>设计的挑战<ul>\n<li>有的问题需要“解决”一边，才能明确定义它，然后再次解决</li>\n<li>设计成功应该是组织良好且清爽的，不过设计过程却并非如此</li>\n<li>设计需要取舍，受到限制</li>\n<li>设计需要启发式思维，但也是不断评估、讨论、调试实验中诞生的</li>\n</ul>\n</li>\n<li>设计的关键概念<ul>\n<li>管理复杂度<ul>\n<li>软件开发的本质复杂性来自复杂无序的现实世界，精确完整地识别依赖关系和意外情况，设计完全正确而不是部分正确的方案</li>\n<li>软件需要管理复杂度，在组织程序的时候便于在一个时刻专注于一个特定的部分，另外不遗漏暂时忽视的部分</li>\n<li>应对复杂度：减少本质复杂度到最小、避免偶然复杂度的无谓增长</li>\n</ul>\n</li>\n<li>理想的设计特征<ul>\n<li>最小复杂度</li>\n<li>易于维护</li>\n<li>松耦合</li>\n<li>可扩展、可重用</li>\n<li>高扇入（类被其他类大量使用）、低扇出（类少量使用其他类）</li>\n<li>可移植性</li>\n<li>精简性</li>\n<li>标准化</li>\n</ul>\n</li>\n<li>设计的层次<ul>\n<li>软件系统 &gt; 子系统或包 &gt; 类 &gt; 子程序 &gt; 子程序内</li>\n<li>常用子系统：业务规则、用户界面、数据库访问、OS抽象层</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>设计构造块：启发式方法<ul>\n<li>寻找现实对象：想想系统要模仿什么<ul>\n<li>辨识对象和其属性</li>\n<li>确定可以对对象做的操作</li>\n<li>确定对象能对其他对象进行的操作</li>\n<li>确定对象的可见范围</li>\n<li>定义对象接口</li>\n</ul>\n</li>\n<li>形成一致的<strong>抽象</strong>：让你关注某概念的时候忽略不必要的细节</li>\n<li><strong>封装</strong>实现细节：封装帮你掩盖不需要你看到的复杂度</li>\n<li><strong>继承</strong>能简化设计就继承</li>\n<li>隐藏秘密信息<ul>\n<li>保证接口最小且完备</li>\n<li>隐藏复杂度和变化源</li>\n</ul>\n</li>\n<li>找出容易改变的区域<ul>\n<li>业务规则、硬件依赖、输入输出、非标准的预演特性、状态变量、糟糕或复杂的设计</li>\n<li>将容易变化的部分隔离开，让变化的影响范围和变化的可能性成反比</li>\n</ul>\n</li>\n<li>保持松散耦合<ul>\n<li>耦合种类：简单数据参数、简单对象、对象参数、语义耦合（过多假设）</li>\n</ul>\n</li>\n<li>了解常用的设计模式<ul>\n<li>设计模式提供了现成的抽象来减少复杂度</li>\n<li>设计模式将抽象SOP化</li>\n<li>设计模式可以起到启发性作用</li>\n<li>设计模式将设计对话提高到更高层次来简化交流</li>\n</ul>\n</li>\n<li>其他启发式方法<ul>\n<li>高内聚</li>\n<li>契约式设计</li>\n<li>TDD</li>\n<li><strong>创建中央控制点，集中管控</strong></li>\n<li>拿不准时，使用蛮力突破</li>\n<li>画一个图</li>\n<li>设计模块化</li>\n</ul>\n</li>\n<li>使用启发式方法的原则<ul>\n<li>先理解问题</li>\n<li>找出现有数据和未知量之间的联系</li>\n<li>寻找之前的类似问题，或者解决一些相关问题</li>\n<li>执行计划</li>\n<li>回顾解</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>设计实践<ul>\n<li>迭代：第二个尝试往往会好于第一个</li>\n<li>分而治之，增量式改进</li>\n<li>自上而下设计和自下而上设计</li>\n<li>建立试验性原型：原型要足够简单可抛弃，又足以验证效果</li>\n<li>记录你的设计成果：wiki、邮件、UML图</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"设计类\"><a href=\"#设计类\" class=\"headerlink\" title=\"设计类\"></a>设计类</h3><ul>\n<li><strong>类是一组数据和子程序的聚合，有内聚的明确定义的职责</strong></li>\n<li>抽象数据类型（ADT）<ul>\n<li>ADT可以让你像现实世界一样操作实体，而不必在底层实现上摆弄实体</li>\n<li>ADT的好处<ul>\n<li>隐藏实现细节</li>\n<li>改动不需要影响整个程序</li>\n<li>接口语义更强</li>\n<li>更容易提高性能</li>\n</ul>\n</li>\n<li>在非面向对象环境，也可以使用ADT</li>\n</ul>\n</li>\n<li>良好的类接口<ul>\n<li>好的抽象<ul>\n<li>类接口应该有一致的抽象层次</li>\n<li>要理解类的抽象是什么</li>\n<li>考虑提供成对的服务，如打开&#x2F;关闭、添加&#x2F;删除</li>\n<li>尽可能让接口可编程，而不仅是表达语义</li>\n<li>谨防在修改时破坏接口抽象</li>\n<li>同时考虑抽象性和内聚性</li>\n</ul>\n</li>\n<li>好的封装<ul>\n<li>封装比抽象更强，它直接阻止你看到细节</li>\n<li>尽可能限制类和成员的可访问性</li>\n<li>不要公开暴露成员数据</li>\n<li>不要将实现细节暴露在接口上</li>\n<li>不要对类的使用者做任何假设</li>\n<li>让阅读代码比编写更方便，代码的阅读次数比编写多得多</li>\n<li>不要<strong>透过</strong>接口来编程，仅仅看类的接口文档无法得知如何使用一个类的话，正确的做法不是拉出类的源代码，查看内部实现，而是联系类作者。对于类作者来讲，正确的做法不是面对面告诉答案，而是去修改类的接口文档</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>设计和实现<ul>\n<li>通过<strong>包含</strong>来实现“有一个”的关系<ul>\n<li>警惕超过<strong>7</strong>个成员的类</li>\n</ul>\n</li>\n<li>通过<strong>继承</strong>实现“是一个”的关系<ul>\n<li>用public继承</li>\n<li>要么使用继承并详细说明，要么就不要使用它</li>\n<li>遵循Liskov替换原则，即对基类的子程序，在它的所有派生类上含义都应该是相同的，在调用时只用看基类无需考虑是哪一个派生类</li>\n<li>只继承需要继承的部分</li>\n<li>只有一个实例的类值得怀疑</li>\n<li>只有一个派生类的类也值得怀疑</li>\n<li>派生中覆盖了某个子程序，但是其中没做任何操作，也值得怀疑<ul>\n<li>很可能修改了基类接口的语义，慢慢地从基类接口很难理解派生类上的行为</li>\n</ul>\n</li>\n<li>避免过深地继承：降低复杂度</li>\n<li>尽量使用<strong>多态</strong>，避免类型检查</li>\n<li>适度使用继承<ul>\n<li>多个类共享数据而非行为 &#x3D;&gt; 创建类包含的公用对象</li>\n<li>多个类共享行为而非数据 &#x3D;&gt; 都从基类派生，在基类中定义公用的子程序</li>\n<li>多个类既公用数据也公用行为 &#x3D;&gt; 都从基类派生，在基类中定义公用的子程序和数据</li>\n<li>通过基类控制接口 &#x3D;&gt; 继承</li>\n<li>自己控制接口 &#x3D;&gt; 包含</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>成员函数和数据成员<ul>\n<li>减少子程序</li>\n<li>进制不必要的成员和运算符</li>\n<li>减少对其他类子程序的间接调用</li>\n</ul>\n</li>\n<li>构造函数<ul>\n<li>尽可能早构造函数中初始化所有数据成员</li>\n<li><strong>用私有构造函数来实现单例数据</strong></li>\n<li>优先使用深拷贝，除非需要，才使用浅拷贝</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>创建类的原因<ul>\n<li>为现实&#x2F;抽象世界的对象建模</li>\n<li>降低&#x2F;隔离复杂度</li>\n<li>隐藏实现细节</li>\n<li>限制变动的影响范围</li>\n<li>建立中心控制点</li>\n<li>将相关操作包装在一起</li>\n<li>避免的类：万能类、无关紧要类、动词命名类</li>\n</ul>\n</li>\n<li>超越类：包</li>\n</ul>\n<h3 id=\"设计子程序\"><a href=\"#设计子程序\" class=\"headerlink\" title=\"设计子程序\"></a>设计子程序</h3><ul>\n<li>子程序是为了实现特定目的编写的方法或过程</li>\n<li>编写子程序的正当理由<ul>\n<li>降低复杂度</li>\n<li>引入中间、易懂的抽象</li>\n<li>避免代码重复</li>\n<li>支持派生类覆盖</li>\n<li>隐藏指针操作</li>\n<li>改善性能</li>\n<li>增加可读性</li>\n</ul>\n</li>\n<li>子程序上的设计<ul>\n<li><strong>一个子程序只做一件事</strong></li>\n<li><strong>考虑靠近纯函数或纯副作用函数</strong></li>\n<li>内聚性<ul>\n<li>功能上的、顺序上的、通信上的</li>\n<li>避免临时的内聚性（只是需要同时执行才放在一起操作的子程序），如贫血的<code>startup()</code>方法</li>\n<li>避免逻辑上的、巧合的内聚性</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>起个好名字<ul>\n<li>描述所做的事情，而非做事情的过程</li>\n<li>避免使用模糊的动词</li>\n<li>不要仅用数字区分子程序名</li>\n<li>函数名不要过长</li>\n<li>考虑描述返回值</li>\n<li>使用预期强烈的动词 + 宾语</li>\n<li>使用对仗词，如add&#x2F;remove</li>\n<li><strong>为常用操作统一命名</strong></li>\n</ul>\n</li>\n<li>子程序长度：最好少于100行，可以接受100 - 200行</li>\n<li>子程序入参<ul>\n<li>按输入、修改、输出顺序排列参数</li>\n<li>如果子程序使用了相似的参数，考虑让他们的排列顺序一致</li>\n<li>删掉没有使用到的参数</li>\n<li>不要给入参重新赋值</li>\n<li>限制入参数（有的说3个，有的说7个）</li>\n<li>考虑给参数名增加前缀、后缀</li>\n<li><strong>入参和子程序需要在一个抽象层级下</strong></li>\n<li>使用具名参数</li>\n</ul>\n</li>\n<li>宏子程序和内联子程序<ul>\n<li>将宏表达式整个包含在括号内</li>\n<li>一般来讲，是不会用宏代替子程序的</li>\n<li>节制使用inline子程序，在确认有性能改进后再使用inline子程序</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"防御式编程\"><a href=\"#防御式编程\" class=\"headerlink\" title=\"防御式编程\"></a>防御式编程</h3><p>防御式编程让错误更容易发现和修改，并减小破坏。</p>\n<ul>\n<li>断言<ul>\n<li>主要用于开发和维护的阶段</li>\n<li>用错误处理代码处理预期中的状况，用断言处理绝不该出现的状况</li>\n<li>避免把需要执行的代码放在断言中</li>\n<li>对于高健壮性代码，应该先断言再处理错误</li>\n</ul>\n</li>\n<li>错误处理技术<ul>\n<li>返回中立值，如空串、0</li>\n<li>换用下一个正确数据，如获取温度</li>\n<li>返回上一个正确数据，如屏幕重绘</li>\n<li>使用最接近的合法值</li>\n<li>打印警告信息到日志文件中</li>\n<li>返回错误码</li>\n<li>显示出错信息</li>\n<li>关闭程序</li>\n<li>平衡正确性和健壮性</li>\n</ul>\n</li>\n<li>异常<ul>\n<li>通知程序其他部分，发生了不可忽略的错误</li>\n<li>只在真正例外的情况下才抛出异常</li>\n<li>避免再构造函数或析构函数中抛出异常</li>\n<li>在恰当抽象层次抛出异常</li>\n<li>在异常信息中加上导致异常的所有信息</li>\n<li>避免空的<code>catch</code>语句</li>\n<li>异常标准化 &amp; 异常报告机制</li>\n</ul>\n</li>\n<li>辅助调试的代码<ul>\n<li>进攻式编程：让问题更早暴露</li>\n<li>方便地移除调试代码</li>\n</ul>\n</li>\n<li>保留防御式代码的程度<ul>\n<li>保留检查重要错误的代码</li>\n<li>去掉检查细微错误的代码</li>\n<li>保留让程序稳妥崩溃的代码</li>\n<li>记录错误信息</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"伪代码编写\"><a href=\"#伪代码编写\" class=\"headerlink\" title=\"伪代码编写\"></a>伪代码编写</h3><ul>\n<li>创建一个类<ul>\n<li>创建类的总体设计</li>\n<li>创建类中的子程序</li>\n<li>复审并测试</li>\n</ul>\n</li>\n<li>伪代码<ul>\n<li>使用类似英语的用法描述准确操作</li>\n<li>避免使用特定编程语言的语法元素，防止陷入到代码本身的层级上设计</li>\n<li>在略高于代码的层次上进行设计</li>\n</ul>\n</li>\n<li>通过伪代码创建子程序<ul>\n<li>检查先决条件</li>\n<li>定义子程序要解决的问题</li>\n<li>决定如何测试</li>\n<li>在第三方库中搜寻可用功能</li>\n<li>考虑错误处理</li>\n<li>编写伪代码</li>\n<li>将伪代码转为高层次的注释</li>\n<li>在注释下填充代码</li>\n<li>检查代码是否需要进一步分解</li>\n<li>使用lint或编译器检查错误</li>\n<li>去掉冗余注释</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>这一部分深入到代码细节，围绕如何正确使用变量展开。</p>\n<h3 id=\"一般事项\"><a href=\"#一般事项\" class=\"headerlink\" title=\"一般事项\"></a>一般事项</h3><ul>\n<li>初始化的一些建议<ul>\n<li>声明的时候初始化</li>\n<li>靠近变量使用的时候初始化</li>\n<li>考虑对常量使用<code>final</code>或<code>const</code></li>\n<li>注意累加器和计数器的重置</li>\n<li>用可执行代码初始化</li>\n<li>检查合法性</li>\n</ul>\n</li>\n<li>作用域<ul>\n<li>将变量引用点集中起来可以提高可读性，这样可以减少大脑缓存</li>\n<li>减少变量的“存活时间”（从第一条引用语句到最后一条）</li>\n<li>减少作用域的一些原则<ul>\n<li>循环开始时初始化循环变量</li>\n<li>变量使用前再赋值</li>\n<li>对于变量先采用最严格的可见性，再逐渐放宽</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>持续性<ul>\n<li>子程序内&#x2F;手动回收前&#x2F;程序运行时&#x2F;持久存储</li>\n<li>为变量选择合适的持续性</li>\n</ul>\n</li>\n<li>绑定时间<ul>\n<li>编码时&#x2F;编译时&#x2F;加载时&#x2F;实例化时&#x2F;运行时</li>\n<li><strong>越晚绑定越有灵活</strong></li>\n<li>选择合适的灵活度</li>\n</ul>\n</li>\n<li>和控制结构匹配的数据结构<ul>\n<li>序列型数据 -&gt; 顺序语句</li>\n<li>选择型数据 -&gt; <code>if case</code>语句</li>\n<li>迭代型数据 -&gt; 循环语句</li>\n</ul>\n</li>\n<li>变量单一用途<ul>\n<li>只用作一件事</li>\n<li>使用所有已声明变量</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"取名\"><a href=\"#取名\" class=\"headerlink\" title=\"取名\"></a>取名</h3><p>取名是个学问。</p>\n<ul>\n<li>几个原则<ul>\n<li><strong>信达雅</strong></li>\n<li><strong>以问题为导向</strong>，面向目的而不是手段</li>\n<li>适当的长度，小于20个字符，大于8个字符</li>\n<li>作用域越小，变量名越短；使用较少的变量或全局变量适用较长的名字</li>\n<li>使用限定词（如min、avg、max）和对仗词</li>\n</ul>\n</li>\n<li>特定类型的变量名<ul>\n<li>循环下标：<code>i</code>,<code>j</code>,<code>k</code>，在嵌套循环时建议使用表意的变量名</li>\n<li>状态变量：取个比<code>xxxflag</code>更好的名字</li>\n<li>临时变量：避免用临时名字</li>\n<li>布尔变量：名字要蕴含真假的意义<ul>\n<li><code>done</code>&#x2F;<code>error</code>&#x2F;<code>found</code>&#x2F;<code>success</code></li>\n<li><strong>不建议使用<code>is</code>前缀</strong></li>\n<li>使用表示<strong>肯定</strong>的名字，理解成本低</li>\n</ul>\n</li>\n<li>枚举变量：缺少组前缀的需要加上前缀</li>\n<li>常量：不使用magic number或magic string</li>\n</ul>\n</li>\n<li>组内需要确定一个命名规范</li>\n<li>标准前缀<ul>\n<li>用户自定义类型缩写，UDT缩写</li>\n<li>正交化、便于检索</li>\n</ul>\n</li>\n<li>如何缩写<ul>\n<li>使用标准缩写</li>\n<li>去掉非前置元音</li>\n<li>去掉虚词，<code>and</code>等</li>\n<li>去掉无用后缀</li>\n<li>使用每个单词的第一或前几个字母</li>\n<li>不提倡语音缩写</li>\n<li>缩写要能读出来</li>\n<li>避免容易看错或读错的字符组合</li>\n</ul>\n</li>\n<li>应该避免的名字<ul>\n<li>令人误解</li>\n<li>具有不同含义但有相似名字</li>\n<li>发音相近</li>\n<li>出现数字，这是不好的征兆</li>\n<li>拼写错误</li>\n<li>仅靠大小写区分</li>\n<li>使用易混淆的字符，如<code>0</code>和<code>o</code>，<code>1</code>和<code>l</code></li>\n</ul>\n</li>\n<li>代码阅读次数要远远多于编写次数</li>\n</ul>\n<h3 id=\"基本数据类型\"><a href=\"#基本数据类型\" class=\"headerlink\" title=\"基本数据类型\"></a>基本数据类型</h3><ul>\n<li>数值<ul>\n<li>避免magic number</li>\n<li>避免除0</li>\n<li>避免混合类型比较哦</li>\n</ul>\n</li>\n<li>整数<ul>\n<li>检查整数除法</li>\n<li>检查整数溢出</li>\n</ul>\n</li>\n<li>浮点数<ul>\n<li>避免数据级相差巨大的数之间的加减</li>\n<li>避免相等比较</li>\n<li>避免舍入误差</li>\n</ul>\n</li>\n<li>字符串<ul>\n<li>避免magic string</li>\n<li>考虑国际化</li>\n<li>unicode支持</li>\n<li>C语言的字符串<ul>\n<li>注意字符串指针和字符数组的差异</li>\n<li>注意字符串长度声明为CONSTANT + 1</li>\n<li>用<code>null</code>初始化避免无结束符</li>\n<li>建议使用字符数组</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>布尔变量<ul>\n<li>使用布尔中间变量简化复杂判断</li>\n</ul>\n</li>\n<li>枚举类型<ul>\n<li>带来类型提示和提升可读性</li>\n<li>简化修改</li>\n<li>作为布尔变量的可扩展性方案</li>\n<li>枚举类型的第一个元素留作非法制</li>\n</ul>\n</li>\n<li>具名常量：“参数化”程序<ul>\n<li>统一使用</li>\n</ul>\n</li>\n<li>数组<ul>\n<li>确认数组下标</li>\n<li>顺序访问元素，不建议随机访问</li>\n<li>数组边界点</li>\n</ul>\n</li>\n<li>自定义类型：<code>typedef</code>作为类的轻量级方案</li>\n</ul>\n<h3 id=\"不常见的数据类型\"><a href=\"#不常见的数据类型\" class=\"headerlink\" title=\"不常见的数据类型\"></a>不常见的数据类型</h3><ul>\n<li>结构体：数据组合，没有行为的类<ul>\n<li><strong>用前一问：可以用类么</strong></li>\n<li>简化数据块操作</li>\n<li>简化参数列表</li>\n</ul>\n</li>\n<li>指针：灵活但容易出错<ul>\n<li><strong>用前一问：有访问器子程序或防御式编程么</strong></li>\n<li>标识内存中<strong>某个位置</strong>有<strong>某种内容</strong></li>\n<li>一般技巧<ul>\n<li>同时声明和定义</li>\n<li>使用前检查</li>\n<li>使用前判断内存是否损毁</li>\n<li>在提高代码清晰度上，不要节约使用指针</li>\n<li>简化指针表达式</li>\n<li>正确删除链表中的指针</li>\n<li>删除或释放前设为空值</li>\n<li>删除前检查是否非法</li>\n<li>统一跟踪分配情况</li>\n<li>统一在子程序里，集中实现上述策略</li>\n</ul>\n</li>\n<li>C++指针<ul>\n<li>理解指针和引用</li>\n<li><strong>指针用于“按引用传递”，const引用用于“按值传递”</strong></li>\n<li>使用<code>shared_ptr</code></li>\n</ul>\n</li>\n<li>C指针<ul>\n<li>使用显式类型</li>\n<li>避免强制类型转换</li>\n<li>遵循参数传递的<code>*</code>规则</li>\n<li>内存分配时使用<code>sizeof()</code>确定变量大小</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>全局数据：风险较大<ul>\n<li><strong>用前一问：有更好的方法么</strong></li>\n<li>常见问题<ul>\n<li>多线程重入问题</li>\n<li>阻碍代码重用</li>\n<li>破坏模块化和智力上的可管理性</li>\n</ul>\n</li>\n<li>使用理由<ul>\n<li>简化极常用的数据使用</li>\n<li>消除流浪数据（调用链中间的子程序不使用数据）</li>\n</ul>\n</li>\n<li>用访问器子程序取代全局数据<ul>\n<li>在访问前锁定控制</li>\n<li>在访问器子程序里构建一个抽象层</li>\n<li>对数据的所有访问限制在一个抽象层</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"语句\"><a href=\"#语句\" class=\"headerlink\" title=\"语句\"></a>语句</h2><p>在了解了数据视角的变量元素后，这一部分围绕语句组织展开。</p>\n<h3 id=\"直线型代码\"><a href=\"#直线型代码\" class=\"headerlink\" title=\"直线型代码\"></a>直线型代码</h3><ul>\n<li>直线型代码即按先后顺序放置语句和语句块</li>\n<li>必须明确先后顺序的语句<ul>\n<li><strong>想办法明确展示语句的依赖关系</strong><ul>\n<li>组织代码</li>\n<li>使用子程序名&#x2F;子程序参数凸显依赖</li>\n<li>使用注释</li>\n<li>通过断言或错误处理来检查</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>顺序无关的语句<ul>\n<li>使代码易于从上向下阅读，避免跳来跳去</li>\n<li>将相关语句组织在一起</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"条件语句\"><a href=\"#条件语句\" class=\"headerlink\" title=\"条件语句\"></a>条件语句</h3><ul>\n<li><code>if</code>语句<ul>\n<li><code>if-then</code>语句<ul>\n<li>先写正常代码，再写不常见情况</li>\n<li>不要在<code>if</code>后跟随空子句</li>\n<li>看看是不是不需要<code>else</code>子句</li>\n</ul>\n</li>\n<li><code>if-then-else</code>语句<ul>\n<li>利用布尔函数简化复杂的检测</li>\n<li>把常见情况放在最前面</li>\n<li>检查是否考虑了所有情况</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>case</code>语句<ul>\n<li>选择最有效的排列顺序，如执行频率</li>\n<li>简化每种case下的操作</li>\n<li><strong>最好能搭配枚举类型一起使用</strong></li>\n<li>使用<code>default</code>子句检查默认情况或错误</li>\n<li>注意有些语言的<code>case</code>会有fallthrough，需要加<code>break</code></li>\n</ul>\n</li>\n<li>循环语句<ul>\n<li>分为计数循环、连续求值循环、无限循环、迭代器循环。分别适用<code>for</code>、<code>while</code>、<code>foreach</code>语句</li>\n<li>循环控制<ul>\n<li>应该把循环体看作黑盒子，外围程序只知道它的控制条件</li>\n<li>合理判断使用<code>for</code>和<code>while</code>的地方</li>\n<li>尽量避免空循环</li>\n<li>循环内务（包括索引增加）要么放在循环开始，要么放在循环最后</li>\n<li>让循环终止条件看起来明显</li>\n<li>不要为了终止循环改动<code>for</code>循环的下标</li>\n<li>小心散布了很多<code>break</code>的循环，小心谨慎使用<code>break</code>和<code>continue</code></li>\n<li>检查循环端点是否会有off-by-one的问题</li>\n<li>在嵌套循环中使用有意义的变量名增强可读性</li>\n<li>循环要尽可能短，便于一目了然</li>\n<li>把嵌套限制在3层以内</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"不常见的控制结构\"><a href=\"#不常见的控制结构\" class=\"headerlink\" title=\"不常见的控制结构\"></a>不常见的控制结构</h3><ul>\n<li>多处返回：指程序中途的return或exit<ul>\n<li>只在能增强可读性时，使用中途的<code>return</code></li>\n<li>用防卫子句提前退出，简化复杂的错误处理</li>\n<li>减少程序中的<code>return</code>数目</li>\n</ul>\n</li>\n<li>递归：将复杂问题分而治之<ul>\n<li>确认终止条件</li>\n<li>使用安全计数器防止出现无穷递归</li>\n<li>把递归限制在一个子程序里，避免循环调用</li>\n<li>留意栈空间</li>\n<li>可以用循环结构等价式的先考虑循环结构，如阶乘和斐波那契数列</li>\n</ul>\n</li>\n<li><code>goto</code><ul>\n<li>反对随意使用<code>goto</code></li>\n<li><code>goto</code>灵活度太高，不容易用好，在可以使用其他控制结构时，不使用<code>goto</code></li>\n<li>在错误处理中，可以用状态变量、<code>try finally</code>语句实现跳出正常流</li>\n<li>如果在那1%的情况下需要使用<code>goto</code>，注意以下几点<ul>\n<li>尽量一个子程序只使用一个<code>goto</code></li>\n<li>尽量向前跳转而非向后</li>\n<li>确保所有的goto标号都被执行到</li>\n<li><strong>确认<code>goto</code>不会产生执行不到的代码</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"表驱动法\"><a href=\"#表驱动法\" class=\"headerlink\" title=\"表驱动法\"></a>表驱动法</h3><p>表驱动法是<strong>空间换时间</strong>的一种编程模式，使用数据结构模拟逻辑结构，将大部分复杂度放到容易被理解的数据结构中，从而提升代码可读性。下面是一个代码范例。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (((<span class=\"string\">&#x27;a&#x27;</span> &lt;= inputChar) &amp;&amp; (inputChar &lt;= <span class=\"string\">&#x27;z&#x27;</span>)) ||</span><br><span class=\"line\">  ((<span class=\"string\">&#x27;A&#x27;</span> &lt;= inputChar) &amp;&amp; (inputChar &lt;= <span class=\"string\">&#x27;Z&#x27;</span>)))  &#123;</span><br><span class=\"line\">  charType = CharacterType.Letter;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((inputChar == <span class=\"string\">&#x27; &#x27;</span>) || (inputChar == <span class=\"string\">&#x27;,&#x27;</span>) ||</span><br><span class=\"line\">  (inputChar = <span class=\"string\">&#x27;.&#x27;</span>) || (inputChar == <span class=\"string\">&#x27;!&#x27;</span>) || (inputChar == <span class=\"string\">&#x27;(&#x27;</span>) ||</span><br><span class=\"line\">  (inputChar = <span class=\"string\">&#x27;)&#x27;</span>) || (inputChar == <span class=\"string\">&#x27;:&#x27;</span>) || (inputChar == <span class=\"string\">&#x27;;&#x27;</span>) ||</span><br><span class=\"line\">  (inputChar = <span class=\"string\">&#x27;?&#x27;</span>) || (inputChar == <span class=\"string\">&#x27;-&#x27;</span>)) &#123;</span><br><span class=\"line\">  charType = CharacterType.Punctuation;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((<span class=\"string\">&#x27;0&#x27;</span> &lt;= inputChar) &amp;&amp; (inputChar &lt;= <span class=\"string\">&#x27;9&#x27;</span>)) &#123;</span><br><span class=\"line\">  charType = CharacterType.Digit;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>使用一个查询表建立每个字符和它的字符类型的关联后，代码可以简化为</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">charType = charTypeTable[inputChar];</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>查表方法<ul>\n<li>直接访问：如查询每月天数，或不同年龄对应的保险费率<ul>\n<li>有的时候键值要预先处理后才能直接使用，如可能很多年龄对应相似的费率，这时最好先将年龄<strong>换算</strong>到一个更好的key上</li>\n<li>进一步，我们可以把键值转换提取为独立的子程序</li>\n</ul>\n</li>\n<li>索引访问表：和直接访问的区别在于，对于不易<strong>换算</strong>到键值的情况，提供一个额外的索引表，先<strong>映射</strong>到索引表再查到数据</li>\n<li>阶梯访问表：主要针对表中的记录是对<strong>数据范围</strong>而非<strong>数据点</strong>生效的情况，使用端点作为key<ul>\n<li>留心端点带来的off-by-one情况</li>\n<li>可以使用二分查找代替顺序查找</li>\n<li>也可以使用索引访问技术</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"一般性问题\"><a href=\"#一般性问题\" class=\"headerlink\" title=\"一般性问题\"></a>一般性问题</h3><h4 id=\"布尔表达式\"><a href=\"#布尔表达式\" class=\"headerlink\" title=\"布尔表达式\"></a>布尔表达式</h4><ul>\n<li>使用<code>true</code>或<code>false</code>作判断</li>\n<li>简化复杂的表达式<ul>\n<li>使用中间变量或布尔函数</li>\n<li>使用决策表替代复杂的判断逻辑</li>\n</ul>\n</li>\n<li>编写<strong>肯定</strong>的布尔表达式，会让布尔表达式更易理解</li>\n<li>用括号分割较长的布尔表达式</li>\n<li>注意短路求值或惰性求值的情况</li>\n<li><strong>按照数轴的顺序编写数值表达式</strong>，类似<code>MIN_VALUE &lt;= i and i &lt;= MAX_VALUE</code>，可读性好很多</li>\n<li>在C语言中最好把常量放在左边</li>\n<li>注意区分Java中<code>a==b</code>和<code>a.equals(b)</code></li>\n</ul>\n<h4 id=\"空语句\"><a href=\"#空语句\" class=\"headerlink\" title=\"空语句\"></a>空语句</h4><ul>\n<li>小心使用</li>\n<li>使用<code>doNothing()</code>函数或<code>noop()</code>函数</li>\n<li>考虑能否换用非空的循环体</li>\n</ul>\n<h4 id=\"优化深层嵌套\"><a href=\"#优化深层嵌套\" class=\"headerlink\" title=\"优化深层嵌套\"></a>优化深层嵌套</h4><ul>\n<li>优化重复的<code>if</code>检查</li>\n<li>使用<code>break</code>简化嵌套<code>if</code>，如防卫子句</li>\n<li>转换成一组<code>if-then-else</code>结构</li>\n<li>转换成<code>case</code>语句</li>\n<li>将深度嵌套的语句抽离成子程序</li>\n<li>借助多态</li>\n<li>借助异常来跳出正常流</li>\n</ul>\n<h4 id=\"结构化编程\"><a href=\"#结构化编程\" class=\"headerlink\" title=\"结构化编程\"></a>结构化编程</h4><p>结构化编程的思路是仅使用<strong>顺序</strong>、<strong>选择</strong>、<strong>迭代</strong>的思路描述程序流，避免使用<code>break</code>，<code>continue</code>，<code>return</code>，<code>try-catch</code>来打断。</p>\n<h4 id=\"降低复杂度\"><a href=\"#降低复杂度\" class=\"headerlink\" title=\"降低复杂度\"></a>降低复杂度</h4><ul>\n<li><strong>程序复杂度的一个衡量标准是，为了理解程序，必须在同一时间记忆的智力实体数目</strong>，即理解程序花费的精力</li>\n<li>控制流的复杂度和不可靠的代码以及频繁出现的错误息息相关</li>\n<li>可以通过计算子程序的“决策点”粗估子程序的复杂度<ul>\n<li>从1开始，遇到<code>if</code>，<code>while</code>，<code>repeat</code>，<code>for</code>，<code>and</code>，<code>or</code>加一，为每一种<code>case</code>加一</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "编程",
                "范式",
                "设计"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2021/12/22/2021-to-2022/",
            "url": "http://shenlvmeng.github.com/blog/2021/12/22/2021-to-2022/",
            "title": "2021回顾暨2022展望",
            "date_published": "2021-12-22T14:59:05.000Z",
            "content_html": "<blockquote>\n<p>2018-2019: <a href=\"https://shenlvmeng.github.io/blog/2019/01/03/2018-to-2019/\">https://shenlvmeng.github.io/blog/2019/01/03/2018-to-2019/</a><br>2019-2020: <a href=\"https://shenlvmeng.github.io/blog/2020/01/04/2019-to-2020/\">https://shenlvmeng.github.io/blog/2020/01/04/2019-to-2020/</a><br>2020-2021: <a href=\"https://shenlvmeng.github.io/blog/2021/01/05/2020-to-2021/\">https://shenlvmeng.github.io/blog/2021/01/05/2020-to-2021/</a></p>\n</blockquote>\n<p>从19年初写下第一篇总结到现在，已过去近3年，每年写总结时，都会发现计划永远赶不上变化，惊喜总在发生，也总能体验这辈子从未经历过的一些事情。就像在超市购物时推着一辆磕磕巴巴的小车一样，正反馈的前进路线需要不断地人为纠正。最终走出一条弯弯曲曲却通向想去方向的路线。</p>\n<p>世事难料，2021年尤其是个例外。我目送了朋友的离开，见证了忠贞的新人携手相拥，告别了早该舍弃的人，与老朋友重逢，来到陌生却熟悉的新城市，拥抱了所爱也爱我的人，认识又立马和新朋友告别，开启看起来模糊却又无比清晰的未来道路。生活逐渐健康，生活更加明亮，生活逐渐充满期望。不过总有些不变的，譬如固定的长途骑行，以及在间歇性踌躇满志和间歇性混吃等死中间徘徊。</p>\n<h2 id=\"2021回顾\"><a href=\"#2021回顾\" class=\"headerlink\" title=\"2021回顾\"></a>2021回顾</h2><p>比照去年目标，在内在上，看完了4本技术书籍中的2本，以及剩余10本小说中的8本：</p>\n<ul>\n<li><a href=\"https://shenlvmeng.github.io/blog/2021/01/29/zen-of-unix/\">Unix编程艺术集萃</a></li>\n<li><a href=\"https://shenlvmeng.github.io/blog/2021/03/22/clean-architecture/\">《架构整洁之道》—— 软件设计的思考</a></li>\n</ul>\n<p>剩余的2本，devops读至一半，深感信息量之少，收获甚少，弃之。《代码大全》则由于过厚暂时搁置。不过，在某leader的启发下，对管理学产生了兴趣。从推荐的《领导梯队》和《赢》入手，接触到德鲁克的一些观念：</p>\n<ul>\n<li><a href=\"https://shenlvmeng.github.io/blog/2021/11/24/leadership-pipeline/\">《领导梯队》—— 领导力模型构建</a></li>\n<li><a href=\"https://shenlvmeng.github.io/blog/2021/12/07/winning-note/\">公司管理和自我修养 —— 《赢》读书笔记</a></li>\n<li><a href=\"https://shenlvmeng.github.io/blog/2021/12/16/effective-executive/\">卓有成效的管理者 —— 德鲁克笔记系列之一</a></li>\n</ul>\n<p>经过这几本的洗礼，感受到管理学绝不仅仅是日常的事务性管理动作。而有一整套价值观和方法论，如依人办事等。看完之后大开眼界，颇有些屠龙之术的意思。这也许只是我屁股不在目标人群中吧。于是剩余的两本德鲁克及时叫停，回到追求实用的现实世界。在技术以外了解一些其他领域的知识，启示挺大。</p>\n<p>个人形象上，除了改成推平的毛寸<del>（以及发胖）</del>之外，几乎没有任何变化。发胖这点，也不能完全赖我，和对象也有一定关系。早睡早起这点倒是因为和对象同住坚持得很好，这大概是今年最大的进步了。锻炼频率从来了上海之后有所下降，等到对象回到附近之后预期会好很多。整体看，发胖这点还是要重视的。</p>\n<p>社交上，来到上海后，除了老朋友外，倒是拾起了一些很久未联系的“新朋友”。情感上，很庆幸地，经过身边亲朋好友的轮番劝导和自己的冷静思考，让我及时从糟糕的关系中摆脱出来。谢天谢地，又让我遇到现在的她。说来奇妙又激动。2021年似乎在5月份和6月底开启了两次新篇章。之后整个下半年局面大为不同。经过艰难又忐忑的4个月异地，辛苦却又自然地合体。一切仿佛都是最佳的选择。</p>\n<p>生活上，业余时间基本都是和对象一同。不过俩人的兴趣爱好相仿，骑车和看电影都能一起，因此这两点并没放下。在今年5月份开启新篇章后，斥巨资换了现在的新公路车，大大提升了骑行体验，不得不说真能买到快乐。之前的公路车刚好可以给对象骑。尽管11月才结束异地，已经一同骑了快10次了。魔都的骑行路况尽管比不上帝都，气温相对帝都还是要温柔一些。照例，今年完成了<a href=\"https://shenlvmeng.github.io/blog/2021/10/20/taihu-lark-riding/\">环太湖之旅</a>，一路上经过苏州、无锡、宜兴、湖州、南浔，也算是满足了圣僧一路江南城市的愿望。清理完已有的洋酒库存后，小酌频率的确下降很多了，可惜对象酒量很差，平日只能看我表演。旅行上，在偶发疫情的情况下，和对象国庆去<a href=\"https://shenlvmeng.github.io/blog/2021/10/22/tour-to-jinan-and-qingdao/\">济南青岛</a>转了一圈，十月底被痛仰两放鸽子后，得到了宝贵的杭州一日游。搬到和对象同居之后，俩人分工，一人负责干净一人负责整洁，整个房间倒是窗明几净、井然有序。平日周末一同下厨或探店或社交，不亦乐乎。livehouse倒是计划了好几次，可惜疫情人算不如天算，至今未能看到。</p>\n<p>事业上，借助大方向的发展势头，年初得到了意料之外情理之中的提升机会。赶在行业腰斩个人选择导致的发展减缓前，获得此等良机，可以说很幸运了。而后随着来到魔都，第一次感受landing流程和新leader磨合，另外团队也有所扩张，十分难得。可惜由于公司政策调整，结合个人意愿选择，放弃了这个良机。去向了一个完全陌生的领域，极大提升通勤体验的同时，牺牲了先发优势。正如那位leader所说，“既然是去一项成熟的业务，最好提前降低下预期”，因此也做好了发挥空间有限，要重新建立信任的准备。有挑战才有意思嘛。也希望在来年能有所成果。结合管理学阅读还有某leader的1on1，在职业规划和发展路线上有了一些粗浅的想法。在和对象的交流下，了解到内卷业务的可怕，还有外企的香甜，不由得内心也心向往之。作为一项国际化业务，这里倒是也可以当做未来的跳板吧。何时才能成长到在外企大厂带人做事的程度呢？</p>\n<p>至于落脚城市，就这里吧，也挺好。下一阶段，就是房子、车子、票子的事情了。有了可以一同踏踏实实的人，也放心去想踏踏实实的事儿了。</p>\n<h2 id=\"2021总结\"><a href=\"#2021总结\" class=\"headerlink\" title=\"2021总结\"></a>2021总结</h2><ul>\n<li>仰望星空的同时，脚踏实地也很重要</li>\n<li>保持身体健康</li>\n<li>减肥要提上日程</li>\n<li>生活中总会发生不公平的事情，不过整体来看，它还是公平的</li>\n<li>少吃一口饿不死，多做一点累不死</li>\n<li>迈出第一步，事情就会慢慢发生，就像在山顶推一个石头</li>\n<li>事业上，成果导向，用人所长，因人成功</li>\n<li>工作中有些事情，功夫在诗外，人际关系也很重要</li>\n<li>要开始考虑一些更长远更现实的事情，比如买房、养老、医保，做一个合格的父亲</li>\n</ul>\n<h2 id=\"2022展望\"><a href=\"#2022展望\" class=\"headerlink\" title=\"2022展望\"></a>2022展望</h2><p>好了，写计划和期望的时候总是心情舒畅。下面列出一些期望，</p>\n<ul>\n<li>内在<ul>\n<li>完成代码大全和至少一本专业书籍的阅读</li>\n<li>完成剩下所有小说阅读</li>\n<li>探索一个新的领域，形成积累</li>\n</ul>\n</li>\n<li>外在<ul>\n<li><strong>控制体重回到80kg</strong></li>\n<li>坚持早睡早起早饭</li>\n<li>坚持一项骑行以外的运动，如游泳</li>\n<li>升级对象骑行体验</li>\n</ul>\n</li>\n<li>生活<ul>\n<li>至少1次和对象的旅行</li>\n<li>至少1次户外长途骑行</li>\n<li>学习3种硬菜</li>\n<li>至少1次livehouse</li>\n<li>控制饮酒频率</li>\n<li>享受探店</li>\n<li>更好地融入魔都<ul>\n<li>社保、户口</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>社交<ul>\n<li>和对象相互认识老朋友</li>\n<li>回一次家 &amp; 去一次沈阳</li>\n</ul>\n</li>\n<li>事业<ul>\n<li>做出一项成果</li>\n<li>能在所在业务下带小团队</li>\n</ul>\n</li>\n</ul>\n<p>凡是经历没经历过的事情，都是好事。预知后事如何，明年拭目以待。</p>\n<p><em>Bye~</em></p>\n",
            "tags": [
                "总结",
                "2021",
                "2022"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2021/12/20/deep-link-note/",
            "url": "http://shenlvmeng.github.com/blog/2021/12/20/deep-link-note/",
            "title": "deeplink技术分析",
            "date_published": "2021-12-20T14:48:09.000Z",
            "content_html": "<p><a href=\"https://en.wikipedia.org/wiki/Deep_linking\">deep link</a>是指可以从任何渠道，包括短信、应用内、网页中直接跳转到应用app内的特定页面的技术。它一定程度上打破了移动端app间“孤岛”的局面，实现了快捷的跳转。根据是否安装app，主要有下面两种行为：</p>\n<ul>\n<li>已安装，唤起app并跳转到特定页面</li>\n<li>未安装，跳转到App Store或下载页面引导用户下载安装，在下载后的第一次打开自动跳转到特定深度页面，这种情况也叫<strong>deferred deep link</strong></li>\n</ul>\n<p><img src=\"https://support.staffbase.com/hc/article_attachments/115003896431/deeplink_deeplink-browser-app.png\" alt=\"deep-link-info\"></p>\n<h2 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h2><p>deep link可以应用在很多常见的场景下，如</p>\n<ul>\n<li>社交分享</li>\n<li>广告引流</li>\n<li>web和app互通</li>\n<li>裂变活动</li>\n<li>短信、邮件营销</li>\n</ul>\n<p>在web和app互通场景下，可以很方便地实现从外部回流页回到app内特定位置，如：</p>\n<ul>\n<li>电商类app：分享H5跳转到特定商品页</li>\n<li>游戏类app：分享H5跳转到特定房间或任务</li>\n<li>直播类app：分享H5跳转到特定直播间</li>\n</ul>\n<p>deep link缩短了操作路径，减少了用户操作成本，从而降低用户流失率，帮助app拉新和留存。</p>\n<h2 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h2><p>常见的实现方式有下面几种</p>\n<ul>\n<li>URL scheme，iOS和Android下的通用方式，打开前会询问是否打开某app</li>\n<li><a href=\"https://developer.chrome.com/docs/multidevice/android/intents/\">Chrome Intent</a>，Chrome 25+无法通过URL scheme 唤起 App，必须使用Intent</li>\n<li>Universal Link，适用于iOS 9及更高版本，点击http&#x2F;https即跳转，操作丝滑</li>\n<li>App Links，适用于Android 6及更高版本，点击http&#x2F;https即跳转，操作丝滑</li>\n</ul>\n<p>除了上面几种，还有<a href=\"https://developer.apple.com/documentation/webkit/promoting_apps_with_smart_app_banners\">Smart App Banners</a>、剪贴板等方案</p>\n<h3 id=\"URL-scheme\"><a href=\"#URL-scheme\" class=\"headerlink\" title=\"URL scheme\"></a>URL scheme</h3><p>格式形如<code>[scheme:][//authority][path][?query][#fragment]</code>，一般使用在iOS 9和Android 6之前。方法通用，但有以下问题：</p>\n<ul>\n<li>本身没有规范，难以获知要跳转的path或query</li>\n<li>功能不全，app越复杂，scheme就越复杂</li>\n<li>会被拦截，包括浏览器或应用的webview，如微信</li>\n<li>打开app失败后，iOS会有错误弹窗，体验不好<ul>\n<li>提示网页无效</li>\n</ul>\n</li>\n<li>URL scheme可能重复</li>\n</ul>\n<p>常见Scheme URL</p>\n<table>\n<thead>\n<tr>\n<th>微信</th>\n<th>电商</th>\n<th>浏览器</th>\n<th>系统</th>\n<th>其他</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>weixin:&#x2F;&#x2F;dl&#x2F;scan 扫一扫<br />weixin:&#x2F;&#x2F;dl&#x2F;moments 朋友圈<br /> weixin:&#x2F;&#x2F;dl&#x2F;settings 设置</td>\n<td>淘宝：taobao:&#x2F;&#x2F;<br />支付宝：alipay:&#x2F;&#x2F;<br />美团：imeituan:&#x2F;&#x2F;</td>\n<td>Chrome：googlechrome:&#x2F;&#x2F;<br />UC 浏览器：ucbrowser:&#x2F;&#x2F;</td>\n<td>邮箱：mailto:&#x2F;&#x2F;<br />短信：message:&#x2F;&#x2F;<br />App Store：itms-appss:&#x2F;&#x2F;  macappstores:&#x2F;&#x2F;</td>\n<td>飞书：lark:&#x2F;&#x2F;<br />微博：sinaweibo:&#x2F;&#x2F;</td>\n</tr>\n</tbody></table>\n<h3 id=\"Chrome-Intent\"><a href=\"#Chrome-Intent\" class=\"headerlink\" title=\"Chrome Intent\"></a>Chrome Intent</h3><p>Chrome 25+无法通过iframe的src启动Android app。改为构造形如下面的intent锚点。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">intent:  </span><br><span class=\"line\">   HOST/URI-path // Optional host  </span><br><span class=\"line\">   #Intent;  </span><br><span class=\"line\">      package=\\[string\\];  </span><br><span class=\"line\">      action=\\[string\\];  </span><br><span class=\"line\">      category=\\[string\\];  </span><br><span class=\"line\">      component=\\[string\\];  </span><br><span class=\"line\">      scheme=\\[string\\];  </span><br><span class=\"line\">   end;</span><br></pre></td></tr></table></figure>\n\n<p>在<code>end</code>前添加<code>S.browser_fallback_url=[encoded_full_url]</code>可以指定唤起失败的地址。一个构造好的intent形如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">intent://path#Intent;scheme=xxx;package=com. xxx;S.browser_fallback_url=https://xxx;end</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Universal-Link\"><a href=\"#Universal-Link\" class=\"headerlink\" title=\"Universal Link\"></a>Universal Link</h3><blockquote>\n<p><a href=\"https://developer.apple.com/ios/universal-links/\">官方介绍</a></p>\n</blockquote>\n<p>Universal Link，即通用链接，是iOS 9推出的通过HTTPS链接来启动app的特性。既可以打开app，在没有安装时，则打开特定网页。对比URL Scheme优势在于：</p>\n<ul>\n<li>无缝切换，不弹窗确认</li>\n<li>兼容性好，未安装时直接打开网页</li>\n<li>使用通用的HTTP协议，不用担心scheme重复</li>\n<li>通过网站的配置文件和app关联，保证安全</li>\n</ul>\n<p>在网站下根目录或<code>.well-known</code>路径下需要有<code>apple-app-association</code>（无后缀名）JSON文件。例如，知乎的配置文件为<a href=\"https://oia.zhihu.com/apple-app-site-association%E3%80%82%E5%9C%A8%E9%85%8D%E7%BD%AE%E6%97%B6%EF%BC%8C\">https://oia.zhihu.com/apple-app-site-association。在配置时，</a></p>\n<ul>\n<li>需要保证有一个HTTPS的域名，最好和web网页域名区分开，保证web网页的正常访问</li>\n<li>在开发者中心 ，Identifiers下 AppIDs 找到自己的App ID，编辑打开Associated Domains服务</li>\n<li>打开工程配置中的 Associated Domains ，在其中的 Domains 中填入你想支持的域名，必须以<code>applinks:</code>为前缀</li>\n<li>配置<code>apple-app-site-association</code>文件，不带任何后缀，上传该文件到服务器的根目录或者<code>.well-known</code>目录下</li>\n</ul>\n<p><img src=\"https://docs-assets.developer.apple.com/published/4cbbb0bb235bdd82277b0f8d294afab8/13300/supporting-associated-domains-1@2x.png\"></p>\n<p>在网站下配置好Universal Link后，用户点击网站链接后，即会直接跳转到App，而不需要经过浏览器。当然，微信等app还是会拦截Universal Link的行为，需要在微信注册自己的应用id和Universal Link。</p>\n<h3 id=\"App-Links\"><a href=\"#App-Links\" class=\"headerlink\" title=\"App Links\"></a>App Links</h3><blockquote>\n<p><a href=\"https://developer.android.google.cn/studio/write/app-link-indexing\">官方介绍</a></p>\n</blockquote>\n<p>App Links，类似Universal Link，是Android 6（Android M）及以上操作系统中适用的HTTPS路径链接。可以直接将用户带入到Android app内的特定页面中，实现上，网站配置文件名为<code>assetlink</code>，只能放在<code>.well-known</code>目录下。如<a href=\"https://vt.tiktok.com/.well-known/assetlinks.json%E3%80%82%E4%B8%8D%E8%BF%87%EF%BC%8C%E5%9B%BD%E4%BA%A7%E7%9A%84%E5%AE%89%E5%8D%93%E7%89%88%E6%9C%AC%E4%BB%A5%E5%8F%8A%E5%BE%AE%E4%BF%A1%E7%AD%89app%E4%BE%9D%E6%97%A7%E4%BC%9A%E6%8B%A6%E6%88%AA%E3%80%82\">https://vt.tiktok.com/.well-known/assetlinks.json。不过，国产的安卓版本以及微信等app依旧会拦截。</a></p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><ul>\n<li>Android webview本身支持唤醒第三方app，但如果设置了自定义WebViewClient则需要自己处理，具体是指在<code>shouldOverrideUrlLoading</code>方法中决定如何处理</li>\n<li>Smart App Banners，在网页里增加一个<code>&lt;meta&gt;</code>标签，可以在打开页面时，检测手机是否安装某个app，并且在页面顶部显示一个Banner显示App的基本信息，安装时显示打开，未安装时显示安装</li>\n</ul>\n<h2 id=\"相关产品或开源库\"><a href=\"#相关产品或开源库\" class=\"headerlink\" title=\"相关产品或开源库\"></a>相关产品或开源库</h2><p>结合点击行为、重定向行为、来源去向分析、落地页等，还可以做很多事情，市面上也有下面一些产品：</p>\n<ul>\n<li><a href=\"https://www.mob.com/mobService/moblink\">MobLink</a></li>\n<li><a href=\"https://www.linkedme.cc/link-page.html\">LinkedMe</a></li>\n<li><a href=\"https://www.openinstall.io/deeplinking.html\">openinstall</a></li>\n</ul>\n<p>另外，也有一些开源库实现web跳转app</p>\n<ul>\n<li><a href=\"https://github.com/suanmei/callapp-lib\">https://github.com/suanmei/callapp-lib</a></li>\n<li><a href=\"https://github.com/jawidx/web-launch-app\">https://github.com/jawidx/web-launch-app</a></li>\n<li><a href=\"https://github.com/luojinghui/web-open-app\">https://github.com/luojinghui/web-open-app</a></li>\n</ul>\n<p><em>–END–</em></p>\n",
            "tags": [
                "引流",
                "universal-link",
                "app-link"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2021/12/16/effective-executive/",
            "url": "http://shenlvmeng.github.com/blog/2021/12/16/effective-executive/",
            "title": "卓有成效的管理者 —— 德鲁克笔记系列之一",
            "date_published": "2021-12-16T15:06:27.000Z",
            "content_html": "<p>与其说德鲁克是管理学鼻祖，他更像在研究社会、组织、企业存在的合理性与最佳实践。德鲁克认为人性是不完美的，那人设计出来的社会也不可能完美。他抵制极权专制，这里的极权不同集权，所追求的是全面彻底地操纵和控制人类的每一个成员。德鲁克视管理学为一种“博雅艺术”（liberal art）。它既不像人文文化，也不像科学文化。它关心人的价值成长和社会组织的影响，但又关心管理工作的应用的成果。这使得管理学不像世俗观点中的那样，<strong>是一个人或一个机构的成功学</strong>。它只在让每个人在社会和社群中更健康，自由地选择并履行承担的责任，从而是人类社会和社区更健康，人们受到更少的伤害和痛苦。</p>\n<p>而这本书即从管理者的成效出发，探讨一个管理者如何能<strong>管理好自己</strong>。毕竟让一个自身成效不高的管理者管好他下面的下属，几乎是不可能的事情。而卓有成效的管理者也逐渐成为社会中的关键资源。</p>\n<h2 id=\"卓有成效可以学会\"><a href=\"#卓有成效可以学会\" class=\"headerlink\" title=\"卓有成效可以学会\"></a>卓有成效可以学会</h2><p>卓有成效<strong>重要且可以学会</strong>。</p>\n<ul>\n<li>首先端正思路，管理者为什么<strong>必须有效</strong><ul>\n<li><strong>有效即“做对的事情”</strong>，而不是纯执行的“把事情做对”</li>\n<li><strong>当下知识工作者</strong>逐步增多，他们产出的更多是抽象的知识、创意或信息，无法用传统衡量体力活动的方式衡量，因此需要自己管理自己，自觉做出贡献，追求工作效益</li>\n</ul>\n</li>\n<li>谁是管理者<ul>\n<li>如果在组织内，一个知识工作者，能够凭借职位或知识，对组织负有贡献的责任，因而能对组织的经营能力或成果有实质性影响。那他就是一位管理者。</li>\n<li>衡量知识工作，主要应看结果而不是工作繁杂程度</li>\n<li>一般的经理人员工作性质和董事长、政府机构的行政领导是相同的，那就是计划、组织、整合、激励和考核</li>\n</ul>\n</li>\n<li>管理者的不利现状<ul>\n<li>组织<strong>内</strong>的管理者会面临下面一些压力<ul>\n<li>时间往往属于别人，不属于自己，如经常有外部人员拜访</li>\n<li>往往被迫忙于“事务性工作”，除非他们敢于采取行动改变周围的一切<ul>\n<li>管理者需要一套判断体系，去找到真正重要的事项</li>\n</ul>\n</li>\n<li>管理者的贡献<strong>能被其他人利用时，才算有效</strong><ul>\n<li><strong>组织是使个人才干能够增值的工具</strong>，一个人的知识可以被组织吸收，作为其他知识工作者工作的资源</li>\n<li>贡献不能被有效利用时，有效性也会打折扣</li>\n</ul>\n</li>\n<li>管理者会受到组织的局限<ul>\n<li>受到的信息会被组织过滤</li>\n<li><strong>组织需要为外部服务</strong>，因此需要得到外部的信息</li>\n<li>组织是社会中的人为产物，和生物体类似的是，成长得越大，消耗的资源和复杂度就越大</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>对外部信息的收集，人从现象中的抽象能力往往优于机器（类似深度学习）</li>\n</ul>\n</li>\n<li>提高有效性，让工作达到令人满意的程度<ul>\n<li>不要期望万能的天才来达到绩效，通才难求，学会善用专精于某一领域的人</li>\n<li>通过从各种有效的管理者归纳来看，他们各个方面都不完全一样，<strong>人人都具有做好该做事情的能力</strong>，即有效性</li>\n<li>下面一些习惯是成为卓有成效管理者所必须的<ul>\n<li><strong>善用时间</strong>，知道时间都去哪儿了</li>\n<li>重视对外界的贡献，<strong>目标导向</strong></li>\n<li>善于利用长处</li>\n<li>集中精力到少数重要领域</li>\n<li>敢于、善于做决策</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"掌握自己的时间\"><a href=\"#掌握自己的时间\" class=\"headerlink\" title=\"掌握自己的时间\"></a>掌握自己的时间</h2><p>时间是最珍贵的资源，先摸清自己的时间分配，再统一管理和安排。</p>\n<ul>\n<li>所有资源里，时间不像资金、人力，是<strong>最稀有</strong>，<strong>毫无可替代性</strong>，<strong>所有工作必须消耗</strong>的资源，而人往往不善于使用这种资源</li>\n<li>管理者面临的时间压力<ul>\n<li>管理者作为知识工作者，他的大多数任务，都需要<strong>相当多的整块时间</strong></li>\n<li><strong>管理者要与他人一同工作</strong>，需要各种信息，需要讨论、需要指导他人，需要协调人际和工作关系，这些都是费时的</li>\n<li>只有在脑力上多费时，才能在体力上少费时</li>\n<li>如果时间短促，一个人就只能考虑他已经熟悉的事，做曾经做过的事，无法创新和变革</li>\n</ul>\n</li>\n<li>你诊断过你的时间么<ul>\n<li>第一步是记录时间的耗用情况，一定要<strong>当即</strong>记，事后回忆往往不准确，然后问下面一些问题</li>\n<li>“什么事情根本不必做”</li>\n<li>“哪些活动可以由别人代为参加”，学会授权</li>\n<li>“有浪费别人的时间么”，如过多的会议</li>\n</ul>\n</li>\n<li>消除浪费时间的活动<ul>\n<li>找出可以通过制度或远见避免的时间浪费<ul>\n<li><strong>一个平静无波的工厂，必然是管理上了轨道，因为所有危机都已预见，并变成了例行工作</strong></li>\n</ul>\n</li>\n<li>人员过多会带来人际关系的时间浪费</li>\n<li>组织不健全，表现就是会议太多<ul>\n<li>之所以要开会，是因为某种情况的所需的知识不能装在一个大脑里</li>\n<li>要开会，也要有计划</li>\n</ul>\n</li>\n<li>信息功能不健全，上下文不透明，或信息表达不当</li>\n</ul>\n</li>\n<li>统一安排可以自己支配的时间<ul>\n<li>高级主管可以自由运用的时间，可能只有1&#x2F;4，组织越大，维系组织运行而不是发挥组织价值的工作越多，从而不由自己掌控的时间越多</li>\n<li>可以给自己的时间划分最小单位，如90分钟，聚合碎片时间</li>\n<li>对时间的控制和管理不是一劳永逸的，要不断记录时间消耗并分析</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"我能贡献什么\"><a href=\"#我能贡献什么\" class=\"headerlink\" title=\"我能贡献什么\"></a>我能贡献什么</h2><p>关注产出，目标导向，可以帮助自己thinking out of the box。</p>\n<ul>\n<li>重视贡献，注意对成果负责，才能看到整体的绩效<ul>\n<li>只有这样，一个人才能考虑自己的技能、专长和整个组织以及组织目标的关系</li>\n<li>管理者如果不自问“我可以做出什么贡献”，在工作中就不会有远大的目标，而偏向执行的角色</li>\n</ul>\n</li>\n<li>一般机构对成效的要求往往有下面三个方面<ul>\n<li>直接成果</li>\n<li>梳理新的价值观或对价值观的重新确认</li>\n<li>培养和开发明天所需的人才</li>\n</ul>\n</li>\n<li>职位越高，对外所需的贡献就越大</li>\n<li>对于专业人员，必须使自己的“产品”——即他的只是可以为别人所用；同时，肩负贡献的责任，要求他知道应该了解别人的需要、别人的方向，别人的理解，从而使别人能够应用他的成果</li>\n<li>有效的人际关系有4项基本要求，而着眼贡献正可以满足<ul>\n<li>以目标为导向，可以很方便对齐期望，有助于<strong>互相沟通</strong></li>\n<li>强调贡献有助于横向沟通，促成<strong>团队合作</strong></li>\n<li><strong>个人发展</strong>，一定程度上也要看是否重视贡献</li>\n<li>重视贡献的管理者必然能启发他人寻求自我发展，从而<strong>培养他人</strong></li>\n</ul>\n</li>\n<li>重视贡献，才能使管理者的视线从“内部事务”转向“外部世界”</li>\n</ul>\n<h2 id=\"发挥他人长处\"><a href=\"#发挥他人长处\" class=\"headerlink\" title=\"发挥他人长处\"></a>发挥他人长处</h2><p>人无完人，有效的管理者可以使人发挥长处，减少短处带来的限制。</p>\n<ul>\n<li><strong>世界上从来没有发生过下属的才干反而害了主管的事</strong></li>\n<li>人的精力有限，卓越通常只能表现在某一或者某几方面<ul>\n<li>是用人来做事，不是用人来投自己所好，或投主管所好</li>\n<li>有效的管理者从来不问“我和他能合得来吗”，而是问“他能贡献什么”，从来不问“他不能做什么”，而是问“他能做什么”</li>\n</ul>\n</li>\n<li><strong>要坚持因事用人而不是因人设事</strong>，这样才能减少组织变动，同时保证以任务为重心，而不是以人为重心<ul>\n<li>只有极少数例外，譬如有特殊才干，从事非一般工作，取得杰出成就的人</li>\n</ul>\n</li>\n<li>能建立一流经营体制的管理者<strong>在公事上</strong>，通常会和周围同事以及下属保持一定距离，避免个人好恶挑选人才</li>\n<li>如何做到发挥长处，同时避免因人设事的4个原则<ul>\n<li>一个职位，如果先后多人担任都失败了，那肯定是常人无法胜任的职位，需要重新设计<ul>\n<li>国际部副总裁的压力，需要由按产品类别调整组织，或是按市场的社会经济背景调整组织来合理规划</li>\n<li><strong>只有让“平凡人做出不平凡事”的组织，才是好组织</strong></li>\n</ul>\n</li>\n<li>职位要求要严格，涵盖要广（想象空间大）<ul>\n<li>从而保证下限高，人才又有能充分发挥的机会</li>\n<li>知识工作者的职位设计，还应该能够让人及早发现自己是否适合该职位</li>\n<li>与体力劳动者不同，<strong>知识工作者的贡献产出不仅和本身的知识技能有关，和组织的目标、价值观也有很大关系</strong></li>\n</ul>\n</li>\n<li>用人时，先考虑某人能做什么，而不是职位的要求是什么<ul>\n<li>在考评、绩效制度上，更多从“某人能完成什么”的视角看问题<ul>\n<li>“哪方面的工作他确实做得很好”</li>\n<li>“哪方面的工作还可以做得更好”</li>\n<li>“为了充分发挥长处，他还可以再学习什么知识”</li>\n<li>“如果我有了子女，愿意让子女在他的指导下工作吗，为什么？”</li>\n</ul>\n</li>\n<li>正直的品格很关键</li>\n</ul>\n</li>\n<li>必须能容忍人的缺点<ul>\n<li>结合具体任务来寻找别人的长处</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>用人所长是有效管理者的必备素质，也是组织能否有效的关键</li>\n<li>卓有成效的管理者还会设法发挥<strong>上司的长处</strong><ul>\n<li>不能唯命是从，需要协助上司发挥所长，也能给自己更大的空间</li>\n</ul>\n</li>\n<li>也要了解自己的长处，寻找适合发挥自己长处的工作方式，做出自己的绩效</li>\n<li><strong>管理者的任务不是去改变人，而是在于运用每个人的才干</strong></li>\n</ul>\n<h2 id=\"要事优先\"><a href=\"#要事优先\" class=\"headerlink\" title=\"要事优先\"></a>要事优先</h2><p>时间有限，做重要的事；而立足现在看未来才可看到真正重要的事情</p>\n<ul>\n<li>时间总是不够，只有几种个人、组织的所有才干，才能获得成果</li>\n<li>一次只做好一件事，恰恰能加快工作速度<ul>\n<li>我们往往会低估完成任务的时间</li>\n</ul>\n</li>\n<li>很多组织都容易错误地看待过去的成功和失败<ul>\n<li>当下的很多计划和制度，是基于<strong>过去的经验</strong>确定的，时间久了已不能产生成果</li>\n<li>及时重构，去肥增瘦；只有推陈才能出新</li>\n</ul>\n</li>\n<li>对于新工作，应责成确能证明有能力的人来负责</li>\n<li>所谓压力，总是偏爱机构内部的事务，偏爱已经发生的事而忽视未来，偏爱危机忽视基于，偏向急功近利而忽视现实世界</li>\n<li>真正的难度不在决定做什么，而是<strong>什么可以缓一缓</strong><ul>\n<li>被搁置一般等同于被取消，因为外部世界变化极快</li>\n<li>下面有一些可以确定事情优先顺序的原则<ul>\n<li>将来 &gt; 过去</li>\n<li>重视机会，不要只看到困难</li>\n<li>选择自己的方向不盲从</li>\n<li>目标要高，要有新意，不能只求安全和容易</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>化机会为成果，肯定比解决旧问题更有生产性。解决旧问题，不过是恢复昨天的平衡而已</li>\n</ul>\n<h2 id=\"决策的要素\"><a href=\"#决策的要素\" class=\"headerlink\" title=\"决策的要素\"></a>决策的要素</h2><p>管理者要做对组织绩效有效果的决策，决策是观念性、战略性的，不是细节的、解决问题的。</p>\n<ul>\n<li>一项决策如果不能付诸行动，就只能算作想法</li>\n<li>贝尔公司的费尔和通用汽车的斯隆，解决问题，都着眼于最高层次的观念性认识，所做的决策不是为了适应当时的临时需求，而是战略性考虑</li>\n<li>决策有下面一些要素<ul>\n<li>判别问题性质<ul>\n<li>一般遇到的问题可以分为四类<ul>\n<li>表面现象之下的真正<strong>经常性问题</strong></li>\n<li>特殊情况下偶然发生的实质上<strong>经常性问题</strong></li>\n<li>真正偶发的特殊事件（“黑天鹅事件”）</li>\n<li>第一次出现的“经常事件”</li>\n</ul>\n</li>\n<li>对于经常性问题要有经常性的解决办法——一种规则、一种政策或一种原则</li>\n<li>判断问题性质并没那么简单，可能遇到一些常见错误<ul>\n<li>把经常性问题视为一连串的偶发问题（“实用主义”）</li>\n<li>将真正的新问题视作旧病复发，从而采取错误的方法</li>\n<li>对根本性问题界定似是而非</li>\n<li>只看到问题局部，没看到全貌</li>\n</ul>\n</li>\n<li>一个有经验的管理者总会先假定问题只是表面现象，从最高层次的观念方面寻求解决方法。他要找出真正问题，不满足表面现象，从更基本、更理性、更广泛的观念上谋求解决办法</li>\n</ul>\n</li>\n<li>找到解决问题的限制条件或假设前提<ul>\n<li>边界条件往往不容易找到，因为每个人的视角不同</li>\n<li>错误的边界条件，比没有更误事</li>\n<li><strong>边界条件清晰时，有助于决策人在情况变化时，更快用新决策取代旧决策</strong></li>\n<li><strong>依赖太多边界条件去决策是危险的</strong></li>\n</ul>\n</li>\n<li>考虑问题的正确方案，<strong>之后再</strong>考虑必要妥协或让步事项<ul>\n<li>如果一开始就问“什么是能让人接受的决策”，那永远不会有结果</li>\n</ul>\n</li>\n<li>决策要<strong>兼顾执行措施</strong><ul>\n<li>必须能准确无误地回答下列问题<ul>\n<li>谁应该了解这项决策（object）</li>\n<li>应该采取什么行动（what）</li>\n<li>谁采取行动（subject）</li>\n<li>行动如何进行（how）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>重视反馈，验证决策的有效性<ul>\n<li>决策是会过期的，需要建立反馈机制更新决策</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"有效的决策\"><a href=\"#有效的决策\" class=\"headerlink\" title=\"有效的决策\"></a>有效的决策</h2><p>一项决策若要保证有效，需要考虑各种方案，甚至包括反对意见。另外，电脑不能取代管理者做决策，反而会让更多人参与到决策中。</p>\n<ul>\n<li>决策不是从搜集事实开始，而是先有自己的看法和立场，再去搜集事实证明<ul>\n<li>搜集事实本身就会预设立场，做不到客观</li>\n<li><strong>大胆猜测，小心求证</strong>：假设和见解不必辩论，鼓励大家提出，但是必须经过深思，必须经得起验证</li>\n</ul>\n</li>\n<li>如何<strong>衡量</strong>决策，需要的时间和经历也极多<ul>\n<li>使用反馈的制度</li>\n<li>只有有<strong>多项</strong>方案，从中选择一项，才能称得上判断</li>\n<li>管理者一定要<strong>先有若干种不同的衡量方法，再从中选择最合适的一种</strong></li>\n</ul>\n</li>\n<li>好的决策，应该以<strong>互相冲突的意见为基础</strong>，从不同观点和判断中选择<ul>\n<li><strong>反对意见</strong>相当重要<ul>\n<li><strong>唯有反对意见，才能保护决策者不至沦为组织的俘虏</strong></li>\n<li>反对意见不深，也可以作为决策的“另一方案”</li>\n<li>反对意见可以激发想象力和创造力</li>\n</ul>\n</li>\n<li>当然世上有蠢材和恶作剧的人，不过有效的管理者会假定，某人意见纵然错了，也是由于此人看到的现实不同，或者关注的问题不一样</li>\n</ul>\n</li>\n<li>是否真的需要一项决策<ul>\n<li>满足下面两项原则即可<ul>\n<li>利益远大于成本或风险就该做<ul>\n<li>不要做鸡毛蒜皮的小事，也不要墨守成规</li>\n</ul>\n</li>\n<li>行动或不行动，切忌只做一半或折中</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>决策前，想清楚规范、不同方案、得失也衡量了，采取什么行动也想好了。尚未想清楚前，不要冒冒失失地决策，但都想好了，也绝不会优柔寡断</li>\n<li>电脑只是工具，人类则不是逻辑的，而是具有感官的；电脑所做的决策是预先安排的，不能随机应变，都是基于<strong>硬性原则</strong></li>\n<li>每一位知识工作者有效决策能力的高低，决定了其工作能力的高低</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>全书内容无非两点：</p>\n<ul>\n<li>管理者的工作必须卓有成效</li>\n<li>卓有成效可以学会</li>\n</ul>\n<p>做到卓有成效需要从几个方面努力：</p>\n<ul>\n<li>记录好时间的使用情况，分析时间记录，消除不必要浪费</li>\n<li>集中眼光在贡献上，从执行进入到观念，关注个人目标和组织目标的关联</li>\n<li>充分发挥人的长度，融合个人能力和组织成果</li>\n<li>做重要的事情</li>\n<li>有效的决策，合理的行动</li>\n</ul>\n<p>今天的组织需要的是<strong>平凡人做不平凡的事业</strong>。组织取得好的成效，要靠组织中的人切实进行系统化、专门化的自我训练，成为有效的管理者。在如今，知识工作者为组织服务，除了物质上，在心理需求和个人价值上也需要从工作和职位上获得满足。因此，一定要使组织绩效和个人成就结合起来。管理者在卓有成效上的自我提高就是唯一解法。</p>\n",
            "tags": [
                "管理",
                "效率",
                "知识工作者",
                "卓有成效"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2021/12/07/winning-note/",
            "url": "http://shenlvmeng.github.com/blog/2021/12/07/winning-note/",
            "title": "公司管理和自我修养 —— 《赢》读书笔记",
            "date_published": "2021-12-07T14:27:07.000Z",
            "content_html": "<p>关于管理和商业化这个大话题，《赢》这本书从“术”的角度，结合自身几十年的成功经验，给出了自己的看法和建议。书中的视角不像<a href=\"https://shenlvmeng.github.io/blog/2021/11/24/leadership-pipeline/\">《领导梯队》</a>一样，切入到很实际的角度，很具象地描述和推广领导力模型。《赢》的视角要更为大和全面，在管理上更实用。同时，相对德鲁克的管理学著作对于组织、管理的系统探讨，《赢》又更实用和大杂烩一点，不仅介绍了公司的管理技巧，也讲解了公司竞争、个人发展相关的一些商业手段。整体值得一看，可以开拓自己的做事思路，文本精简而平易近人，很易读。</p>\n<h2 id=\"原则篇\"><a href=\"#原则篇\" class=\"headerlink\" title=\"原则篇\"></a>原则篇</h2><p>韦尔奇从先从自己的经营方式中，总结出4个基本原则，作为后续实践的基础：</p>\n<ul>\n<li><strong>使命和价值观</strong><ul>\n<li>有效的使命需要有<strong>清晰</strong>的方向，以赢的<strong>商业利益</strong>为导向，又要让人充满<strong>雄心壮志</strong><ul>\n<li>例：成为世界上最有竞争力的企业，即各个业务领域都在第一或第二的位置</li>\n</ul>\n</li>\n<li>确定使命始终是企业高管的职责</li>\n<li>价值观体现在人的行动，是具体的、本质的、可以描述的<ul>\n<li>让员工参与进来</li>\n<li><strong>具体的价值观念和行动纲领</strong></li>\n<li>反复实践修正</li>\n<li>配合奖惩</li>\n</ul>\n</li>\n<li>使命和价值观需要融为一体，出现偏离时，通常是因为商业生活中出现了危机</li>\n</ul>\n</li>\n<li><strong>坦诚</strong><ul>\n<li>坦诚可以<strong>减少沟通负担、鼓励信息流动、减少沟通中的信息损耗或走样</strong>；从而吸引更多人参与对话、提高效率、节约成本</li>\n<li>坦诚使人紧张，这是人们的世故带来的，</li>\n<li>鼓励坦诚是项艰难而费时的工作，<ul>\n<li>要普及坦诚，需要不断激励、赞赏、谈论它，还需要自己带头，同时展示给别人看</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>考评</strong><ul>\n<li>考评不过是<strong>资源配置</strong>而已，将资源投放到回报最丰厚的地方，避免不必要的损失</li>\n<li>可以将员工分为最好的20%，中间的70%，最差的10%<ul>\n<li>最好的20%：大加鼓励，基于物质和精神财富</li>\n<li>中间的70%：培训教育、积极反馈，分辨哪些人有提升潜力</li>\n<li>最差的10%：“不是人人都能成为优秀的棒球手”</li>\n</ul>\n</li>\n<li><strong>需要坦诚和清晰的流程来保证</strong><ul>\n<li>清晰的期望值、目标和时间表</li>\n</ul>\n</li>\n<li>在商业生活中，<strong>积极向上且外向</strong>的人通常能做得更好，得到更多偏爱</li>\n</ul>\n</li>\n<li><strong>发言权和尊严</strong><ul>\n<li>人们都希望得到发言权和尊严</li>\n<li>“对于讨论会上的75%的建议，需要现场给出‘行’或‘不行’的回答；剩下的25%要在30天内回答”</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"公司管理\"><a href=\"#公司管理\" class=\"headerlink\" title=\"公司管理\"></a>公司管理</h2><p>下面6章主要介绍公司管理的有效手段</p>\n<h3 id=\"领导力\"><a href=\"#领导力\" class=\"headerlink\" title=\"领导力\"></a>领导力</h3><p>在你成为领导者之后，你的成功和他人的成长有关。有下面一些准则评估一个领导者的领导力：</p>\n<ul>\n<li>坚持不懈提升自己团队，珍惜每一次oneone的机会<ul>\n<li>必须做好评估、提供指导、树立员工自信心</li>\n</ul>\n</li>\n<li>让员工心怀梦想，实践梦想<ul>\n<li>保持和公司同步</li>\n</ul>\n</li>\n<li>深入员工中，传递积极活力<ul>\n<li>一个团队的风格会受到领导的影响，积极的领导才能带出积极的团队</li>\n</ul>\n</li>\n<li>以坦诚、透明度提升自己的可信赖感<ul>\n<li>坦诚、言出必行</li>\n<li>context, not control，激发潜能</li>\n</ul>\n</li>\n<li>有勇气作出决定</li>\n<li>用好奇心和怀疑精神监督业务，要习惯于提问题，不放过问题<ul>\n<li>适当的challenge可以让员工更深入本质</li>\n</ul>\n</li>\n<li>用于承担风险和学习<ul>\n<li>对于比自己优秀的下属，要向他们学习</li>\n</ul>\n</li>\n<li>学会庆祝</li>\n</ul>\n<h3 id=\"招聘\"><a href=\"#招聘\" class=\"headerlink\" title=\"招聘\"></a>招聘</h3><p>招聘的员工可以怎么考察。</p>\n<ul>\n<li>3项考验<ul>\n<li><strong>正直</strong>：说真话、授信、知错能改</li>\n<li><strong>智慧</strong>：有求知欲和知识面</li>\n<li><strong>成熟</strong>：能够控制情绪，尊重他人情感</li>\n</ul>\n</li>\n<li>4E1P人员招聘方法<ul>\n<li><strong>Energy</strong>：积极向上的人热爱生活</li>\n<li><strong>Energize</strong>：能激励人，鼓舞自己的团队</li>\n<li><strong>Edge</strong>：需要能做出果断的决定</li>\n<li><strong>Execute</strong>：有执行力，能落实工作任务</li>\n<li><strong>Passion</strong>：有旺盛的生命力和激情</li>\n</ul>\n</li>\n<li>招聘高层人士的额外特征<ul>\n<li><strong>真诚</strong>：需要保持本色，没有伪装</li>\n<li><strong>对变化来临的敏感性</strong></li>\n<li><strong>爱才</strong>：即希望周边人更优秀和聪明</li>\n<li><strong>强大的韧性</strong>，不怕失败，能屈能伸</li>\n</ul>\n</li>\n<li>招聘管理职位时，至少需要有前两个E</li>\n<li>招聘人才时，要更看重<strong>长远的发展潜力</strong>，努力寻找能和业务一同成长或者能到更高职位的人才<ul>\n<li>在招聘员工时，不要提供他们职业生涯的“终极岗位”</li>\n</ul>\n</li>\n<li><strong>询问上一次的离职原因通常可以获取到绝大多数你想了解的信息</strong></li>\n</ul>\n<h3 id=\"人员管理\"><a href=\"#人员管理\" class=\"headerlink\" title=\"人员管理\"></a>人员管理</h3><p>对于按上章标准招聘来的人才，可以有下面一些管理准则：</p>\n<ul>\n<li>重视人力资源管理，人力资源管理人员可以帮助经理人培养领导者<ul>\n<li>人力资源管理应当与公司其他业务一样重要</li>\n<li>出色的人力资源经理，既是牧师又是父母，既能倾听，又能给与关爱和教育</li>\n</ul>\n</li>\n<li>采用一套严格、非官僚的业绩评价体系<ul>\n<li>简洁明了的评价</li>\n<li>和行为相关联的标准</li>\n<li>每年一次到两次</li>\n<li>应当包含职业发展的内容</li>\n</ul>\n</li>\n<li>有一个激励机制，包括物质上和精神上的<ul>\n<li>和奖赏一样，培训也有同样的激励作用</li>\n</ul>\n</li>\n<li>积极处理和<strong>工会</strong>、<strong>明星员工</strong>、<strong>边缘分子</strong>、<strong>捣乱分子</strong>的关系<ul>\n<li><strong>工会</strong>：正直和积极的态度，有原则</li>\n<li><strong>明星员工</strong>：提前考虑可替代性</li>\n<li><strong>边缘人员</strong>：拉回正轨或者及时辞退</li>\n<li><strong>捣乱分子</strong>：限期改正或及时辞退</li>\n</ul>\n</li>\n<li>不要忽视70%的大多数</li>\n<li>设计更扁平和更易懂的组织框架</li>\n</ul>\n<h3 id=\"解雇\"><a href=\"#解雇\" class=\"headerlink\" title=\"解雇\"></a>解雇</h3><p>既然有招聘，当然就有解雇。解雇分三类：</p>\n<ul>\n<li>违法或者违反道德准则而遭解雇</li>\n<li>因为大环境或经济问题的裁员</li>\n<li>因为业绩不佳的解雇</li>\n</ul>\n<p>对于第一种，不需要解释，当机立断即可。对于第二种，需要让员工提前知道公司的经营情况，从而有提前的心理准备。对于第三种，主要在于降低员工的羞耻感，给一个缓冲时间，尽量做到：</p>\n<ul>\n<li><strong>留下缓冲时间</strong>：给人心理准备</li>\n<li><strong>坦诚清晰</strong>：减少误解，直说事实，无需粉饰</li>\n<li><strong>及时say goodbye</strong>：拖得太久会影响团队的稳定性</li>\n</ul>\n<h3 id=\"改革\"><a href=\"#改革\" class=\"headerlink\" title=\"改革\"></a>改革</h3><p>公司要能适应外界变化和自身情况，积极调整自己，这即是改革。</p>\n<ul>\n<li>如果你认为需要改革，但是却不具备权威，那就提出自己的议案，你的建议如果没得到响应，那么要么接受现状要么离开</li>\n<li>设立清晰的目标和指标，不要为了改革而改革<ul>\n<li>收集bad case</li>\n<li>远离空洞口号，立足实际的行动</li>\n</ul>\n</li>\n<li>招募和提拔支持者<ul>\n<li>这类人通常以“卷王”的形式出现</li>\n</ul>\n</li>\n<li>清理反对者，尤其是在他们构成阻碍的时候</li>\n<li>抓住良机<ul>\n<li>黑天鹅事件无时无刻都在发生</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"危机管理\"><a href=\"#危机管理\" class=\"headerlink\" title=\"危机管理\"></a>危机管理</h3><p>解决危机可能是每个管理者不愿面对，却又不得不面对的事情。下面是这一章中提到的一些tips：</p>\n<ul>\n<li>假设问题本身比表现出来的<strong>更糟糕</strong><ul>\n<li>降低预期，饱和式补救</li>\n</ul>\n</li>\n<li>假设所有人最终都会知道事件真相<ul>\n<li>要坦诚错误，但也不要将所有错误都包揽在身上，保证说得都是事实就行</li>\n</ul>\n</li>\n<li>假设你和所在组织会被人用摸黑的态度描述出来<ul>\n<li>在别人全面曝光之前，如果不能奋起反抗，为自己辩护，那就只能被别人埋葬了</li>\n</ul>\n</li>\n<li>危机处理中，<strong>总要有人付出代价</strong><ul>\n<li>危机后总有变革发生</li>\n<li>有人需要对发生的事故承担责任</li>\n</ul>\n</li>\n<li>假设你的组织将从危机中恢复，并变得更强大<ul>\n<li>就像免疫系统一样</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"赢得竞争\"><a href=\"#赢得竞争\" class=\"headerlink\" title=\"赢得竞争\"></a>赢得竞争</h2><p>不同于上一部分，这一部分在管理以外，介绍赢得商业竞争的各方面</p>\n<h3 id=\"战略\"><a href=\"#战略\" class=\"headerlink\" title=\"战略\"></a>战略</h3><p>全篇在阐述战略没有想象中复杂神秘。无非是摸清游戏规则，找到一个努力的方向，果断行动。</p>\n<ul>\n<li>找一个大方向，找到聪明、实用、可以获得竞争优势的办法<ul>\n<li>如果大方向对头，又有一定宽度，则战略不需要经常变化</li>\n</ul>\n</li>\n<li><strong>把合适的人放在合适的位置</strong><ul>\n<li>为不同类型的方向安排对应特质的人</li>\n</ul>\n</li>\n<li>不断迭代探索最佳实践<ul>\n<li>学习竞争对手或是优秀同行的成功经验</li>\n</ul>\n</li>\n</ul>\n<p>找到一个可以获得优势的大方向需要一些讨论和分析，可以从下面几个角度出发：</p>\n<ul>\n<li>在什么场景下<ul>\n<li>行业里有哪些竞争对手</li>\n<li>市场份额占有情况如何，我们的企业更擅长什么市场</li>\n<li>行业特征怎么样<ul>\n<li>平民化？高附加值？</li>\n<li>长周期？短周期？</li>\n<li>在增长曲线的什么位置？</li>\n<li>决定利润率的因素是什么</li>\n</ul>\n</li>\n<li>竞争对手的优劣势在哪里<ul>\n<li>产品</li>\n<li>研发</li>\n<li>销售</li>\n<li>组织文化</li>\n</ul>\n</li>\n<li>客户有哪些，购买方式如何</li>\n</ul>\n</li>\n<li>最近的竞争态势<ul>\n<li>竞争对手过去一年的改变市场格局的举动</li>\n<li>有什么新产品、新技术或是新的销售渠道</li>\n<li>是否进入了新的玩家</li>\n</ul>\n</li>\n<li>我们的近况如何<ul>\n<li>过去一年，我们企业对市场竞争格局的影响</li>\n<li>是否通过收购、引进新产品、挖角、引进新技术得到竞争优势</li>\n<li>是否失去某些竞争优势</li>\n</ul>\n</li>\n<li>有哪些潜在风险<ul>\n<li>对手有没有可能做出什么事情，将我们封杀出具</li>\n<li>对手有没有什么能改变游戏规则的举动</li>\n<li>公司会不会被收购</li>\n</ul>\n</li>\n<li>有什么胜招<ul>\n<li>我们能做什么——兼并、新产品、全球化</li>\n<li>如何保持用户粘性</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"预算\"><a href=\"#预算\" class=\"headerlink\" title=\"预算\"></a>预算</h3><ul>\n<li>不要把预算会变成辩论会或是形式化的会</li>\n<li>使用灵活的指标，不论是规划预算还是评估盈利结果，用更具建设性的方式讨论<ul>\n<li>对个人和部门的奖励不是根据实际业绩与预算目标对比决定，而是通过实际业绩和此前的业绩结合竞争环境的对比决定，要考虑到现实的战略机会和困难因素</li>\n<li>这种改变的推进可能会遇到持续的阻力</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"有机的成长\"><a href=\"#有机的成长\" class=\"headerlink\" title=\"有机的成长\"></a>有机的成长</h3><p>公司内会通过孵化新产品或兼并收购来获得进一步增长。这一章先介绍新产品。对管理者来讲，有下面3个原则：</p>\n<ul>\n<li>做大笔投入，把最优秀、最进取、最有活力的人放在领导岗位上<ul>\n<li>不要把新业务当做边缘部门，安排平凡的人</li>\n</ul>\n</li>\n<li>大肆宣传新项目的潜力和重要性<ul>\n<li>新项目报告层次至少应该提升2级，甚至到CEO的地步</li>\n</ul>\n</li>\n<li>给予自由度，允许犯错误，让新项目自己成熟起来<ul>\n<li>适当自由度会给人主人翁意识和自豪感</li>\n</ul>\n</li>\n</ul>\n<p>对新业务负责人来讲，要有<strong>创业者</strong>的心态</p>\n<ul>\n<li>要做好资金不足、人手不够优秀的心理准备，竭力去争取！</li>\n<li>适当渲染</li>\n<li>用自我行动争取公司的自由度</li>\n</ul>\n<p>新的项目需要高水平的人才、大规模的资源投入、大规模的宣传。</p>\n<h3 id=\"企业并购\"><a href=\"#企业并购\" class=\"headerlink\" title=\"企业并购\"></a>企业并购</h3><p>上章是增长的一种方式——新项目，这章介绍了增长的另一种方式——并购。并购有下面一些注意事项：</p>\n<ul>\n<li><strong>“平等合并”很难发生</strong><ul>\n<li>至少工业领域内，除了银行和咨询产业，很难发生</li>\n</ul>\n</li>\n<li>不要过分关注经营策略的匹配而忽略了<strong>企业文化的融合</strong><ul>\n<li>不要让被收购方过于影响自己的企业文化</li>\n</ul>\n</li>\n<li>不要在收购中让步太多</li>\n<li>整合行动节奏应该在90天内完成，不要拖泥带水<ul>\n<li>公布清晰的合并程序</li>\n</ul>\n</li>\n<li>克服“征服者综合征”，收购的目标之一是<strong>寻求更好更多的人才</strong><ul>\n<li>合并最大的战略收益之一就是让收购方从丰富的人才库来组建队伍</li>\n</ul>\n</li>\n<li>不要付出太高收购代价</li>\n<li>作为被收购方，不能拥抱变化的人就只能离开</li>\n</ul>\n<h3 id=\"六西格玛\"><a href=\"#六西格玛\" class=\"headerlink\" title=\"六西格玛\"></a>六西格玛</h3><p><a href=\"https://wiki.mbalib.com/wiki/%E5%85%AD%E8%A5%BF%E6%A0%BC%E7%8E%9B\">六西格玛</a>是一种企业质量控制策略。它主要做两件事：</p>\n<ul>\n<li>建立体系，减衡量质量波动</li>\n<li>减少质量波动</li>\n</ul>\n<h2 id=\"个人发展\"><a href=\"#个人发展\" class=\"headerlink\" title=\"个人发展\"></a>个人发展</h2><p>这一部分从个人角度出发，聊聊发展的思路。</p>\n<h3 id=\"合适的工作\"><a href=\"#合适的工作\" class=\"headerlink\" title=\"合适的工作\"></a>合适的工作</h3><p><strong>寻找合适的工作需要时间、尝试和耐心</strong>。下面有一些判断工作或好或坏的信号。</p>\n<ul>\n<li>人<ul>\n<li>好信号：你喜欢那里的人，融入得很好，可以和他们很好地沟通，志趣相投</li>\n<li>坏信号：你感觉自己需要戴上面具，不会和他们交朋友</li>\n</ul>\n</li>\n<li>机会<ul>\n<li>好信号：你能学到之前没有遇到的知识，获得人生或职业的进步空间</li>\n<li>坏信号：你似乎是办公室里最聪明的人，不需要能力提升</li>\n</ul>\n</li>\n<li>未来：从事的每种职业都是一种赌博，它可能会开拓你的发展空间或是缩小你的选择范围<ul>\n<li>好信号：工作会给你能力背书；行业发展强劲或是新兴业务</li>\n<li>坏信号：该产业或公司已经过了巅峰期，不能给职业发展提供更多帮助</li>\n</ul>\n</li>\n<li>主导权<ul>\n<li>好信号：你能自己cover这个工作，同时为自己工作</li>\n<li>坏信号：你出于外在原因，或被迫选择这份工作</li>\n</ul>\n</li>\n<li>工作内容<ul>\n<li>好信号：内容令人着迷，让你感到有趣，或是热爱</li>\n<li>坏信号：只是工作而已，不过是权宜之计</li>\n</ul>\n</li>\n</ul>\n<p>同时要对薪水坦诚，尤其是职业生涯的前几年。另外：</p>\n<ul>\n<li>对于第一份工作的面试，如果没有明显的长处，要保持坦诚和坦白</li>\n<li>如果是当前陷入困境，被迫寻找下一份工作，要记住<strong>寻找更好的工作，最快捷的办法是在现在的岗位上干出业绩</strong>，从而不会显得是能力不足从而寻找下家</li>\n<li>被辞退后，要能坦诚面对，承认错误，然后主动地走出来</li>\n</ul>\n<h3 id=\"晋升\"><a href=\"#晋升\" class=\"headerlink\" title=\"晋升\"></a>晋升</h3><p>可以说晋升是绝大多数人职业生涯中努力追求的，当然首先需要有<strong>渴望晋升的欲望</strong>。</p>\n<ul>\n<li>尽管有些晋升的机会纯粹来自于<strong>运气</strong>，但在职业生涯中，运气起到的作用比你可以控制的因素要小</li>\n<li>晋升的基础主要有两点<ul>\n<li>要：要交出动人的、<strong>远超预期的业绩</strong>，同时机遇来临时，勇于<strong>扩展工作职责到预期范围外</strong><ul>\n<li>eg. 超出预期的行动、新理念、新流程</li>\n</ul>\n</li>\n<li>不要：不要麻烦老板动用<strong>政治资本</strong>帮助你（推一把就水到渠成的地步）<ul>\n<li>eg. 不要当刺儿头，不要表露过强的职业欲望，要获得普遍认可</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>具体下来，用下面几点行动守则<ul>\n<li>要处理好<strong>和下属的关系</strong>，像对老板一样认真<ul>\n<li>也要和下属保持距离，不要跨越边界</li>\n</ul>\n</li>\n<li>在项目上<strong>早日做出成绩</strong>，受到关注或普遍认可<ul>\n<li>勇于承担大家关注的业务</li>\n</ul>\n</li>\n<li>寻找和利用良师益友</li>\n<li>保持积极向上，不要自认为清高或华而不实</li>\n<li>不要惧怕挫折</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"糟糕的领导\"><a href=\"#糟糕的领导\" class=\"headerlink\" title=\"糟糕的领导\"></a>糟糕的领导</h3><ul>\n<li>世界上总有乖僻古怪的人，有的或许就是能当上领导</li>\n<li>不能表现的像一名受害者</li>\n<li>领导一般对他们喜欢、尊重、需要的人表现并不差</li>\n<li>当价值观有问题但是绩效出色的人，公司不一定会很快开除</li>\n</ul>\n<h3 id=\"工作和生活平衡\"><a href=\"#工作和生活平衡\" class=\"headerlink\" title=\"工作和生活平衡\"></a>工作和生活平衡</h3><p>本章有些屁股决定脑袋的成分，很多观点本人并不认同。</p>\n<ul>\n<li>老板最关心的是竞争力，他只希望你的WLB（work life balance）不要影响工作<ul>\n<li>老板的第一优先级是盈利</li>\n</ul>\n</li>\n<li>有出色业绩，才可以有余地追求WLB<ul>\n<li>既然参与了工作这个“游戏”，就要服从游戏规则</li>\n</ul>\n</li>\n<li>很多老板认为WLB是应该自己去解决的问题，不应该交给公司<ul>\n<li>工作和生活总需要平衡和取舍，自己需要承担后果的</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>其他的一些零星问题</p>\n<ul>\n<li>竞争力的三要素<ul>\n<li>成本、质量、服务</li>\n</ul>\n</li>\n<li>考虑公司文化多元化</li>\n</ul>\n<p><em>–END–</em></p>\n",
            "tags": [
                "管理学",
                "公司",
                "个人发展",
                "战略",
                "晋升"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2021/11/24/leadership-pipeline/",
            "url": "http://shenlvmeng.github.com/blog/2021/11/24/leadership-pipeline/",
            "title": "《领导梯队》—— 领导力模型构建",
            "date_published": "2021-11-24T15:07:36.000Z",
            "content_html": "<p>对于很多从一线成长到管理岗位的员工来讲，管理工作和管理能力的阶段多少要靠自己领悟。可能从日常工作、文档培训中形成了管理工作懵懂认识，不成熟的归纳认知很可能会让你卡在某个阶段无法提升，又找不到办法。《领导梯队》这本书从基层开始分析管理路线上每一个阶段的做事思路，或许不能适应在所有场景下，但最起码能给人一种启示——什么才叫管理，以及想走管理路线的话，可以做些什么。当然，做事过犹不及，作为技术人员，理清管理思路后，别忘了你的本职工作。至少在前几个阶段，对你的技术能力是有要求的。</p>\n<h2 id=\"序和导论\"><a href=\"#序和导论\" class=\"headerlink\" title=\"序和导论\"></a>序和导论</h2><p>在讨论领导梯队和领导力模型之前，我们要认清下面一些现状：</p>\n<ul>\n<li>在快速发展的行业里（如互联网），是缺乏领导人才的</li>\n<li>一味地引入，忽视内部培养，无法建立完善而持久的领导梯队</li>\n</ul>\n<p>因此，公司需要一个领导力发展模型，模型从个人贡献者到CEO可以分为6个阶段：</p>\n<ul>\n<li>个人贡献者到一线经理</li>\n<li>一线经理到部门总监</li>\n<li>部门总监到事业部副总经理</li>\n<li>事业部副总经理到事业部总经理</li>\n<li>事业部总经理到集团高管</li>\n<li>集团高管到CEO</li>\n</ul>\n<p>角色负责的范围逐渐扩大，在<strong>工作技能</strong>、<strong>时间管理</strong>、<strong>工作理念</strong>三方面的要求也各有侧重。</p>\n<p>最后，书中提到的领导力模型和阶段并非适用于所有场景，需要根据实际情况灵活调整。毕竟人是复杂的，管理也是。</p>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>这里具体介绍了领导力发展的6个阶段：</p>\n<ul>\n<li>从管理自我到管理他人<ul>\n<li>从专业化、职业化思路转变到<strong>通过他人完成任务</strong>作为自己取得成功的关键</li>\n</ul>\n</li>\n<li>从管理他人到管理经理人员<ul>\n<li>负责选拔人才成为一线经理</li>\n<li>帮助一线经理清除“依靠自己获得成功”的错误观念</li>\n</ul>\n</li>\n<li>从管理经理人员到管理职能部门<ul>\n<li>战略眼光</li>\n<li>跨层级沟通</li>\n<li>和其他部门合作，基于工作需要帮自己部门争取资源</li>\n</ul>\n</li>\n<li>从管理职能部门到事业部总经理<ul>\n<li>清楚管理工作和市场结果的关系</li>\n<li>从盈利和长远发展出发</li>\n<li>兼顾长远和近期目标</li>\n<li>更多时间用来分析反思</li>\n</ul>\n</li>\n<li>从事业部总经理到集团高管<ul>\n<li>资金调拨和人才配置</li>\n<li>培养事业部经理</li>\n<li>评估业务投资组合策略</li>\n</ul>\n</li>\n<li>从集团高管到CEO<ul>\n<li>从管理技能转变到经营理念</li>\n<li>远大抱负、权衡取舍、外部视角</li>\n</ul>\n</li>\n</ul>\n<p>在小公司里，可能不会有这么多领导力的层级。</p>\n<h2 id=\"管理自我到管理他人\"><a href=\"#管理自我到管理他人\" class=\"headerlink\" title=\"管理自我到管理他人\"></a>管理自我到管理他人</h2><blockquote>\n<p>关键词：团队努力、计划、沟通</p>\n</blockquote>\n<p>随着个人贡献者能力的提升，一部分人会被提拔到职业生涯里第一个领导岗位上。在这个岗位上获得成功需要心态上的一大转变，即<strong>工作成功不再通过自己亲自做获得，而是通过下述和团队的努力获得</strong>。在这个位置，经理身上需要承担一些管理动作，包括：</p>\n<ul>\n<li>制定计划</li>\n<li>工作涉及</li>\n<li>人员选拔</li>\n<li>授权</li>\n<li>绩效监督、评估</li>\n<li>辅导和反馈收集</li>\n<li>沟通和氛围营造</li>\n<li>获取资源</li>\n<li>奖励和激励</li>\n</ul>\n<p>在时间管理上，需要划分出更多时间做：</p>\n<ul>\n<li>执行计划</li>\n<li>和下属沟通</li>\n<li>和兄弟部门、客户、供应商等沟通</li>\n</ul>\n<p>这一阶段可以采用下面一些手段帮助经理对齐领导力模型：</p>\n<ul>\n<li>准备：提前对齐岗位期望</li>\n<li>监督：通过旁听、360评估、和同行比较等方法</li>\n<li>干预：oneone沟通，引导</li>\n</ul>\n<p>一线经理是未来领导者的摇篮，在选拔这类人才时，可以考察此人帮助别人成功的意愿以及是否可以从帮助别人获得满足。</p>\n<h2 id=\"管理他人到管理经理\"><a href=\"#管理他人到管理经理\" class=\"headerlink\" title=\"管理他人到管理经理\"></a>管理他人到管理经理</h2><blockquote>\n<p>关键词：授权、选培一线经理、部门协作</p>\n</blockquote>\n<p>这个过程通常代表着从一线经理到部门总监。工作上也主要围绕着一线经理展开，主要职责是整合工作、分配资源和培训管理者。要敢于<strong>授权</strong>，同时建设授权后的问责系统，另外开始培养战略和文化的问题。作为一个部门总监，至少需要以下几个技能：</p>\n<ul>\n<li>选拔和培养有能力的一线经理<ul>\n<li>建设性批评、就事论事</li>\n</ul>\n</li>\n<li>让一线经理对管理工作负责<ul>\n<li>对齐期望，减少越俎代庖</li>\n<li>调整不合适的一线经理</li>\n</ul>\n</li>\n<li>在部门配置资源<ul>\n<li>根据部门情况调配资源（薪水、项目等）</li>\n</ul>\n</li>\n<li>协调下属部门和其他部门的管辖<ul>\n<li>信息共享，鼓励团结协作</li>\n<li>context、not control</li>\n</ul>\n</li>\n</ul>\n<p>其中第一项能力最为重要，要善于授权，培养<strong>大局观</strong>。寻找对管理工作有真正热情的人。在交流时，把一线经理当成一个团队而非一线员工。部门总监是第一个完全依靠管理技能而非从事专业技术工作的管理层级，要能够传递高层战略到基层员工，也要能将基层员工的执行能力反馈给战略制定者。</p>\n<h2 id=\"管理经理到管理职能部门\"><a href=\"#管理经理到管理职能部门\" class=\"headerlink\" title=\"管理经理到管理职能部门\"></a>管理经理到管理职能部门</h2><blockquote>\n<p>关键词：信息收集、全局观、战略思维、成熟度</p>\n</blockquote>\n<p>职能主管这个层级会有多种信息来源，需要能够熟练地收集和理解信息，沟通上从交谈转为倾听，要能积极倾听开放思想。另外，职能主管需要认识到，他不再是职能部门的一员，而是该部门的领导者。他需要拥有<strong>战略性思维</strong>，可以胸怀<strong>全局</strong>把握整体，而不是依赖以往领域的经验做事：</p>\n<ul>\n<li>长期思维（3-5年）</li>\n<li>关注业界最新发展动态<ul>\n<li>技术方面</li>\n<li>经营方面</li>\n</ul>\n</li>\n<li>全面了解商业模式和战略目标<ul>\n<li>业务目标</li>\n<li>市场定位</li>\n<li>战略变动</li>\n<li>如何盈利</li>\n<li>团队优势</li>\n<li>所在部门可以做出的贡献</li>\n<li>其他部门的贡献</li>\n</ul>\n</li>\n<li>将职能部门的所有方面纳入战略考虑，这也要求了解之前不甚熟悉的其他职能领域</li>\n</ul>\n<p>一个称职的事业部副总应该是<strong>成熟</strong>的。这体现在：</p>\n<ul>\n<li>谦逊好学、坦诚清晰</li>\n<li>善于授权、相信他人</li>\n<li>乐于沟通，善于表达</li>\n<li>和兄弟职能部门保持合作而不是竞争，因为个人成功和进步只有在企业成功时才有可能实现</li>\n</ul>\n<p>与之相反，可能会出现下面这些bad case：</p>\n<ul>\n<li>无法从项目运作导向转变到战略导向</li>\n<li>不重视不熟悉或是不感兴趣的工作</li>\n<li>表现不成熟</li>\n</ul>\n<h2 id=\"管理职能部门到事业部总经理\"><a href=\"#管理职能部门到事业部总经理\" class=\"headerlink\" title=\"管理职能部门到事业部总经理\"></a>管理职能部门到事业部总经理</h2><blockquote>\n<p>关键词：时间管理、工作透明、部门权衡、视野开阔</p>\n</blockquote>\n<p>相对职能主管，事业部总经理工作的曝光度要高得多，他有很强的掌控权，也对成本和收入直接负责。副总经理需要制定业务战略和整合各部门工作。对比职能主管的部门策略思维，事业部总经理的<strong>业务战略</strong>思维要求他拥有更广泛的视野，综合无数外部因素，考虑本行业甚至全球事务。</p>\n<ul>\n<li>如何实现业务增长</li>\n<li>如何提高盈利水平</li>\n<li>如何增强竞争优势</li>\n</ul>\n<p>这个思维模式的转变是有难度的，也是必须完成的。</p>\n<p>事业部总经理需要处理错综复杂的各种问题，兼顾短期和长期目标。为了了解业务的方方面面，保证视野开阔，他还需要时间学习很多新知识。<strong>时间管理</strong>成为一个难题。事业部总经理不能单单依靠个人能力获得成功，他需要把部门经理整合成高效团队，重视和平衡所有部门，并把具体工作授权给它们。事业部总经理的关注对比副总经理更为强烈，在项目、计划和人员管理上也有很大权限，这也让他的一举一动十分透明。做每一个决定前都要认真考虑。</p>\n<p>自我提升上，可以借助<strong>协同三角形</strong>模型：</p>\n<ul>\n<li>战略方向<ul>\n<li>竞争优势：产品、市场、客户</li>\n</ul>\n</li>\n<li>人员能力<ul>\n<li>经验</li>\n<li>技能</li>\n<li>思维模式</li>\n<li>视角</li>\n</ul>\n</li>\n<li>组织能力<ul>\n<li>组织结构</li>\n<li>工作设计</li>\n<li>工作流程</li>\n<li>权力配置</li>\n<li>人员配置</li>\n<li>组织文化</li>\n</ul>\n</li>\n</ul>\n<p>可以通过考虑一些问题来实现上面的思考方式：</p>\n<ul>\n<li>我们有合适的产品么</li>\n<li>我们的竞争优势能报纸么</li>\n<li>我们的客户细分市场何合适么</li>\n<li>员工是否有创新意识</li>\n<li>我们是否有客户导向的思维模式</li>\n<li>我们的产品研发部门是否有足够授权</li>\n<li>我们的各部门是否可以有效组织</li>\n</ul>\n<h2 id=\"事业部总经理到集团高管\"><a href=\"#事业部总经理到集团高管\" class=\"headerlink\" title=\"事业部总经理到集团高管\"></a>事业部总经理到集团高管</h2><blockquote>\n<p>关键词：集团战略、新机会、选培事业部总经理</p>\n</blockquote>\n<p>晋升到集团高管后，脱离了具体某项业务。要学会<strong>从集团的角度</strong>出发制定战略，辅导培训事业部总经理。具体体现在</p>\n<ul>\n<li>和事业部领导班子保持交流，选拔和培养总经理</li>\n<li>评估各事业部的战略规划，批准它们的业务规划而不是亲自管理</li>\n<li>超越财务结果评价事业部总经理</li>\n<li>监督各业务部门奉行公司的价值观和各项政策</li>\n<li>在必要的时候使用兼并收购的方式补充业务</li>\n</ul>\n<p>集团高管还要能抽出时间发现行业里的潜在机会和新商机。</p>\n<p>一个合格的集团高管需要有下面的标准：</p>\n<ul>\n<li>业绩优异</li>\n<li>出色的战略能力</li>\n<li>有效的人才培养</li>\n<li>对客户满意充满激情</li>\n<li>敏锐的商业头脑</li>\n<li>愿意共享资源</li>\n<li>践行公司价值观</li>\n<li>关心公司成功</li>\n</ul>\n<h2 id=\"从集团高管到首席执行官\"><a href=\"#从集团高管到首席执行官\" class=\"headerlink\" title=\"从集团高管到首席执行官\"></a>从集团高管到首席执行官</h2><blockquote>\n<p>关键词：可持续发展、执行力、组织能力培养、长期思想</p>\n</blockquote>\n<p>首席执行官受到各方的密切关注，不容出错。在领导力模型里面临下面一些挑战：</p>\n<ul>\n<li>平衡长短期利益，实现可持续发展</li>\n<li>设定公司发展的方向，承担风险，深思熟虑<ul>\n<li>公司方向、行业变化、商业模式、竞争格局</li>\n</ul>\n</li>\n<li>培养组织能力，保证人才供给</li>\n<li>确保战略执行到位，对如何盈利有与生俱来的直觉<ul>\n<li>我的表现如何</li>\n<li>我了解公司的情况么</li>\n<li>有向上反馈渠道么</li>\n<li>董事会履行自己授权么</li>\n<li>我的团队高效有活力么</li>\n</ul>\n</li>\n<li>处理好全球化和外部关系</li>\n</ul>\n<p>培养首席执行官没有捷径，一个首席执行官需要经历领导力模型的大多数阶段，他的理想路径包括：</p>\n<ul>\n<li>在核心业务部门的多个职位工作过</li>\n<li>有海外任职经历</li>\n<li>领导业务部门实现突破性增长</li>\n<li>领导新兴业务和振兴衰落业务</li>\n<li>主管过公司的人力资源</li>\n</ul>\n<p>首席执行官的工作目标通常都需要<strong>较长的时间</strong>才能逐步达成，工作理念上也要有所转变。</p>\n<h2 id=\"诊断问题\"><a href=\"#诊断问题\" class=\"headerlink\" title=\"诊断问题\"></a>诊断问题</h2><p>在上面介绍完了整个领导力模型后，这里可以比照着整个模型，定期做整个组织的审视，很容易发现人员错误配置在某一层级的情况。通常因为在快速晋升的过程中，遗漏或仓促跳过了一些发展阶段，做事思路还没有转变。这会引起：</p>\n<ul>\n<li>虽然短期业务看着不错，对长期可持续发展却没有帮助</li>\n<li>越俎代庖和工作效率下降</li>\n<li>对员工职业发展不利</li>\n</ul>\n<p>在评估时，可以通过和个体以及个体的上下级沟通，判断在领导技能、时间管理、工作理念几方面是否和层级相匹配。</p>\n<h2 id=\"改善业绩评估\"><a href=\"#改善业绩评估\" class=\"headerlink\" title=\"改善业绩评估\"></a>改善业绩评估</h2><p>在日常的绩效评估中，可以加入领导模型的能力评估。避免出现职责断裂或者重叠的情况。可以用圆圈标识一个员工的7项绩效内容期望。当达到<strong>全面绩效</strong>时，可以考虑将他人名到一个新的领导岗位。每提升到一个新的领导层级，从会出现绩效缺口。在培训工作持续进行时后，培训对象会逐渐取得全面绩效。这个时候对其进行超常规能力的测试，如果结果表明候选人已做好准备，就可以继续升职。这个测试可以通过让同一层级的领导者组成团队，完成一项高度挑战性任务来实施。</p>\n<h2 id=\"继任计划\"><a href=\"#继任计划\" class=\"headerlink\" title=\"继任计划\"></a>继任计划</h2><p>继任计划是指在各级领导梯队中培养高绩效人员，确保充足的人才储备。整体思路是关注<strong>绩效</strong>和<strong>潜能</strong>，适配公司的实际情况，定期审视领导梯队继任计划。</p>\n<p>潜能上分3档：</p>\n<ul>\n<li><strong>转型潜能</strong>：3-5年甚至更短时间可以从事下一层工作</li>\n<li><strong>成长潜能</strong>：不久可以从事同一层级的更重要工作</li>\n<li><strong>熟练潜能</strong>：可以更好完成当前层级的相同工作</li>\n</ul>\n<p>从潜能和绩效两个维度，可以划分出9类员工。针对不同方格内的员工，着重培养领导力和提升绩效。</p>\n<p>好的继任计划要求适用在所有业务和职能、贴合公司实际、可以公开讨论。</p>\n<h2 id=\"梯队的潜在缺陷\"><a href=\"#梯队的潜在缺陷\" class=\"headerlink\" title=\"梯队的潜在缺陷\"></a>梯队的潜在缺陷</h2><p>领导梯队也有遇到问题的时候，通常可能来自下面这些情况：</p>\n<ul>\n<li>选错人才<ul>\n<li>在上一个层级做出成绩，不代表他的领导技能、时间管理、工作理念都已达到下一层级的要求</li>\n</ul>\n</li>\n<li>让表现不佳者在岗位停留太久<ul>\n<li>判断一名管理者是否还依赖上一级的领导技能、时间管理、工作理念</li>\n<li>观察管理者直接下属的职业发展和业绩</li>\n</ul>\n</li>\n<li>不善于倾听反馈<ul>\n<li>开阔心胸</li>\n<li>选择性听取</li>\n</ul>\n</li>\n<li>不善于定义工作<ul>\n<li>明确责任边界</li>\n<li>对齐责任边界</li>\n</ul>\n</li>\n</ul>\n<p>一个组织能需要有一个领导力框架，它能给绩效评估标准，提供更多的讨论问题的角度。通常一个团队内缺乏坦诚也是缺陷即将出现的危险信号。</p>\n<h2 id=\"职能主管发展路线\"><a href=\"#职能主管发展路线\" class=\"headerlink\" title=\"职能主管发展路线\"></a>职能主管发展路线</h2><p>除了上面提到的领导力模型之外，还有职能方向的支线，即从集团职能主管到企业职能主管。集团职能主管和事业部总经理很像，但又不太一样：</p>\n<ul>\n<li>事业部总经理将智能战略纳入到整体业务计划中，但职能直观则将每一个事业部的职能战略纳入到集团整体的职能战略中</li>\n<li>两者都要有商业思维，职能主管也要从“我们能这么做么”转变到“我们这样做能赚钱么”</li>\n<li>职能主管通常同时向集团职能主管和事业部总经理负责，这需要他能灵活处理各种人群和利益关系，并且知道怎么妥协</li>\n<li>集团职能主管主要为集团高管提供咨询意见而不是产品和其他内容</li>\n</ul>\n<p>作为集团职能主管，要避免出现下面的情况：</p>\n<ul>\n<li>给所有人承诺，却从不兑现<ul>\n<li>集团职能主管要能够分解复杂关系，划清责任边界，获知业务优先级、自己优先级，最后做出果断的决定</li>\n</ul>\n</li>\n<li>过度干涉职能部门经历的工作</li>\n<li>整天围着集团高管转</li>\n</ul>\n<p>企业职能主管一般指CFO、CTO、COO、总法律顾问这些。他们的目的是将自己的职能和公司联系在一起，因此他们必须设定职能发展方向、学会服务整个公司而不仅是自己的职能、了解公司外部环境。要能满足下面一些要求：</p>\n<ul>\n<li>商业竞争中如何发挥职能的支持获得竞争优势</li>\n<li>了解所在职能在业界的发展状况</li>\n<li>向集团高管提供所在职能领域或一般性领域的发展机会</li>\n</ul>\n<p>下面是一些对于企业职能主管的发展建议：</p>\n<ul>\n<li>尽早获取专家对职能部门的建议</li>\n<li>和CEO和各层级关键领导对齐你的目标和计划</li>\n<li>定期和各层级部门交流</li>\n<li>学会管理时间</li>\n</ul>\n<h2 id=\"教练辅导\"><a href=\"#教练辅导\" class=\"headerlink\" title=\"教练辅导\"></a>教练辅导</h2><p>教练辅导即用一种富有激励的方式，将上面的领导力模型指引给员工或是管理者。可以通过一些问题确定此人的领导能力、时间管理和工作理念：</p>\n<ul>\n<li>谈谈你的职业发展<ul>\n<li>经历的每一个职务</li>\n<li>工作具体内容</li>\n<li>工作成就</li>\n<li>重大挑战</li>\n</ul>\n</li>\n<li>现在职位的工作<ul>\n<li>面临的问题、挑战</li>\n<li>取得的成就</li>\n</ul>\n</li>\n<li>工作日程</li>\n<li>主要依靠的技能</li>\n<li>工作信念是什么</li>\n<li>职业抱负是什么</li>\n</ul>\n<p>有些时候，自己进行教练辅导会比聘用不专业的教练要更好。</p>\n<h2 id=\"领导力模型惠及全员\"><a href=\"#领导力模型惠及全员\" class=\"headerlink\" title=\"领导力模型惠及全员\"></a>领导力模型惠及全员</h2><p>略</p>\n<p><em>–END–</em></p>\n",
            "tags": [
                "读书笔记",
                "管理学",
                "领导力",
                "梯队"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2021/10/22/tour-to-jinan-and-qingdao/",
            "url": "http://shenlvmeng.github.com/blog/2021/10/22/tour-to-jinan-and-qingdao/",
            "title": "济南、青岛之行 —— 泉海之约",
            "date_published": "2021-10-22T04:33:39.000Z",
            "content_html": "<blockquote>\n<p>流水账向絮叨文风，以纪念和嘉雯的第一次旅行</p>\n</blockquote>\n<h2 id=\"序：出发！\"><a href=\"#序：出发！\" class=\"headerlink\" title=\"序：出发！\"></a>序：出发！</h2><p>国庆节的出游通常都要提前一个多月计划，不过这次出游计划却比较仓促。由于某人的身体原因，我们在节前数天才定下这趟我期待了好久的出游。这一方面倒是让我在选择目的地上省了心，有很多之前计划去的地方，要么是去不了，要么是回不来。最终剩下广州、济南+青岛、济南+天津几个选项。报给对象看后，确定了这次山东之行。</p>\n<p>既然定了地点，按我们的风格，三下五除二分工搞定了日程安排和机票住宿。对象继续赶工离谱需求，我回家当表哥伴郎。</p>\n<h2 id=\"Day-1：小吃\"><a href=\"#Day-1：小吃\" class=\"headerlink\" title=\"Day 1：小吃\"></a>Day 1：小吃</h2><blockquote>\n<p>宽厚里、泉城广场</p>\n</blockquote>\n<p>在表哥婚礼的第二天，我早8点从家里出发抵达遥墙机场，对象下午从上海出发抵达济南西站。本以为我会晚很多，没想到机场大巴一路绿灯甚是给力，我们干脆约在济南站见面。大巴到济南站时已近黄昏，“易立竞老师”还给我贴心地留了个麦麦脆汁鸡，啊这就是爱情。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWQ9f.jpg\" alt=\"济南站\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWnAI.jpg\" alt=\"易立竞老师\"></p>\n<p>废话不多说，我们打车回酒店修整后，出发前往宽厚里。这是济南远近闻名的小吃步行街。我们一路骑车过来，正是晚上的黄金时间，路上交通拥堵异常（后来发现白天也拥堵）。小吃街也是人声鼎沸，摩肩接踵，每个看起来像是网红店的都排着老长的队伍。我俩大致逛了逛，小吃也没太多新意，奶茶店里，沪上阿姨、蜜雪冰城、冰雪时代几家尤其多。根据大众点评的推荐，我们排了个奶奶的美食，脆皮肠还不错。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWuNt.jpg\" alt=\"宽厚里\"></p>\n<p>也许是垃圾桶摆放不合理，街头的路面很脏，观感比较差。我们最终在一家鲁菜馆解决了晚饭。因为去得比较晚，经典的鲤鱼和大肠已经没了。剩下的菜里，鱼和虾都是酸甜口的，似乎鲁菜的口味都比较浓郁。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWK4P.jpg\" alt=\"晚饭掠影\"></p>\n<p>饭后已近10点，我们从泉城广场打道回府，夜里的广场端详不出明细，都是踏上归途的人。和对象在鸟屋旁一番神来般的交流，观赏鸽子的同时，不巧不远处有夫妻吵架。没待多久，我俩也知趣溜走。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWeHA.jpg\" alt=\"鸟屋\"></p>\n<h2 id=\"Day-2：公园\"><a href=\"#Day-2：公园\" class=\"headerlink\" title=\"Day 2：公园\"></a>Day 2：公园</h2><blockquote>\n<p>大明湖、曲水亭街、芙蓉街、解放阁、黑虎泉公园、趵突泉</p>\n</blockquote>\n<p>尽管地铁没那么方便，但是济南的核心景点距离都很近，可以骑车方便来往，公园基本上都无需门票，相当良心还是要夸一下的。由于距离酒店较近，我们从大明湖开始逛，这里更像一个大型的市民公园，无需门票。好在公园也够大，人流也就稀释得没那么密集，在国庆节期间体验还不错。湖面开阔，有零星游船。四周矗立着不少高楼，应和着绿树青天，有陆家嘴、曼哈顿公园那味儿了。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWl38.jpg\" alt=\"大明湖-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yW1gS.jpg\" alt=\"大明湖-2\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yW3jg.jpg\" alt=\"大明湖-3\"></p>\n<p>只可惜天色多云，要不风景只会更棒。兜圈下来路遇超然楼，考虑门票价格后，弃之继续前行。最后从南门出来，前往南边的百花洲街区。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWJBj.jpg\" alt=\"大明湖碑\"></p>\n<p>从南门正对着的曲水亭街直走是大路，我们随便抄了条小道，迷迷糊糊摸到了临近的芙蓉街，很类似宽厚里，北京的南锣鼓巷，街边的美食和吆喝声让人头攒动的接到更加热闹。抵抗不住诱惑，我俩试了个豆腐和滕州菜煎饼，嗯……果然没太出彩。不过，在这么拥挤的环境下，路面卫生居然出奇得还行。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWGuQ.jpg\" alt=\"小巷\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWYHs.jpg\" alt=\"豆腐\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWNEn.jpg\" alt=\"滕州菜煎饼\"></p>\n<p>从芙蓉街绕回曲水亭街后，我俩继续骑车，抄了一些小道后，我们到达临近宽厚里的解放阁。这里也无需门票，拾阶而上，在阁顶能俯瞰内城东南角附近。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWUNq.jpg\" alt=\"小巷-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWwCV.jpg\" alt=\"解放阁-1\"></p>\n<p>转瞬间，狂风大作，暴雨倾盆。幸好我俩带了伞。雨后的风光似乎被蒙上了一层灰，很是朦胧。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWa40.jpg\" alt=\"解放阁-2\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yW03T.jpg\" alt=\"解放阁-3\"></p>\n<p>不远处，居然有一个露天泳池，在雨中似乎并没有受到积极性的打击。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWBgU.jpg\" alt=\"露天泳池\"></p>\n<p>解放阁下便是黑虎泉公园，据说泉水来自地下水，可以直接饮用。同样是不要门票，这里人也不少。我们来到才发现，这里其实不只黑虎泉一个泉，有不少泉眼，涌出的水注入到城河。这水清冽无比，以至于里面连小鱼都没有，若不是有气泡不间断珍珠般涌出，水面似乎像静止了一样。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWDvF.jpg\" alt=\"白石泉\"></p>\n<p>公园内水量最大当然也是最出名的莫过于黑虎泉。对于我俩这种从未见过泉水的人来说，可谓是大开眼界叹为观止。原来泉水还能涌出这么大的量，地下水这么多的么。泉边专门设有接水的地方，我尝了点，比矿泉水淡一些，又比白开水多一点味道。这里吸引了不少游客驻足。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWyDJ.jpg\" alt=\"黑虎泉\"></p>\n<p>当然了，这里的两个题字也是妙极。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yW2U1.jpg\" alt=\"黑虎泉题字-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWgER.jpg\" alt=\"黑虎泉题字-2\"></p>\n<p>后续泉眼大同小异，人流不多，这里不再赘述。从公园出来正好又回到昨日的泉城广场，我俩又是一路骑车来到内城西南角的趵突泉，路上得以看到白天的泉城广场的模样。趵突泉需要40元门票，可以美团网上订票，可这并没有阻挡国庆节热情满满的游客。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yW6b9.jpg\" alt=\"趵突泉公园\"></p>\n<p>趵突泉公园并不止有趵突泉这一头牌，它也是一组泉眼。这一点和黑虎泉公园差不多。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWR4x.jpg\" alt=\"漱玉泉\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWfC6.jpg\" alt=\"卧牛泉\"></p>\n<p>经过黑虎泉的洗礼，在见到趵突泉之前，我很好奇它是什么模样，可以如此出名夺目。不过见到后，不禁感慨还是自己年轻了。三眼泉水，左右两股更大，中间一股略小，但整体水量充沛。在平静的湖面上激起湍流，水质清澈见底，真乃奇观。直令人挪不开脚步。我俩驻足了有近半个小时。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yWh8K.jpg\" alt=\"趵突泉\"></p>\n<p>泉水涌出的水汇聚后，流入到护城河中。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yW4gO.jpg\" alt=\"泉水\"></p>\n<p>天色已晚，我俩骑车去了一家潮汕砂锅粥店，结束了一天密集的美景洗礼。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/21/5yW5vD.jpg\" alt=\"干炒牛河\"></p>\n<h2 id=\"Day-3：⛰和🍺\"><a href=\"#Day-3：⛰和🍺\" class=\"headerlink\" title=\"Day 3：⛰和🍺\"></a>Day 3：⛰和🍺</h2><blockquote>\n<p>千佛山、老谢野馄饨、小褚烧烤</p>\n</blockquote>\n<p>因为时间有限，这一天的旅程里，我们没有安排较远的山东博物馆和美术馆。决定在城南往事吃了午饭后去千佛山看看。午饭是正宗的鲁菜，我俩根据大众点评的推荐，里面下面这些：</p>\n<ul>\n<li>糖醋鲤鱼</li>\n<li>九转大肠</li>\n<li>油旋</li>\n<li>醋熘腰花</li>\n<li>水煎包</li>\n<li>老酸奶</li>\n</ul>\n<p>基本没有踩雷，口味都较浓郁，适合稍重口一点的人吃。鲤鱼是这家店的招牌菜，店员还会帮忙拆鱼。油旋很香，不过分量也不少。酸奶里不知放了什么，口感十分特别，介于酸奶和老酸奶之间，很爽口。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yoxx0.jpg\" alt=\"城南往事-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yov2q.jpg\" alt=\"城南往事-2\"></p>\n<p>解决午饭后，自然又是骑行去千佛山。爬山的前半程较缓，让我对它的高度产生了一些误会。根据我的观察，山应该得名于里诸多的佛像。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yojGn.jpg\" alt=\"千佛山-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTSMV.jpg\" alt=\"千佛山-2\"></p>\n<p>在历山院的半山处，可以俯瞰城区景观。经过一个名不副实的历山飞瀑后，再爬一段陡路就可以来到山顶制高点，这里风势略大，但是视野极好。不仅能尽览城区，起伏的丘陵也是一览无余。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yoXPs.jpg\" alt=\"历山院\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTprT.jpg\" alt=\"俯瞰-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yT9qU.jpg\" alt=\"俯瞰-2\"></p>\n<p>天色不妙，我俩没在山顶待太久便下山打道回府，收拾行李准备前往青岛。在济南站，还吃到了满大街到处都有的超意兴，自助选餐，找到了大学打饭的感觉。顺便弥补了之前没有吃到把子肉的遗憾，不过，吃到第一口便发现，“不吃很遗憾，吃了更遗憾”。很油腻，我和对象俩人吃了一口不到。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTPZF.jpg\" alt=\"超意兴\"></p>\n<p>经过2个小时的车程，我们在青岛站下车。此时已近10点，我俩直接坐地铁来到江西路旁的酒店修整。稍微调整过后，还是决定出门吃个夜宵。既然是夜宵，又是在青岛。那当然是烧烤+啤酒没跑了。先暂时把体重的事情放一边。在大众点评一番寻找，我做了这个旅程最后悔的决定，去老谢野馄饨吃烧烤。这家店在大众点评上颇为火爆，他家的野馄饨据说美味且实惠。从下车开始，看到店门口茫茫多的人，不妙的兆头已经萌发。但“来都来了”，我俩还是硬着头皮尝试进店点餐。店内更是混乱，柱子上贴着需要自己寻找座位的字样，顾客非常多。坐下来吃的是少数，更多是坐下来等上串的，还要不少站在桌边等吃完的。画面甚是壮观。由于服务效率太低，管理也不好，桌面和地面上残骸不少。再加上有不知如何点餐的新人（就譬如我们），场面一片混乱。我抬手看了下表，难以置信这是晚上11点。</p>\n<p>店里馄饨需要点，烤串需要自己挑选然后交给前台烤，啤酒也要自己打。店员很冷酷地告诉我们，目前烤串要等1个半小时，还好刚刚的糟糕情况给了我俩心理准备。一顿摸索，我俩来到了地下一层，这里稍微好点（可能因为有人不知如何下来），只是有不散的烟味。我们扫了码，和人拼桌，放弃了烤串，准备吃个馄饨就走。大概40分钟后，在主动抱怨下，终于吃上珍贵的12元馄饨。此时和我们拼桌，比我们还晚来的情侣已经吃完走人。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTia4.jpg\" alt=\"老谢野馄饨\"></p>\n<p>馄饨汤的胡椒味很重，皮和馅儿很棒，很对我口味。不过对比漫长的等待和糟糕的服务质量，还是不值的。边吃，我们边寻找备选吃点喝点。结果发现巧合的是，这里距啤酒博物馆很近。最终在大多数已经关门的烤串店里，找到幸存的小褚烧烤。这家店离青岛啤酒厂的大门很近。我们要了一扎原浆。原浆未经过多的防腐手段，保质期比较短，因此也保留了更多发酵的菌群，朴实和清甜的口感未经修饰，是我喝过最棒的啤酒了。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTFIJ.jpg\" alt=\"青岛原浆\"></p>\n<p>兴许是老谢的对比，兴许是真饿了，烤串也比我在北京吃的更棒。也算是一天的慰藉。酒足饭饱已经是第二天，幸在很好打车，回到酒店，对象倒头就睡。我洗罢衣服也睡下。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTAi9.jpg\" alt=\"小褚烤串\"></p>\n<h2 id=\"Day-4：海和丘陵\"><a href=\"#Day-4：海和丘陵\" class=\"headerlink\" title=\"Day 4：海和丘陵\"></a>Day 4：海和丘陵</h2><blockquote>\n<p>开海海鲜、太平角、海水浴场、八大关、信号山、大学路鱼山路、小鱼山、五四广场、本家韩国菜</p>\n</blockquote>\n<p>依旧是多云转阴的一天，我们甚至起得更晚了。出门时已近中午，我们干脆直奔五四广场的万象城。好在从江西路坐地铁去五四广场还比较方便。当初看酒店的时候，青岛因为旅游的属性，价格整体就要比济南高出一截。五四广场附近的就更离谱了。当然要是你财力雄厚，当然还是住在五四广场附近更加方便。</p>\n<p>到达万象城的时候正是饭点，好在这里不像北京吃饭那么卷，大国庆的排队的人也还能接受。我们在溜冰场和附近的小吃城逛了下就到了。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTVR1.jpg\" alt=\"万象城\"></p>\n<p>来青岛自然要吃海鲜，我和对象错过了最好的季节，但也还是有的吃的。我俩事先做了下功课，根据我们的喜好要了：</p>\n<ul>\n<li>辣炒小鲍鱼</li>\n<li>辣炒蛤蜊</li>\n<li>海鲜水饺全家福</li>\n<li>锅烧碟鱼头</li>\n</ul>\n<p>这几个算是这家的招牌了，剩下还有海参拌饭，捶山茄啥的就无福消享了。不愧是当地人推荐的店，除了鱼头，其他几个我觉得都很棒，鲍鱼很入味，蛤蜊的性价比简直超神。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTEGR.jpg\" alt=\"辣炒小鲍鱼\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTmM6.jpg\" alt=\"辣炒蛤蜊\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTZxx.jpg\" alt=\"水饺全家福\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTuqO.jpg\" alt=\"锅烧碟鱼头\"></p>\n<p>饭后坐两站地铁来到太平角，就可以沿着海岸线感受青岛的魅力了。沿海的栈道非常长，能够走好几天。海景自然也是赏心悦目，只可惜天色一片苍白。若是暑假过来，肯定是另一番美景。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTnsK.jpg\" alt=\"太平角\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTMZD.jpg\" alt=\"海景\"></p>\n<p>在和对象切磋过（基本是碾压）打水漂技巧后，我们顺路看了下附近八大关街区，街区较小，但是恰似青岛的缩影，上下坡不断，充分展示出丘陵的地形。这可能也是青岛没有共享单车的一大原因吧（电单车也没有）。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yT3id.jpg\" alt=\"八大关-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTQde.jpg\" alt=\"八大关-2\"></p>\n<p>回到第二海水浴场的路上，偶遇的喵和花挽救了对八大关的失望。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTlIH.jpg\" alt=\"吸猫\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yT8JA.jpg\" alt=\"花-1\"></p>\n<p>来海边除了打水漂，免不了还有戏水环节。对象身先士卒冲了下去。11月的海水，似乎也并没有那么刺骨。我还趁机尝了下海水。啊呸，果然是咸的。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTGRI.jpg\" alt=\"戏水-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTJzt.jpg\" alt=\"戏水-2\"></p>\n<p>时间有限，我们继续向第一海水浴场和信号山走去。一路可以轻易看到海天一线的景观，实在是悦目极了。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTtQP.jpg\" alt=\"海景-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTNsf.jpg\" alt=\"海景-2\"></p>\n<p>目前不是夏天，我们简单穿过海水浴场，开始了爬坡的旅程。在青岛旅游似乎总少不了上上下下。去信号山的一路也是如此，还很神奇的路遇大学路鱼山路的网红墙，不过除了俩路牌，我实在想不到可以网红的点。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTUL8.jpg\" alt=\"鱼山路\"></p>\n<p>信号山不大，也无需门票。山顶可以俯瞰红瓦黄墙，若再有蓝天晚霞那就太美了，很值得一来。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTdeS.jpg\" alt=\"信号山-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yTwdg.jpg\" alt=\"信号山-2\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/5yT0oQ.jpg\" alt=\"信号山-3\"></p>\n<p>没过多久，天色变暗，气温下来。我们放弃了后续安排，下了山，计划坐地铁去五四广场。路上还看见了神奇的红色光环，喝到了中药味的崂山可乐。在冰冻加持下，似乎也没有那么暗黑。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/561JyQ.jpg\" alt=\"光环\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/561Uwn.jpg\" alt=\"崂山可乐\"></p>\n<p>晚饭依旧是在万象城解决的。吃的韩餐，青岛的韩国人挺多，韩式料理比较正宗。这个本家韩国料理也是当地朋友推荐的。石锅拌饭和冷面都还不错。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/561aoq.jpg\" alt=\"本家\"></p>\n<p>饭后，五四广场是绝佳选择，这里是欣赏灯光秀最佳地点，诸多高楼的灯光拼凑出歌唱祖国的图样，红得耀眼。广场上，小商贩和城管玩着捉迷藏。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/561YLj.jpg\" alt=\"五四广场\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/22/561Nes.jpg\" alt=\"夜景-1\"></p>\n<p><img src=\"https://i.loli.net/2021/10/22/K4vaoQyPkIhRJn3.jpg\" alt=\"夜景-2\"></p>\n<p>五四广场西边还有个音乐广场，里面有些或好或惨不忍睹的素人演唱。晚10点，我俩来到网吧结束了忙碌的一天。战斗很愉悦，她也是。</p>\n<h2 id=\"Day-5：海其二\"><a href=\"#Day-5：海其二\" class=\"headerlink\" title=\"Day 5：海其二\"></a>Day 5：海其二</h2><blockquote>\n<p>鲁迅公园、琴屿路、小青岛、栈桥、台东步行街、小褚烧烤</p>\n</blockquote>\n<p>前一日行程受阻外加赖床，我们第二天果断放弃崂山，继续海边深度游。大概又是12点出门，我们这次的目的地是好美味馄饨店，尝试了这里的皮蛋、蛋黄馅儿馄饨以及微波烤串，还有某人从未吃过的火烧。馄饨和串的形式挺有意思，味道的话差强人意。</p>\n<p><img src=\"https://i.loli.net/2021/10/22/JwojXgHZlPFfOzT.jpg\" alt=\"好美味馄饨\"></p>\n<p>青岛城市里没有共享单车，我俩只能耐心地走到地铁站，再做地铁到人民会堂。在鲁迅公园和琴屿路的交接处再次与海重逢。</p>\n<p><img src=\"https://i.loli.net/2021/10/22/vWlUjdDBGCtZbR4.jpg\" alt=\"琴屿路\"></p>\n<p>涨潮速度比想象中快，我俩险些被困在礁石上，对象还湿了鞋。附近的店里，洞洞鞋倒是不少，我挑了双明黄色的，还有小熊(๑¯㉨¯๑)logo，挺好看。</p>\n<p><img src=\"https://i.loli.net/2021/10/22/JTqh3CAinPKfoWL.jpg\" alt=\"涨潮\"></p>\n<p><img src=\"https://i.loli.net/2021/10/22/KU1kuvaMGeYn3x6.jpg\" alt=\"礁石\"></p>\n<p>天空阴云密布，海面也不平静。远处能看到搭载客人的游轮。琴屿路上，若是晴空万里，可能会更加好点看。</p>\n<p><img src=\"https://i.loli.net/2021/10/22/2zJXQTIkUPH47sd.jpg\" alt=\"游轮\"></p>\n<p>沿着琴屿路走到尽头，可以到达小青岛景区，小青岛的确是个岛，的确很小，也的确很绿。就是下图的左侧部分。</p>\n<p><img src=\"https://i.loli.net/2021/10/22/9Yax3ZjzA7h2suV.jpg\" alt=\"小青岛远眺\"></p>\n<p>我们上岛时，天色已经不太作美。远远地，能看到我们的下个目的地——栈桥。同样的，阴天稍降低了些风景的美感。</p>\n<p><img src=\"https://i.loli.net/2021/10/22/uPZj8JimdOUXVBS.jpg\" alt=\"小青岛-1\"></p>\n<p><img src=\"https://i.loli.net/2021/10/22/kr8YRzGJvQjU39g.jpg\" alt=\"小青岛-2\"></p>\n<p>还未到栈桥雨就下了起来，因为下雨栈桥上人不算太多。远远地，能回望到小青岛。</p>\n<p><img src=\"https://i.loli.net/2021/10/22/MvTLEFWPmwr1sRS.jpg\" alt=\"栈桥\"></p>\n<p>海边的旅程到栈桥就基本到了尾声，我们在M记稍作休整，乘地铁前往奥帆中心。从这里可以获得和五四广场不一样的观赏夜景的视角。高楼灯光秀似乎也更对齐了一点。</p>\n<p><img src=\"https://i.loli.net/2021/10/22/FL1TDJQUpl3RWSO.jpg\" alt=\"奥帆中心-1\"></p>\n<p><img src=\"https://i.loli.net/2021/10/22/5913zo6LMd7nxES.jpg\" alt=\"奥帆中心-2\"></p>\n<p>从奥帆中心离开，我们慕名前往台东步行街。也有幸目睹了十分下沉的万达广场，找到了本世纪初的感觉。这块步行街的氛围和价格都很亲民，就像回到了老家一样。</p>\n<p><img src=\"https://i.loli.net/2021/10/22/BiYxcr67KmQNPFA.jpg\" alt=\"台东步行街\"></p>\n<p>今日的旅程又是以小褚烧烤作为结尾，虽没了第一天那么惊艳，但老板认出了我们是前天来过的，给了我们意外的优惠，还是很惊喜的。啤酒博物馆门外的啤酒街霓虹闪烁，也许这才有资格叫做灯红酒绿吧。</p>\n<p><img src=\"https://i.loli.net/2021/10/22/AYZB9wWXuLS21Qq.jpg\" alt=\"啤酒街\"></p>\n<h2 id=\"Day-6：尾声\"><a href=\"#Day-6：尾声\" class=\"headerlink\" title=\"Day 6：尾声\"></a>Day 6：尾声</h2><blockquote>\n<p>失望的黄焖鸡</p>\n</blockquote>\n<p>由于距离和赖床的双重作用，我们放弃了啤酒博物馆的日程，用黄焖鸡来为第一次一起旅行画上句号。最终在大幅降温前一同离开了青岛。</p>\n<p><img src=\"https://i.loli.net/2021/10/22/ZwePkDrnpNWj2xh.jpg\" alt=\"自拍\"></p>\n<p>之前听人说，“情侣两人一同长途旅行一次，如果不分手，那么他们一定是真爱”。因为在计划阶段的行事风格，以及旅行途中的生活观念、饮食习惯、兴趣爱好等都是未来同居生活的小型预演，可以直接看出两个人的磨合程度。回头看，一起旅行的这些天，我们克服了一些困难，放弃了一些计划，也遇到了一些惊喜。尽管之前，我俩号称合体的晴天娃娃，这趟旅程却都是阴天和多云。不过问题不大，至少心情是漂亮的。相信这会是一个不错的开始，期待下次一同骑车长途旅行。</p>\n",
            "tags": [
                "攻略",
                "随笔",
                "美食",
                "青岛",
                "济南",
                "山东"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2021/10/20/taihu-lark-riding/",
            "url": "http://shenlvmeng.github.com/blog/2021/10/20/taihu-lark-riding/",
            "title": "环太湖骑记",
            "date_published": "2021-10-20T14:30:30.000Z",
            "content_html": "<blockquote>\n<p>经历就会有惊喜</p>\n</blockquote>\n<h2 id=\"序：启程\"><a href=\"#序：启程\" class=\"headerlink\" title=\"序：启程\"></a>序：启程</h2><p>自上次<a href=\"https://shenlvmeng.github.io/blog/2020/10/06/tour-to-qinghai-lake/\">青海湖长途骑行</a>，已经过去1年。这1年里发生了许多计划之外的事情，我优化了旧的喜德盛山地，拥有了新的闪电公路车，追求更佳的骑行体验。我减慢了更博文和读新书的频率，暂停了拉琴训练，腾出时间去追求人生的下一阶段，最后有惊无险最后遇到吕嘉雯，就像是老天对我一直以来坦诚相待的回报。扯远了，说回来，和<a href=\"https://feichashao.com/travels/\">基友</a>约定的一年一次长途骑行还是继续。我们在7、8月份的骑行中就约定好大致的骑行目的地（江南沿海）和时间（中秋节）。青海湖骑行之后，我们患上了补给不足恐惧症，基友最终选定太湖，也是考虑到环湖下来都是大城市带来的优越体验。事后证明，这种安排让这次骑行带上了更多旅行的感觉。</p>\n<h2 id=\"Day-1-北京-gt-苏州\"><a href=\"#Day-1-北京-gt-苏州\" class=\"headerlink\" title=\"Day 1 北京 -&gt; 苏州\"></a>Day 1 北京 -&gt; 苏州</h2><p>这次出发的时间碰巧赶上双减政策，让骑行得以宽裕地进行。只可惜对象要回乡下老家没能参与。我们选在中秋前最后一个工作日的晚上，做卧铺去苏州。</p>\n<p>火车一大早到达苏州，我们住的酒店在<strong>观前街</strong>地区，算是苏州一个传统的购物步行街。7点多的步行街还没有什么人烟。所谓观前街，在步行街的核心地带有一个玄妙观。我们放下行李，在观旁的M记吃了顿早饭，作为旅途的第一顿餐食。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEa8K.jpg\" alt=\"观旁边的M记\"></p>\n<p>从观前街向东走过一个街区，可以到达<strong>平江路</strong>。在没那么商业化的角落，还是能感受到江南水乡的秀气。小桥流水，白墙黛瓦，一叶扁舟，绿柳蓊郁。我们在街巷中随意穿梭，故意做两只无头苍蝇。还无意中捕捉到好几家之前在小红书上看到的网红店。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEBKe.jpg\" alt=\"平江路-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEwvD.jpg\" alt=\"咖啡店\"></p>\n<p>我们来的时间也很巧，上午的时候路上人还不多，气温也很适宜。可以很舒服地慢慢散步扯淡。不得不说，小河的水利治理还挺不错，很少见到垃圾，水质也挺不错。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEdgO.jpg\" alt=\"平江路-2\"></p>\n<p>逛完城墙博物馆，我们兜了一圈又回到观前街，开启游客打卡模式，尝试了秃油黄面和三虾面，还有特色绿豆汤。面的口感还不错，很契合我喜欢吃细面的偏好。面口味偏淡，一碗100+，还不错但没到惊艳的地步。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEUC6.jpg\" alt=\"秃油黄面\"></p>\n<p>绿豆汤着实让人耳目一新，新颖的薄荷味配合冰水的温度让人感觉像是在喝漱口水。整体味道就是糖水口。基友没能坚持喝完，不怪他。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEDDH.jpg\" alt=\"绿豆汤\"></p>\n<p>在酒店稍作休整，我们继续启程，前往金鸡湖旁的国际博览园区。出地铁时，刚好赶上看夕阳的最佳时机。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BErbd.jpg\" alt=\"落日\"></p>\n<p>入夜后，这边商业区的风景要更为迷人。在诚品书店的屋顶，已近中秋的月亮分外亮眼。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEyVA.jpg\" alt=\"诚品屋顶的月亮\"></p>\n<p>当然，之前就有所耳闻的<strong>东方之门</strong>就更要打卡了，站在裤裆底下拍照的感觉还挺好玩。时间有限，<strong>山塘街</strong>我们最终没有去，算是小小的一个遗憾。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEc5t.jpg\" alt=\"东方之门\"></p>\n<p>回到酒店，时间大概是9点多，基友回了房间。我去附近一个网鱼网咖坐了会儿，居然发现以前还剩了30多元没用完，居然还有意外之财，真棒！</p>\n<h2 id=\"Day-2-苏州-gt-无锡\"><a href=\"#Day-2-苏州-gt-无锡\" class=\"headerlink\" title=\"Day 2 苏州 -&gt; 无锡\"></a>Day 2 苏州 -&gt; 无锡</h2><blockquote>\n<p>晒伤程度：0%</p>\n</blockquote>\n<p>骑行的起点从湖边的一个国际青年旅社开始，一天100元，只有一种山地车可以选择，不提供驼包和车锁。可以肉眼看出的不专业。奈何太湖这边没找到其他像样的租车行，且湖边本来就离市区较远。我俩也没挑剔太多。付好500元押金，我们从环太湖大道出发。</p>\n<p>天色不是很好，初到湖边还是比较有新鲜感的，微风吹过，吹散了骑行身上的燥热，还挺舒服。没想到，这也是这几天唯一逃过晒伤的一次。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BE6UI.jpg\" alt=\"环太湖大道-1\"></p>\n<p>和青海湖边上的环湖东路不同，环太湖大道名不虚传，果然是十分贴近湖面，有些路段甚至直接修在湖面上。搭配着青山小河，景色妙绝。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BE2PP.jpg\" alt=\"环太湖大道-2\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BER8f.jpg\" alt=\"环太湖大道-3\"></p>\n<p>简单在太湖湿地公园旁的农家乐吃过午饭，继续出发前往太湖大道，一路依旧在湖边前进。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEfxS.jpg\" alt=\"太湖-1\"></p>\n<p>快骑到无锡边界时，还能看到头顶的飞机。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEW28.jpg\" alt=\"无锡的飞机\"></p>\n<p>经过一座跨河的桥，我们进入无锡市。远离了太湖，但是再次感受到令人安心的城市气息。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BE5rQ.jpg\" alt=\"市界\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BE4Kg.jpg\" alt=\"夕阳路\"></p>\n<p>最终沿着具区路骑行20公里，我们歇脚在<strong>江南大学</strong>旁的宜必思。简单地更换衣物后，正是晚饭时间，我们坐地铁进入城区，化身半日游的游客。在无夕小笼包店里简单地恰了心心念念的蟹粉小笼包和传说中的刀鱼馄饨后，我们来到小红书告诉我们最繁华的<strong>南长街</strong>和<strong>南禅寺</strong>。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEIbj.jpg\" alt=\"蟹粉小笼包 &amp; 刀鱼馄饨\"></p>\n<p>类似的河，类似的巷，也许是因为门店的格调问题，或是路面修缮太过人工，我总觉得没有平江路来的那么自然和和谐。宽阔笔直的街道和河流，让它和之前在丽江大研古镇的旅行体验也有差距。当然热闹还是热闹的，也能勉强感受到江南小城的意味。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BETVs.jpg\" alt=\"南长街-1\"></p>\n<p>当然，中秋的月亮还是很不错的。在南禅寺大概逛了逛，我们打道回府，无锡的地铁线路相对比较简单，可以乘坐1号线直达。和苏州地铁一样，也许是人口不多，在中秋佳节的黄金时间，地铁里也能轻松找到位置，乘坐体验极佳，推荐地铁出行。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BE7an.jpg\" alt=\"南长街-3\"></p>\n<p>回到酒店，烘干好的衣服也好了。对比去年的青海湖骑行，体验好了太多。我们简单收拾下，便带着疲惫睡下。</p>\n<h2 id=\"Day-3-无锡-gt-宜兴\"><a href=\"#Day-3-无锡-gt-宜兴\" class=\"headerlink\" title=\"Day 3 无锡 -&gt; 宜兴\"></a>Day 3 无锡 -&gt; 宜兴</h2><blockquote>\n<p>晒伤程度：80%</p>\n</blockquote>\n<p>第二日天气好了太多，令人心情愉悦，再加上前日的阴天，让我忘记了关键的防晒。为悲剧晒伤埋下了伏笔。我们从江南大学旁的缘溪道出发，沿着高浪西路上山水东路便开始了晒足一天的旅程。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEH5q.jpg\" alt=\"江南大学-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEqP0.jpg\" alt=\"江南大学-2\"></p>\n<p>路线擦过无锡城区西南边缘，一路湖水树林，路况不错，风景更棒，尤其在<strong>鼋头渚</strong>附近。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEO2T.jpg\" alt=\"鼋头渚\"></p>\n<p>在环湖路锦园路交叉口，沿锦园路骑行可以获得更好的骑行风景。贴着湖边，有一个华东疗养院，附近的有不少钓鱼的人，风景很棒。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BELGV.jpg\" alt=\"锦园路-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEXxU.jpg\" alt=\"锦园路-2\"></p>\n<p>回到环太湖大道，骑一小段可以看到十八湾地质公园，省道路况甚好，当然阳光也甚好，骑过十八湾公园，爬一个长坡来到拐角，有一个缓下坡，边放坡边欣赏湖景的体验太棒了！迎面的清风，路面弯曲的美感，湖面的一览无余，踩踏的双腿似乎都已感受到慰藉不再疲惫。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEvMF.jpg\" alt=\"放坡-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BExr4.jpg\" alt=\"放坡-2\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BEzqJ.jpg\" alt=\"放坡-3\"></p>\n<p>离开省道进入常州市后，可以选择从雪雅线或者雪马路回到环湖路上，一路穿村而过，最后再太滆村回到湖边。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BV9aR.jpg\" alt=\"雪马路\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BVpZ9.jpg\" alt=\"太滆村\"></p>\n<p>晴日下的波光粼粼让太湖看起来更有生气了一点。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BVCI1.jpg\" alt=\"波光粼粼的太湖\"></p>\n<p>回到渎边线后，一路平坦笔直，日光毒辣，工业区属实没什么风景好看，一路狂飙后，在宜浦路交叉口朝宜兴城区逼近。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BM5EF.jpg\" alt=\"渎边线\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BViPx.jpg\" alt=\"宜浦路\"></p>\n<p>经过范蠡大道交叉口，终于有种进入城区的熟悉感，没想到这是痛苦体验的开始，最后进城的几公里，地势上上下下，爬的坡比过往都还多。甚至于都没骑过平路。每当我以为，爬坡到此为止后。放坡结束又要开始下个煎熬。甚至于还有一个在上坡中间的红绿灯，把我虐够呛。一路折磨，最终来到龙背山——今日的终点。庆幸的是，今日宜必思的旁边又熟悉的沙县小吃，填补了我缺失的午餐。</p>\n<p>宜兴没有很多好逛的地方，我们在八佰伴解决了晚餐后，踱步到东浗市民广场算是作罢。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BMH3R.jpg\" alt=\"东浗市民广场\"></p>\n<p>结束一天的骑行后，通红的皮肤和洗澡时的刺痛，不时提醒我防晒的重要性。</p>\n<h2 id=\"Day-4-宜兴-gt-湖州\"><a href=\"#Day-4-宜兴-gt-湖州\" class=\"headerlink\" title=\"Day 4 宜兴 -&gt; 湖州\"></a>Day 4 宜兴 -&gt; 湖州</h2><blockquote>\n<p>晒伤程度：150%</p>\n</blockquote>\n<p>这天依旧是一个很棒的晴天，这次我开始考虑防晒的重要性。虽然我带了长袖，但是是黑色的且不透气，所以只能将就做好防晒就出发。今天的路线就更为简单，沿着浗滨大道来到G104国道，路过高铁站一路缓下坡，骑行体验甚好。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BMbg1.jpg\" alt=\"浗滨大道\"></p>\n<p>在快进入浙江省时，还捕捉到了1314里程碑。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BMOu6.jpg\" alt=\"1314\"></p>\n<p>快到省界前，是一个漂亮的爬坡，和很棒的湖景。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BMqjx.jpg\" alt=\"G104-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BM7C9.jpg\" alt=\"G104-2\"></p>\n<p>省界的里程碑也很有意思。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BMXDK.jpg\" alt=\"省界\"></p>\n<p>在夹浦村岔路口，可以拐到滨湖大道上，让你一路湖景看到够，为了弥补前两天湖景的不足，我和基友不顾日头毒，毅然选择了这条路线。事实证明，我们的选择很正确。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BMjHO.jpg\" alt=\"滨湖大道-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQS4H.jpg\" alt=\"滨湖大道-2\"></p>\n<p>整条路骑到湖州太湖度假区约20公里，当然一路没有太多树荫，一成不变的湖景看久了，显得稍有些枯燥。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BMxED.jpg\" alt=\"滨湖大道-3\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BMzUe.jpg\" alt=\"滨湖大道-4\"></p>\n<p>所幸经过太湖旅游度假区后，几乎是一路下坡，骑行体验很棒，和昨日宜兴的进城之路形成了鲜明的对比。由于没有补充午餐，路上险些低血糖，幸好基友的月饼救了一命。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQ9Cd.jpg\" alt=\"太湖度假区\"></p>\n<p>一顿跋涉后，最终在下午3点来到银泰城对面的康铂酒店。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQC8A.jpg\" alt=\"银泰城\"></p>\n<p>在一顿海底捞弥补宜兴火锅被坑后，我们来<strong>衣裳街</strong>逛了逛，不出所料，是湖州版的南锣鼓巷，果然也有湖南臭豆腐和轰炸大鱿鱼，也不知大鱿鱼犯了什么错，要去轰炸它。也许是工作日，又也许是湖州并不是旅游城市，步行街里的人并不多，贴着市河一侧还稍微有点意境。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQPgI.jpg\" alt=\"衣裳街\"></p>\n<p>一日疲惫，我们走到兴尽，打车回府。</p>\n<h2 id=\"Day-5-湖州-gt-南浔\"><a href=\"#Day-5-湖州-gt-南浔\" class=\"headerlink\" title=\"Day 5 湖州 -&gt; 南浔\"></a>Day 5 湖州 -&gt; 南浔</h2><blockquote>\n<p>晒伤程度：180%</p>\n</blockquote>\n<p>南浔是湖州的一个区，所以这一天的路程不算太遥远。姑且作为修整。沿着苕溪东路来到织里镇，可以拐到318国道上一路直行进入南浔。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQivt.jpg\" alt=\"苕溪东路\"></p>\n<p>318国道从上海人民广场开始到西藏聂拉木县樟木镇中尼友谊桥。中间从成都到拉萨段也是很出名的骑行、徒步、自驾路线。这块里程碑表示距离上海市区只有136公里，比想象中居然近这么多。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQkKP.jpg\" alt=\"G318-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQEb8.jpg\" alt=\"G318-2\"></p>\n<p>由于只有30+km，中午12点多我们就抵达酒店。在一家猪蹄店大快朵颐后，我们回酒店休息到日头没有那么强烈，继续一个游客的使命。我也换上长袖，为过度晒伤盖上一块遮羞布。南浔区<strong>南浔古镇</strong>是较出名的景点，白日有乌镇的感觉，可惜我们来的时候已近饭点。古镇据说5点后不收门票，园内人数尚可，兴许是工作日的原因。南侧部分和平江路、南长街没什么太大的区别，北侧百间楼倒是有别样的韵味。在此处，河道渐宽，游客也比较少，还有一些原住民，有了江南水乡的感觉。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQADf.jpg\" alt=\"南浔古镇-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQZVS.jpg\" alt=\"南浔古镇-2\"></p>\n<p>逛完古镇，在基友的期盼下，今天用海底捞画上句号。从海底捞打车会酒店，短短2公里，没想到滴滴也有人接单，看来还是在大城市呆习惯了。需要避免一些惯性思维。</p>\n<h2 id=\"Day-6-南浔-gt-苏州-gt-上海\"><a href=\"#Day-6-南浔-gt-苏州-gt-上海\" class=\"headerlink\" title=\"Day 6 南浔 -&gt; 苏州 -&gt; 上海\"></a>Day 6 南浔 -&gt; 苏州 -&gt; 上海</h2><blockquote>\n<p>晒伤程度：150%</p>\n</blockquote>\n<p>由于湖州那天在滨湖大道上，已经连着看了20公里的湖景，再加上晒伤严重，最后一天我和基友不约而同选择了没那么沿湖的路线。基友率先出发，出了南浔区没多久，很快由回到江苏省境内。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQeUg.jpg\" alt=\"江苏界\"></p>\n<p>从318国道拐到258省道后，一路坦途。两侧既没有湖景，也没有树荫。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQm5Q.jpg\" alt=\"258省道-1\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQM2n.jpg\" alt=\"258省道-2\"></p>\n<p>路过吴江大道后，我们又回到苏州，由于不确定省道能否左拐到东太湖路，我们从吴江区内绕路过湖，顺便做了补给。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQuCj.jpg\" alt=\"江陵西路\"></p>\n<p>沿着东太湖路一路向西可以回到环太湖大道，我们并没有向南去东山镇做更多的探索。回到熟悉的环太湖大道，心里的石头也落下了地。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQK8s.jpg\" alt=\"环太湖大道\"></p>\n<p>太湖大道上人并不多，我们还了车退了押金，也很轻松地叫了车进城。基友去宜家打卡，我去苏州站坐高铁去上海找对象。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/20/5BQQvq.jpg\" alt=\"三虾面\"></p>\n<p>这几天我们是幸运的，车和人都没出意外状态，除了身上显眼的晒伤。脖子上明显的色差让我的脑袋像是后来组装在我的身体上。这次骑行过后，基友更坚信了我是他的吉祥物，和我一起来骑车，总能避免下雨和疫情。骑行前做的应急预案也很幸运地都没有用上。对比去年青海湖的受苦，这次骑行的风格明显更养生一点，每天不止能磨练筋骨，愉悦眼球，还能在疲惫过后享受现代科技的便利，无脑进入游客模式。体验可以说不能更好了。</p>\n<p>在观前街分别前，我也祝福他十一环海南的旅途一路顺风。我们明年再见👋。</p>\n",
            "tags": [
                "江南",
                "苏州",
                "无锡",
                "宜兴",
                "湖州",
                "南浔",
                "游记",
                "随笔"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2021/09/10/trunk-based-development/",
            "url": "http://shenlvmeng.github.com/blog/2021/09/10/trunk-based-development/",
            "title": "Trunk Based Development（主干开发）介绍",
            "date_published": "2021-09-10T02:44:08.000Z",
            "content_html": "<blockquote>\n<p>主干开发是相对<a href=\"https://nvie.com/posts/a-successful-git-branching-model/\">GitFlow</a>和<a href=\"https://guides.github.com/introduction/flow/\">Github Flow</a>更贴合CI&#x2F;CD（持续集成&#x2F;持续分发）的高效版本控制管理实践，也更贴合Devops团队。</p>\n</blockquote>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>在软件开发的早年期间，GitFlow和GithubFlow被用来在软件开发中做版本控制管理。</p>\n<ul>\n<li>GitFlow工作流中，分为主干分支（<code>master</code>）、开发分支（<code>dev</code>）、特性分支、分布分支、热修分支等，这些分支都是长期存在的，并在需求开发完成&#x2F;bug修复完成&#x2F;代码发布等特定时候执行代码的CR（Code Review）和合码工作。且在合并时，由仓库的核心成员或者管理员们把握代码质量。随着项目的扩大，冲突的几率提高，每次代码合码时候的工作量也大大提升，带来了额外的仓库维护成本。Github Flow便随着Github逐渐流行起来。<br><img src=\"https://nvie.com/img/git-model@2x.png\" alt=\"GitFlow\"></li>\n<li>Github Flow工作流中，只有一个主干分支（<code>master</code>），一些特性分支以及发布时会用到的分布分支。开发者可以自由从主干分支签出特性分支开发、调试，并在需求完成后合入主干分支。一定程度上减少了长期存在分支的维护成本，但同样的，CR依然是项目管理者进行，特性分支合码时代码量依然有可能很大，团队内规范不好的话，也容易导致合码后主干分支不可发布。<br><img src=\"https://images.prismic.io/launchdarkly/bf307def-6bfc-4d27-ac8b-f4dd1a403935_TrunkBasedDev-01+%283%29.png?auto=compress,format\" alt=\"Merge Conflict\"></li>\n</ul>\n<p>主干开发（Trunk Based Development）是一种更敏捷的git工作流，所有的开发者都可以合码到主干分支，结合CI&#x2F;CD流程，有助于团队快速迭代。</p>\n<h2 id=\"什么是主干开发\"><a href=\"#什么是主干开发\" class=\"headerlink\" title=\"什么是主干开发\"></a>什么是主干开发</h2><p>主干开发和CI&#x2F;CD相互依赖相辅相成。</p>\n<ul>\n<li>进行主干开发才能保证CI&#x2F;CD，即每天充分多次的集成乃至发布</li>\n<li>CI&#x2F;CD过程中的<strong>快速</strong>自动化测试可以保证主干分支的可发布性</li>\n</ul>\n<p>在主干开发中每位或者每小组开发者将自己的工作分成小份，然后以每天至少一次的形式从自己的分支合并到主干，由于每次合并代码量不大，CR时间以及CI时间都会缩短。一个典型的主干开发时间轴如下：</p>\n<p><img src=\"https://cloud.google.com/architecture/devops/images/devops-tech-trunk-based-development-typical-trunk-timeline.svg\" alt=\"主干开发时间轴\"></p>\n<p>在主干开发中，某些情况下需要从主干分支中选出最佳的bug修复合并到对应版本中，但如果每天发布多次，则根本不需要发布分支，可直接从主干中部署。这样做的最大优势在于减少开发线，频繁执行小批量合并，将代码保持最新。从而降低团队的合码成本。</p>\n<h2 id=\"如何实现主干开发\"><a href=\"#如何实现主干开发\" class=\"headerlink\" title=\"如何实现主干开发\"></a>如何实现主干开发</h2><p>在进行主干开发时，开发者需要了解如何拆解工作为小份，同时，还需要让构建流程保持通过，如果CI失败，开发者需要立即停止当前工作修复问题，无法短期修复时，也要还原相应更改。通常来讲，主干开发有下面这样的特征：</p>\n<ul>\n<li>仓库里的活跃分支不超过3个</li>\n<li>分支的合码频率不少于每天1次，即分支的生存周期不超过1天</li>\n<li>没有代码冻结期或集成期</li>\n</ul>\n<p>在实践中，有下面一些tips：</p>\n<ul>\n<li><strong>小commit，多合码</strong>：将每次合码改动限制在少量的commit和较少的代码改动上，保证合码时轻松；主干分支应该有频繁的小批量改动合码</li>\n<li><strong>最少1天1合码</strong>：每天合并或关闭待合并分支，有效减少合码压力，提高增量发布敏捷度</li>\n<li><strong>同步Code Review</strong>：主干分支的每次合码需要保证CR的及时响应，这可以借助一些代码分析工具的辅助</li>\n<li><strong>全面的自动化测试覆盖</strong>：确保有全面的自动化单元测试套件，保证测试通过后再合并代码，这也是保证主干分支可发布的基础</li>\n<li><strong>构建快速</strong>：降低CI成本，构建和测试需要在几分钟内完成</li>\n</ul>\n<p>同时也带来两个新概念</p>\n<ul>\n<li><strong>分支抽象</strong>：在主干开发中，合码频率很高，有些大需求可能没有办法在1天内就完成合码，对于未完成的需求，可以在代码中先埋下未使用的新特性，等待需求完成后，再使用埋好的新功能。这种在源代码中提前埋下“代码分支”的方式成为抽象分支（Branch by abstraction）</li>\n<li><a href=\"https://featureflags.io/\"><strong>特性开关</strong></a>：在分支抽象的基础上，有些合并到主干的改动不一定想让所有用户都看见，可以在代码中预先埋入分支语句，再从配置中读取当前是否使用特性。这样可以实现功能灵活切换、实现ab-test等效果</li>\n</ul>\n<p><img src=\"https://images.prismic.io/launchdarkly/7ad744e0-5c46-4a2f-b08d-6013a95e89c5_TrunkBasedDev-02+%283%29.png?auto=compress,format\" alt=\"feature-flags\"></p>\n<h2 id=\"标准开发流\"><a href=\"#标准开发流\" class=\"headerlink\" title=\"标准开发流\"></a>标准开发流</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout master &amp;&amp; git pull --prune</span><br><span class=\"line\">git checkout -b &lt;feat/branch&gt;</span><br><span class=\"line\"><span class=\"comment\"># coding</span></span><br><span class=\"line\">git push -u origin &lt;feat/branch&gt;</span><br><span class=\"line\"><span class=\"comment\"># after any updates</span></span><br><span class=\"line\">git push</span><br><span class=\"line\"><span class=\"comment\"># or add --force if rebased during updates</span></span><br><span class=\"line\">git push -f</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>更新本地master分支</li>\n<li>签出特性分支</li>\n<li>编码</li>\n<li>推送本地分支到远端</li>\n<li>提MR，如果MR后有更新，继续push，当rebase master遇到冲突时，推送需要增加<code>-f</code>参数</li>\n<li>合码</li>\n</ol>\n<blockquote>\n<p>注：因为主干开发每次合码量不大，建议使用<code>rebase</code>解决冲突</p>\n</blockquote>\n<h2 id=\"主干开发的好处\"><a href=\"#主干开发的好处\" class=\"headerlink\" title=\"主干开发的好处\"></a>主干开发的好处</h2><p>主干开发的最大好处在于对CI的亲和度。可以想象开发者完成当日工作，当日合码，当日测试通过完成集成，达到可发布状态。很大程度减少了合码的痛苦。进而有：</p>\n<ul>\n<li>持续CI</li>\n<li>持续CR</li>\n<li>持续CD</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>非常适用于敏捷开发中，对于团队成员能力过关（要懂得怎样拆分需求）、测试有着良好建设的团队来讲，是种提效的好方式，值得一试。相反如果成员拆分不够良好、代码review不够及时，测试不够自动化和系统，则不适用主干开发。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><ul>\n<li><a href=\"https://www.atlassian.com/continuous-delivery/continuous-integration/trunk-based-development\">Trunk-based development</a></li>\n<li><a href=\"https://cloud.google.com/architecture/devops/devops-tech-trunk-based-development\">DevOps技术：主干开发</a></li>\n<li><a href=\"https://trunkbaseddevelopment.com/\">Trunk Based Development: Introduction</a></li>\n<li><a href=\"https://launchdarkly.com/blog/git-branching-strategies-vs-trunk-based-development/\">Git Branching Strategies vs. Trunk-Based Development</a></li>\n<li><a href=\"https://launchdarkly.com/blog/what-are-feature-flags/\">What Are Feature Flags?</a></li>\n</ul>\n",
            "tags": [
                "工作流",
                "主干开发",
                "GitFlow",
                "GithubFlow"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2021/03/22/clean-architecture/",
            "url": "http://shenlvmeng.github.com/blog/2021/03/22/clean-architecture/",
            "title": "《架构整洁之道》—— 软件设计的思考",
            "date_published": "2021-03-22T15:47:20.000Z",
            "content_html": "<blockquote>\n<p>全文参考自马丁大叔的《架构整洁之道》，书中文笔清爽易懂，不过在后半段有点条理不清流于术而非道</p>\n</blockquote>\n<p>在编程领域，问题就像一个生命体一样，是在不断繁殖和进化的。它甚至经常不会人们预期中一般发展。作为一名出色的软件工程师或架构师，你需要有超出普通程序员的视角，考虑系统宏观的未来的发展。你的使命是，在这种恶劣的开发环境下，绘制一幅相对最优的图纸，用最少的时间、人力、金钱构建和维护一个随时可能融化在熵增热汤里的软件系统。和现实物理世界里的架构师类似，你需要了解编程世界里的一般规律，帮助你挑选武器（技术），修炼秘籍（方法论），在不同的江湖里（业务）打造不同的门派（软件系统）。</p>\n<p>开卷有益，祝你练武愉快~</p>\n<h2 id=\"你要做什么\"><a href=\"#你要做什么\" class=\"headerlink\" title=\"你要做什么\"></a>你要做什么</h2><p>简而言之，架构师的终极目标就是<strong>用最少的人力成本来满足构建和维护软件系统的需求</strong>。糟糕的架构设计会让软件在成功之前，就带来高昂的边际人力成本，即开发新需求的开支越来越大（因为程序员的时间都耗费在系统的修修补补上了）。然而，这种日益增长的边际人力成本现象并不少见。来源于类似龟兔赛跑中兔子的盲目自信，实际上，<strong>无论从短期还是长期看，胡乱编写代码的工作速度其实比循规蹈矩更慢</strong>。</p>\n<p>架构师存在的一个必要性就是，软件存在着两种价值维度：</p>\n<ul>\n<li><strong>行为价值（现在时）</strong>：即实现功能和弥补bug。这类价值是<strong>紧急却并不总是重要的</strong>。</li>\n<li><strong>架构价值（将来时）</strong>：即软件是否足够“软”（易于被修改），这类价值是<strong>重要却并不总是紧急的</strong>。</li>\n</ul>\n<p>很现实的一点是，在公司中，<strong>团队之间的抗争本来就是无穷无尽的</strong>。你作为研发团队的一员，职责的一部分就是避免你的代码在抗争的风吹雨打下变成一坨没人爱的shit。</p>\n<h2 id=\"编程范式\"><a href=\"#编程范式\" class=\"headerlink\" title=\"编程范式\"></a>编程范式</h2><p>没错，架构师们也有祖师爷。在1958到1968年期间，3大编程范式就已经陆续出现了。</p>\n<ul>\n<li><strong>结构化编程</strong>，由Dijkstra在1968年提出，并发扬光大，<strong>它对程序控制权的直接转移（程序语句）进行了限制和规范</strong></li>\n<li><strong>面向对象编程</strong>，最早在1966年提出，Ole Johan Dahl和Kriste Nygaard注意到，函数调用堆栈可以被放到堆内存中，从而在函数返回后继续保留。<strong>它对程序控制权的间接转移（函数调用）进行了限制和规范</strong></li>\n<li><strong>函数式编程</strong>，启发自Alonzo Church于1936年发明的lambda演算，发扬于1958年的LISP语言。<strong>它对程序的赋值进行了限制和规范</strong></li>\n</ul>\n<p>值得思考是，三大范式做的都是<strong>限制和规范</strong>，即告诉我们<strong>不能做什么</strong>，而不是可以做什么。另外，多态带来的架构边界飞跃，函数式编程带来的数据访问限制，结构化编程带来的算法拆解为我们架构软件提供了强大武器。这也与软件架构的三个关注点所契合：</p>\n<ul>\n<li><strong>功能性</strong>，即完整的功能实现</li>\n<li><strong>组件独立性</strong>，即合适的耦合度与细粒度</li>\n<li><strong>数据管理</strong>，即良好的数据结构设计</li>\n</ul>\n<h3 id=\"结构化编程\"><a href=\"#结构化编程\" class=\"headerlink\" title=\"结构化编程\"></a>结构化编程</h3><p>Dijkstra在1950年代思考编程时，得出过一个结论：编程是一项<strong>难度很大</strong>的活动。他倾向于把编程类比为数学推导过程，并发现<code>goto</code>的<strong>某些使用</strong>会导致<strong>模块无法被递归拆解成更小的单元</strong>。然而，去掉这些使用的<code>goto</code>可以被<strong>顺序结构、分支结构、循环结构这三种最小集</strong>等价表示出来。从而，大问题可以被逐步拆解为小问题。</p>\n<p>不过，事情也并非这么理想，当程序复杂后，我们不可能像Dijkstra一样，用严格的数学推导形式化证明编程的正确性。相反，类似实验学科的<strong>无法被证伪即正确</strong>，我们现今依旧使用着Dijkstra的结构化编程思路将大问题拆解为小问题。</p>\n<blockquote>\n<p>有趣的是，“无法被证伪即正确”和Dijkstra的一个观点<strong>“测试只能展示bug的存在，并不能证明不存在bug”</strong>不谋而合</p>\n</blockquote>\n<p>简而言之，去掉goto糟粕诞生的结构化编程中，最有价值的地方就是，它赋予我们创造<strong>可证伪程序单元</strong>的能力，从而架构起大程序。在架构设计领域，<strong>功能性拆解仍然是最佳实践之一</strong>。</p>\n<blockquote>\n<p>什么？什么叫做可证伪？你应该写过单元测试吧。</p>\n</blockquote>\n<h3 id=\"面向对象编程\"><a href=\"#面向对象编程\" class=\"headerlink\" title=\"面向对象编程\"></a>面向对象编程</h3><p>什么是面向对象？有人说面向对象是“数据和函数的组合”，也有人说是“对真实世界的一种建模方式”。但这两种理解要么片面，要么虚无缥缈。为了总结这种范式，我们先从它的3大特征入手：</p>\n<ul>\n<li><strong>封装</strong>，即将一组关联数据和函数圈起来。然而这种特性，从C语言起就支持（struct + 头文件），很难说它是面向对象编程的必要条件</li>\n<li><strong>继承</strong>，即可以在某个作用域对外部定义的一组变量与函数进行覆盖。不过C语言也能模拟出这种能力，看起来也比较勉强。</li>\n<li><strong>多态</strong>，即在同一接口描述下的不同具体实现形式，C语言起也做了支持（STDOUT），然而使用函数指针显式实现多态问题就在于指针的<strong>危险性</strong>。而面向对象编程对这种程序间接控制权的转移做了约束。</li>\n</ul>\n<p>传统的函数调用树中，系统行为决定了自上而下的控制流，而控制流决定了<strong>源代码依赖</strong>（代码实现）是自上而下的，比如在C中会使用<code>#include</code>引入依赖。此时不论是代码实现还是代码执行都是自上而下的。然而在<strong>多态</strong>的帮助下，底层函数需要依赖高层接口实现，作为高层函数的插件引入，从而将这种依赖关系和控制流反向，即<strong>依赖反转</strong>。实际上，借助安全便利的多态实现，可以轻松将依赖关系反转。</p>\n<p>从而架构师可以<strong>完全控制</strong>这种方式下，系统中所有的源代码依赖关系，进而随意更改源代码依赖关系。让每个组件都有<strong>独立部署</strong>和<strong>独立开发</strong>能力。好了，我们现在可以说明面向对象编程的含义了：</p>\n<p>面向对象编程就是以多态为手段来对源代码中的依赖关系进行控制的能力。这种能力让架构师可以构建<strong>插件式架构</strong>，让高层<strong>策略性组件</strong>和底层<strong>实现性组件</strong>相分离。借助接口，底层实现性组件作为插件，可以独立于高层组件开发和部署。</p>\n<h3 id=\"函数式编程\"><a href=\"#函数式编程\" class=\"headerlink\" title=\"函数式编程\"></a>函数式编程</h3><p>函数式编程依据的原理早在编程之前就已出现，相对前两种范式，函数式编程的风格可能相对陌生一点。在这类风格中，变量都是不可变的。从而让竞争问题、死锁问题、并发更新问题不复存在。一个架构良好的系统，需要将状态修改的部分和不需要修改的部分隔离开，然后用类似事务型内存的方式来保护可变量。另外，架构师应该着力于将大部分逻辑归于不可变组件中，可变组件的逻辑越少越好。</p>\n<p>书中还提到了只包含CR的事件溯源存储逻辑，即通过事务日志的方式保存当前状态。因为不存在更改和删除，从而不存在并发问题。也是一种很新颖的思路。</p>\n<p>回顾上面的三种编程范式，都在说什么<strong>不应该做</strong>。也即编程好似在充满死路的熵增旷野中，只有沿着相对安全的几个大方向才可拨开迷雾。</p>\n<h2 id=\"设计原则\"><a href=\"#设计原则\" class=\"headerlink\" title=\"设计原则\"></a>设计原则</h2><p>软件的中层需要具有良好的可读性、可扩展性。这里就不得不提到SOLID原则：</p>\n<ul>\n<li>SRP：<strong>单一职责原则</strong>，每个模块有且只有一个需要被改变的理由</li>\n<li>OCP：<strong>开闭原则</strong>，对扩展开放，对修改封闭</li>\n<li>LSP：<strong>里氏替换原则</strong>，子类型应该能够无无缝替换类型使用</li>\n<li>ISP：<strong>接口隔离原则</strong>，依赖的模块不要包含不需要的接口</li>\n<li>DIP：<strong>依赖反转原则</strong>，高层策略性代码不要依赖底层实现性代码</li>\n</ul>\n<h3 id=\"SRP\"><a href=\"#SRP\" class=\"headerlink\" title=\"SRP\"></a>SRP</h3><p>任何一个软件模块（一组紧密相关的函数和数据结构）都应该只对一个行为者负责。实际上，代码和数据就是靠着和某一类行为者的相关性组合起来的。我们需要<strong>将服务不同行为者的代码进行切分</strong>。</p>\n<h3 id=\"OCP\"><a href=\"#OCP\" class=\"headerlink\" title=\"OCP\"></a>OCP</h3><p>设计良好的软件应该易于扩展，同时抗拒修改。实现方式可以通过将系统划分为一系列组件，并且将依赖关系按层次组织，使得高阶组件不会因为低阶组件修改受到影响。</p>\n<h3 id=\"LSP\"><a href=\"#LSP\" class=\"headerlink\" title=\"LSP\"></a>LSP</h3><p>里氏替换原则表示，子类型应该能够被当做父类型使用。它实际上表示了一种面向接口设计的设计原则。一旦违背了这种可替换性，就会不得不在系统架构中增加大量复杂的应对机制。</p>\n<h3 id=\"ISP\"><a href=\"#ISP\" class=\"headerlink\" title=\"ISP\"></a>ISP</h3><p>ISP告诉我们任何软件设计如果依赖了不需要的东西，都是不好的迹象，很容易带来不必要的麻烦。</p>\n<h3 id=\"DIP\"><a href=\"#DIP\" class=\"headerlink\" title=\"DIP\"></a>DIP</h3><p>DIP告诉我们，应该多引用抽象类型，而不是具体实现。因为软件是经常变动的，而抽象出共性的接口则是较少变化的。从而可以衍生出一些守则，譬如：</p>\n<ul>\n<li>应该多使用抽象接口，避免使用多变的实现类</li>\n<li>不要在实现类上创建衍生类</li>\n<li>不要覆盖具体实现的函数</li>\n</ul>\n<p>不过当然了，还是得有人做实现的脏活累活的</p>\n<h2 id=\"组件构建\"><a href=\"#组件构建\" class=\"headerlink\" title=\"组件构建\"></a>组件构建</h2><h3 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h3><p>组件是构建软件的最小单元，同时也是源代码的集合。在早期会使用链接技术将程序和库函数链接起来，而后随着机器性能的增长，我们会在程序运行中插入动态链接文件，如今这种组件化插件式架构是最常见的软件构建形式。</p>\n<h3 id=\"组件聚合\"><a href=\"#组件聚合\" class=\"headerlink\" title=\"组件聚合\"></a>组件聚合</h3><p>和类相似，组件也有一些原则指引我们的构建工作。</p>\n<ul>\n<li>REP：复用&#x2F;发布原则，即可以一起发布的最小粒度就是复用的最小粒度，也即按可以同时发布聚合</li>\n<li>CCP：共同闭包原则，即因为同一原因修改的放在一起，反之不要放在一起，也即按变更原因聚合</li>\n<li>CRP：共同复用原则，即会被一起复用的放在一起，反之不要放在一起，也即按减少无用耦合聚合</li>\n</ul>\n<p>这三大原则相互牵制，在项目的不同阶段，某一原则重要性也会不同；比如在项目早期CCP就会更重要，而后REP会比较重要。</p>\n<h3 id=\"组合耦合\"><a href=\"#组合耦合\" class=\"headerlink\" title=\"组合耦合\"></a>组合耦合</h3><p>本节提出了一些可以定量衡量耦合健康度的指标，比较新颖。</p>\n<ul>\n<li>无依赖环原则：依赖关系中不能有环，会不利于厘清依赖关系；可以通过<strong>依赖反转</strong>或<strong>创建第三方依赖组件</strong>解决。循环依赖关系务必持续监控。</li>\n<li>稳定依赖原则：依赖关系必须指向稳定的方向，简单点说就是让经常变更的组件依赖于不经常变更的组件。一个组件的位置稳定性可以通过入向和出向依赖算出，它要能和组件的实际稳定性匹配。</li>\n<li>稳定抽象原则：抽象化程度需要和稳定性程度一直，即经常变更的组件要容易变更，即更具体实现；反之，稳定的组件要不容易变更，即更抽象。结合上条看，依赖关系应该指向更抽象的方向。</li>\n</ul>\n<p>使用位置稳定性指标I和抽象程度A，可以绘制一个坐标系。在主序列上的是最健康的，相反的两块痛苦区和无用区则是不健康的表现。用偏离主序列线的距离可以大致衡量依赖关系的健康程度。结合发布版本的变化来看，还可以得到变化趋势。</p>\n<h2 id=\"软件架构\"><a href=\"#软件架构\" class=\"headerlink\" title=\"软件架构\"></a>软件架构</h2><p>软件架构目的就是方便在工作中更好地对组件进行研发、部署、运行和维护。其中的策略就是<strong>保留尽可能多的可选项</strong>。让系统最大化程序员的生产力，同时最小化系统运营成本：</p>\n<ul>\n<li>开发：系统架构需要方便开发团队对它的开发，不同的团队结构应该采用不同的架构设计，比如团队的大小就会影响架构的选择</li>\n<li>部署：一键式部署</li>\n<li>运行：几乎任何运行问题都可以通过增加硬件来解决</li>\n<li>维护：减小新功能和系统缺陷占用的人力资源</li>\n</ul>\n<p>保持可选项，忽略那些无关紧要的实现细节。任何软件系统都可以拆解成<strong>策略</strong>（业务的宏观逻辑和流程）和<strong>细节</strong>（具体操作行为）。而<strong>策略才是系统的真正价值所在</strong>。细节是指那些和策略交互的东西，包括:</p>\n<ul>\n<li>I&#x2F;O设备</li>\n<li>数据库</li>\n<li>Web系统</li>\n<li>服务器</li>\n<li>框架</li>\n<li>交互协议</li>\n</ul>\n<p>在设计时，可以尽量拖延上面这些的设计，这样我们做出的决策才不会依赖各种很容易变化的信息。另一方面，也可以<strong>增加实现底层的可替换性</strong>。举个具体例子：<strong>设备无关性</strong>。</p>\n<h3 id=\"独立性\"><a href=\"#独立性\" class=\"headerlink\" title=\"独立性\"></a>独立性</h3><p>一个良好的架构应支持下面几点：</p>\n<ul>\n<li>系统用例：设计良好的架构需要能够<strong>看起来</strong>就可以反映系统的设计意图，比如一个购物车应用架构应该看起来就该是用来实现购物车的</li>\n<li>系统运行：可以解耦出多个独立服务，然后通过某种网络协议通信，这种架构即微服务</li>\n<li>系统维护</li>\n<li>系统开发</li>\n<li>系统部署：理想的独立部署应该能够做到<strong>热更新</strong></li>\n</ul>\n<p>要注意留意表面的重复和实际的重复，如果两段代码变更速率和缘由不同，那么就不算是真正的重复。</p>\n<h3 id=\"划分边界\"><a href=\"#划分边界\" class=\"headerlink\" title=\"划分边界\"></a>划分边界</h3><ul>\n<li>设计良好的系统架构不应该依赖细节，而应该尽可能推迟细节性的决策。通过划清边界，可以推迟和延后细节性的决策，从而节省大量时间，避免问题。</li>\n<li>边界线应该画在不相干的事情中间，譬如GUI和业务逻辑</li>\n<li>针对核心业务逻辑的插件式架构可以提高可维护性和可扩展性</li>\n</ul>\n<h3 id=\"边界剖析\"><a href=\"#边界剖析\" class=\"headerlink\" title=\"边界剖析\"></a>边界剖析</h3><p>简言之，应该尽可能从底层组件指向高层组件。</p>\n<h3 id=\"策略和层次\"><a href=\"#策略和层次\" class=\"headerlink\" title=\"策略和层次\"></a>策略和层次</h3><ul>\n<li>变更原因、时间和层次不同的策略应该属于不同的组件</li>\n<li>按距离系统输入、输出距离的远近，可以确定策略的层次</li>\n<li>源码间的依赖关系，应该主要和组件所在的层次挂钩</li>\n<li>低层组件应该以插件的方式依赖高层组件</li>\n</ul>\n<h3 id=\"业务逻辑\"><a href=\"#业务逻辑\" class=\"headerlink\" title=\"业务逻辑\"></a>业务逻辑</h3><p><strong>业务逻辑是程序中真正用于或者体现赚钱&#x2F;省钱的逻辑与过程</strong>。其中关键逻辑和关键数据紧密组合成为<strong>业务实体</strong>。业务实体应该只有高层逻辑，没有具体实现。而<strong>用例</strong>是业务实体在不同侧面的具体体现。通过用例可以规范用户和业务实体的交互方式。</p>\n<h3 id=\"“尖叫”的软件架构\"><a href=\"#“尖叫”的软件架构\" class=\"headerlink\" title=\"“尖叫”的软件架构\"></a>“尖叫”的软件架构</h3><p>“尖叫”即所见即所得。软件架构本身就足以能够体现其用途。一个良好的架构设计应该围绕用例展开，推迟和延后框架的选择，不要过度拘泥于框架。<strong>框架只是一个可选项</strong>，是一个工具，而不是一种信念，更不是一种架构。</p>\n<h3 id=\"整洁架构\"><a href=\"#整洁架构\" class=\"headerlink\" title=\"整洁架构\"></a>整洁架构</h3><p>一些常见的系统架构通常具有以下特点：</p>\n<ul>\n<li>独立于框架</li>\n<li>可被测试</li>\n<li>独立于UI</li>\n<li>独立于数据库</li>\n<li>独立于外部接口</li>\n</ul>\n<h3 id=\"Main组件\"><a href=\"#Main组件\" class=\"headerlink\" title=\"Main组件\"></a>Main组件</h3><ul>\n<li>Main组件包含了系统中最细节化最底层的策略，它应该在做完脏活累活后，将程序的控制权交给最高抽象层的代码去执行</li>\n<li>针对不同系统可以配置不同的Main组件，即将Main组件视为应用程序的一个插件</li>\n</ul>\n<h3 id=\"服务：微观和宏观\"><a href=\"#服务：微观和宏观\" class=\"headerlink\" title=\"服务：微观和宏观\"></a>服务：微观和宏观</h3><ul>\n<li>系统的架构边界事实上并不落在服务之间，而是<strong>穿透</strong>所有服务，在服务内以组件形式存在</li>\n<li>服务可以提升系统的可扩展性和可开发性，不过服务却并不能代表整个系统的架构设计</li>\n</ul>\n<h3 id=\"整洁的嵌入式架构\"><a href=\"#整洁的嵌入式架构\" class=\"headerlink\" title=\"整洁的嵌入式架构\"></a>整洁的嵌入式架构</h3><ul>\n<li>固件即对平台或硬件的强依赖代码，在固件和软件之间可以设置HAL（硬件抽象层），为它上层的软件提供服务，它可以帮助软件<em>脱离</em>目标硬件平台来测试</li>\n<li>类似地，我们还可以引入OSAL（操作系统抽象层）来减少软件对操作系统的依赖</li>\n</ul>\n<h2 id=\"实现细节\"><a href=\"#实现细节\" class=\"headerlink\" title=\"实现细节\"></a>实现细节</h2><p>那么什么算是实现细节呢？</p>\n<ul>\n<li><strong>数据库</strong>，数据的组织结构和模型都是系统架构的一部分，但是从磁盘中存储&#x2F;读取数据的机制或手段则没那么重要，就比如数据库或静态文件</li>\n<li><strong>Web</strong>，Web只是UI，只是一种I&#x2F;O设备</li>\n<li><strong>应用框架</strong>，框架被创造的目的是解决作者遇到的问题，它要求我们去阅读文档，按照作者的要求整合到我们的应用中，可以使用但是不要被框架绑定</li>\n</ul>\n<h3 id=\"案例：视频销售网站\"><a href=\"#案例：视频销售网站\" class=\"headerlink\" title=\"案例：视频销售网站\"></a>案例：视频销售网站</h3><ul>\n<li>系统架构设计的第一步是识别系统中的各种角色和用例</li>\n</ul>\n<p><em>–END–</em></p>\n",
            "tags": [
                "设计",
                "架构",
                "组件"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2021/01/29/zen-of-unix/",
            "url": "http://shenlvmeng.github.com/blog/2021/01/29/zen-of-unix/",
            "title": "Unix编程艺术集萃",
            "date_published": "2021-01-29T13:45:15.000Z",
            "content_html": "<p>这本书从Unix的设计理念等各方面讲起，内容充实有趣，尽管介绍细节的部分对于不太了解Unix的人呢来讲有些生涩，但在道的介绍上有不少可取之处。由于某人的出现，生活中多了新的追求，比想象中多用了一些时间看完了它。下面摘取一些其中精华的观点，力图尽量还原书中的本意。</p>\n<h2 id=\"Context\"><a href=\"#Context\" class=\"headerlink\" title=\"Context\"></a>Context</h2><h3 id=\"哲学\"><a href=\"#哲学\" class=\"headerlink\" title=\"哲学\"></a>哲学</h3><ul>\n<li>每过18个月，就有一半的知识会过时</li>\n<li>X致力提供一套“机制，而不是策略”</li>\n<li>提供机制而不是方针的哲学让Unix长期保鲜</li>\n<li>Unix传统将重点放在尽力使各程序接口相对小巧、简洁、正交</li>\n<li>Unix管道发明人Doug McIlroy曾说过：<ul>\n<li>让每个程序就做好一件事</li>\n<li>假定每个程序的输出都会成为另个程序的输入</li>\n<li>尽早将设计和编译的软件投入使用</li>\n<li>优先使用工具而不是拙劣的帮助来减轻编程任务的负担</li>\n</ul>\n</li>\n<li>Rob Pike曾从不同的角度表述了Unix的哲学<ul>\n<li>你无法断定程序会在什么地方好费时间，所以别急于找地方改代码，除非你已经证实那儿就是瓶颈所在</li>\n<li>没对代码估量最耗时的部分前，别去优化速度</li>\n<li>花哨的算法在n很小的时候通常很慢，而n一般很小</li>\n<li>花哨的算法比简单算法更容易出bug、更难实现</li>\n<li>编程的核心是数据结构，而不是算法</li>\n</ul>\n</li>\n<li>书中对Unix的哲学，总结为下面这些点<ul>\n<li><strong>模块原则</strong>，使用简洁的接口拼接简单的部件</li>\n<li><strong>清晰原则</strong>，清晰胜于机巧，程序是写给人看的</li>\n<li><strong>组合原则</strong>，设计时要考虑拼接组合</li>\n<li><strong>分离原则</strong>，策略和机制分离，接口和引擎分离</li>\n<li><strong>简洁原则</strong>，设计要简洁，复杂度能低则低</li>\n<li><strong>吝啬原则</strong>，除非没有办法，不要写大程序</li>\n<li><strong>透明性原则</strong>，设计要有<strong>可见性</strong>（如输入输出、打点上报），便于审查和调试</li>\n<li><strong>健壮原则</strong>，健壮源于透明和简洁</li>\n<li><strong>表示原则</strong>，把知识转移到数据中，保证逻辑的简朴而健壮</li>\n<li><strong>通俗原则</strong>，即最少惊奇原则，接口设计避免标新立异，缓和学习曲线</li>\n<li><strong>缄默原则</strong>，设计良好的程序将用户的注意力视为有限的宝贵资源</li>\n<li><strong>补救原则</strong>，出现异常时，马上退出并给出错误信息</li>\n<li><strong>经济原则</strong>，宁花机器1分，不花程序员1秒</li>\n<li><strong>生成原则</strong>，避免手工hack，编写程序去生成程序</li>\n<li><strong>优化原则</strong>，过早优化会妨碍全局优化，先制作原型，再精雕细琢；先可用，再优化</li>\n<li><strong>多样原则</strong>，不相信“不二法门”的断言</li>\n<li><strong>扩展原则</strong>，未来总比预想来得要快</li>\n</ul>\n</li>\n<li>Unix哲学一言以蔽之，即KISS（Keep It Simple, Stupid!）</li>\n<li>善用他人写好的工具，尽可能将一切自动化</li>\n</ul>\n<h3 id=\"历史\"><a href=\"#历史\" class=\"headerlink\" title=\"历史\"></a>历史</h3><ul>\n<li>计算机不应仅被视为一种逻辑设备而更应视为社群的立足点</li>\n<li>1985年IEEE支持的POSIX标准表述了BSD和SVR3（System V Release3）调用的交集</li>\n<li>1987年初，GNU C编译器第一版问世</li>\n<li>1995年，Linux找到自己的杀手级应用——开源的web服务器Apache</li>\n<li>过度依赖任何一种技术或者商业模式都是错误的</li>\n</ul>\n<h3 id=\"Unix哲学和其他哲学的对比\"><a href=\"#Unix哲学和其他哲学的对比\" class=\"headerlink\" title=\"Unix哲学和其他哲学的对比\"></a>Unix哲学和其他哲学的对比</h3><ul>\n<li>统一性理念：一切皆文件 &amp; 管道概念</li>\n<li>多任务能力：抢先式多任务</li>\n<li>协作进程：低价的进程生成和简便的进程间通讯</li>\n<li>内部边界：程序员最清楚一切</li>\n<li>文件属性和记录结构：没有文件属性</li>\n<li>减少使用不透明的二进制文件格式</li>\n<li>首选CLI命令行界面</li>\n<li>Unix是程序员写给程序员的</li>\n<li>开发的门槛：轻松编程</li>\n<li>操作系统的比较<ul>\n<li>MacOS：MacOS有一个自己的界面方针，非常详细地说明了应用程序GUI的表现形式和行为模式</li>\n<li>Windows NT：有注册表蠕变现象，不过支持了Cygwin，实现了Unix API的兼容</li>\n<li>MVS：一切皆批处理</li>\n<li>Linux：贴近终端用户的愿望使得Linux开发者比专有Unix更注重系统安装的平稳性和软件发布问题</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Design\"><a href=\"#Design\" class=\"headerlink\" title=\"Design\"></a>Design</h2><h3 id=\"模块性\"><a href=\"#模块性\" class=\"headerlink\" title=\"模块性\"></a>模块性</h3><ul>\n<li>展开来说就是，要编写复杂软件又不至于一败涂地的唯一方法就是用定义清晰的接口把若干简单模块组合起来</li>\n<li>Unix程序员骨子里的传统是：更加笃信重视模块化、更注重正交性和紧凑性等问题</li>\n<li>封装良好的模块不会过多向外披露自身的细节</li>\n<li>缺陷个数随着模块的代码行数会先减小，随后按代码行数的平方上升</li>\n<li>紧凑性和正交性<ul>\n<li>人类短期记忆能够容纳的不连续信息数就是7，加2或减2</li>\n<li>紧凑性：有经验的用户通常不需要操作手册，让人乐于使用，不会在想法和工作间格格不入；紧凑不等于薄弱；一个功能子集，能够满足专家用户80%以上的一般需求</li>\n<li>正交性：任何操作均无副作用，改变每个属性的方法有且仅有一个；重构代码就是改变代码的结构和组织，而不改变其外在行为</li>\n<li>任何一个知识点在系统内都应当有一个<strong>唯一</strong>、明确、权威的表述（Single Point of Truth, SPOT）</li>\n<li>提高紧凑性的精妙但强大的办法就是围绕“解决一个定义明确的问题”的强核心算法组织设计，避免臆断和捏造。形式化往往能极其明晰地阐述一项任务，与形式法相对的是<strong>试探法</strong>——凭经验法则得到的解决方案，这种思路的问题是回增生出大量特例和边界情况</li>\n</ul>\n</li>\n<li>“限制不仅提倡了经济性，而且某种程度上提倡了设计的优雅”。要达到这种简洁性，尽量不要去想一种语言或操作系统最多能做多少事情，而是尽量去想这种语言或操作系统最少能做的事情——不是带着假想行动</li>\n<li>设计有自顶向下和自底向上两种思路，前者通常先考虑主事件循环，再插入具体事件；后者通常先考虑封装具体任务，再按次序粘合在一起</li>\n<li>出于自我保护，程序员尽量双管齐下——一方面以自顶向下的应用逻辑表达抽象规范，另一方面以函数或库来手机底层的域原语（原子操作）</li>\n<li>实际代码往往是自顶向下和自底向上的综合产物。同一个项目经常同时兼有，这就导致了“胶合层”的出现</li>\n<li>胶合层是个挺讨厌的东西，必须尽可能薄，这一点极为重要。薄胶合层原则可以看做是分离原则的升华。策略（应用逻辑）应该与机制（原子操作集）清晰地分离和解耦。</li>\n<li>“完美之道，不在无可增加，而在无可删减”</li>\n<li>OO语言鼓励“具有厚重的胶合和复杂层次”的体系。当问题域真的很复杂、确实需要大量抽象时，这可能是好事，但如果编程员到头来用复杂的方法来做简单的事情——仅仅是为他们能够这样做，结果便适得其反</li>\n<li><strong>全局变量意味着代码不能重入</strong></li>\n<li>“就我个人而言，如果局部变量太多，我倾向于拆分子程序。另一个方法是看代码行是否存在（太多）缩进。我几乎从来不看代码长度。——Ken Thompson”</li>\n<li>如果通过电话向另一个程序员描述说不清楚，API可能就是太复杂，设计太糟糕了。</li>\n</ul>\n<h3 id=\"文本化\"><a href=\"#文本化\" class=\"headerlink\" title=\"文本化\"></a>文本化</h3><ul>\n<li>序列化有时被称为列集（marshaling），其反向操作（载入）过程称为散集（unmarshaling）</li>\n<li>互用性、透明性、可扩展性和经济性都是设计文本格式和应用协议需要考虑的问题</li>\n<li>设计一个文本协议往往可以微系统的未来省不少力气；使用二进制协议的唯一正当理由是：如果要处理<strong>大批量</strong>的数据集，因而确实关注能否在介质上获得最大位密度，或是关心数据转化时的时间或指令开销。大图像和多媒体数据的格式有时可以算是前者的例子，对延时有严格要求的网络协议有则算作后者的例子</li>\n<li>文本格式的位密度未必一定比二进制格式低多少；设计紧凑二进制格式的思路往往不能够兼顾干净扩展的要求</li>\n<li>数据文件元格式是一套句法和词法约定，已经正式标准化或者通过实践得到充分确定<ul>\n<li>DSV：冒号是默认的分隔符</li>\n<li>RFC 822：字段名不得包含空格，通常用横线代替，空格和tab作为当前逻辑行的延续</li>\n<li>XML：需要文档类型定义（如XHTML）和相关应用逻辑赋予其语义。通常可以语法检查就能发现形式问题或数据错误</li>\n<li>Unix文本文件约定<ul>\n<li>如果可能，以新行符结束的每一行只存一个记录</li>\n<li>每行建议少于80字符</li>\n<li>用<code>#</code>开始注释</li>\n<li>支持反斜线<code>\\</code></li>\n<li>用冒号或连续空白作为字段分隔符</li>\n<li>在节格式中，支持连续行</li>\n<li>要么包含一个版本号，要么将格式设计成相互独立的自描述字节块</li>\n<li>不要只压缩或者二进制编码文件的一部分</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>应用协议设计：如果应用协议是文本式的，那仅凭肉眼就能容易地分析，例：SMTP、POP3、IMAP</li>\n<li>应用协议元格式：应用协议元格式是为了简化网络间事务处理的序列化操作而发展出来的，因为网络带宽要比存储昂贵得多，所以需要重视事务处理的经济性</li>\n<li>目前还没有个制订较完善的元协议非常适合真正的P2P应用，不像客户端-服务器应用——HTTP在这一领域的游刃有余</li>\n</ul>\n<h3 id=\"透明性\"><a href=\"#透明性\" class=\"headerlink\" title=\"透明性\"></a>透明性</h3><ul>\n<li>如果软件系统包含的功是为了帮助人们对软件建立正确的“做什么、怎样做”的心理模型而设计，这个软件系统就是可显的</li>\n<li>用户喜欢UI中的透明性和可显性，是因为这意味着学习曲线比较平缓，而“最小立异原则”就是一个体现</li>\n<li>优雅是力量与简洁的结合。优雅的代码事半功倍；优雅的代码不仅正确，而且<strong>显然</strong>正确；优雅的代码不仅将算法传达给计算机，同时也把简洁和信心传递给阅读代码的人</li>\n<li>编写透明、可显的系统而节省的精力，将来完全可能就是自己的财富</li>\n<li>用户的注意力是宝贵的，让Unix工具正常运行的最好策略是在大部分时间里沉默</li>\n<li>真正的聪明是找到方法，可以访问部分细节，但是又不让它们太显眼</li>\n<li>为透明性和可显性而设计<ul>\n<li>不要在具体操作的代码上叠放太多的抽象层</li>\n<li>透明性和可显性同模块性一样，主要是设计的特性而不是代码的特性<ul>\n<li>程序调用层级最大深度是多少？</li>\n<li>代码是否有强大而明显的不变性质</li>\n<li>API的各函数调用是否正交</li>\n<li>程序的数据结构或分类和它们代表的外部实体间，是否有一一映射关系</li>\n<li>有多少魔法数字</li>\n</ul>\n</li>\n<li><strong>隐藏</strong>细节和<strong>无法访问</strong>细节有着重要区别</li>\n<li>透明的系统更容易实施恢复措施，首先就是更能抵抗bug的破坏</li>\n</ul>\n</li>\n<li>Unix程序员的品性：“宁愿抛弃、重建代码也不远修补蹩脚的代码”</li>\n<li>选择简单的算法</li>\n</ul>\n<h3 id=\"多路程序控制\"><a href=\"#多路程序控制\" class=\"headerlink\" title=\"多路程序控制\"></a>多路程序控制</h3><ul>\n<li>Unix最具特点的程序模块化技法就是将大型程序分解成多个合作进程</li>\n<li>Unix的设计风格强调用定义良好的进程间通信或共享文件来联通小型进程。因此，Unix操作系统提倡把程序分解成更简单的子进程，并专注考虑它们之间的接口<ul>\n<li>降低进程生成的开销</li>\n<li>提供方法（shellout、IO重定向、管道、消息传递、套接字）简化进程通信</li>\n<li>提倡使用简单透明的文本数据格式来通信</li>\n</ul>\n</li>\n<li>真正的难题不在协议语法而是<strong>协议逻辑</strong>——协议必须既有充分的表达能力又有防范死锁的能力</li>\n<li>Unix的IPC分类<ul>\n<li>最简单的形式：调用另一个程序来完成任务；专门程序通常借由文件系统和父进程通信</li>\n<li>管道、重定向和过滤器：过滤器即从标准输入顺序读数据，然后向标准输出写数据；管道操作把程序的标准输出连接到另一个程序的标准输入</li>\n<li>包装器：包装器或者将调用程序专用化，或者为它创建新的接口</li>\n<li>从进程：子程序通过连接到标准输入和标准输出的管道，交互地和调用程序收发数据</li>\n<li>对等进程通信：需要对等的通道<ul>\n<li>临时文件：最古老的的IPC技法，灵活但有风险</li>\n<li>信号：每个信号都对机收进程产生默认作用，进程可以声明<strong>信号处理程序</strong>，让信号处理程序覆盖信号的默认行为<ul>\n<li><code>SIGHUP</code>，重新初始化</li>\n<li><code>SIGTERM</code>，温和的终止</li>\n<li><code>SIGKILL</code>，立即杀死进程</li>\n</ul>\n</li>\n<li>套接字：套接字类似文件描述符，创建时可以指定<strong>协议族</strong>来告诉网络层如何解释套接字名称</li>\n<li>共享内存：共享内存通常依靠<code>mmap</code>，把文件映射成可以被多个进程共享的内存</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"微型语言\"><a href=\"#微型语言\" class=\"headerlink\" title=\"微型语言\"></a>微型语言</h3><ul>\n<li>程序员每百行代码出错率和所使用的编程语言在很大程度上无关</li>\n<li>有两个好方法和一个坏方法做好微型语言的设计<ul>\n<li>预先认识到可以使用微型语言设计把变成问题的规格说明提升一个层次</li>\n<li>注意到规格说明文件格式越来越像微型语言——规格中蕴含着行为</li>\n<li><strong>错误</strong>的方法是通过扩展变成微型语言</li>\n</ul>\n</li>\n<li>微型语言的范畴从声明性发展到命令性，从而逐渐具有通用性，当他们明确为完备图灵机时，它们就是解释器</li>\n<li>样例<ul>\n<li>SNG，PNG的纯文本表达</li>\n<li>正则表达式</li>\n<li>Glade，描述GUI界面的XML文件</li>\n<li>m4，一套宏指令集，规定文本串扩展成其他文本串的方式</li>\n<li>XSLT，描述XML数据的变换</li>\n<li>awk，将文本输入变换成文本输出</li>\n<li>PostScript，向成像设备描述排班文本和图片的微型语言</li>\n<li>bc、dc，任意精度计算</li>\n<li>Emacs Lisp</li>\n<li>JavaScript</li>\n</ul>\n</li>\n<li>设计微型语言<ul>\n<li>控制复杂度，声明性微型语言应该具有一个明确、一直、类自然语言的语法被人类所阅读</li>\n<li>扩展和嵌入脚本语言，实现命令性语言</li>\n<li>编写自定义语法</li>\n<li>慎用宏</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"生成\"><a href=\"#生成\" class=\"headerlink\" title=\"生成\"></a>生成</h3><ul>\n<li>人类其实更善于肉眼观察数据而不是推导控制流程</li>\n<li>数据比程序逻辑更易驾驭</li>\n<li>数据驱动编程：把代码和代码作用的数据结构分清楚，始终把问题层次往上推，尽量把程序逻辑转移到数据中</li>\n<li>专用代码的生成：尽可能少干活，让数据塑造代码，依靠工具，分离机制和策略</li>\n</ul>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><ul>\n<li>无论何时想增加配置选项，最好考虑下下面的问题<ul>\n<li>能省掉这个功能么</li>\n<li>能否有无伤大雅的方式改变程序常规行为</li>\n<li>选项是否过于花哨</li>\n<li>需不需要一个独立的额外程序</li>\n</ul>\n</li>\n<li>Unix的程序配置信息一般在以下5个位置<ul>\n<li><code>/etc</code>下的运行控制文件</li>\n<li>系统设置的环境变量</li>\n<li>用户主目录下的运行控制文件（通常用<code>.</code>开头）</li>\n<li>用户设置的环境变量</li>\n<li>启动程序命令行参数</li>\n</ul>\n</li>\n<li>可执行未见后面加<code>rc</code>表示“运行控制”（命名来自CTSS的runcom命令脚本功能）</li>\n<li>一些最为常见的系统环境变量：<code>USER</code>，<code>LOGNAME</code>，<code>HOME</code>，<code>LINES</code>，<code>SHELL</code>，<code>PATH</code>等</li>\n<li>常见的从<code>-a</code>到<code>-z</code>的命令行选项的可能含义<ul>\n<li><code>-a</code>，所有、添加</li>\n<li><code>-b</code>，缓冲区、批处理</li>\n<li><code>-c</code>，命令、检查</li>\n<li><code>-d</code>，调试、删除</li>\n<li><code>-D</code>，定义</li>\n<li><code>-e</code>，执行、编辑</li>\n<li><code>-f</code>，文件、强制执行</li>\n<li><code>-g</code>，全局</li>\n<li><code>-h</code>，头部、帮助</li>\n<li><code>-i</code>，初始化、交互式</li>\n<li><code>-k</code>，保留、杀死</li>\n<li><code>-l</code>，列表、登录、加载</li>\n<li><code>-m</code>，消息、邮件</li>\n<li><code>-n</code>，数字、否</li>\n<li><code>-o</code>，输出</li>\n<li><code>-p</code>，端口</li>\n<li><code>-q</code>，安静</li>\n<li><code>-r</code>，递归</li>\n<li><code>-s</code>，缄默，大小</li>\n<li><code>-t</code>，标记</li>\n<li><code>-u</code>，用户</li>\n<li><code>-v</code>，冗长</li>\n<li><code>-V</code>，版本</li>\n<li><code>-w</code>，宽度</li>\n<li><code>-y</code>，是</li>\n<li><code>-z</code>，启用压缩</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"接口设计\"><a href=\"#接口设计\" class=\"headerlink\" title=\"接口设计\"></a>接口设计</h3><ul>\n<li>从最小立异原则出发，启动后程序通常从下列来源获得输入或命令<ul>\n<li>程序标准输入端的数据和命令</li>\n<li>通过IPC的输入</li>\n<li>已知位置的文件和设备</li>\n</ul>\n</li>\n<li>最小立异原则不应被理解为在设计中号召机械的保守主义，新颖性提高了用户与接口最初几次的交互成本，但是糟糕的设计永远使接口令人痛苦而多余</li>\n<li>“我们提倡以共生和委派策略来提高代码的复用并降低软件复杂度”</li>\n<li>最小立异原则目的就是为了减少用户在使用接口时必须学习的复杂过程</li>\n<li>Unix接口设计历史：CLI &#x3D;&gt; X</li>\n<li>接口的5种度量标准：<strong>简洁、表现力、易用、透明和脚本化能力</strong><ul>\n<li>简洁：事务处理需要的时间和复杂度需要有上限</li>\n<li>表现力：接口可以触发广泛的行为</li>\n<li>易用性：接口要求用户记忆的东西较少</li>\n<li>透明度：用户使用接口时，几乎不用记忆什么问题、数据或者程序状态</li>\n<li>脚本能力：容易被其他程序使用</li>\n</ul>\n</li>\n<li>CLI和可视化接口的对比<ul>\n<li>CLI更具表达力、脚本化能力、简洁性，适用于举例：SQL</li>\n<li>可视化接口透明度、易用性较好，适用性举例：画图、网页浏览器</li>\n<li>随着用户越来越熟练，对CLI接口的抵触也越少</li>\n</ul>\n</li>\n<li>Unix接口设计模式<ul>\n<li>过滤器：接受输入，转换成其他格式，再输出到标准输出端；宽进严出、不丢弃不需要的信息、不增加无用数据</li>\n<li>cantrip（没有输入输出）、源模式（无输入且输出在启动条件中控制）、接收器模式（接收输入但不发送东西到输出）、编译器模式（无标准输入输出，但会发送信息到标准错误端）</li>\n<li>ed模式（编辑器模式）</li>\n<li>roguelike模式（来自BSD的地牢探险游戏rogue，用字符阵列显示界面UI），如vi、emacs，没有鼠标参与，适合指法熟练的人</li>\n<li>引擎和接口分离，又或者模型和视图分离，了解MVC模式的人自然了解<ul>\n<li>配置者、执行者</li>\n<li>假脱机、守护进程</li>\n<li>驱动、引擎</li>\n<li>客户端、服务端</li>\n</ul>\n</li>\n<li>基于语言的接口模式</li>\n</ul>\n</li>\n<li>浏览器作为通用前端</li>\n<li><strong>如果程序没有什么有趣的或者惊奇的东西要说就应该闭嘴</strong>（有点意思）</li>\n</ul>\n<h3 id=\"优化\"><a href=\"#优化\" class=\"headerlink\" title=\"优化\"></a>优化</h3><ul>\n<li>Unix的经验告诉我们最主要的就是如何知道何时不去优化</li>\n<li>最强大的优化技术就是<strong>不去优化</strong></li>\n<li>先估量，后优化，直觉是糟糕的向导</li>\n<li>最有效的代码优化方法是保持代码短小简单</li>\n<li>核心数据结构必须留在最快的缓存</li>\n<li>吞吐量和延迟时间的权衡是普遍现象，例TCP、UDP</li>\n<li>对于减少延迟来说，阻塞或等待中间结果都是致命的</li>\n<li><strong>按需计算</strong>出昂贵的结果，再<strong>缓存</strong>起来之后使用，可以兼得<strong>低延迟</strong>和<strong>高吞吐</strong></li>\n</ul>\n<h3 id=\"复杂度\"><a href=\"#复杂度\" class=\"headerlink\" title=\"复杂度\"></a>复杂度</h3><ul>\n<li>简单即美即雅即善，而复杂即丑即怪即恶</li>\n<li>程序员为了理解一个程序，会建立思维模型并调试之；程序的复杂度即模型建立和程序调试的困难程度</li>\n<li>Unix思想的一个主题就是<strong>工具小巧锐利，设计从零开始，接口简单一致</strong></li>\n<li><strong>偶然复杂度</strong>的产生是因为没有找到实现规定功能集合的最简方法，可以通过良好设计去除；<strong>选择复杂度</strong>和期望的功能相关联，只能通过修改工程目标解决</li>\n<li>计算资源以及人类的思考，同财富一样，不是靠储藏而是靠消费来证明价值的</li>\n<li><strong>选择需要管理的上下文环境，并且按照边界所允许的最小化方式构建程序</strong></li>\n</ul>\n<h2 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h2><h3 id=\"语言\"><a href=\"#语言\" class=\"headerlink\" title=\"语言\"></a>语言</h3><ul>\n<li>C和C++以增加实现时间和（特别是）调试时间为代价来优化效率</li>\n<li>C的内存管理是复杂性和错误的渊薮</li>\n<li>C语言最佳之处是资源效率和接近机器语言，糟糕的地方是槟城简直是资源管理的炼狱</li>\n<li>C++试图满足所有人的所有要求</li>\n<li>Perl是增强版的shell，它为替代<code>awk</code>而设计，适合大量使用正则表达式的地方</li>\n<li>Java的设计目标是“write once, run anywhere”，但它并没有实现这两个最初的设计目标</li>\n<li>Java对小项目是大材小用</li>\n<li>Emacs Lisp传统上只用于为Emacs编辑器编写本身的控制程序</li>\n</ul>\n<h3 id=\"重用\"><a href=\"#重用\" class=\"headerlink\" title=\"重用\"></a>重用</h3><ul>\n<li>重新发明轮子之所以糟糕不仅因为浪费时间，还因为它浪费的时间往往是平方级</li>\n<li>避免重新发明轮子的有效方法就是借用别人的设计和实现，即重用代码</li>\n<li>文档并不能传达代码具现的所有细微差别之处</li>\n<li>开放源码和代码重用的关系，许多地方很像浪漫爱情和有性生殖的关系</li>\n<li>设计最好的实践需要情感的投入；软件开发者，同其他任何类型的工匠和技师一样；他们想要成为艺术家，这并不是什么私密。他们有艺术家的动力和需求，也拥有听众的欲望</li>\n<li>开放源码是从意识形态上解决这些所有问题的优先方法</li>\n<li>发布不够格软件的作者会承受许多的社会压力来修正或撤回代码（不一定）</li>\n<li>阅读代码是为未来而投资</li>\n<li><h2 id=\"许可证-许可证能够授权代码以某种形式使用，否则在版权法之下是禁止或者需要付费的-非商业使用的许可证并不等同于开源许可证\"><a href=\"#许可证-许可证能够授权代码以某种形式使用，否则在版权法之下是禁止或者需要付费的-非商业使用的许可证并不等同于开源许可证\" class=\"headerlink\" title=\"许可证- 许可证能够授权代码以某种形式使用，否则在版权法之下是禁止或者需要付费的- 非商业使用的许可证并不等同于开源许可证\"></a>许可证<br>- 许可证能够授权代码以某种形式使用，否则在版权法之下是禁止或者需要付费的<br>- 非商业使用的许可证并不等同于开源许可证</h2></li>\n</ul>\n<h2 id=\"Community\"><a href=\"#Community\" class=\"headerlink\" title=\"Community\"></a>Community</h2><h3 id=\"可移植性\"><a href=\"#可移植性\" class=\"headerlink\" title=\"可移植性\"></a>可移植性</h3><ul>\n<li>C语言基于早期Ken Thompson的B语言解析器，脱胎于BCPL（Basic Common Programming Language），因此这个C代表Common（通用）</li>\n<li>在IETF传统中，标准必须来自于一个可用原型实现的经验；不幸的是，这并不是标准通常发展的方式</li>\n<li>搞笑RFC大概是唯一能够立即成为RFC的提议，比如RFC 1149（IP数据报的信鸽传递），RFC 2324（超文本咖啡壶控制协议）</li>\n<li>对于具备提倡标准资格的RFC，其规格必须稳定，经过同行评审，并且已经吸引了互联网社区的极大兴趣</li>\n<li>IETF标准化过程有意提倡由实践而非理论驱动的标准化过程</li>\n<li>国际化的首要动作：<strong>分离信息库（配置）和代码</strong></li>\n<li>“暗含的意思就是，成为标准的最好方法就是发布一个高质量的开源实现” —— Henry Spencer</li>\n</ul>\n<h3 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h3><ul>\n<li>“一切皆HTML，所有引用都是URL”</li>\n<li>绝大多数软件的文档都是由技术人员写给可能连最小公分母都不知道的普通大众的——渊博者写给无知者</li>\n<li>编写Unix文档的最佳实践<ul>\n<li>数量多不会被认为是质量高</li>\n<li>信息密度适中，少用屏幕截图</li>\n<li>没人喜欢庞大的文档，考虑提供快速的摘要</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"开放源码\"><a href=\"#开放源码\" class=\"headerlink\" title=\"开放源码\"></a>开放源码</h3><ul>\n<li>开源开发的规则<ul>\n<li>源码公开</li>\n<li>尽早发布，经常发布</li>\n<li>给贡献以表扬</li>\n</ul>\n</li>\n<li><code>major.minor.patch</code>，补丁号修正错误和次要功能；次版本号为兼容的新功能；主版本号为不兼容的更改</li>\n<li><strong>发布前对文档和README进行拼写检查</strong></li>\n<li>基于所需功能而不是平台来编写移植层（面向接口编程）<ul>\n<li>“<code>#ifdef</code>和<code>#if</code>是最后一招，这通常是思路不当、产品过度差异化，无理由‘优化’或是无用垃圾聚集的先兆” —— Doug Mcllroy</li>\n</ul>\n</li>\n<li>选择一个编码规范（lint）</li>\n<li>常见的标准文件命名规范<ul>\n<li>README</li>\n<li>INSTALL</li>\n<li>AUTHORS</li>\n<li>NEWS</li>\n<li>HISTORY</li>\n<li>CHANGES</li>\n<li>COPYING 项目许可证条款</li>\n<li>LICENSE</li>\n<li>FAQ</li>\n</ul>\n</li>\n<li>以版本号来命名目录，考虑多版本在同一系统共存</li>\n<li>在设计讨论中更广泛的参与常常是件好事，但是如果列表相对开放，迟早就会有些用户在其上询问一些初级问题</li>\n<li>开源许可证<ul>\n<li>MIT：授予无限权利的拷贝、使用、修改和对修改的再发布，只要在所有修改版本中保留版权和许可证条款</li>\n<li>BSD：授予无限权利的拷贝、使用、修改和对修改的再发布，只要在所有修改版本中保留版权和许可证条款；同时在广告和软件包相关文档中包含致谢</li>\n<li>Artistic：授予无限权利的拷贝、使用和本地修改的权利。允许在发行修改后的二进制版本，但是限制源码再发行</li>\n<li>GPL、Mozilla</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"未来\"><a href=\"#未来\" class=\"headerlink\" title=\"未来\"></a>未来</h3><ul>\n<li>分离机制（配置）与策略（算法）成为一个明确准则</li>\n<li>Unix文件仅仅是个字节大袋子，而没有其他文件属性</li>\n<li><strong>开放源码将软件业转变为服务业</strong></li>\n</ul>\n<p><em>–END–</em></p>\n",
            "tags": [
                "设计模式",
                "Unix"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2021/01/05/2020-to-2021/",
            "url": "http://shenlvmeng.github.com/blog/2021/01/05/2020-to-2021/",
            "title": "2020回顾暨2021展望",
            "date_published": "2021-01-05T15:32:20.000Z",
            "content_html": "<p>2019年写下第一篇<a href=\"https://shenlvmeng.github.io/blog/2019/01/03/2018-to-2019/\">总结</a>的时候，也未曾想到，这会成为一种一年一度的仪式，甚至能吸引到听众。但既然开始了，最好也能坚持下去。</p>\n<p>如果说2019充满意外的话，2020只会是加大分量。不论是喜悦还是痛苦，2020留下的印记都格外得深一些。整体来看，由于遇到了一些预料之外的事情，在自我提升上向陌生方向多走了一些，不知是好是坏。</p>\n<h2 id=\"2020回顾\"><a href=\"#2020回顾\" class=\"headerlink\" title=\"2020回顾\"></a>2020回顾</h2><p>内在素质上，阅读技术非技术方面的书籍完成5本，小说6本。基本完成任务。</p>\n<ul>\n<li><a href=\"https://shenlvmeng.github.io/blog/2019/12/24/golang-learning/\">Go语言入门学习</a></li>\n<li><a href=\"https://shenlvmeng.github.io/blog/2020/05/31/pragmatic-thinking-and-learning/\">《程序员思维修炼》—— 思维方式和学习技巧</a></li>\n<li><a href=\"https://shenlvmeng.github.io/blog/2020/06/01/principles-of-macroeconomics/\">《经济学原理》 - 宏观经济学原理笔记</a></li>\n<li><a href=\"https://shenlvmeng.github.io/blog/2020/08/12/soft-skills-for-software-developer/\">《软技能 —— 代码外的生存指南》书摘</a></li>\n<li><a href=\"https://shenlvmeng.github.io/blog/2020/08/17/refactoring-design-improvement/\">重构 —— 代码的实用性与艺术性</a></li>\n</ul>\n<p>整体还是在东看看西看看的阶段，其中《程序员思维修炼》一书对思维方式的介绍补足了自己的知识体系中方法论的部分。《软技能》一书启发了在理财方面的一些认识。</p>\n<p>大多数的书还是看了又忘，忘了就再看看总结，然后再淡忘。这个过程中，留在知识体系里幸存的部分并不多。尤其是编程相关的书籍，还是需要靠实践做项目来巩固所看的内容。没错，说的就是《Go语言入门学习》。</p>\n<p>个人形象上，作息时间基本达到预期计划。但由于出现了新爱好（调酒），买衣服的计划被长期搁置。工装裤和卫衣还是去年那些，果然这两样买再多都不够。体重略有下降，回到80。算是基本完成目标。发型在推平后，又往偏分的方向留了起来，和此前的侧背区别不甚大。短发在身边朋友的反馈里居然还不错。</p>\n<p>社交上，丢失和主动放弃了一些朋友，大多是三观不合或者事业变动。在和朋友的沟通交往中，更偏向主动。不过长期如此，还挺累的。热情不用更热情了，倒是应该更加增大交友面。有试图发展亲密关系的朋友，在对象上有过努力，也同时认识到很多道理，此处略去。</p>\n<p>生活情趣上，在骑车、拉琴、看电影上仍旧投入较多业余时间，其中骑车的设备也一直还是那辆老旧的山地车。拉琴和看电影上也没有什么投入。同时，发展了喝酒和调鸡尾酒的爱好。在冰箱中屯了很多，对基酒和调酒也有了些认识。骑行上，因为圣僧的工作变动，离开了北京，一位年轻的同事成为了新的骑友。百里画廊未能成行，但是<a href=\"https://shenlvmeng.github.io/blog/2020/10/06/tour-to-qinghai-lake/\">青海湖</a>成功成行，也是一次难忘的经历。旅行上，疫情原因日本没去成，年末去了广州，吃了好吃的一本满足。拉琴上，一直也有练习，有能熟练演奏的曲目，不过都还需要看谱演奏。另外，也在公司内做过相关分享。新爱好上，看了第一次话剧，livehouse一直没遇到喜欢的乐队，未能成行。另外因为厨房卫生问题，在家做饭频率下降，反而提高了探店的频率。整体看，生活还蛮有趣味。</p>\n<p>工作事业上，发展尚可，背靠还不错的项目组，也遇到了很多挑战，有了带小方向的机会，在团队建设上也开始有了思考。不过进步速度在下半年有所减缓，注意力有些偏移。希望在下一年能调整过来。</p>\n<h3 id=\"简单说几句\"><a href=\"#简单说几句\" class=\"headerlink\" title=\"简单说几句\"></a>简单说几句</h3><ul>\n<li>积累太过理想化书面化，积累些现实点的东西，不是坏事</li>\n<li>穿衣上，裤长是最严重的问题</li>\n<li>要少喝酒，小酌小酌</li>\n<li>坚持作息和三餐，坚持骑行登山游泳轧马路</li>\n<li>要能清醒思考个人价值和现实价值</li>\n<li>一段长久的亲密关系应该是相互成就而不是相互束缚的</li>\n<li>爱合理分布在亲人、伴侣、朋友身上</li>\n<li>事业上决断力要提高，还要画饼能力，越大越好</li>\n</ul>\n<h2 id=\"2021展望\"><a href=\"#2021展望\" class=\"headerlink\" title=\"2021展望\"></a>2021展望</h2><p>OK，又到了flag时间。吸取前两年的经验，目标不宜太明确，往往有意外惊喜。</p>\n<ul>\n<li><strong>内在</strong>：看完囤积的4本业务书籍和10本左右小说<ul>\n<li>再寻找一项和前端覆盖率类似的技术点去探索突破</li>\n<li>能清醒地评估个人价值，先知己</li>\n<li>回顾过去几年积累，完善知识体系</li>\n</ul>\n</li>\n<li><strong>外在</strong>：尝试新风格，保持健康，坚持运动<ul>\n<li>坚持吃早饭和早睡</li>\n<li>增加锻炼频率</li>\n<li>发型尝试</li>\n<li>基本款补齐（同去年）</li>\n</ul>\n</li>\n<li><strong>情感</strong><ul>\n<li>平衡爱的收入和支出，更有自信</li>\n<li>能给一个人未来</li>\n</ul>\n</li>\n<li><strong>生活</strong><ul>\n<li>寻找一些提高生活幸福感的小东西或者经验</li>\n<li>保持室内干净卫生</li>\n<li>必要的旅行</li>\n<li>固定的户外长途骑行</li>\n<li>尝试新的菜式</li>\n<li>坚持拉琴、电影、探店</li>\n<li>至少一次livehouse</li>\n</ul>\n</li>\n<li><strong>事业</strong><ul>\n<li>思考职业规划和发展路线</li>\n<li>考虑落脚城市、医疗、教育等现实因素</li>\n<li>也去考虑父母的未来生活质量</li>\n</ul>\n</li>\n</ul>\n<p>就这么多吧，流水账短点为妙。诸位明年见~</p>\n<p><em>Bye~</em></p>\n",
            "tags": [
                "总结",
                "2020",
                "2021"
            ]
        },
        {
            "id": "http://shenlvmeng.github.com/blog/2020/10/06/tour-to-qinghai-lake/",
            "url": "http://shenlvmeng.github.com/blog/2020/10/06/tour-to-qinghai-lake/",
            "title": "记青海湖骑行",
            "date_published": "2020-10-06T12:02:17.000Z",
            "content_html": "<blockquote>\n<p>随便写写。旅程中的大多数美好，事后回忆，原来都在造化中。</p>\n</blockquote>\n<h2 id=\"序：准备阶段\"><a href=\"#序：准备阶段\" class=\"headerlink\" title=\"序：准备阶段\"></a>序：准备阶段</h2><p>这次旅行本该在<a href=\"https://shenlvmeng.github.io/blog/2019/09/16/tour-to-lijiang-and-dali/\">去年国庆</a>成行，由于假期有限等种种原因delay到今年这个长假。又碰巧赶上疫情和中秋带来的额外假期，于是7、8月便早早和档期向来紧张的圣僧约好。圣僧和我本是隔壁宿舍关系，从3年多前的一次结伴骑行结缘，是我的长期骑友。他是个旅行达人（友链一波：<a href=\"https://feichashao.com/travels/\">肥叉烧</a>），身在外企，有钱有闲，经常出游，经验丰富。正巧这次碰上疫情，国外无处可去，和我定好日程后，三下五除二便把攻略搞定。和他一起出游真是省心。</p>\n<h2 id=\"Day-1：银川\"><a href=\"#Day-1：银川\" class=\"headerlink\" title=\"Day 1：银川\"></a>Day 1：银川</h2><p>出于下面多个因素考虑（其实主要是第三项），我们第一天先出发去银川。</p>\n<ul>\n<li>假期时间充裕</li>\n<li>慢慢适应高海拔</li>\n<li>中转机票更便宜</li>\n<li>凭借圣僧的会员，中转免费送一晚住宿外加去市区的大巴券</li>\n</ul>\n<p>因为这次是从大兴机场出发，还是8点半的飞机，早上5点就得起床。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00ltL6.jpg\" alt=\"清晨的知春路口\"></p>\n<p>我们在机场值机柜台碰面，托运完行李时间已经不早了，于是直接就安检进站。安检中还没收了我的修车工具（😢）。这也是这一路意外离开我的第一样东西。突然到我都没拍张照给它留个纪念。</p>\n<p>进站后，借助圣僧招行信用卡会员，一起在VIP休息厅吃了个早餐，条件还不错。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00les0.jpg\" alt=\"VIP休息厅视角\"></p>\n<p>9月26号的银川天气不错，我们住宿的酒店——西港航空饭店距离银川河东机场非常近。酒店建筑整体很新，周围被各种绿化围绕，完全感觉不到在西北。另外房间很大，由于远离市区，环境也很安静。加上是中转免费送的，算是我们整个旅程中最满意的住宿体验了。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00lMoF.jpg\" alt=\"西港-1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00lKdU.jpg\" alt=\"西港-2\"></p>\n<p>在房间里稍作休息，我们步行到机场坐大巴前往市区，大巴券25元一位，我们使用的中转服务的免费大巴券直接乘车。大约1小时车程，我们在终点站鼓楼下车便进入了市中心。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00luZT.jpg\" alt=\"鼓楼\"></p>\n<p>稍微逛逛，我和圣僧很快就发现了多不胜数的<strong>蜜雪冰城</strong>，几乎不见其他知名品牌，剩下的也都是没听过名字的小牌子。在竞争上，蜜雪冰城比上有其很能打的性价比，比下又有标准化保证。4元的柠檬水、5元的奶茶、2元的圆筒冰淇淋。天哪，这也太香了。蜜雪冰城也将成为我们后面旅程中的一大精神寄托，按下不表。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00lmLV.jpg\" alt=\"蜜雪冰城\"></p>\n<p>作为回族自治区的省会，菜单中自然没有猪肉，取而代之的是各种<strong>羊肉</strong>。从鼓楼步行街向西走过几个路口，我们惯例性在地在邮局寄了明信片。随后在旁边的迎宾楼吃了午饭，尝了下号称特色的手抓羊肉。这么一盘98元，没想象中好吃，吃了三分之一就有点腻了。最后打包给圣僧当了晚餐。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00lli4.jpg\" alt=\"手抓羊肉\"></p>\n<p>吃饱喝足，下个目标是带些伴手礼。宁夏的<strong>枸杞</strong>是比较出名的，其中以中卫的为最优。枸杞分红枸杞和黑枸杞，都没有明确的药用价值。但是日常保健还是有用的，号称能补气虚，很适合阳气虚弱的男性。黑枸杞据说劲儿更野一点。稍微做了下功课，我们在超市一人来了2斤，一斤75元。事后看，这个价格似乎有些上当，建议各位小买怡情即可。</p>\n<p>银川城区内的共享单车似乎都是电动车，不论是青桔还是小蓝，还是美团单车。在一天的观察下，只注意到凤毛麟角的人力单车。这到底是因为当地人自行车技术很烂还是电动车驾驶技术很普及？挺有意思。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00l3W9.jpg\" alt=\"共享单车\"></p>\n<p>天色渐暗，在人民公园感受了城市氛围后，我们乘坐大巴回到西港航空饭店，为第二天前往西宁做准备。</p>\n<h2 id=\"Day-2-西宁\"><a href=\"#Day-2-西宁\" class=\"headerlink\" title=\"Day 2: 西宁\"></a>Day 2: 西宁</h2><p>西宁相比银川更有省会的感觉。不同于银川的回族居多，西宁有着比较明显的藏族气息，藏民也很常见。高海拔的强烈紫外线下，大多数人都是黝红的脸。由于第二天要坐大巴前往西海镇，我们这一天住在汽车站旁边的如家，在市区中处于偏东郊的位置。不出意外，楼下又是一家蜜雪冰城。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00l1JJ.jpg\" alt=\"酒店\"></p>\n<p>西宁城区内有湟水自西向东流过，我们下午先是打车到了河边的<strong>中心广场</strong>，类似北京的元大都城垣遗址一样，不过明显更大且更有层次，湟水河宽度近似海河。在河边坐也好，走也好，感觉都是很不错的。下午3点，气温十余度，在河边的长椅上，一直都能看到飞机在高楼的天际线上划过。</p>\n<p>西宁海拔约2100左右，处于多个山脉中的河谷地区，适宜建设城市的面积不大，只有大概一个十字形状的区域。所以城区中的楼房都格外的高，且能看出一些地势起伏。整体感觉，似乎来到了小号版的重庆。和重庆一样，这里看不到共享单车。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00l8zR.jpg\" alt=\"城市景观\"></p>\n<p>不过从一些城市的角落，还是能瞥见藏在深处的旧工业时代的厂房气息。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00lJQ1.jpg\" alt=\"旧厂房\"></p>\n<p>我比较偏好用随便走走四处看看的方式感受城市的风格。下午我们从中心广场绕过<strong>力盟商业区</strong>，再穿过九龙城寨般的<strong>商业巷大世界</strong>，从<strong>人民公园</strong>门口向回走，最后又回到颇具人气的力盟步行街。不能免俗，吃了顿呷哺呷哺。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00lYsx.jpg\" alt=\"呷哺呷哺\"></p>\n<h2 id=\"Day-3-西海镇-种羊场\"><a href=\"#Day-3-西海镇-种羊场\" class=\"headerlink\" title=\"Day 3: 西海镇 - 种羊场\"></a>Day 3: 西海镇 - 种羊场</h2><blockquote>\n<p>里程：48km</p>\n</blockquote>\n<p>去西海镇的车票我们是提前一天买好的，25元。但因为游客不多，其实也可以当天早上买。从火车站背后上京藏高速，一路穿过湟中区、湟源县、海晏县就到达了最终骑行的出发点西海镇，全程约2小时。租车上，我们早已提前和当地租车师傅约好，6天行程，租车500元，外加解决住宿700元（对租车店老板安排的住宿不要抱太高期望）和押金500元（结束骑行后退还），一共1700元。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003oq0.jpg\" alt=\"西宁到西海镇\"></p>\n<p>西海镇是海北藏族自治州的州首府，不过却意外的荒凉，街道两边政府部门倒是周正齐全，基础设施也是一应完善，可是就是人迹稀少，连车都没几辆。我们下车后已经10点，第一天尚有40多公里的路程要骑。我们调试好车辆，装好驮包，穿戴好装备，擦好防晒（这个十分重要），简单吃了个饭就出发了。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003Q29.jpg\" alt=\"出发合影\"></p>\n<p>沿着刚察路直走，穿过和G213国道的路口，就上了环湖东路。沿着环湖东路直走就可以达到第一天的目的地——湖东种羊场。路线也是相当简单。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003KC4.jpg\" alt=\"路牌\"></p>\n<p>初见丘陵和草原，配合着壮观的云层，还是很有新鲜感的。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003n5F.jpg\" alt=\"草原1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003mUU.jpg\" alt=\"草原2\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003M8J.jpg\" alt=\"山丘1\"></p>\n<p>第一天的路并不像路书中那样全是平路，相反上下坡并不少。幸运的是，路边的景观稍微减缓了骑行的疲惫感。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/0033K1.jpg\" alt=\"上坡1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003lvR.jpg\" alt=\"上坡2\"></p>\n<p>穿过和G213国道的分岔路口后，我们离湖越来越近了。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003YVK.jpg\" alt=\"996\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003Gb6.jpg\" alt=\"路牌\"></p>\n<p>随着湖水越来越近，金银潭和沙岛上起伏的沙丘却是也越来越显眼。湖边的荒漠化土地是我预先没想到的，据说是气候原因导致。但从沿路看到的各种牛羊来推断，和过度放牧可能也有些关系。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/0038Dx.jpg\" alt=\"沙漠1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003N5D.jpg\" alt=\"牦牛1\"></p>\n<p>穿过金银滩沙漠区，是一个大下坡，下坡后路两侧又逐渐恢复了植被和河流，看起来顺眼多了。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003aPe.jpg\" alt=\"大下坡\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003tUO.jpg\" alt=\"绿地\"></p>\n<p>青海湖边地广人稀（整个青海除了西宁和海东应该都是地广人稀），除了风声，路两旁十分宁静，若是没有毒辣的紫外线，实在惬意极了。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003d8H.jpg\" alt=\"车1\"></p>\n<p>再往前骑数公里，终于到达种羊场。这并不是一个镇或县，顶多是围绕湖东种羊场的一个聚落。住宿环境自然十分感人。卫生糟糕，门窗都可以从外面打开。具老板所说，这里民风淳朴，姑且只能信了。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003w2d.jpg\" alt=\"种羊场住宿\"></p>\n<p>幸好有<strong>炕锅羊肉</strong>和壮观的落日场景可以抚慰。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003rrt.jpg\" alt=\"炕锅羊肉\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/0030xA.jpg\" alt=\"落日1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003DKI.jpg\" alt=\"落日2\"></p>\n<p>青海湖周围海拔3200到3400，昼夜温差较大，太阳一落山，气温就比较冷了。种羊场也无甚可逛，我们直接倒头就睡，洗漱更衣直接放弃。只期待第二天住宿能好点。</p>\n<h2 id=\"Day-4-种羊场-江西沟\"><a href=\"#Day-4-种羊场-江西沟\" class=\"headerlink\" title=\"Day 4: 种羊场 - 江西沟\"></a>Day 4: 种羊场 - 江西沟</h2><blockquote>\n<p>里程：55km</p>\n</blockquote>\n<p>第二天一早我们吃了点买好的干粮，擦了防晒就直接出发。种羊场实在没什么好留恋。青海湖环湖的路都很直，两侧要么是无边的草原，要么是起伏的山丘，要么是看不到头的湖面。以至于路也看不到终点，似乎永远都骑不到头。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003sqP.jpg\" alt=\"路1\"></p>\n<p>不过在骑行中，能察觉到远处的村庄、山岭、景观一点点靠近，还是蛮奇妙。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/0036Vf.jpg\" alt=\"路2\"></p>\n<p>路边是牧民们的牛羊，似乎和内地的品种并不相同。牦牛们都很沉默，羊们也是，我蹩脚地起个头，它们也只是懒懒地抬个头望向我，依旧沉默。马儿们有的自由吃草，被人看管的则用来招徕游客骑行创收。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003WGQ.jpg\" alt=\"牛\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003ca8.jpg\" alt=\"羊\"></p>\n<p>骑过错果，便告别了环湖东路S207，来到G109国道，相比环湖东路，国道上的车辆明显多了很多。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003RPg.jpg\" alt=\"错果\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003gIS.jpg\" alt=\"路牌2\"></p>\n<p>从环湖东路和G109的交叉口到二郎剑景区，靠湖一侧都有维护良好的辅路，路面起伏不大，还有成片的油菜花可以欣赏，油菜花都不高，游客在其中拍照能露出脑袋，从车上看颇有趣味。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003f2j.jpg\" alt=\"油菜花\"></p>\n<p>路的另一侧是连绵的不知疲倦的山丘，它将一路陪伴我们告别G109国道。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003hxs.jpg\" alt=\"山丘2\"></p>\n<p>临近二郎剑景区有可以直接接近湖面的地方。这是一路第一次能亲近湖水的机会。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/003Irq.jpg\" alt=\"青海湖\"></p>\n<p>在二郎剑边的中石油稍作休息，是一路枯燥的景观，16km后便到达终点江西沟。令人欣慰的是，住宿环境有了些微的改善。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/0035Mn.jpg\" alt=\"江西沟住宿\"></p>\n<h2 id=\"Day-5-江西沟-黑马河-x2F-茶卡\"><a href=\"#Day-5-江西沟-黑马河-x2F-茶卡\" class=\"headerlink\" title=\"Day 5: 江西沟 - 黑马河&#x2F;茶卡\"></a>Day 5: 江西沟 - 黑马河&#x2F;茶卡</h2><blockquote>\n<p>里程：48km</p>\n</blockquote>\n<p>这一天的里程虽然不长，却是环湖几天中，最疲惫的。原因是没有止境的逆风。一路上，景观和前一天无异，枯燥的山丘和草原，连湖面也不太能看见了。因为恼火的逆风，我甚至都没心情抬头看看路两旁的风景。</p>\n<p>也许是因为大风把碎云都卷走，天上的云倒是挺好看。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00JeVP.jpg\" alt=\"云1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rb8I.jpg\" alt=\"云2\"></p>\n<p>我大约提前圣僧1个小时到达，考虑到高原和糟糕的风向，圣僧临时修改计划，将第二天的茶卡盐湖之旅提前，把本来一天到达刚察县的计划拆成石乃亥 - 刚察县。这一决定不仅让我们看到了茶卡盐湖上的落日，也极大提升了后两天的骑行体验。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00Jn58.jpg\" alt=\"黑马河\"></p>\n<p>黑马河位于G109和<strong>环湖西路</strong>S209的交叉口，前往茶卡、鸟岛，大西北自驾环线、环湖骑行都要经过这里。本来是发展不错的一个小镇。近些年考虑到环保因素，拆了大多数建筑，统一由政府管理建设，道路管道也大兴土木整修，目前看起来完全感受不到当地人所说当初的繁华。</p>\n<p>我们运气不错，碰巧民宿老板要前往茶卡办公事，在圣僧下午3点到达后，我们搭了个便车去往茶卡（来回两人300元）。走G109去茶卡镇要穿越橡皮山，最高海拔3800m，且单程80km。对于骑行来说不太现实。老板比较健谈，一路和我们介绍了青海湖的旅游发展以及周边地理人文，挺有意思。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00JKPS.jpg\" alt=\"橡皮山1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00JmUf.jpg\" alt=\"橡皮山2\"></p>\n<p>茶卡盐湖的风景十分看天气。晴天无风的天气下，才有天空之镜的感觉。我们去的那天虽然晴空万里，不过风力较大，差不多夕阳落山时，西风终于转弱，得以让我拍到下面的景象。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00JVbt.jpg\" alt=\"夕阳3\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00JM8g.jpg\" alt=\"夕阳4\"></p>\n<p>盐湖门票原价60，对青海、湖北、浙江籍游客免票。小火车单程50，车速和步行差不多，没有强需求可以不做。小火车沿着一条向湖区深处的路一直开到最里面，大约30分钟。路的西边湖水较浅，许多已蒸干出盐巴，还能看到湖盐厂的旧铁路和新厂址。许多游客穿着租赁的胶鞋在水面嬉戏。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00JQ2Q.jpg\" alt=\"盐湖游客\"></p>\n<p>搭配雪一样的湖盐，有种北极村的感觉。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00Jlvj.jpg\" alt=\"&quot;北极村&quot;\"></p>\n<p>坐车回到黑马河时已经晚上9点了，晚饭是<strong>牦牛肉串</strong> + 牛肉面，巴适得很。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00J3Ks.jpg\" alt=\"肉串加牛肉面\"></p>\n<h2 id=\"Day-6-黑马河-石乃亥\"><a href=\"#Day-6-黑马河-石乃亥\" class=\"headerlink\" title=\"Day 6: 黑马河 - 石乃亥\"></a>Day 6: 黑马河 - 石乃亥</h2><blockquote>\n<p>里程：39km</p>\n</blockquote>\n<p>没有了恼人的逆风后，这一天好骑多了（再加上里程短，应该是环湖最轻松的一天）。骑出黑马河镇，就和G109国道告别，上了环湖西路，车辆明显稍多了，整体体验大大提升。经过一段笔直的路程，可以绕到离湖不远的地方，接下来的一路也都如此，还能时不时看到自驾游的游客在路边拍照。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00J8rn.jpg\" alt=\"湖边\"></p>\n<p>等接近石乃亥后，我们便离湖越来越远。经过一个小上坡，便能远远看到石乃亥乡的轮廓了。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rrE4.jpg\" alt=\"小上坡1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rcCR.jpg\" alt=\"小上坡2\"></p>\n<p>石乃亥不大，基础设施倒是挺完善。由于到得比较早，我们很轻松吃了个<strong>土火锅</strong>作为午饭。土火锅里面有牦牛肉和各种素菜，价格145，还算划算。我们大快朵颐了快1个小时，最后也没吃完。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00ry59.jpg\" alt=\"土火锅\"></p>\n<h2 id=\"Day-7-石乃亥-刚察县\"><a href=\"#Day-7-石乃亥-刚察县\" class=\"headerlink\" title=\"Day 7: 石乃亥 - 刚察县\"></a>Day 7: 石乃亥 - 刚察县</h2><blockquote>\n<p>里程：78km</p>\n</blockquote>\n<p>骑出石乃亥约20公里，我们告别了海南共和县，来到海北刚察县境内。一如往常又是广袤的草原和起伏的山丘。骑过关闭的鸟岛，就来到了湖边的最后一段路。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rg81.jpg\" alt=\"湖羊\"></p>\n<p>站在环湖东路的末尾处回头望，能看到最后一片湖面的波光粼粼。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00r2gx.jpg\" alt=\"波光粼粼\"></p>\n<p>从岔路口右拐上G315国道，会贴着青藏铁路走一段。之后越过新修的西和高速便进入县城内。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rRv6.jpg\" alt=\"岔道\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rhDO.jpg\" alt=\"铁路1\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00r4bD.jpg\" alt=\"铁路2\"></p>\n<p>刚察县虽然只是个县城，但是热闹程度和城市美化程度一点不亚于西海镇，甚至更甚。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rIVe.jpg\" alt=\"刚察县\"></p>\n<p>县城里的藏城电影院也在营业，虽然放映厅很小，还没有大学大教室大，但两人包场看《我和我的故乡》的体验还不错。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00roUH.jpg\" alt=\"刚察电影院\"></p>\n<p>吃厌了羊肉，我们晚饭在一家成都冒菜馆解决了晚饭，能有吃菜自由的感觉真好。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rHPA.jpg\" alt=\"冒菜\"></p>\n<p>另外，刚察的旅游厕所做的是真不错，体验比北京的管理公厕都要好。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rT5d.jpg\" alt=\"刚厕\"></p>\n<h2 id=\"Day-8：刚察县-西海镇\"><a href=\"#Day-8：刚察县-西海镇\" class=\"headerlink\" title=\"Day 8：刚察县 - 西海镇\"></a>Day 8：刚察县 - 西海镇</h2><blockquote>\n<p>里程：90km</p>\n</blockquote>\n<p>最后一天离湖就很远了。出刚察县先是一个大上坡，接着几乎一路平路骑28km可以到达哈尔盖河边的哈尔盖镇。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rsUJ.jpg\" alt=\"刚察县上坡顶\"></p>\n<p>在哈尔盖中石化稍作休整，沿着315国道再骑20km到达甘子河乡，开始最后一个长坡，从海拔3200m来到3415m。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rN3q.jpg\" alt=\"哈尔盖车站路口\"></p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rwuT.jpg\" alt=\"G315-170km\"></p>\n<p>从这个坡顶一个俯冲下来穿过西和高速，便从G315回到G213国道。这一段逆风很大，由于修路，大车也很多。它们开过的同时，尘土飞扬，恨不得把自行车都给吸进去。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00ravV.jpg\" alt=\"G315下坡\"></p>\n<p>在一段艰辛的骑行后，我们来到修路的终点，也是整段路的最高海拔3445m，接着一路下坡，20km后在G213的拐弯处，西海镇已经越来越清晰。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rtCn.jpg\" alt=\"骑行结尾\"></p>\n<p>我们最后还了车，又寄了明信片。在西海镇停留了最后一天。这里作为海北藏族自治州首府，各种政府部门和基础设施完备齐全。就是人迹稀少。偌大的跳广场舞的活动中心也没个人影。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rUg0.jpg\" alt=\"海北藏族自治州文化活动中心\"></p>\n<p>夜晚了，路边的住房都亮起灯，仿佛又回到当初两弹一星时期建立原子城的岁月。</p>\n<p><img src=\"https://s1.ax1x.com/2020/10/08/00rBbF.jpg\" alt=\"原子城夜景\"></p>\n<h2 id=\"Day-9-x2F-10-西海镇-西宁-北京\"><a href=\"#Day-9-x2F-10-西海镇-西宁-北京\" class=\"headerlink\" title=\"Day 9&#x2F;10: 西海镇 - 西宁 - 北京\"></a>Day 9&#x2F;10: 西海镇 - 西宁 - 北京</h2><p>最后一天，我们回到西宁。重回城市的感觉真好，标准化和工业化给人太饱满的安全感了，躺在床上，回想起这为期6天的骑行，尽管风景很原生态很美好，但这也是以牺牲了工业化和标准化为代价的。除开住宿环境，缺少便捷的物流和交通，让沿途小镇的餐饮费物价居然比在西宁高。离开西宁前往西海镇前，我们恐怕没有预期到，以前毫不在意的蜜雪冰城和德克士居然成为了一种奢求和精神寄托。也许，人们都是图个新鲜，享受惯了工业化城市化带来的福利，居然也会想吃吃贫瘠和原生态的苦。</p>\n<p>经过此次“艰苦”的骑行，圣僧说他心心念念的川藏线骑行也要好好考虑考虑了，可能磨练人的不是骑行本身，反而是沿途令人生畏的住宿环境。我们脸上和腿上的晒伤需要时间痊愈。不知道，圣僧心理上的畏惧又需要多久痊愈。</p>\n<p><em>–END–</em></p>\n",
            "tags": [
                "攻略",
                "随笔",
                "西北",
                "银川",
                "西宁",
                "青海湖",
                "西海镇",
                "茶卡盐湖"
            ]
        }
    ]
}