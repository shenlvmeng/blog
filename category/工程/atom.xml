<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://shenlvmeng.github.com/blog</id>
    <title>Shenlvmeng&#39;s Blog • Posts by &#34;工程&#34; category</title>
    <link href="http://shenlvmeng.github.com/blog" />
    <updated>2021-03-22T15:47:20.000Z</updated>
    <category term="总结" />
    <category term="制度" />
    <category term="道德" />
    <category term="文官" />
    <category term="万历" />
    <category term="明朝" />
    <category term="读书笔记" />
    <category term="展望" />
    <category term="2018" />
    <category term="2019" />
    <category term="flag" />
    <category term="2020" />
    <category term="2021" />
    <category term="2022" />
    <category term="2023" />
    <category term="面试" />
    <category term="前端" />
    <category term="FAQ" />
    <category term="HTML" />
    <category term="CSS" />
    <category term="style guide" />
    <category term="编程" />
    <category term="范式" />
    <category term="设计" />
    <category term="艺术" />
    <category term="质量" />
    <category term="async_hooks" />
    <category term="cls-hooked" />
    <category term="logId" />
    <category term="录音" />
    <category term="getUserMedia" />
    <category term="AudioContext" />
    <category term="PCM" />
    <category term="WAVE" />
    <category term="二叉搜索树" />
    <category term="算法" />
    <category term="回忆" />
    <category term="老朋友" />
    <category term="C" />
    <category term="Hash" />
    <category term="布隆过滤器" />
    <category term="字符串检索" />
    <category term="canvas" />
    <category term="流程图" />
    <category term="d3" />
    <category term="g6" />
    <category term="zrender" />
    <category term="processOn" />
    <category term="SDN" />
    <category term="cbench" />
    <category term="安装说明" />
    <category term="绘图" />
    <category term="动画" />
    <category term="攻略" />
    <category term="流水账" />
    <category term="成都" />
    <category term="重庆" />
    <category term="武汉" />
    <category term="重构" />
    <category term="代码" />
    <category term="代码风格" />
    <category term="数据可视化" />
    <category term="爬虫" />
    <category term="chrome" />
    <category term="crx" />
    <category term="扩展" />
    <category term="CORS" />
    <category term="跨域" />
    <category term="盒模型" />
    <category term="浮动" />
    <category term="Reactive Programming" />
    <category term="JavaScript" />
    <category term="Cycle.js" />
    <category term="Dart" />
    <category term="最佳实践" />
    <category term="引流" />
    <category term="universal-link" />
    <category term="app-link" />
    <category term="脚手架" />
    <category term="degit" />
    <category term="git" />
    <category term="设计模式" />
    <category term="类" />
    <category term="接口" />
    <category term="抽象类" />
    <category term="DOM" />
    <category term="Docker" />
    <category term="ONOS" />
    <category term="控制器" />
    <category term="虚拟化" />
    <category term="笔记" />
    <category term="UX" />
    <category term="UED" />
    <category term="准则" />
    <category term="Java" />
    <category term="Ruby" />
    <category term="反射" />
    <category term="编程范式" />
    <category term="鸭子类型" />
    <category term="管理" />
    <category term="效率" />
    <category term="知识工作者" />
    <category term="卓有成效" />
    <category term="Elm" />
    <category term="框架" />
    <category term="函数式编程" />
    <category term="虚网映射" />
    <category term="Javascript" />
    <category term="并发" />
    <category term="event loop" />
    <category term="覆盖率" />
    <category term="端到端测试" />
    <category term="istanbul" />
    <category term="istanbuljs" />
    <category term="JavaSript" />
    <category term="Express" />
    <category term="源码" />
    <category term="代码覆盖率" />
    <category term="istanbul-middleware" />
    <category term="代码插桩" />
    <category term="require钩子" />
    <category term="babel-plugin-istanbul" />
    <category term="css" />
    <category term="html5" />
    <category term="flex" />
    <category term="javascript" />
    <category term="roadmap" />
    <category term="闭包" />
    <category term="Haskell" />
    <category term="monad" />
    <category term="后端" />
    <category term="管理后台" />
    <category term="egg.js" />
    <category term="工作流" />
    <category term="pull request" />
    <category term="golang" />
    <category term="语言学习" />
    <category term="黑客与画家" />
    <category term="创业" />
    <category term="骑行" />
    <category term="海南" />
    <category term="图文" />
    <category term="reflow" />
    <category term="repaint" />
    <category term="命名法" />
    <category term="成功学" />
    <category term="自我建设" />
    <category term="HTTP" />
    <category term="HTTP/2" />
    <category term="SPDY" />
    <category term="QUIC" />
    <category term="HTTPS" />
    <category term="状态码" />
    <category term="网络攻击" />
    <category term="介绍" />
    <category term="图片渲染" />
    <category term="html2canvas" />
    <category term="dom-to-image" />
    <category term="electron" />
    <category term="indexedDB" />
    <category term="异步" />
    <category term="Generator" />
    <category term="thunk" />
    <category term="async" />
    <category term="函数表达式" />
    <category term="对象" />
    <category term="继承" />
    <category term="类型转换" />
    <category term="==" />
    <category term="类型判断" />
    <category term="猫" />
    <category term="杀手" />
    <category term="管理学" />
    <category term="领导力" />
    <category term="梯队" />
    <category term="移动端" />
    <category term="UI" />
    <category term="自适应" />
    <category term="rem" />
    <category term="Electron" />
    <category term="GUI" />
    <category term="gpx" />
    <category term="template" />
    <category term="Electron Builder" />
    <category term="PWA" />
    <category term="方法论" />
    <category term="夜话" />
    <category term="多线" />
    <category term="生活" />
    <category term="密码" />
    <category term="密钥" />
    <category term="技改" />
    <category term="Vue" />
    <category term="gulp" />
    <category term="瀑布流" />
    <category term="电影" />
    <category term="PHP" />
    <category term="参考" />
    <category term="思维" />
    <category term="学习能力" />
    <category term="右脑" />
    <category term="经济学" />
    <category term="宏观经济学" />
    <category term="术语" />
    <category term="GDP" />
    <category term="CPI" />
    <category term="储蓄" />
    <category term="投资" />
    <category term="金融市场" />
    <category term="股票" />
    <category term="债券" />
    <category term="美联储" />
    <category term="失业" />
    <category term="货币" />
    <category term="现值" />
    <category term="准备金" />
    <category term="货币中性" />
    <category term="通货膨胀" />
    <category term="汇率" />
    <category term="购买力" />
    <category term="净出口" />
    <category term="资产净流出" />
    <category term="总需求" />
    <category term="总供给" />
    <category term="流动性偏好" />
    <category term="乘数效应" />
    <category term="菲利普斯曲线" />
    <category term="微观经济学" />
    <category term="供求" />
    <category term="贸易" />
    <category term="市场" />
    <category term="税" />
    <category term="剩余" />
    <category term="外部性" />
    <category term="公共物品" />
    <category term="公共资源" />
    <category term="生产成本" />
    <category term="利润" />
    <category term="垄断" />
    <category term="价格歧视" />
    <category term="寡头" />
    <category term="垄断竞争" />
    <category term="生产要素市场" />
    <category term="贫困" />
    <category term="消费者选择理论" />
    <category term="不对称信息" />
    <category term="政治经济学" />
    <category term="行为经济学" />
    <category term="VSCode" />
    <category term="编辑器" />
    <category term="IDE" />
    <category term="hybrid" />
    <category term="JSBridge" />
    <category term="Web Worker" />
    <category term="Service Worker" />
    <category term="习惯" />
    <category term="lint" />
    <category term="editorconfig" />
    <category term="commit message" />
    <category term="量子物理" />
    <category term="史话" />
    <category term="埋点" />
    <category term="raven.js" />
    <category term="前端监控" />
    <category term="文本编辑器" />
    <category term="quill" />
    <category term="结构化数据" />
    <category term="React" />
    <category term="Hooks" />
    <category term="函数组件" />
    <category term="复用" />
    <category term="状态管理" />
    <category term="redux" />
    <category term="MobX" />
    <category term="代码质量" />
    <category term="重来" />
    <category term="requestAnimationFrame" />
    <category term="TypeScript" />
    <category term="路书" />
    <category term="gpx解析" />
    <category term="EXIF" />
    <category term="人类" />
    <category term="生存" />
    <category term="基因" />
    <category term="响应式编程" />
    <category term="RxJS" />
    <category term="成长" />
    <category term="业务" />
    <category term="思想" />
    <category term="程序设计" />
    <category term="心理学" />
    <category term="自我" />
    <category term="社会思维" />
    <category term="社会影响" />
    <category term="文化" />
    <category term="性别" />
    <category term="从众" />
    <category term="说服" />
    <category term="临床诊断" />
    <category term="陪审团" />
    <category term="司法" />
    <category term="物质主义" />
    <category term="健康" />
    <category term="社会关系" />
    <category term="偏见" />
    <category term="攻击行为" />
    <category term="亲密关系" />
    <category term="友谊" />
    <category term="爱情" />
    <category term="利他" />
    <category term="冲突" />
    <category term="和解" />
    <category term="软技能" />
    <category term="理财" />
    <category term="健身" />
    <category term="自我营销" />
    <category term="学习" />
    <category term="商业模式" />
    <category term="产品" />
    <category term="校园网" />
    <category term="互联网" />
    <category term="技术" />
    <category term="web开发" />
    <category term="哲思" />
    <category term="择偶观" />
    <category term="validator" />
    <category term="大文件" />
    <category term="visibilityChange" />
    <category term="IntersectionObserver" />
    <category term="图种" />
    <category term="draggable" />
    <category term="webpack" />
    <category term="z-index" />
    <category term="git submodule" />
    <category term="object-fit" />
    <category term="object-position" />
    <category term="BroadcastChannel" />
    <category term="extract-text-webpack-plugin" />
    <category term="lottie" />
    <category term="backface-visibility" />
    <category term="egret" />
    <category term="mock" />
    <category term="SSO" />
    <category term="autoprefixer" />
    <category term="polyfill" />
    <category term="Android" />
    <category term="ffmpeg" />
    <category term="React Hooks" />
    <category term="rollup" />
    <category term="CDN" />
    <category term="DNS" />
    <category term="CNAME" />
    <category term="架构" />
    <category term="组件" />
    <category term="ssh" />
    <category term="fis-receiver" />
    <category term="tmux" />
    <category term="origami" />
    <category term="promise" />
    <category term="encodeURI" />
    <category term="encodeURIComponent" />
    <category term="axios" />
    <category term="charles" />
    <category term="黑色幽默" />
    <category term="朋友" />
    <category term="梦" />
    <category term="濒死" />
    <category term="江南" />
    <category term="苏州" />
    <category term="无锡" />
    <category term="宜兴" />
    <category term="湖州" />
    <category term="南浔" />
    <category term="游记" />
    <category term="随笔" />
    <category term="群众" />
    <category term="理论" />
    <category term="实效" />
    <category term="测试" />
    <category term="长沙" />
    <category term="杭州" />
    <category term="湖南" />
    <category term="核酸" />
    <category term="美食" />
    <category term="云南" />
    <category term="丽江" />
    <category term="大理" />
    <category term="青岛" />
    <category term="济南" />
    <category term="山东" />
    <category term="西北" />
    <category term="银川" />
    <category term="西宁" />
    <category term="青海湖" />
    <category term="西海镇" />
    <category term="茶卡盐湖" />
    <category term="厦门" />
    <category term="感受" />
    <category term="C语言" />
    <category term="树" />
    <category term="主干开发" />
    <category term="GitFlow" />
    <category term="GithubFlow" />
    <category term="typescript" />
    <category term="类型系统" />
    <category term="webrtc" />
    <category term="RTMP" />
    <category term="首屏时间" />
    <category term="性能优化" />
    <category term="公司" />
    <category term="个人发展" />
    <category term="战略" />
    <category term="晋升" />
    <category term="哲学" />
    <category term="幸福" />
    <category term="人生" />
    <category term="叔本华" />
    <category term="Unix" />
    <category term="Rollup" />
    <category term="mouseout" />
    <category term="mouseleave" />
    <category term="lint-staged" />
    <category term="吸顶" />
    <category term="图片组件" />
    <category term="形式系统" />
    <category term="不完全性" />
    <category term="隐喻" />
    <category term="哥德尔" />
    <category term="巴赫" />
    <category term="埃舍尔" />
    <category term="济州" />
    <category term="西归浦" />
    <category term="城山" />
    <category term="咸德" />
    <category term="人工智能" />
    <category term="心智" />
    <category term="自指" />
    <category term="图灵" />
    <category term="马列主义" />
    <category term="恩格斯" />
    <category term="家庭" />
    <category term="国家" />
    <category term="阶级" />
    <category term="氏族" />
    <category term="哲学史" />
    <category term="孔子" />
    <category term="老子" />
    <category term="儒家" />
    <category term="道家" />
    <category term="佛教" />
    <category term="禅宗" />
    <category term="理学" />
    <category term="心学" />
    <category term="计算机" />
    <category term="微机原理" />
    <category term="门" />
    <category term="操作系统" />
    <category term="数字电路" />
    <entry>
        <id>http://shenlvmeng.github.com/blog/2021/03/22/clean-architecture/</id>
        <title>《架构整洁之道》—— 软件设计的思考</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2021/03/22/clean-architecture/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;全文参考自马丁大叔的《架构整洁之道》，书中文笔清爽易懂，不过在后半段有点条理不清流于术而非道&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在编程领域，问题就像一个生命体一样，是在不断繁殖和进化的。它甚至经常不会人们预期中一般发展。作为一名出色的软件工程师或架构师，你需要有超出普通程序员的视角，考虑系统宏观的未来的发展。你的使命是，在这种恶劣的开发环境下，绘制一幅相对最优的图纸，用最少的时间、人力、金钱构建和维护一个随时可能融化在熵增热汤里的软件系统。和现实物理世界里的架构师类似，你需要了解编程世界里的一般规律，帮助你挑选武器（技术），修炼秘籍（方法论），在不同的江湖里（业务）打造不同的门派（软件系统）。&lt;/p&gt;
&lt;p&gt;开卷有益，祝你练武愉快~&lt;/p&gt;
&lt;h2 id=&#34;你要做什么&#34;&gt;&lt;a href=&#34;#你要做什么&#34; class=&#34;headerlink&#34; title=&#34;你要做什么&#34;&gt;&lt;/a&gt;你要做什么&lt;/h2&gt;&lt;p&gt;简而言之，架构师的终极目标就是&lt;strong&gt;用最少的人力成本来满足构建和维护软件系统的需求&lt;/strong&gt;。糟糕的架构设计会让软件在成功之前，就带来高昂的边际人力成本，即开发新需求的开支越来越大（因为程序员的时间都耗费在系统的修修补补上了）。然而，这种日益增长的边际人力成本现象并不少见。来源于类似龟兔赛跑中兔子的盲目自信，实际上，&lt;strong&gt;无论从短期还是长期看，胡乱编写代码的工作速度其实比循规蹈矩更慢&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;架构师存在的一个必要性就是，软件存在着两种价值维度：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;行为价值（现在时）&lt;/strong&gt;：即实现功能和弥补bug。这类价值是&lt;strong&gt;紧急却并不总是重要的&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;架构价值（将来时）&lt;/strong&gt;：即软件是否足够“软”（易于被修改），这类价值是&lt;strong&gt;重要却并不总是紧急的&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很现实的一点是，在公司中，&lt;strong&gt;团队之间的抗争本来就是无穷无尽的&lt;/strong&gt;。你作为研发团队的一员，职责的一部分就是避免你的代码在抗争的风吹雨打下变成一坨没人爱的shit。&lt;/p&gt;
&lt;h2 id=&#34;编程范式&#34;&gt;&lt;a href=&#34;#编程范式&#34; class=&#34;headerlink&#34; title=&#34;编程范式&#34;&gt;&lt;/a&gt;编程范式&lt;/h2&gt;&lt;p&gt;没错，架构师们也有祖师爷。在1958到1968年期间，3大编程范式就已经陆续出现了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;结构化编程&lt;/strong&gt;，由Dijkstra在1968年提出，并发扬光大，&lt;strong&gt;它对程序控制权的直接转移（程序语句）进行了限制和规范&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;面向对象编程&lt;/strong&gt;，最早在1966年提出，Ole Johan Dahl和Kriste Nygaard注意到，函数调用堆栈可以被放到堆内存中，从而在函数返回后继续保留。&lt;strong&gt;它对程序控制权的间接转移（函数调用）进行了限制和规范&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;函数式编程&lt;/strong&gt;，启发自Alonzo Church于1936年发明的lambda演算，发扬于1958年的LISP语言。&lt;strong&gt;它对程序的赋值进行了限制和规范&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;值得思考是，三大范式做的都是&lt;strong&gt;限制和规范&lt;/strong&gt;，即告诉我们&lt;strong&gt;不能做什么&lt;/strong&gt;，而不是可以做什么。另外，多态带来的架构边界飞跃，函数式编程带来的数据访问限制，结构化编程带来的算法拆解为我们架构软件提供了强大武器。这也与软件架构的三个关注点所契合：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;功能性&lt;/strong&gt;，即完整的功能实现&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;组件独立性&lt;/strong&gt;，即合适的耦合度与细粒度&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据管理&lt;/strong&gt;，即良好的数据结构设计&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;结构化编程&#34;&gt;&lt;a href=&#34;#结构化编程&#34; class=&#34;headerlink&#34; title=&#34;结构化编程&#34;&gt;&lt;/a&gt;结构化编程&lt;/h3&gt;&lt;p&gt;Dijkstra在1950年代思考编程时，得出过一个结论：编程是一项&lt;strong&gt;难度很大&lt;/strong&gt;的活动。他倾向于把编程类比为数学推导过程，并发现&lt;code&gt;goto&lt;/code&gt;的&lt;strong&gt;某些使用&lt;/strong&gt;会导致&lt;strong&gt;模块无法被递归拆解成更小的单元&lt;/strong&gt;。然而，去掉这些使用的&lt;code&gt;goto&lt;/code&gt;可以被&lt;strong&gt;顺序结构、分支结构、循环结构这三种最小集&lt;/strong&gt;等价表示出来。从而，大问题可以被逐步拆解为小问题。&lt;/p&gt;
&lt;p&gt;不过，事情也并非这么理想，当程序复杂后，我们不可能像Dijkstra一样，用严格的数学推导形式化证明编程的正确性。相反，类似实验学科的&lt;strong&gt;无法被证伪即正确&lt;/strong&gt;，我们现今依旧使用着Dijkstra的结构化编程思路将大问题拆解为小问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有趣的是，“无法被证伪即正确”和Dijkstra的一个观点&lt;strong&gt;“测试只能展示bug的存在，并不能证明不存在bug”&lt;/strong&gt;不谋而合&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简而言之，去掉goto糟粕诞生的结构化编程中，最有价值的地方就是，它赋予我们创造&lt;strong&gt;可证伪程序单元&lt;/strong&gt;的能力，从而架构起大程序。在架构设计领域，&lt;strong&gt;功能性拆解仍然是最佳实践之一&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;什么？什么叫做可证伪？你应该写过单元测试吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;面向对象编程&#34;&gt;&lt;a href=&#34;#面向对象编程&#34; class=&#34;headerlink&#34; title=&#34;面向对象编程&#34;&gt;&lt;/a&gt;面向对象编程&lt;/h3&gt;&lt;p&gt;什么是面向对象？有人说面向对象是“数据和函数的组合”，也有人说是“对真实世界的一种建模方式”。但这两种理解要么片面，要么虚无缥缈。为了总结这种范式，我们先从它的3大特征入手：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;封装&lt;/strong&gt;，即将一组关联数据和函数圈起来。然而这种特性，从C语言起就支持（struct + 头文件），很难说它是面向对象编程的必要条件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;继承&lt;/strong&gt;，即可以在某个作用域对外部定义的一组变量与函数进行覆盖。不过C语言也能模拟出这种能力，看起来也比较勉强。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;多态&lt;/strong&gt;，即在同一接口描述下的不同具体实现形式，C语言起也做了支持（STDOUT），然而使用函数指针显式实现多态问题就在于指针的&lt;strong&gt;危险性&lt;/strong&gt;。而面向对象编程对这种程序间接控制权的转移做了约束。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;传统的函数调用树中，系统行为决定了自上而下的控制流，而控制流决定了&lt;strong&gt;源代码依赖&lt;/strong&gt;（代码实现）是自上而下的，比如在C中会使用&lt;code&gt;#include&lt;/code&gt;引入依赖。此时不论是代码实现还是代码执行都是自上而下的。然而在&lt;strong&gt;多态&lt;/strong&gt;的帮助下，底层函数需要依赖高层接口实现，作为高层函数的插件引入，从而将这种依赖关系和控制流反向，即&lt;strong&gt;依赖反转&lt;/strong&gt;。实际上，借助安全便利的多态实现，可以轻松将依赖关系反转。&lt;/p&gt;
&lt;p&gt;从而架构师可以&lt;strong&gt;完全控制&lt;/strong&gt;这种方式下，系统中所有的源代码依赖关系，进而随意更改源代码依赖关系。让每个组件都有&lt;strong&gt;独立部署&lt;/strong&gt;和&lt;strong&gt;独立开发&lt;/strong&gt;能力。好了，我们现在可以说明面向对象编程的含义了：&lt;/p&gt;
&lt;p&gt;面向对象编程就是以多态为手段来对源代码中的依赖关系进行控制的能力。这种能力让架构师可以构建&lt;strong&gt;插件式架构&lt;/strong&gt;，让高层&lt;strong&gt;策略性组件&lt;/strong&gt;和底层&lt;strong&gt;实现性组件&lt;/strong&gt;相分离。借助接口，底层实现性组件作为插件，可以独立于高层组件开发和部署。&lt;/p&gt;
&lt;h3 id=&#34;函数式编程&#34;&gt;&lt;a href=&#34;#函数式编程&#34; class=&#34;headerlink&#34; title=&#34;函数式编程&#34;&gt;&lt;/a&gt;函数式编程&lt;/h3&gt;&lt;p&gt;函数式编程依据的原理早在编程之前就已出现，相对前两种范式，函数式编程的风格可能相对陌生一点。在这类风格中，变量都是不可变的。从而让竞争问题、死锁问题、并发更新问题不复存在。一个架构良好的系统，需要将状态修改的部分和不需要修改的部分隔离开，然后用类似事务型内存的方式来保护可变量。另外，架构师应该着力于将大部分逻辑归于不可变组件中，可变组件的逻辑越少越好。&lt;/p&gt;
&lt;p&gt;书中还提到了只包含CR的事件溯源存储逻辑，即通过事务日志的方式保存当前状态。因为不存在更改和删除，从而不存在并发问题。也是一种很新颖的思路。&lt;/p&gt;
&lt;p&gt;回顾上面的三种编程范式，都在说什么&lt;strong&gt;不应该做&lt;/strong&gt;。也即编程好似在充满死路的熵增旷野中，只有沿着相对安全的几个大方向才可拨开迷雾。&lt;/p&gt;
&lt;h2 id=&#34;设计原则&#34;&gt;&lt;a href=&#34;#设计原则&#34; class=&#34;headerlink&#34; title=&#34;设计原则&#34;&gt;&lt;/a&gt;设计原则&lt;/h2&gt;&lt;p&gt;软件的中层需要具有良好的可读性、可扩展性。这里就不得不提到SOLID原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SRP：&lt;strong&gt;单一职责原则&lt;/strong&gt;，每个模块有且只有一个需要被改变的理由&lt;/li&gt;
&lt;li&gt;OCP：&lt;strong&gt;开闭原则&lt;/strong&gt;，对扩展开放，对修改封闭&lt;/li&gt;
&lt;li&gt;LSP：&lt;strong&gt;里氏替换原则&lt;/strong&gt;，子类型应该能够无无缝替换类型使用&lt;/li&gt;
&lt;li&gt;ISP：&lt;strong&gt;接口隔离原则&lt;/strong&gt;，依赖的模块不要包含不需要的接口&lt;/li&gt;
&lt;li&gt;DIP：&lt;strong&gt;依赖反转原则&lt;/strong&gt;，高层策略性代码不要依赖底层实现性代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;SRP&#34;&gt;&lt;a href=&#34;#SRP&#34; class=&#34;headerlink&#34; title=&#34;SRP&#34;&gt;&lt;/a&gt;SRP&lt;/h3&gt;&lt;p&gt;任何一个软件模块（一组紧密相关的函数和数据结构）都应该只对一个行为者负责。实际上，代码和数据就是靠着和某一类行为者的相关性组合起来的。我们需要&lt;strong&gt;将服务不同行为者的代码进行切分&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;OCP&#34;&gt;&lt;a href=&#34;#OCP&#34; class=&#34;headerlink&#34; title=&#34;OCP&#34;&gt;&lt;/a&gt;OCP&lt;/h3&gt;&lt;p&gt;设计良好的软件应该易于扩展，同时抗拒修改。实现方式可以通过将系统划分为一系列组件，并且将依赖关系按层次组织，使得高阶组件不会因为低阶组件修改受到影响。&lt;/p&gt;
&lt;h3 id=&#34;LSP&#34;&gt;&lt;a href=&#34;#LSP&#34; class=&#34;headerlink&#34; title=&#34;LSP&#34;&gt;&lt;/a&gt;LSP&lt;/h3&gt;&lt;p&gt;里氏替换原则表示，子类型应该能够被当做父类型使用。它实际上表示了一种面向接口设计的设计原则。一旦违背了这种可替换性，就会不得不在系统架构中增加大量复杂的应对机制。&lt;/p&gt;
&lt;h3 id=&#34;ISP&#34;&gt;&lt;a href=&#34;#ISP&#34; class=&#34;headerlink&#34; title=&#34;ISP&#34;&gt;&lt;/a&gt;ISP&lt;/h3&gt;&lt;p&gt;ISP告诉我们任何软件设计如果依赖了不需要的东西，都是不好的迹象，很容易带来不必要的麻烦。&lt;/p&gt;
&lt;h3 id=&#34;DIP&#34;&gt;&lt;a href=&#34;#DIP&#34; class=&#34;headerlink&#34; title=&#34;DIP&#34;&gt;&lt;/a&gt;DIP&lt;/h3&gt;&lt;p&gt;DIP告诉我们，应该多引用抽象类型，而不是具体实现。因为软件是经常变动的，而抽象出共性的接口则是较少变化的。从而可以衍生出一些守则，譬如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应该多使用抽象接口，避免使用多变的实现类&lt;/li&gt;
&lt;li&gt;不要在实现类上创建衍生类&lt;/li&gt;
&lt;li&gt;不要覆盖具体实现的函数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过当然了，还是得有人做实现的脏活累活的&lt;/p&gt;
&lt;h2 id=&#34;组件构建&#34;&gt;&lt;a href=&#34;#组件构建&#34; class=&#34;headerlink&#34; title=&#34;组件构建&#34;&gt;&lt;/a&gt;组件构建&lt;/h2&gt;&lt;h3 id=&#34;组件&#34;&gt;&lt;a href=&#34;#组件&#34; class=&#34;headerlink&#34; title=&#34;组件&#34;&gt;&lt;/a&gt;组件&lt;/h3&gt;&lt;p&gt;组件是构建软件的最小单元，同时也是源代码的集合。在早期会使用链接技术将程序和库函数链接起来，而后随着机器性能的增长，我们会在程序运行中插入动态链接文件，如今这种组件化插件式架构是最常见的软件构建形式。&lt;/p&gt;
&lt;h3 id=&#34;组件聚合&#34;&gt;&lt;a href=&#34;#组件聚合&#34; class=&#34;headerlink&#34; title=&#34;组件聚合&#34;&gt;&lt;/a&gt;组件聚合&lt;/h3&gt;&lt;p&gt;和类相似，组件也有一些原则指引我们的构建工作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;REP：复用&amp;#x2F;发布原则，即可以一起发布的最小粒度就是复用的最小粒度，也即按可以同时发布聚合&lt;/li&gt;
&lt;li&gt;CCP：共同闭包原则，即因为同一原因修改的放在一起，反之不要放在一起，也即按变更原因聚合&lt;/li&gt;
&lt;li&gt;CRP：共同复用原则，即会被一起复用的放在一起，反之不要放在一起，也即按减少无用耦合聚合&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这三大原则相互牵制，在项目的不同阶段，某一原则重要性也会不同；比如在项目早期CCP就会更重要，而后REP会比较重要。&lt;/p&gt;
&lt;h3 id=&#34;组合耦合&#34;&gt;&lt;a href=&#34;#组合耦合&#34; class=&#34;headerlink&#34; title=&#34;组合耦合&#34;&gt;&lt;/a&gt;组合耦合&lt;/h3&gt;&lt;p&gt;本节提出了一些可以定量衡量耦合健康度的指标，比较新颖。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无依赖环原则：依赖关系中不能有环，会不利于厘清依赖关系；可以通过&lt;strong&gt;依赖反转&lt;/strong&gt;或&lt;strong&gt;创建第三方依赖组件&lt;/strong&gt;解决。循环依赖关系务必持续监控。&lt;/li&gt;
&lt;li&gt;稳定依赖原则：依赖关系必须指向稳定的方向，简单点说就是让经常变更的组件依赖于不经常变更的组件。一个组件的位置稳定性可以通过入向和出向依赖算出，它要能和组件的实际稳定性匹配。&lt;/li&gt;
&lt;li&gt;稳定抽象原则：抽象化程度需要和稳定性程度一直，即经常变更的组件要容易变更，即更具体实现；反之，稳定的组件要不容易变更，即更抽象。结合上条看，依赖关系应该指向更抽象的方向。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用位置稳定性指标I和抽象程度A，可以绘制一个坐标系。在主序列上的是最健康的，相反的两块痛苦区和无用区则是不健康的表现。用偏离主序列线的距离可以大致衡量依赖关系的健康程度。结合发布版本的变化来看，还可以得到变化趋势。&lt;/p&gt;
&lt;h2 id=&#34;软件架构&#34;&gt;&lt;a href=&#34;#软件架构&#34; class=&#34;headerlink&#34; title=&#34;软件架构&#34;&gt;&lt;/a&gt;软件架构&lt;/h2&gt;&lt;p&gt;软件架构目的就是方便在工作中更好地对组件进行研发、部署、运行和维护。其中的策略就是&lt;strong&gt;保留尽可能多的可选项&lt;/strong&gt;。让系统最大化程序员的生产力，同时最小化系统运营成本：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发：系统架构需要方便开发团队对它的开发，不同的团队结构应该采用不同的架构设计，比如团队的大小就会影响架构的选择&lt;/li&gt;
&lt;li&gt;部署：一键式部署&lt;/li&gt;
&lt;li&gt;运行：几乎任何运行问题都可以通过增加硬件来解决&lt;/li&gt;
&lt;li&gt;维护：减小新功能和系统缺陷占用的人力资源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;保持可选项，忽略那些无关紧要的实现细节。任何软件系统都可以拆解成&lt;strong&gt;策略&lt;/strong&gt;（业务的宏观逻辑和流程）和&lt;strong&gt;细节&lt;/strong&gt;（具体操作行为）。而&lt;strong&gt;策略才是系统的真正价值所在&lt;/strong&gt;。细节是指那些和策略交互的东西，包括:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I&amp;#x2F;O设备&lt;/li&gt;
&lt;li&gt;数据库&lt;/li&gt;
&lt;li&gt;Web系统&lt;/li&gt;
&lt;li&gt;服务器&lt;/li&gt;
&lt;li&gt;框架&lt;/li&gt;
&lt;li&gt;交互协议&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在设计时，可以尽量拖延上面这些的设计，这样我们做出的决策才不会依赖各种很容易变化的信息。另一方面，也可以&lt;strong&gt;增加实现底层的可替换性&lt;/strong&gt;。举个具体例子：&lt;strong&gt;设备无关性&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;独立性&#34;&gt;&lt;a href=&#34;#独立性&#34; class=&#34;headerlink&#34; title=&#34;独立性&#34;&gt;&lt;/a&gt;独立性&lt;/h3&gt;&lt;p&gt;一个良好的架构应支持下面几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统用例：设计良好的架构需要能够&lt;strong&gt;看起来&lt;/strong&gt;就可以反映系统的设计意图，比如一个购物车应用架构应该看起来就该是用来实现购物车的&lt;/li&gt;
&lt;li&gt;系统运行：可以解耦出多个独立服务，然后通过某种网络协议通信，这种架构即微服务&lt;/li&gt;
&lt;li&gt;系统维护&lt;/li&gt;
&lt;li&gt;系统开发&lt;/li&gt;
&lt;li&gt;系统部署：理想的独立部署应该能够做到&lt;strong&gt;热更新&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要注意留意表面的重复和实际的重复，如果两段代码变更速率和缘由不同，那么就不算是真正的重复。&lt;/p&gt;
&lt;h3 id=&#34;划分边界&#34;&gt;&lt;a href=&#34;#划分边界&#34; class=&#34;headerlink&#34; title=&#34;划分边界&#34;&gt;&lt;/a&gt;划分边界&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;设计良好的系统架构不应该依赖细节，而应该尽可能推迟细节性的决策。通过划清边界，可以推迟和延后细节性的决策，从而节省大量时间，避免问题。&lt;/li&gt;
&lt;li&gt;边界线应该画在不相干的事情中间，譬如GUI和业务逻辑&lt;/li&gt;
&lt;li&gt;针对核心业务逻辑的插件式架构可以提高可维护性和可扩展性&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;边界剖析&#34;&gt;&lt;a href=&#34;#边界剖析&#34; class=&#34;headerlink&#34; title=&#34;边界剖析&#34;&gt;&lt;/a&gt;边界剖析&lt;/h3&gt;&lt;p&gt;简言之，应该尽可能从底层组件指向高层组件。&lt;/p&gt;
&lt;h3 id=&#34;策略和层次&#34;&gt;&lt;a href=&#34;#策略和层次&#34; class=&#34;headerlink&#34; title=&#34;策略和层次&#34;&gt;&lt;/a&gt;策略和层次&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;变更原因、时间和层次不同的策略应该属于不同的组件&lt;/li&gt;
&lt;li&gt;按距离系统输入、输出距离的远近，可以确定策略的层次&lt;/li&gt;
&lt;li&gt;源码间的依赖关系，应该主要和组件所在的层次挂钩&lt;/li&gt;
&lt;li&gt;低层组件应该以插件的方式依赖高层组件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;业务逻辑&#34;&gt;&lt;a href=&#34;#业务逻辑&#34; class=&#34;headerlink&#34; title=&#34;业务逻辑&#34;&gt;&lt;/a&gt;业务逻辑&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;业务逻辑是程序中真正用于或者体现赚钱&amp;#x2F;省钱的逻辑与过程&lt;/strong&gt;。其中关键逻辑和关键数据紧密组合成为&lt;strong&gt;业务实体&lt;/strong&gt;。业务实体应该只有高层逻辑，没有具体实现。而&lt;strong&gt;用例&lt;/strong&gt;是业务实体在不同侧面的具体体现。通过用例可以规范用户和业务实体的交互方式。&lt;/p&gt;
&lt;h3 id=&#34;“尖叫”的软件架构&#34;&gt;&lt;a href=&#34;#“尖叫”的软件架构&#34; class=&#34;headerlink&#34; title=&#34;“尖叫”的软件架构&#34;&gt;&lt;/a&gt;“尖叫”的软件架构&lt;/h3&gt;&lt;p&gt;“尖叫”即所见即所得。软件架构本身就足以能够体现其用途。一个良好的架构设计应该围绕用例展开，推迟和延后框架的选择，不要过度拘泥于框架。&lt;strong&gt;框架只是一个可选项&lt;/strong&gt;，是一个工具，而不是一种信念，更不是一种架构。&lt;/p&gt;
&lt;h3 id=&#34;整洁架构&#34;&gt;&lt;a href=&#34;#整洁架构&#34; class=&#34;headerlink&#34; title=&#34;整洁架构&#34;&gt;&lt;/a&gt;整洁架构&lt;/h3&gt;&lt;p&gt;一些常见的系统架构通常具有以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;独立于框架&lt;/li&gt;
&lt;li&gt;可被测试&lt;/li&gt;
&lt;li&gt;独立于UI&lt;/li&gt;
&lt;li&gt;独立于数据库&lt;/li&gt;
&lt;li&gt;独立于外部接口&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Main组件&#34;&gt;&lt;a href=&#34;#Main组件&#34; class=&#34;headerlink&#34; title=&#34;Main组件&#34;&gt;&lt;/a&gt;Main组件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Main组件包含了系统中最细节化最底层的策略，它应该在做完脏活累活后，将程序的控制权交给最高抽象层的代码去执行&lt;/li&gt;
&lt;li&gt;针对不同系统可以配置不同的Main组件，即将Main组件视为应用程序的一个插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;服务：微观和宏观&#34;&gt;&lt;a href=&#34;#服务：微观和宏观&#34; class=&#34;headerlink&#34; title=&#34;服务：微观和宏观&#34;&gt;&lt;/a&gt;服务：微观和宏观&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;系统的架构边界事实上并不落在服务之间，而是&lt;strong&gt;穿透&lt;/strong&gt;所有服务，在服务内以组件形式存在&lt;/li&gt;
&lt;li&gt;服务可以提升系统的可扩展性和可开发性，不过服务却并不能代表整个系统的架构设计&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;整洁的嵌入式架构&#34;&gt;&lt;a href=&#34;#整洁的嵌入式架构&#34; class=&#34;headerlink&#34; title=&#34;整洁的嵌入式架构&#34;&gt;&lt;/a&gt;整洁的嵌入式架构&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;固件即对平台或硬件的强依赖代码，在固件和软件之间可以设置HAL（硬件抽象层），为它上层的软件提供服务，它可以帮助软件&lt;em&gt;脱离&lt;/em&gt;目标硬件平台来测试&lt;/li&gt;
&lt;li&gt;类似地，我们还可以引入OSAL（操作系统抽象层）来减少软件对操作系统的依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实现细节&#34;&gt;&lt;a href=&#34;#实现细节&#34; class=&#34;headerlink&#34; title=&#34;实现细节&#34;&gt;&lt;/a&gt;实现细节&lt;/h2&gt;&lt;p&gt;那么什么算是实现细节呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;数据库&lt;/strong&gt;，数据的组织结构和模型都是系统架构的一部分，但是从磁盘中存储&amp;#x2F;读取数据的机制或手段则没那么重要，就比如数据库或静态文件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Web&lt;/strong&gt;，Web只是UI，只是一种I&amp;#x2F;O设备&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用框架&lt;/strong&gt;，框架被创造的目的是解决作者遇到的问题，它要求我们去阅读文档，按照作者的要求整合到我们的应用中，可以使用但是不要被框架绑定&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;案例：视频销售网站&#34;&gt;&lt;a href=&#34;#案例：视频销售网站&#34; class=&#34;headerlink&#34; title=&#34;案例：视频销售网站&#34;&gt;&lt;/a&gt;案例：视频销售网站&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;系统架构设计的第一步是识别系统中的各种角色和用例&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;–END–&lt;/em&gt;&lt;/p&gt;
</content>
        <category term="设计" />
        <category term="架构" />
        <category term="组件" />
        <updated>2021-03-22T15:47:20.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2020/06/29/http-2-for-frontend/</id>
        <title>面向前端的HTTP/2介绍</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2020/06/29/http-2-for-frontend/"/>
        <content type="html">&lt;p&gt;正式版HTTP&amp;#x2F;2发布于2015年5月，距今已经快5年了，相比老一辈HTTP 1.1有了许多改进。在具体讨论这些改进前，我们先简单回顾下HTTP这一路以来的历程。&lt;/p&gt;
&lt;h2 id=&#34;历史回顾&#34;&gt;&lt;a href=&#34;#历史回顾&#34; class=&#34;headerlink&#34; title=&#34;历史回顾&#34;&gt;&lt;/a&gt;历史回顾&lt;/h2&gt;&lt;p&gt;HTTP在1991年发布了最初的HTTP0.9版本，主要用于学术交流，目的也只是用来在网络之间传递HTML超文本的内容。HTTP0.9基于TCP，只有一个GET请求类型，请求和文档响应都是ASCII字符流，响应数据类型只有HTML类型，在响应结束后立即断开连接。&lt;/p&gt;
&lt;p&gt;随着互联网发展，1994年底出现了拨号上网，网景推出浏览器后，WWW已经不仅局限于学术交流，浏览器中除了承载HTML以外，还包括了JavaScript、CSS、图片、音视频等资源。HTTP1.0在这个背景下于1996年推出（RFC1945），它支持了状态码、方法、头部的概念，响应内容不局限于超文本文件，编码类型也不仅限于ASCII。但是TCP连接在响应返回后依旧会断开连接。&lt;/p&gt;
&lt;p&gt;在浏览器等技术发展，HTTP请求更多也更复杂，HTTP1.0的已有问题暴露得越来越明显。TCP频繁建立连接的时延，缓存协商机制的不完整、大文件下载的支持等问题需要解决。于是HTTP1.1在1999年推出（RFC2616），这是个很庞大的协议，全文长达176页，在后续IETF对该规范进行更新时，则被拆分成了总页数更多的六个文档（即RFC7230协议族）。HTTP1.1包含了太多细节和可选的部分，包含不常用的功能和不合适的优化，因此几乎没有任何实现包含完整的协议功能。总的来看，HTTP1.1做了一些尝试：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TCP持久连接（keep-alive），即在一个TCP连接上发起HTTP请求&lt;/li&gt;
&lt;li&gt;支持范围请求（Accept-Ranges）&lt;/li&gt;
&lt;li&gt;更强大的缓存机制（协商缓存和强缓存，以及相关的头部）&lt;/li&gt;
&lt;li&gt;提出了HTTP pipeline，尝试改善串行HTTP请求引起的线头阻塞（Head-of-line blocking）问题&lt;/li&gt;
&lt;li&gt;更多的错误相关状态码&lt;/li&gt;
&lt;li&gt;Host头处理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之后HTTP1.1便被一直使用至今，随着互联网页面请求资源的数量和体积增大，HTTP1.1中没能妥善解决的问题越来越明显。HTTPbis工作组在2007年夏天便着手于HTTP1.1标准的更新，并最终在2014年初形成上面提到的RFC7230系列协议族。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/SPDY&#34;&gt;SPDY&lt;/a&gt;（SPeeDY）是由Google牵头开发的开源协议，意图在TLS和HTTP中间插入中间层，解决HTTP协议的问题。大约在2012年提出，也被大多数主流浏览器支持。最终在2015年HTTP&amp;#x2F;2协议发布后，逐步放弃支持。实际上HTTP&amp;#x2F;2也是在SPDY&amp;#x2F;3草案的基础上形成的协议初稿。&lt;/p&gt;
&lt;h2 id=&#34;历史问题&#34;&gt;&lt;a href=&#34;#历史问题&#34; class=&#34;headerlink&#34; title=&#34;历史问题&#34;&gt;&lt;/a&gt;历史问题&lt;/h2&gt;&lt;h3 id=&#34;传输资源与延迟&#34;&gt;&lt;a href=&#34;#传输资源与延迟&#34; class=&#34;headerlink&#34; title=&#34;传输资源与延迟&#34;&gt;&lt;/a&gt;传输资源与延迟&lt;/h3&gt;&lt;p&gt;当今的互联网环境和20世纪末那会儿已经有了很大的不同，现在的Web页面更像一个应用的概念，而非一个简单的页面（SPA）。从HTTPArchive一个页面下请求的资源数已经上百，请求的资源体积也接近2M。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bagder/http2-explained/master/images/transfer-size-growth.png&#34; alt=&#34;http-transfer-size&#34;&gt;&lt;/p&gt;
&lt;p&gt;随着这些年网络硬件条件的迅猛发展，&lt;strong&gt;带宽&lt;/strong&gt;已经不再是影响人们体验的因素，而&lt;strong&gt;网络延迟&lt;/strong&gt;仍然没有太好的改善。高延迟的网络上（比如移动设备），即使拥有高连接速率，也很难获得优质快速的网络体验。页面从访问到打开的近70%时间都发生在网络上。&lt;/p&gt;
&lt;h3 id=&#34;请求-响应模型&#34;&gt;&lt;a href=&#34;#请求-响应模型&#34; class=&#34;headerlink&#34; title=&#34;请求-响应模型&#34;&gt;&lt;/a&gt;请求-响应模型&lt;/h3&gt;&lt;p&gt;HTTP1.1是无状态协议，需要以客户端请求开始，然后才能响应。一个TCP上同时只能有一个请求&amp;#x2F;响应。TCP协议的能力并没有被充分利用。在HTTP1.1启用keep-alive后，TCP连接重复建立的问题被解决。但是请求还是需要排队一个一个发送，TCP的RTT（round-trip time）还是比较可观。后续的HTTP1.1提出了&lt;strong&gt;HTTP管线化&lt;/strong&gt;（pipeline），即将多个HTTP请求合并成一个，一起发送，这样的确提高了服务器的资源利用率，但是也会带来线头阻塞（head-of-line blocking）问题，即一个比较耗时的请求会影响后续的所有请求。另外，它会给重试带来麻烦，需要网络中间节点的支持。所以这个特性并没有得到浏览器和服务器认可，实现也并不普及。目前大多数桌面浏览器也是默认关闭这个特性的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://mdn.mozillademos.org/files/13727/HTTP1_x_Connections.png&#34; alt=&#34;http-pipeline&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;那些年，我们一起克服延迟的办法&#34;&gt;&lt;a href=&#34;#那些年，我们一起克服延迟的办法&#34; class=&#34;headerlink&#34; title=&#34;那些年，我们一起克服延迟的办法&#34;&gt;&lt;/a&gt;那些年，我们一起克服延迟的办法&lt;/h4&gt;&lt;p&gt;针对上面的困难，智慧的开发者们自然也是有了许多应对办法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bagder/http2-explained/master/images/spriting.jpg&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;雪碧图：将小图片整合成一张大图。&lt;/li&gt;
&lt;li&gt;内联：将高优先级资源或小资源通过script标签或style标签或dataUrl的形式直接内嵌在页面里&lt;/li&gt;
&lt;li&gt;分片（sharding）与域名散列：将图片或者其他资源分发到不同主机。最初的HTTP1.1规范（RFC2616）提到一个客户端最多只能对同一主机建立两个TCP连接。后来，两个连接的限制被取消了（RFC7230），现在的浏览器一般允许每个域名主机建立6-8个连接。根据httparchive.org的记录显示，在Top30万个URL中平均使用40个TCP连接来显示页面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bagder/http2-explained/master/images/expressen-sharding.jpg&#34; alt=&#34;http-sharding&#34;&gt;&lt;/p&gt;
&lt;p&gt;除此之外，为了减少请求数，前端会将代码合并并打包，这也是webpack这样的工具诞生的背景。&lt;/p&gt;
&lt;h3 id=&#34;冗长的头部&#34;&gt;&lt;a href=&#34;#冗长的头部&#34; class=&#34;headerlink&#34; title=&#34;冗长的头部&#34;&gt;&lt;/a&gt;冗长的头部&lt;/h3&gt;&lt;p&gt;HTTP1.1中1000+字节的头部都是常见的且体积较大的，如&lt;code&gt;Cookie&lt;/code&gt;。头部信息有许多多余信息。这也让许多大请求建立连接的过程变得很慢。&lt;/p&gt;
&lt;p&gt;总结来看，HTTP1.1遗留了下面几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对TCP利用较差，同时只能有一个请求&amp;#x2F;响应&lt;ul&gt;
&lt;li&gt;目前应对方法：开多个TCP连接（分片），减少请求数（合并资源）；这些方法多少会遇到TCP慢启动、DNS开销等问题&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;HTTP头部没有压缩，占用较大空间&lt;ul&gt;
&lt;li&gt;目前应对方法：减少请求数、使用cookie-less域名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;固有的请求-响应模式，重要资源无法优先推送&lt;ul&gt;
&lt;li&gt;目前应对方法：内联资源&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTTP&amp;#x2F;2对于上面这些问题自然是重拳出击。&lt;/p&gt;
&lt;h2 id=&#34;HTTP-x2F-2概述&#34;&gt;&lt;a href=&#34;#HTTP-x2F-2概述&#34; class=&#34;headerlink&#34; title=&#34;HTTP&amp;#x2F;2概述&#34;&gt;&lt;/a&gt;HTTP&amp;#x2F;2概述&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;“HTTP&amp;#x2F;2 enables a more efficient use of network resources and a reduced perception of latency by introducing header field compression and allowing multiple concurrent exchanges on the same connection. It also introduces unsolicited push of representations from servers to clients.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据&lt;a href=&#34;https://httpwg.org/specs/rfc7540.html&#34;&gt;RFC7540&lt;/a&gt;的摘要，简明扼要地点出了HTTP&amp;#x2F;2带来的几个重要特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多路复用的二进制协议；一个TCP连接上不再只有1个请求&amp;#x2F;响应，同时采用二进制而非文本传输数据&lt;/li&gt;
&lt;li&gt;头部压缩；用二进制分帧配合专门设计的头部压缩算法（HPACK）大大减少头部体积，HPACK有专门的&lt;a href=&#34;https://httpwg.github.io/specs/rfc7541.html&#34;&gt;RFC7541&lt;/a&gt;来规范。&lt;/li&gt;
&lt;li&gt;服务器推送；在客户端发送请求前，主动将资源推送给客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;整个HTTP&amp;#x2F;2实际上还是在HTTP的框架下的，对HTTP1.1也是完全兼容的，这意味着你可以像以前一样使用HTTP的API、方法、头部、状态码这些：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP&amp;#x2F;2必须维持HTTP的范式。它只是一个让客户端发送请求到服务器的基于TCP的协议&lt;/li&gt;
&lt;li&gt;不能改变&lt;code&gt;http://&lt;/code&gt;和&lt;code&gt;https://&lt;/code&gt;这样的URL，也不能对其添加新的结构。使用这类URL的网站太多了，没法指望他们全部改变。&lt;/li&gt;
&lt;li&gt;HTTP1.1的服务器和客户端依然会存在很久，所以必须提供HTTP1.1到HTTP&amp;#x2F;2服务器的代理&lt;/li&gt;
&lt;li&gt;不再使用小版本号。服务器和客户端都必须确定自己是否完整兼容http2或者彻底不兼容&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;协商&#34;&gt;&lt;a href=&#34;#协商&#34; class=&#34;headerlink&#34; title=&#34;协商&#34;&gt;&lt;/a&gt;协商&lt;/h3&gt;&lt;p&gt;SPDY依赖于TLS，不过从SPDY中诞生的HTTP&amp;#x2F;2却可以选择是否基于TLS。由此带来2种HTTP&amp;#x2F;2协商机制。对于普通的HTTP1.1，通过给服务器发送一个带升级头部的报文。如果服务器支持HTTP&amp;#x2F;2，它将以“101 Switching”作为回复的状态码，并从此开始在该连接上使用HTTP&amp;#x2F;2。这种连接方式也被称为&lt;strong&gt;h2c&lt;/strong&gt;（HTTP&amp;#x2F;2 cleartext），此时HTTP&amp;#x2F;2在TCP之上运行。出于安全性考虑。&lt;strong&gt;几乎所有的主流浏览器都不支持这种协商实现&lt;/strong&gt;（curl可以支持）。&lt;/p&gt;
&lt;p&gt;对于在TLS之上的https，Next Protocol Negotiation (NPN)是一个用来在TLS服务器上协商SPDY的协议。IETF将这个非正式标准进行规范化，从而演变成了ALPN（Application Layer Protocol Negotiation）。ALPN会伴随HTTP&amp;#x2F;2中的使用而推广，考虑到SPDY会使用NPN，而许多服务器又会同时提供SPDY以及HTTP&amp;#x2F;2，所以在这些服务器上同时支持ALPN以及NPN显然会成为最理所当然的选择。ALPN和NPN的主要区别在于，ALPN中由服务端最终决定通信协议，NPN中由客户端最终决定。&lt;/p&gt;
&lt;h2 id=&#34;HTTP-x2F-2特性&#34;&gt;&lt;a href=&#34;#HTTP-x2F-2特性&#34; class=&#34;headerlink&#34; title=&#34;HTTP&amp;#x2F;2特性&#34;&gt;&lt;/a&gt;HTTP&amp;#x2F;2特性&lt;/h2&gt;&lt;p&gt;在HTTP&amp;#x2F;2的介绍中提到，协议通过定义一个优化的基础连接的HTTP语义映射来解决HTTP1.1的问题。具体地，它允许在&lt;strong&gt;同一连接&lt;/strong&gt;上&lt;strong&gt;交错&lt;/strong&gt;地建立请求和响应消息，并使用&lt;strong&gt;高效率编码&lt;/strong&gt;的HTTP报头字段。它还允许&lt;strong&gt;请求的优先级&lt;/strong&gt;，让更多的重要的请求更快速的完成，进一步提升了性能。最终协议设计为对网络更友好，因为它相对HTTP&amp;#x2F;1.x减少了TCP连接。最后，这种封装也通过使用&lt;strong&gt;二进制消息帧&lt;/strong&gt;使信息处理更具扩展性。&lt;/p&gt;
&lt;p&gt;里面加粗的部分即HTTP&amp;#x2F;2带来的几个新特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单一TCP连接&lt;/li&gt;
&lt;li&gt;二进制分帧&lt;ul&gt;
&lt;li&gt;请求优先级&lt;/li&gt;
&lt;li&gt;服务端推送&lt;/li&gt;
&lt;li&gt;流量控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;多路复用&lt;/li&gt;
&lt;li&gt;头部压缩（HPACK）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;二进制分帧“层”&#34;&gt;&lt;a href=&#34;#二进制分帧“层”&#34; class=&#34;headerlink&#34; title=&#34;二进制分帧“层”&#34;&gt;&lt;/a&gt;二进制分帧“层”&lt;/h3&gt;&lt;p&gt;首先，HTTP&amp;#x2F;2是个二进制协议。它的请求和响应都是流的形式，它基本的协议单位是帧。每个帧都有不同的类型和用途。HTTP&amp;#x2F;2所有性能增强的核心也在于这个新的二进制分帧层，它定义了如何封装 HTTP 消息并在客户端与服务器之间传输。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://developers.google.com/web/fundamentals/performance/http2/images/binary_framing_layer01.svg&#34; alt=&#34;http2-framing-layer&#34;&gt;&lt;/p&gt;
&lt;p&gt;从图中能看到，在TLS之上，HTTP&amp;#x2F;2之下新增了一个二进制分帧层。这里所谓的“层”，指的是位于套接字接口与应用可见的高级HTTP API之间一个经过优化的新编码机制：HTTP的语义（包括各种动词、方法、标头）都不受影响，不同的是传输期间对它们的&lt;strong&gt;编码方式&lt;/strong&gt;变了。不同于HTTP1.x里面用换行符作为分隔，HTTP&amp;#x2F;2中将信息分割成帧，并进行二进制编码。整个分帧过程由客户端和服务端替我们完成。&lt;/p&gt;
&lt;h3 id=&#34;数据流和帧&#34;&gt;&lt;a href=&#34;#数据流和帧&#34; class=&#34;headerlink&#34; title=&#34;数据流和帧&#34;&gt;&lt;/a&gt;数据流和帧&lt;/h3&gt;&lt;p&gt;上面这种二进制分帧机制改变了客户端与服务器之间交换数据的方式，也带来了流的概念。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;流（Stream）：一个双向字节帧流穿过HTTP&amp;#x2F;2连接中的虚拟通道，可以承载一条或多条消息。&lt;/li&gt;
&lt;li&gt;消息：与逻辑请求或响应消息对应的完整的一系列帧。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;流的生存周期包含idle、reserved(local)、reserved(remote)、open、half closed(local)、half closed(remote)、closed多个阶段。状态间通过特定的帧类型流转。在不同状态下对应着不同的能力，对于&lt;a href=&#34;https://tools.ietf.org/html/rfc7540#section-5.1&#34;&gt;状态规范&lt;/a&gt;描述以外的操作请求都会给出协议错误（PROTOCOL_ERROR）。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;                         +--------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 send PP |        | recv PP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ,--------|  idle  |--------.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               /         |        |         \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              v          +--------+          v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       +----------+          |           +----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       |          |          | send H /  |          |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;,------| reserved |          | recv H    | reserved |------.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|      | (local)  |          |           | (remote) |      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|      +----------+          v           +----------+      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|          |             +--------+             |          |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|          |     recv ES |        | send ES     |          |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|   send H |     ,-------|  open  |-------.     | recv H   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|          |    /        |        |        \    |          |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|          v   v         +--------+         v   v          |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|      +----------+          |           +----------+      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|      |   half   |          |           |   half   |      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|      |  closed  |          | send R /  |  closed  |      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|      | (remote) |          | recv R    | (local)  |      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|      +----------+          |           +----------+      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|           |                |                 |           |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|           | send ES /      |       recv ES / |           |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|           | send R /       v        send R / |           |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|           | recv R     +--------+   recv R   |           |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| send R /  `-----------&amp;gt;|        |&amp;lt;-----------&amp;#x27;  send R / |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| recv R                 | closed |               recv R   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;`-----------------------&amp;gt;|        |&amp;lt;----------------------&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                         +--------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   send:   endpoint sends this frame&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   recv:   endpoint receives this frame&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   H:  HEADERS frame (with implied CONTINUATIONs)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   PP: PUSH_PROMISE frame (with implied CONTINUATIONs)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   ES: END_STREAM flag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   R:  RST_STREAM frame&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;流和帧的关系是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有通信都在一个TCP连接上完成，这个连接可以承载任意数量的流&lt;/li&gt;
&lt;li&gt;每个流上面都有唯一标识符和&lt;em&gt;可选&lt;/em&gt;的优先级信息，里面会承载要传递的消息&lt;/li&gt;
&lt;li&gt;每条消息都是一条逻辑HTTP信息（如请求或相应），有完整的HTTP语义，其中可能有一个或多个帧&lt;/li&gt;
&lt;li&gt;帧是最小的通信单位，承载着特定类型的数据，例如HTTP 标头、消息负载等等。帧可以&lt;strong&gt;交错发送&lt;/strong&gt;，然后再根据帧头的数据流标识符进行组装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://developers.google.com/web/fundamentals/performance/http2/images/streams_messages_frames01.svg&#34; alt=&#34;http2-frame&#34;&gt;&lt;/p&gt;
&lt;p&gt;所有的帧以8字节的报头开始并且跟着0到16383字节长度的主体。帧格式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; 0                   1                   2                   3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| R |     Length (14)           |   Type (8)    |   Flags (8)   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-+-----------+---------------+-------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|R|                 Stream Identifier (31)                      |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+=+=============================================================+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                   Frame Payload (0...)                      ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R：保留字段&lt;/li&gt;
&lt;li&gt;Length：14位无符号整数的帧主体长度&lt;/li&gt;
&lt;li&gt;Type：帧类型，它描述了剩余的帧报头和帧主体将如何被解释&lt;/li&gt;
&lt;li&gt;Flags：为帧类型保留的8位布尔类型字段，根据不同帧类型赋予不同语义&lt;/li&gt;
&lt;li&gt;Stream Identifier：31字节的流标识符(见StreamIdentifiers)。0是保留的，标明帧是与连接相关作为一个整体而不是一个单独的流。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;请求与响应复用&#34;&gt;&lt;a href=&#34;#请求与响应复用&#34; class=&#34;headerlink&#34; title=&#34;请求与响应复用&#34;&gt;&lt;/a&gt;请求与响应复用&lt;/h3&gt;&lt;p&gt;在HTTP1.1中，客户端要想发起多个并行请求以提升性能，则必须使用多个TCP连接，这种对TCP效率低下的利用，在HTTP&amp;#x2F;2中得到改善。二进制分帧层将HTTP消息分解为互不依赖的帧，然后交错发送，最后再在另一端把它们重新组装起来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://developers.google.com/web/fundamentals/performance/http2/images/multiplexing01.svg&#34; alt=&#34;http2-reusing&#34;&gt;&lt;/p&gt;
&lt;p&gt;在上图中，流1和流3交错在同一个TCP连接上并行运行。这种机制带来了下面一些具体的提升：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求之间交错且互不影响&lt;/li&gt;
&lt;li&gt;响应之间交错且互不影响&lt;/li&gt;
&lt;li&gt;可以使用一个连接并行发送多个请求和响应&lt;/li&gt;
&lt;li&gt;不必再为了优化HTTP1.1性能做雪碧图、分片等骚操作&lt;/li&gt;
&lt;li&gt;一定程度上解决了线头阻塞问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;流控制&#34;&gt;&lt;a href=&#34;#流控制&#34; class=&#34;headerlink&#34; title=&#34;流控制&#34;&gt;&lt;/a&gt;流控制&lt;/h3&gt;&lt;p&gt;HTTP&amp;#x2F;2的流控制类似TCP，但是更为精细和更靠近应用层。借助HTTP&amp;#x2F;2流控制，可以实现在用户暂停一个大型视频流后，减少或阻塞视频里带来的HTTP流量，又或者中间代理匹配上下游流量速率。HTTP&amp;#x2F;2流控制提出了一些规则，但&lt;strong&gt;并没有指出特定算法&lt;/strong&gt;，目标在于允许不需要协议改动的情况下改进流量控制算法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;流量控制是逐跳的，而不是头尾端点的&lt;/li&gt;
&lt;li&gt;流量控制是基于窗口更新帧的。接收端广播自己准备在流及整个连接过程中接收的字节大小。这是一个信用为基础的方案。&lt;/li&gt;
&lt;li&gt;流量控制是有方向性的，由接收端全权掌握。&lt;/li&gt;
&lt;li&gt;流量控制窗口初始值是65,535字节，不过接收方可以设置一个更大的值&lt;/li&gt;
&lt;li&gt;帧类型决定了是否适用流量控制规则。目前只有DATA帧受流量控制&lt;/li&gt;
&lt;li&gt;不能被禁用&lt;/li&gt;
&lt;li&gt;通过使用&lt;code&gt;WINDOW_UPDATE&lt;/code&gt;帧类型来实现&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;流优先级&#34;&gt;&lt;a href=&#34;#流优先级&#34; class=&#34;headerlink&#34; title=&#34;流优先级&#34;&gt;&lt;/a&gt;流优先级&lt;/h3&gt;&lt;p&gt;HTTP&amp;#x2F;2标准允许每个数据流都有一个关联的权重和依赖关系：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以向每个数据流分配一个介于1至256之间的整数。&lt;/li&gt;
&lt;li&gt;每个数据流与其他数据流之间可以存在显式依赖关系。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优先级的目的是让客户端可以构建和传递“优先级树”，表明它倾向于如何接收响应。反过来，服务器可以使用此信息通过控制CPU、内存和其他资源的分配设定数据流处理的优先级。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://developers.google.com/web/fundamentals/performance/http2/images/stream_prioritization01.svg&#34; alt=&#34;http2-priority&#34;&gt;&lt;/p&gt;
&lt;p&gt;数据流依赖关系通过将另一个数据流的唯一标识符作为父项引用进行声明；如果忽略标识符，相应数据流将依赖于“根数据流”。分配时，会尽可能先向父数据流分配资源，然后再向其依赖项分配资源。共享相同父项的数据流按其权重比例分配资源。在上图中，数据流B获得的资源是数据流A所获资源的三分之一。&lt;/p&gt;
&lt;p&gt;新建流的终端可以在报头帧中包含优先级信息来对流标记优先级。对于已存在的流，优先级帧可以用来改变流优先级。&lt;/p&gt;
&lt;p&gt;更详细规范参考&lt;a href=&#34;https://tools.ietf.org/html/rfc7540#section-5.3&#34;&gt;RFC&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;帧类型&#34;&gt;&lt;a href=&#34;#帧类型&#34; class=&#34;headerlink&#34; title=&#34;帧类型&#34;&gt;&lt;/a&gt;帧类型&lt;/h3&gt;&lt;h4 id=&#34;DATA&#34;&gt;&lt;a href=&#34;#DATA&#34; class=&#34;headerlink&#34; title=&#34;DATA&#34;&gt;&lt;/a&gt;DATA&lt;/h4&gt;&lt;p&gt;数据帧，类型0x0，传递和流关联的任意变量值长度的字节数据。例如，一个或多个数据帧被用来携带HTTP请求或者响应的载体。数据帧定义了以下标记：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;END_STREAM (0x1) ：用来表示当前帧是确定的流发送的最后一帧。设置这个标记时流进入到一种半封闭状态或者关闭状态。&lt;/li&gt;
&lt;li&gt;END_SEGMENT (0x2) ：表示是当前端的最后一帧。代理端绝对不能跨越多个端的边界来合并帧，转发帧的时候代理端必须保持片段的边界。&lt;/li&gt;
&lt;li&gt;PADDED (0x8) ： 位4用来表示Pad Length字段是可见的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据帧绝对需要与流相关联，且遵从流量控制。&lt;/p&gt;
&lt;h4 id=&#34;HEADERS&#34;&gt;&lt;a href=&#34;#HEADERS&#34; class=&#34;headerlink&#34; title=&#34;HEADERS&#34;&gt;&lt;/a&gt;HEADERS&lt;/h4&gt;&lt;p&gt;报头帧，类型0x1，用来打开一个流，并携带头部片段。能在流打开或者半封闭(远程)的状态下发送。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;+---------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|Pad Length? (8)|&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-------------+-----------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|E|                 Stream Dependency? (31)                     |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-------------+-----------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|  Weight? (8)  |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-------------+-----------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                   Header Block Fragment (*)                 ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                           Padding (*)                       ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;它有以下标记：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;END_STREAM (0x1) ：用来标识这是发送端对确定的流发送的最后报头区块。设置这个标记将使流进入一种半封闭状态。后面伴随带有END_STREAM标记的延续帧的报头帧表示流的终止。延续帧不用来终止流。&lt;/li&gt;
&lt;li&gt;END_SEGMENT (0x2) ：表示这是当前端的最后一帧。中介端绝对不能跨片段来合并帧，且在转发帧的时候必须保持片段的边界。&lt;/li&gt;
&lt;li&gt;END_HEADERS (0x4) ：表示帧包含了整个的报头块，且后面没有延续帧。不带有END_HEADERS标记的报头帧在同个流上后面必须跟着延续帧。&lt;/li&gt;
&lt;li&gt;PADDED (0x8) ：表示Pad Length字段会呈现。&lt;/li&gt;
&lt;li&gt;PRIORITY (0x8) ：设置指示专用标记(E)，流依赖及权重字段将会呈现&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;PRIORITY&#34;&gt;&lt;a href=&#34;#PRIORITY&#34; class=&#34;headerlink&#34; title=&#34;PRIORITY&#34;&gt;&lt;/a&gt;PRIORITY&lt;/h4&gt;&lt;p&gt;优先级帧，类型0x2。明确了发送者建议的流的优先级，它可以在任意时间的流中发送。优先级帧不包含任何标记（flag）。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; 0                   1                   2                   3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|E|                  Stream Dependency (31)                     |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-------------+-----------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|   Weight (8)  |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;RST-STREAM&#34;&gt;&lt;a href=&#34;#RST-STREAM&#34; class=&#34;headerlink&#34; title=&#34;RST_STREAM&#34;&gt;&lt;/a&gt;RST_STREAM&lt;/h4&gt;&lt;p&gt;类型0x3，允许流的立即终止。通常用来取消一个流，或表示有错误发生。绝不应该在idle状态下发出。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0                   1                   2                   3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                        Error Code (32)                        |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;SETTINGS&#34;&gt;&lt;a href=&#34;#SETTINGS&#34; class=&#34;headerlink&#34; title=&#34;SETTINGS&#34;&gt;&lt;/a&gt;SETTINGS&lt;/h4&gt;&lt;p&gt;设置帧，类型0x4。包含影响如何与终端通信的设置参数，并且用来确认这些参数的接收。设置帧&lt;em&gt;必须&lt;/em&gt;由两个终端在连接开始的时候发送，并且&lt;em&gt;可以&lt;/em&gt;由各个终端在连接生存期的任意时间发送。&lt;/p&gt;
&lt;h4 id=&#34;PUSH-PROMISE&#34;&gt;&lt;a href=&#34;#PUSH-PROMISE&#34; class=&#34;headerlink&#34; title=&#34;PUSH_PROMISE&#34;&gt;&lt;/a&gt;PUSH_PROMISE&lt;/h4&gt;&lt;p&gt;推送承诺帧，类型0x5。用来在流发送者准备发送流之前告知对等端。包含了终端准备创建的长流的31位无符号标记以及提供附加上下文的报头的集合。通常在服务器中使用。推送承诺的接收端可以选择给推送承诺的发送端返回一个与被承诺的流标识符相关的RST_STREAM标记来拒绝接收承诺流。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0                   1                   2                   3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| [Pad High(8)] | [Pad Low (8)] |X|  Promised Stream ID (31)  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+---------------+-+-----------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...    Promised Stream ID       | Header Block Fragment (*)   ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-------------------------------+-------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                   Header Block Fragment (*)                 ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                           Padding (*)                       ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;PING&#34;&gt;&lt;a href=&#34;#PING&#34; class=&#34;headerlink&#34; title=&#34;PING&#34;&gt;&lt;/a&gt;PING&lt;/h4&gt;&lt;p&gt;类型0x6。从发送端测量最小的RTT时间的机制，同样也是一种检测连接是否可用的方法。PING帧可以被任何终端发送，且必须在载体中包含一个8字节长度的任意数据。&lt;/p&gt;
&lt;h4 id=&#34;GOAWAY&#34;&gt;&lt;a href=&#34;#GOAWAY&#34; class=&#34;headerlink&#34; title=&#34;GOAWAY&#34;&gt;&lt;/a&gt;GOAWAY&lt;/h4&gt;&lt;p&gt;超时帧，类型0x7。通知远端对等端不要在这个连接上建立新流。超时帧可以由客户端或者服务端发送。发送后，可以针对新的流创建一个新的连接。这个帧的目的是允许终端优雅的停止接收新的流，但仍可以继续完成之前已经建立的流的处理。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0                   1                   2                   3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|X|                  Last-Stream-ID (31)                        |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                      Error Code (32)                          |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|                  Additional Debug Data (*)                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;32位的错误码中包含了关闭连接的原因。&lt;/p&gt;
&lt;h4 id=&#34;WINDOW-UPDATE&#34;&gt;&lt;a href=&#34;#WINDOW-UPDATE&#34; class=&#34;headerlink&#34; title=&#34;WINDOW_UPDATE&#34;&gt;&lt;/a&gt;WINDOW_UPDATE&lt;/h4&gt;&lt;p&gt;窗口更新帧，类型0x8。用来实现流控制。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;0                   1                   2                   3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|X|              Window Size Increment (31)                     |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+-+-------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;CONTINUATION&#34;&gt;&lt;a href=&#34;#CONTINUATION&#34; class=&#34;headerlink&#34; title=&#34;CONTINUATION&#34;&gt;&lt;/a&gt;CONTINUATION&lt;/h4&gt;&lt;p&gt;延续帧，类型0x9，用来延续一个报头区块。在END_HEADERS标记前，可以在HEADERS帧、PUSH_PROMISE帧以及CONTINUATION帧后接续任意数量的CONTINUATION帧。它包含一个flag：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;END_HEADERS (0x4) : 设置指示这个帧的报头区块的终止&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;延续帧必须与流相关联。如果延续帧的相关流表示字段是0x0，终端必须响应一个类型为协议错误的连接错误。&lt;/p&gt;
&lt;h3 id=&#34;服务器推送&#34;&gt;&lt;a href=&#34;#服务器推送&#34; class=&#34;headerlink&#34; title=&#34;服务器推送&#34;&gt;&lt;/a&gt;服务器推送&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://developers.google.com/web/fundamentals/performance/http2/images/push01.svg&#34; alt=&#34;http2-server-push&#34;&gt;&lt;/p&gt;
&lt;p&gt;HTTP&amp;#x2F;2中的服务器推送打破了原来HTTP中的请求-响应语义（对原有语义也做了&lt;a href=&#34;https://tools.ietf.org/html/rfc7540#section-8.1&#34;&gt;改进&lt;/a&gt;），支持服务器可以对一个客户端请求发送多个响应。在原先的HTTP1.1中我们可能会将重要资源内联到网页中，减少网络延迟，这实际上等同于HTTP&amp;#x2F;2中的强制推送。在HTTP&amp;#x2F;2中的服务器推送还有下面一些功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;推送的资源能被客户端缓存（服务器也只能推送可被缓存的资源）&lt;/li&gt;
&lt;li&gt;在不同页面之间可以重用&lt;/li&gt;
&lt;li&gt;可以由服务器设定优先级&lt;/li&gt;
&lt;li&gt;可以被客户端拒绝&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;服务器推送数据流由PUSH_PROMISE帧发起，需要先于请求推送资源的响应数据传输。实现上的策略是先于父响应（即，DATA 帧）发送所有PUSH_PROMISE帧，其中包含所承诺资源的HTTP头部。客户端接收到PUSH_PROMISE帧后，它可以根据自身情况选择接受拒绝（通过RST_STREAM帧）数据流。（例如，如果资源已经位于缓存中）&lt;/p&gt;
&lt;p&gt;客户端完全掌控服务器推送的使用方式。客户端可以限制并行推送的数据流数量；调整初始的流控制窗口以控制在数据流首次打开时推送的数据量；或完全停用服务器推送。这些在HTTP&amp;#x2F;2连接开始时通过SETTINGS帧传输，可能随时更新。&lt;/p&gt;
&lt;h3 id=&#34;头部压缩&#34;&gt;&lt;a href=&#34;#头部压缩&#34; class=&#34;headerlink&#34; title=&#34;头部压缩&#34;&gt;&lt;/a&gt;头部压缩&lt;/h3&gt;&lt;p&gt;在HTTP1.1中，头部数据使用以纯文本的形式传输，所占空间较大，在使用HTTP Cookie后，更是会达到上千字节。为了减少此开销和提升性能，HTTP&amp;#x2F;2使用专门设计的&lt;a href=&#34;https://httpwg.github.io/specs/rfc7541.html&#34;&gt;HPACK&lt;/a&gt;压缩格式压缩请求和响应头部，这种格式通过静态霍夫曼编码对传输的头部字段进行编码。HPACK要求客户端和服务器同时维护和更新一个包含之前见过的标头字段的索引列表，利用之前传输值的索引列表，我们可以通过传输索引值的方式对重复值进行编码，索引值可用于有效查询和重构完整的头部键值对。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://developers.google.com/web/fundamentals/performance/http2/images/header_compression01.svg&#34; alt=&#34;hpack&#34;&gt;&lt;/p&gt;
&lt;p&gt;作为一种进一步优化方式，HPACK压缩上下文包含一个&lt;a href=&#34;https://httpwg.org/specs/rfc7541.html#static.table.definition&#34;&gt;静态表&lt;/a&gt;和一个动态表：静态表在规范中定义，并提供了一个所有连接都可能使用的常用HTTP头部字段列表；动态表最初为空，将根据在特定连接内交换的值进行更新。&lt;/p&gt;
&lt;p&gt;早期版本的HTTP&amp;#x2F;2和SPDY使用的&lt;a href=&#34;https://tools.ietf.org/html/rfc1951&#34;&gt;DEFLATE&lt;/a&gt;对头部进行压缩，但是在2012年夏天出现了&lt;a href=&#34;https://en.wikipedia.org/w/index.php?title=CRIME&amp;oldid=660948120&#34;&gt;CRIME&lt;/a&gt;这种安全攻击。因此，之后HTTP&amp;#x2F;2的头部压缩采用了专门设计的HPACK方案。在使用HPACK后，初次访问后的压缩率能达到70%~80%，甚至90%+。&lt;/p&gt;
&lt;h2 id=&#34;支持度与调试&#34;&gt;&lt;a href=&#34;#支持度与调试&#34; class=&#34;headerlink&#34; title=&#34;支持度与调试&#34;&gt;&lt;/a&gt;支持度与调试&lt;/h2&gt;&lt;p&gt;支持度上，&lt;a href=&#34;https://caniuse.com/#search=http%2F2&#34;&gt;主流浏览器&lt;/a&gt;和&lt;a href=&#34;https://github.com/http2/http2-spec/wiki/Implementations&#34;&gt;服务器程序&lt;/a&gt;都已支持。你也可以访问&lt;a href=&#34;https://http2.akamai.com/demo&#34;&gt;这个网址&lt;/a&gt;体验HTTP&amp;#x2F;2和HTTP1.1在load大量图片时的延迟对比。&lt;/p&gt;
&lt;p&gt;如果你想确认当前网页中的哪些请求是使用的HTTP&amp;#x2F;2，可以在chrome devTools下的network选项卡里查看“Protocol”列（未发现此列的可以在表头右键找到并勾选显示），其中HTTP&amp;#x2F;2将显示为h2。正如之前所说，支持HTTP&amp;#x2F;2的浏览器会和服务器使用特定协议协商，对于不支持HTTP&amp;#x2F;2的情况，会自动会退到HTTP1.1版本。&lt;/p&gt;
&lt;p&gt;尽管HTTP&amp;#x2F;2使用二进制传输数据，然而浏览器为我们掩盖了实现细节。如果想要深入查看甚至是调试二进制分帧层的功能，如何去debug呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wireshark&lt;/li&gt;
&lt;li&gt;curl&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bradfitz/http2/tree/master/h2i&#34;&gt;h2i&lt;/a&gt;，不过这个好像已经不维护了&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;TLS调优&#34;&gt;&lt;a href=&#34;#TLS调优&#34; class=&#34;headerlink&#34; title=&#34;TLS调优&#34;&gt;&lt;/a&gt;TLS调优&lt;/h2&gt;&lt;p&gt;目前各大浏览器只在&lt;code&gt;https://&lt;/code&gt;的基础上支持HTTP&amp;#x2F;2，即在TLS层之上的HTTP&amp;#x2F;2。多出的TLS的层也是会增加时延和成本的，具体涉及到的TLS握手、会话和加密套件协商过程还有优化空间，如减少证书层级、减少证书大小等。其余优化方向可以查看参考中一些文章介绍。&lt;/p&gt;
&lt;h2 id=&#34;之前的优化还应该继续用么&#34;&gt;&lt;a href=&#34;#之前的优化还应该继续用么&#34; class=&#34;headerlink&#34; title=&#34;之前的优化还应该继续用么&#34;&gt;&lt;/a&gt;之前的优化还应该继续用么&lt;/h2&gt;&lt;h3 id=&#34;继续保持的&#34;&gt;&lt;a href=&#34;#继续保持的&#34; class=&#34;headerlink&#34; title=&#34;继续保持的&#34;&gt;&lt;/a&gt;继续保持的&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;减少DNS查询&lt;ul&gt;
&lt;li&gt;减少域名&lt;/li&gt;
&lt;li&gt;启用预读：dns-prefetch&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用CDN&lt;/li&gt;
&lt;li&gt;避免重定向&lt;/li&gt;
&lt;li&gt;资源压缩&lt;ul&gt;
&lt;li&gt;代码压缩（JS、HTML、CSS）&lt;/li&gt;
&lt;li&gt;资源压缩（图片、字体、音频、视频）&lt;/li&gt;
&lt;li&gt;文本压缩（Gzip）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用缓存&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;不再需要的&#34;&gt;&lt;a href=&#34;#不再需要的&#34; class=&#34;headerlink&#34; title=&#34;不再需要的&#34;&gt;&lt;/a&gt;不再需要的&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;分片与域名散列：HTTP&amp;#x2F;2对于一个域名只使用一个TCP连接，分片反而会浪费资源，同时也会影响流控制、头部压缩的表现。&lt;/li&gt;
&lt;li&gt;资源打包合并：HTTP&amp;#x2F;2支持多路复用，资源合并会降低缓存利用率，且会让开发流程更复杂。（&lt;a href=&#34;https://github.com/pikapkg/snowpack&#34;&gt;snowpack&lt;/a&gt;了解一下）&lt;/li&gt;
&lt;li&gt;资源内联：可以由服务器推送解决这类需求，资源内联一方面无法缓存，另一方面会让页面代码更大&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常见问题&#34;&gt;&lt;a href=&#34;#常见问题&#34; class=&#34;headerlink&#34; title=&#34;常见问题&#34;&gt;&lt;/a&gt;常见问题&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Q: 既然HTTP&amp;#x2F;2是在SPDY工作基础上设计的，那HTTP&amp;#x2F;2推出后，SPDY还使用吗&lt;/li&gt;
&lt;li&gt;A: Google公开声明了他们会在2016年移除Chrome里对SPDY和NPN的支持，并且极力推动服务器迁移至HTTP&amp;#x2F;2。2016年2月他们&lt;a href=&#34;https://blog.chromium.org/2016/02/transitioning-from-spdy-to-http2.html&#34;&gt;声明&lt;/a&gt;了SPDY和NPN会在Chrome 51之后被移除。&lt;/li&gt;
&lt;li&gt;Q: 这个协议是否只对大型网站有效&lt;/li&gt;
&lt;li&gt;A: 由于缺乏内容分发网络，小网站的网络延迟往往较高，而多路复用的能力可以极大的改善在高网络延迟下的体验。&lt;/li&gt;
&lt;li&gt;Q: 基于TLS让速度变得更慢&lt;/li&gt;
&lt;li&gt;A: 正如上一节提到的，TLS的握手确实增加了额外的开销，也有越来越多的方案提出来减少TLS往返的时间。TLS同时也会更多消耗CPU等资源，更多例子可见&lt;a href=&#34;https://istlsfastyet.com/&#34;&gt;istlsfastyet.com&lt;/a&gt;。不过一方面HTTP&amp;#x2F;2并不强制要求基于TLS，另一方面HTTP&amp;#x2F;2带来的性能提升使得即使基于TLS，通常也会比HTTP1.1更快&lt;/li&gt;
&lt;li&gt;Q: 为什么不使用文本传输&lt;/li&gt;
&lt;li&gt;A: 的确，如果可以直接读出协议内容，那么调试和追踪都会变得更为简单。但是二进制带来的灵活度更高，何况浏览器会自动帮你解析。&lt;/li&gt;
&lt;li&gt;Q: 看起来，HTTP1.1中的一些短板并没有改彻底&lt;/li&gt;
&lt;li&gt;A: 实际上，设计HTTP&amp;#x2F;2之初的目标就包括向前兼容HTTP&amp;#x2F;1.1的范式，来保证升级协议也不用重写底层的很多东西。老的HTTP功能，如协议头、状态码、可怕的Cookie，这些都保留了。性能优化更多通过增加了一个中间分帧层解决的。&lt;/li&gt;
&lt;li&gt;Q: 目前使用的广泛程度如何&lt;/li&gt;
&lt;li&gt;A: 在2015年年底大多数浏览器就已经支持HTTP&amp;#x2F;2，目前约96%的浏览器支持HTTP&amp;#x2F;2，同时约46%的网站支持HTTP&amp;#x2F;2。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;后续&#34;&gt;&lt;a href=&#34;#后续&#34; class=&#34;headerlink&#34; title=&#34;后续&#34;&gt;&lt;/a&gt;后续&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;官网在给出HTTP&amp;#x2F;2规范时，也曾预计要10年时间和HTTP1.1并存，在这个期间，Web优化的思路也可能会有调整&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.openssl.org/index.php/TLS1.3&#34;&gt;TLS1.3&lt;/a&gt;。2020年2月的&lt;a href=&#34;https://tools.ietf.org/html/rfc8740&#34;&gt;RFC8740&lt;/a&gt;中给出了基于TLS1.3的HTTP&amp;#x2F;2的实现建议。&lt;/li&gt;
&lt;li&gt;既然TCP容易遇到线头阻塞问题，那么能不用使用UDP呢？Google提出的&lt;a href=&#34;https://www.chromium.org/quic&#34;&gt;QUIC&lt;/a&gt;（Quick UDP Internet Connection）它在很大程度上继承了SPDY的衣钵。QUIC可以理解成TCP + TLS + HTTP&amp;#x2F;2替代实现。&lt;/li&gt;
&lt;li&gt;2018年10月，互联网工程任务组HTTP及QUIC工作小组正式将基于QUIC协议的HTTP（英语：HTTP over QUIC）重命名为&lt;a href=&#34;https://datatracker.ietf.org/doc/draft-ietf-quic-http/&#34;&gt;HTTP&amp;#x2F;3&lt;/a&gt;以为确立下一代规范做准备。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://imququ.com/post/http2-new-opportunities-and-challenges.html&#34;&gt;HTTP&amp;#x2F;2：新的机遇与挑战&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://imququ.com/post/http2-resource.html&#34;&gt;HTTP&amp;#x2F;2 资料汇总&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://http2.github.io/&#34;&gt;HTTP&amp;#x2F;2官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://httpwg.org/specs/rfc7540.html&#34;&gt;HTTP&amp;#x2F;2规范&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://httpwg.github.io/specs/rfc7541.html&#34;&gt;HPACK规范&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/web/fundamentals/performance/http2&#34;&gt;HTTP&amp;#x2F;2简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ye11ow.gitbooks.io/http2-explained/content/&#34;&gt;HTTP&amp;#x2F;2讲解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://imququ.com/post/header-compression-in-http2.html&#34;&gt;HTTP&amp;#x2F;2 头部压缩技术介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fex-team/http2-spec/blob/master/HTTP2%E4%B8%AD%E8%8B%B1%E5%AF%B9%E7%85%A7%E7%89%88(06-29).md&#34;&gt;HTTP&amp;#x2F;2草案13中英对照&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mnot.net/talks/h2fe/#8&#34;&gt;HTTP&amp;#x2F;2 for Front-End Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://velocityconf.com/devops-web-performance-2015/public/schedule/detail/42385&#34;&gt;HTTP&amp;#x2F;2 is here, let’s optimize!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://caniuse.com/#search=HTTP%2F2&#34;&gt;HTTP&amp;#x2F;2支持度&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/http2/http2-spec/wiki/Implementations&#34;&gt;HTTP&amp;#x2F;2实现列表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.chainnews.com/articles/401950499827.htm&#34;&gt;HTTP发展史梳理笔记&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://http2.akamai.com/demo&#34;&gt;HTTP&amp;#x2F;2 is the future of the Web | Akamai&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="HTTP" />
        <category term="HTTP/2" />
        <category term="SPDY" />
        <category term="QUIC" />
        <updated>2020-06-29T14:41:51.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2020/05/18/some-tips-7/</id>
        <title>工作中的遇到的一些小知识 7</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2020/05/18/some-tips-7/"/>
        <content type="html">&lt;h2 id=&#34;DNS&#34;&gt;&lt;a href=&#34;#DNS&#34; class=&#34;headerlink&#34; title=&#34;DNS&#34;&gt;&lt;/a&gt;DNS&lt;/h2&gt;&lt;p&gt;DNS作为用来映射域名和IP地址的&lt;strong&gt;分布式&lt;/strong&gt;数据库，使用TCP&amp;#x2F;UDP端口号53。其中每一级域名限制63个字符，总长度不超过253个字符。&lt;/p&gt;
&lt;p&gt;DNS系统中，常见的资源记录类型有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A（Address）记录：最重要的记录，用于将特定主机名映射到对应主机的IPv4地址上&lt;/li&gt;
&lt;li&gt;MX记录：用于将特定邮箱地址映射到对应邮箱服务器上&lt;/li&gt;
&lt;li&gt;CNAME（Canonical Name Record）别名记录：用于将某个别名指向某个A记录上&lt;/li&gt;
&lt;li&gt;AAAA记录：和A记录对应，用于将特定主机名映射到对应主机的IPv6地址上&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实现上，全球范围近1000台根域名服务器分为13组，编号A到M，剩下的Internet DNS命名空间被委托给其他DNS服务器。DNS系统也有各种各样的DNS软件所支持，其中最普遍的是BIND（Berkeley Internet Name Domain）。在查询时，有两种实现方式：&lt;strong&gt;递归&lt;/strong&gt;和&lt;strong&gt;迭代&lt;/strong&gt;，客户端使用递归，DNS服务器间使用迭代。如查询&lt;code&gt;shenlvmeng.github.io&lt;/code&gt;（忽略本地host和DNS缓存和路由器DNS缓存）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端发送查询报文&lt;code&gt;query shenlvmeng.github.io&lt;/code&gt;到边缘DNS服务器（一般是ISP的DNS服务器），DNS先检查缓存，若存在记录则直接返回结果&lt;/li&gt;
&lt;li&gt;若不存在或记录已过期，则：&lt;ul&gt;
&lt;li&gt;DNS服务器向根域名服务器发送同样的查询报文，根服务器返回顶级域&lt;code&gt;.io&lt;/code&gt;的权威域名服务器地址&lt;/li&gt;
&lt;li&gt;DNS服务器向&lt;code&gt;.io&lt;/code&gt;域的权威域名服务器发送查询报文，得到二级域&lt;code&gt;.github.io&lt;/code&gt;的权威域名服务器地址&lt;/li&gt;
&lt;li&gt;DNS服务器向&lt;code&gt;.github.io&lt;/code&gt;域的权威域名服务器发送查询报文，得到主机&lt;code&gt;shenlvmeng&lt;/code&gt;的A记录，&lt;strong&gt;存入自身缓存，设置TTL&lt;/strong&gt;，返回给客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最初的DNS域名使用字符仅限于ASCII字符的子集，2008年后，ICANN通过决议，可以使用其他语言作为顶级域名的字符，如“xxx.中国”。使用punnycode码的IDNA系统，可以将unicode字符映射为有效的DNS字符集，有效避免IDN欺骗（即使用长得很像的不同字符作为钓鱼网站）。&lt;/p&gt;
&lt;p&gt;域名的所有者和IP也可以通过查找WHOIS域名数据库查询。对于大多数根域名，由ICANN维护，WHOIS的细节由控制那个域的域注册机构维护。&lt;/p&gt;
&lt;h3 id=&#34;域名污染&#34;&gt;&lt;a href=&#34;#域名污染&#34; class=&#34;headerlink&#34; title=&#34;域名污染&#34;&gt;&lt;/a&gt;域名污染&lt;/h3&gt;&lt;p&gt;指一些刻意制造或无意制造的域名服务器数据包，指向错误的IP地址。这种错误有可能是域名服务器错误工作带来，也有可能是刻意为之。&lt;/p&gt;
&lt;p&gt;对于GFW来说，它会对所有经过它的在UDP端口53上的域名查询进行IDS入侵检测，一旦发现与黑名单关键词相匹配的域名查询请求，会伪装成目标域名的解析服务器返回虚假的查询结果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统默认会从使用ISP提供的域名查询服务器去查询国外的权威服务器时，便被GFW污染，缓存虚假的IP地址。&lt;/li&gt;
&lt;li&gt;由于TCP连接的机制可靠，理论上无法对TCP协议的域名查询进行污染，理论上可以通过TCP协议查询真实的IP地址。但其实，对于真实的IP地址，会有其他方式封锁，或对查询行为使用连接重置进行拦截&lt;/li&gt;
&lt;li&gt;通常情况下，设置的NDS服务主要使用海外的DNS服务，所以都需要穿过GFW，不过一些小型的DNS有技术手段回避GFW污染，从而能够访问国外被封锁网站&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ISP域名劫持还包含一些互联网提供商劫持部分域名，转到自己制定的网站，已提供自己的广告。&lt;/p&gt;
&lt;h3 id=&#34;DNS记录&#34;&gt;&lt;a href=&#34;#DNS记录&#34; class=&#34;headerlink&#34; title=&#34;DNS记录&#34;&gt;&lt;/a&gt;DNS记录&lt;/h3&gt;&lt;p&gt;在DNS的分布式数据库中，不同记录类型有不同的用途。下面介绍了一些常见的记录类型。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A记录，传回一个32位的IPv4地址，映射主机名到IP&lt;/li&gt;
&lt;li&gt;AAAA记录，传回一个128位的IPv6地址，映射主机名到IP&lt;/li&gt;
&lt;li&gt;CNAME：一个主机名的别名，只能指向一个域名，不能指向IP地址，可以保证原域名地址映射IP地址修改时，别名也能同步修改。CNAME意为真实名称，所以应当读作&lt;code&gt;alias.com&lt;/code&gt;的“CNAME“是&lt;code&gt;real.com&lt;/code&gt;。为保证效率，应当避免CNAME指向其他CNAME。&lt;/li&gt;
&lt;li&gt;DNAME，和CNAME类似，不过不是映射域名，而是把域名下的整个解析子树映射到另一域名。如把&lt;code&gt;alias.com&lt;/code&gt;DNAME到&lt;code&gt;real.com&lt;/code&gt;后，不影响&lt;code&gt;alias.com&lt;/code&gt;的原有的解析设置。而&lt;code&gt;xxx.alias.com&lt;/code&gt;都会被映射到&lt;code&gt;xxx.real.com&lt;/code&gt;上&lt;/li&gt;
&lt;li&gt;MX（邮件交换）记录，将邮箱后缀（&lt;code&gt;@&lt;/code&gt;后的部分）映射到类型为A或者AAAA的地址记录，原则上禁止映射到CNAME上&lt;/li&gt;
&lt;li&gt;NS记录，委托DNS区域使用已提供的权威域名服务器&lt;/li&gt;
&lt;li&gt;SRV记录，进行服务定位&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有的记录都有一个有效期（TTL，time-to-live），时间耗尽后，所包含的信息必须从权威服务器上得到更新。&lt;/p&gt;
&lt;h2 id=&#34;useState和useEffect实现思路&#34;&gt;&lt;a href=&#34;#useState和useEffect实现思路&#34; class=&#34;headerlink&#34; title=&#34;useState和useEffect实现思路&#34;&gt;&lt;/a&gt;&lt;code&gt;useState&lt;/code&gt;和&lt;code&gt;useEffect&lt;/code&gt;实现思路&lt;/h2&gt;&lt;p&gt;这两个React hooks中引入的特性背后是基于闭包 + 数组索引实现的，下面是一个实现的demo。&lt;/p&gt;
&lt;figure class=&#34;highlight ts&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// useState&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;react&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &amp;#123; render &amp;#125; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;react-dom&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;values&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;any&lt;/span&gt;[] = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; cursor = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; useState&amp;lt;T&amp;gt;(&lt;span class=&#34;attr&#34;&gt;initialState&lt;/span&gt;: T): [T, &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;newState: T&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; currentCursor = cursor;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	values[currentCursor] = values[currentCursor] || initialState;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;setFunc&lt;/span&gt; = (&lt;span class=&#34;params&#34;&gt;newState: T&lt;/span&gt;) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		values[currentCursor] = newState;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 触发重新渲染&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;title function_&#34;&gt;renderApp&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cursor++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; [values[currentCursor], setFunc];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;App&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;FC&lt;/span&gt;&amp;lt;&amp;#123;&amp;#125;&amp;gt; = &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; [num, setNum] = useState&amp;lt;&lt;span class=&#34;built_in&#34;&gt;number&lt;/span&gt;&amp;gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onClick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; setNum(num + 1)&amp;#125;&amp;gt;&amp;#123;num&amp;#125;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;renderApp&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;title function_&#34;&gt;render&lt;/span&gt;(&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;App&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 重置计数器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cursor = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;renderApp&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// useEffect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;react&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &amp;#123; render &amp;#125; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;react-dom&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;deps&lt;/span&gt;: &lt;span class=&#34;built_in&#34;&gt;any&lt;/span&gt;[][] = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; cursor = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;useEffect&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;cb: () =&amp;gt; &lt;span class=&#34;built_in&#34;&gt;void&lt;/span&gt;, dep: &lt;span class=&#34;built_in&#34;&gt;any&lt;/span&gt;[]&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; currCursor = cursor;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!deps[currCursor]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		deps[currCursor] = dep;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		cursor++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;title function_&#34;&gt;cb&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	dep.&lt;span class=&#34;title function_&#34;&gt;some&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;d, index&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (d !== deps[currCursor][index]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			deps[currCursor][index] = d;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			cursor++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;title function_&#34;&gt;cb&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;App&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;React&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;FC&lt;/span&gt;&amp;lt;&amp;#123;&amp;#125;&amp;gt; = &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;title function_&#34;&gt;useEffect&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ok&amp;#x27;&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;, []);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;ok&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;renderApp&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;title function_&#34;&gt;render&lt;/span&gt;(&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;App&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	cursor = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;renderApp&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;实际使用中，是把&lt;code&gt;useState&lt;/code&gt;、&lt;code&gt;useEffect&lt;/code&gt;这样的hooks放在&lt;code&gt;memorizedState&lt;/code&gt;数组中，共用一个cursor。类似下面这样：&lt;/p&gt;
&lt;figure class=&#34;highlight ts&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; memoizedState = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; cursor = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 当前下标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;useState&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;initialValue&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  memoizedState[cursor] = memoizedState[cursor] || initialValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; currentCursor = cursor;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;setState&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;newState&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    memoizedState[currentCursor] = newState;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;render&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; [memoizedState[cursor++], setState];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;useEffect&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;callback, depArray&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; hasNoDeps = !depArray;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; deps = memoizedState[cursor];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; hasChangedDeps = deps&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ? !depArray.&lt;span class=&#34;title function_&#34;&gt;every&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;el, i&lt;/span&gt;) =&amp;gt;&lt;/span&gt; el === deps[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    : &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (hasNoDeps || hasChangedDeps) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;callback&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    memoizedState[cursor] = depArray;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cursor++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;其中&lt;code&gt;memorized&lt;/code&gt;数组也是hooks一定要在top level调用的原因。&lt;/p&gt;
&lt;p&gt;在React实际实现上，hooks是以链表的形式存储，通过&lt;code&gt;next&lt;/code&gt;属性链接到下一个hook。同时每一个&lt;code&gt;memorized&lt;/code&gt;数组都会绑定到一个fiber上，从而在再次渲染时更新对应节点。让hooks之间互不干扰。&lt;/p&gt;
&lt;h2 id=&#34;proxy简单了解与应用&#34;&gt;&lt;a href=&#34;#proxy简单了解与应用&#34; class=&#34;headerlink&#34; title=&#34;proxy简单了解与应用&#34;&gt;&lt;/a&gt;proxy简单了解与应用&lt;/h2&gt;&lt;p&gt;Vue 3.0在重构后使用了ES6的proxy新特性来跟踪数据字段的更新。它可以封装一个目标对象，为之添加一个代理，返回一个Proxy对象。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Proxy&lt;/span&gt;(target, handler)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;其中&lt;code&gt;handler&lt;/code&gt;即代理配置对象，也是Proxy对象的“魔力”所在。对于一个空的handler，返回的Proxy近似于target本身。在handler上定义任何handler函数的集合，都会让返回Proxy对象有不同的表现。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;handler&lt;/code&gt;有下面一些可选的属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;apply&lt;/code&gt; 监听函数调用的钩子&lt;ul&gt;
&lt;li&gt;&lt;code&gt;apply: function(target, thisArg, argumentsList) &amp;#123;&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;construct&lt;/code&gt; 监听使用&lt;code&gt;new&lt;/code&gt;调用的钩子&lt;ul&gt;
&lt;li&gt;&lt;code&gt;construct: function(target, argumentsList, newTarget) &amp;#123;&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;defineProperty&lt;/code&gt; 类似&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;defineProperty: function(target, property, descriptor) &amp;#123;&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;get&lt;/code&gt; 监听属性访问&lt;ul&gt;
&lt;li&gt;&lt;code&gt;get: function(target, property, receiver) &amp;#123;&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deleteProperty&lt;/code&gt; 监听&lt;code&gt;delete&lt;/code&gt;操作&lt;ul&gt;
&lt;li&gt;&lt;code&gt;deleteProperty: function(target, property) &amp;#123;&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt; 监听&lt;code&gt;Object.getOwnPropertyDescriptor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getPrototypeOf()&lt;/code&gt; 类似&lt;code&gt;Object.getPrototypeOf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;has&lt;/code&gt; 监听&lt;code&gt;in&lt;/code&gt;操作&lt;ul&gt;
&lt;li&gt;&lt;code&gt;has: function(target, prop) &amp;#123;&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isExtensible&lt;/code&gt; 监听&lt;code&gt;Object.isExtensible&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ownKeys&lt;/code&gt; 监听&lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;和&lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;preventExtensions&lt;/code&gt; 监听&lt;code&gt;Object.preventExtensions&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt; 监听属性设置&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set: function(target, property, value, receiver) &amp;#123;&amp;#125;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setPrototypeOf&lt;/code&gt; 类似&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;利用上面的&lt;code&gt;handler&lt;/code&gt;已经可以实现很丰富的功能，immer的produce就有借助proxy来实现。&lt;/p&gt;
</content>
        <category term="CDN" />
        <category term="DNS" />
        <category term="CNAME" />
        <updated>2020-05-18T09:02:41.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2019/12/02/clean-code/</id>
        <title>《代码整洁之道》——有一个好的代码品味</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2019/12/02/clean-code/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;The only valid measurement of code quality: WTFs&amp;#x2F;minute&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在成为一个程序员的初期，实现功能还需磕磕绊绊的阶段，我们大抵没有精力操心代码风格的问题；而在能够搞定环境和API使用的时间段，大部分人又会沉湎于使用一门语言让想象实现的成就感，而没有发现暗藏在迭代后的危机。往往迭代了一段时间后，才发现之前埋下的巨坑已经让自己无从下手。这时一部分人醒悟过来，意识到一个优良的代码风格对于项目推进的长远意义。这也是《Clean Code》这本书的宗旨。它较之《程序员修炼之道》更为具体，较之《重构》更为宏观。对于工作一段时间后的程序员来说，是一个很好的提醒和反思归纳的建议。让代码work的方式是千万种，而让代码可持续，可扩展，长久work的方式也许需要前辈指引些方法。&lt;/p&gt;
&lt;h2 id=&#34;观念&#34;&gt;&lt;a href=&#34;#观念&#34; class=&#34;headerlink&#34; title=&#34;观念&#34;&gt;&lt;/a&gt;观念&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Later equals never —— Leblanc Law&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;糟糕的代码会让人难以下手，拖慢进度，若无人着手改善，混乱会持续增加，进而降低团队生产力，降低人效，然后搞砸整个项目。为什么不一开始就打好基础，写出整洁代码呢？&lt;/p&gt;
&lt;p&gt;下面是一些大师对“整洁代码”的界定&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“代码逻辑直截了当，缺陷难以隐藏；减少依赖关系，从而便于维护；性能调优，省得引人做出没规矩的优化，干出蠢事；整洁的代码只干一件事” —— Bjarne Stroustrup&lt;/li&gt;
&lt;li&gt;“代码简单直接，如同优美的散文；从不隐藏设计者的意图，充满干净利落的抽象和直截了当的控制语句” —— Grady Booch&lt;/li&gt;
&lt;li&gt;“可由作者外的人阅读和扩展，应该有单元测试和验收测试；只使用有意义的命名；提供尽量正交的使用方法（一种而非多种做一件事的方法）；尽量少的API；尽量少的依赖关系，且要明确定义和清晰提供；代码应从字面意义上表达其含义” —— Dave Thomas&lt;/li&gt;
&lt;li&gt;“整洁的代码总是看起来像某位特别在意的人写的，几乎没有改进的余地，所有的改进都会回到原点” —— Michael Feather&lt;/li&gt;
&lt;li&gt;“能通过所有测试；没有重复代码，表达力强大；体现系统中的全部设计理念；包括尽量少的实体，如类、方法、函数。” —— Ron Jeffries&lt;/li&gt;
&lt;li&gt;“整洁代码让每个例程都深合己意；漂亮代码让语言看起来像是专门为解决那个问题而存在” —— Ward Cunningham&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编写代码的难度，取决于读周边代码的难度，要想干得快，就先让代码易读。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;让营地比你来时更干净 —— 童子军军规&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;命名&#34;&gt;&lt;a href=&#34;#命名&#34; class=&#34;headerlink&#34; title=&#34;命名&#34;&gt;&lt;/a&gt;命名&lt;/h2&gt;&lt;p&gt;好的命名，可以让人一眼就明白代码的逻辑。看下面两段代码：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; List&amp;lt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;[]&amp;gt; getThem() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  List&amp;lt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;[]&amp;gt; list1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;[]&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;[] x : theList)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (x[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] == &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      list1.add(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; list1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; List&amp;lt;Cell&amp;gt; &lt;span class=&#34;title function_&#34;&gt;getFlaggedCells&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  List&amp;lt;Cell&amp;gt; flaggedCells = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ArrayList&lt;/span&gt;&amp;lt;Cell&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (Cell cell : gameBoard)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (cell.isFlagged)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      flaggedCells.add(cell);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; flaggedCells;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下面是一些准则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;名副其实，一旦发现更好的，就替换掉旧的。&lt;strong&gt;如果名称还需要注释补充，那就不算名副其实&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;避免误导，提防使用不同之处较小的名称，比如&lt;code&gt;UsernameListEmptyFilter&lt;/code&gt;和&lt;code&gt;UsernameListNullFilter&lt;/code&gt;，不要混用1和l，以及0和O&lt;/li&gt;
&lt;li&gt;做有意义的区分，少废话，反例是&lt;code&gt;a1&lt;/code&gt;和&lt;code&gt;a2&lt;/code&gt;，&lt;code&gt;nameString&lt;/code&gt;和&lt;code&gt;name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt;能读出来&lt;/strong&gt;的名称，方便程序员的沟通&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt;可搜索&lt;/strong&gt;的名称，仅在块作用域或短函数内使用单字母名称&lt;/li&gt;
&lt;li&gt;不把类型信息放在名称中&lt;/li&gt;
&lt;li&gt;减少不必要的前缀和后缀&lt;/li&gt;
&lt;li&gt;类名应该是名词，方法名应该是动词或动词短语&lt;/li&gt;
&lt;li&gt;别玩梗&lt;/li&gt;
&lt;li&gt;标准化语素，为每一个抽象概念选择一个统一的词&lt;/li&gt;
&lt;li&gt;别用有多重含义的词汇，这会增加使用者顾虑和理解成本&lt;/li&gt;
&lt;li&gt;只在没有明确定义的场景下使用语境（类，前缀……）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;函数&#34;&gt;&lt;a href=&#34;#函数&#34; class=&#34;headerlink&#34; title=&#34;函数&#34;&gt;&lt;/a&gt;函数&lt;/h2&gt;&lt;p&gt;下面是一些准则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;短小，更短小&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;只做一件事，只做一件事，只做一件事&lt;/strong&gt;，重要的事情说三遍&lt;ul&gt;
&lt;li&gt;还有一种方式可以帮助判断函数是不是只做了一件事：&lt;strong&gt;函数语句是否在一个抽象层级上&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;只做一件事的函数无法被继续合理拆分成多段&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;让代码拥有从上到下的自然的阅读顺序，尽量避免跳来跳去的阅读顺序&lt;/li&gt;
&lt;li&gt;为函数使用&lt;strong&gt;描述性&lt;/strong&gt;的名称&lt;/li&gt;
&lt;li&gt;函数&lt;strong&gt;最多3个入参&lt;/strong&gt;，最理想是没有参数，其次是1个，再其次是2个，要避免3个参数&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;布尔类型的参数会让你的函数难以理解&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;使用二元参数时，最好保证前后顺序不敏感&lt;/li&gt;
&lt;li&gt;对于复杂的入参，可以用对象封装起来&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;函数要么只做副作用（&lt;em&gt;做什么事&lt;/em&gt;），要么没有副作用（&lt;em&gt;回答什么事&lt;/em&gt;），而且能从名称中一目了然地看到&lt;/li&gt;
&lt;li&gt;用异常代替错误码，错误处理也是一件事&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;别重复自己（Don’t repeat yourself, DRY）&lt;/strong&gt;。重复是软件中一切邪恶的根源，软件开发领域的所有创新都在不断尝试从源代码中消灭重复&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;函数是语言的动词，类是名词。大师级的程序员把系统当做故事来讲，而不是程序来写。他们使用特定编程语言提供的工具构建一种&lt;strong&gt;更丰富和更具表达力的语言&lt;/strong&gt;。好的函数必须干净利落的组合在一起，形成清晰明确的语言，帮你&lt;strong&gt;讲好故事&lt;/strong&gt;。这个过程不是一蹴而就的，你可以现象什么就写什么，然后一点点打磨它。&lt;/p&gt;
&lt;h2 id=&#34;注释&#34;&gt;&lt;a href=&#34;#注释&#34; class=&#34;headerlink&#34; title=&#34;注释&#34;&gt;&lt;/a&gt;注释&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;使用注释 &amp;#x3D; 承认自己无法用代码表达清楚意图&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;列举注释的准则前，必须摆正观念。&lt;strong&gt;注释是一种必须的恶，如果编程语言足够有表达力，或你长于用语言表达自己的意图，那么就不需要注释。注释的恰当用法是弥补我们用代码表达意图时遭遇的失败。&lt;/strong&gt;注释存在的时间越久，具体所描述的事实就越远。原因很简单，程序员不可能坚持维护注释。&lt;/p&gt;
&lt;p&gt;的确，程序员应该让注释保持可维护而精准，但最好能直接写清楚代码，保证无须编写注释。&lt;strong&gt;真实只在一处：代码&lt;/strong&gt;，只有代码能忠实告诉你它做的事。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;注释无法挽救糟糕的代码&lt;/strong&gt;，与其为糟糕代码补充大量注释，不如花时间写出整洁有表达力的代码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用代码代替注释&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;有些无法避免且合理存在的注释&lt;ul&gt;
&lt;li&gt;法律信息&lt;/li&gt;
&lt;li&gt;对函数名的补充&lt;/li&gt;
&lt;li&gt;对稍微反常规意图的解释，避免误解&lt;/li&gt;
&lt;li&gt;糟糕的代码来自外部库或外部API&lt;/li&gt;
&lt;li&gt;敏感代码的警告&lt;/li&gt;
&lt;li&gt;TODO、FIXME&lt;/li&gt;
&lt;li&gt;Javadoc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;下面则是一些很常见的糟糕注释，它们只是糟糕代码的借口&lt;ul&gt;
&lt;li&gt;只有自己看得懂的注释&lt;/li&gt;
&lt;li&gt;对函数名的复述&lt;/li&gt;
&lt;li&gt;误导性注释&lt;/li&gt;
&lt;li&gt;日志型注释，如Milestone记录&lt;/li&gt;
&lt;li&gt;废话&lt;/li&gt;
&lt;li&gt;位置标记，如&lt;code&gt;====================&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;代码署名&lt;/li&gt;
&lt;li&gt;&lt;em&gt;大多数&lt;/em&gt;注释掉的代码&lt;/li&gt;
&lt;li&gt;百科式的介绍&lt;/li&gt;
&lt;li&gt;私有代码的Javadoc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;格式&#34;&gt;&lt;a href=&#34;#格式&#34; class=&#34;headerlink&#34; title=&#34;格式&#34;&gt;&lt;/a&gt;格式&lt;/h2&gt;&lt;p&gt;格式即代码风格，可以利用lint这样的自动化工具完成，需要在团队内保持一致。&lt;/p&gt;
&lt;h3 id=&#34;垂直格式&#34;&gt;&lt;a href=&#34;#垂直格式&#34; class=&#34;headerlink&#34; title=&#34;垂直格式&#34;&gt;&lt;/a&gt;垂直格式&lt;/h3&gt;&lt;p&gt;在从上到下的组织上，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以向报纸一样，先大纲，再粗线条概述，再给出细节，越往下细节越多&lt;/li&gt;
&lt;li&gt;用&lt;strong&gt;空行&lt;/strong&gt;分隔概念&lt;/li&gt;
&lt;li&gt;靠近的代码行暗示了代码间的紧密关系&lt;/li&gt;
&lt;li&gt;应避免迫使读者在源文件和类之间跳来跳去&lt;ul&gt;
&lt;li&gt;变量声明应尽量靠近使用位置&lt;/li&gt;
&lt;li&gt;循环中的控制变量总在循环语句中声明&lt;/li&gt;
&lt;li&gt;类成员在类顶部声明&lt;/li&gt;
&lt;li&gt;如果某个函数调用了另一个，就应该把它们放一起&lt;/li&gt;
&lt;li&gt;概念相关的代码应该放在一起，如&lt;code&gt;getHour&lt;/code&gt;和&lt;code&gt;getMinute&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;如果可以，最好把被调用的函数放在执行调用的函数下面&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;横向格式&#34;&gt;&lt;a href=&#34;#横向格式&#34; class=&#34;headerlink&#34; title=&#34;横向格式&#34;&gt;&lt;/a&gt;横向格式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;水平字符的上限，100或120&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt;空格&lt;/strong&gt;分隔概念&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不需要水平对齐&lt;/strong&gt;，以为从左到右的阅读顺序优先于从上到下&lt;/li&gt;
&lt;li&gt;学会用&lt;strong&gt;缩进&lt;/strong&gt;表现层级&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;对象和数据结构&#34;&gt;&lt;a href=&#34;#对象和数据结构&#34; class=&#34;headerlink&#34; title=&#34;对象和数据结构&#34;&gt;&lt;/a&gt;对象和数据结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;对象&lt;/strong&gt;把数据隐藏于抽象的后面，暴露操作数据的函数，&lt;strong&gt;数据结构&lt;/strong&gt;暴露数据，不提供有意义的函数。&lt;/li&gt;
&lt;li&gt;过程式代码难以添加新的数据结构，因为必须修改所有函数；面向对象代码难以添加新函数，因为必须修改所有类&lt;/li&gt;
&lt;li&gt;得墨忒尔律：类C的方法f只应该调用以下对象的方法：&lt;strong&gt;C、f创建的对象、作为参数传给f的对象、C的成员所持有的对象&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据结构&lt;/strong&gt;只简单地拥有公有变量，没有函数；而&lt;strong&gt;对象&lt;/strong&gt;则只拥有私有变量和函数。一半是对象一半是数据结构的混淆会增加添加新函数和数据结构的难度&lt;/li&gt;
&lt;li&gt;DTO（Data Transfer Objects，数据传输对象）就是只有公有变量，没有函数的类，Active Record就是DTO的一种&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;错误处理&#34;&gt;&lt;a href=&#34;#错误处理&#34; class=&#34;headerlink&#34; title=&#34;错误处理&#34;&gt;&lt;/a&gt;错误处理&lt;/h2&gt;&lt;p&gt;错误处理很重要，但要是它搞乱了代码逻辑，那就是错误的用法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;返回异常而不是错误码&lt;/li&gt;
&lt;li&gt;try-catch-finally语句块就像事务，可以帮你定义用户应该期待些什么&lt;/li&gt;
&lt;li&gt;在Java中，可控异常违反开闭原则带来的成本要高于收益&lt;/li&gt;
&lt;li&gt;打包第三方API，一方面降低了依赖的覆盖面，另一方面也有助于模拟第三方调用&lt;/li&gt;
&lt;li&gt;可以把抛出错误封装成特定的函数&lt;/li&gt;
&lt;li&gt;别返回和传递null值&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;边界&#34;&gt;&lt;a href=&#34;#边界&#34; class=&#34;headerlink&#34; title=&#34;边界&#34;&gt;&lt;/a&gt;边界&lt;/h2&gt;&lt;p&gt;边界即我们代码和第三方代码的连接处。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过编写测试来概览和理解第三方代码的形式叫做&lt;strong&gt;学习性测试（learning tests）&lt;/strong&gt;。它可以帮助我们快速试错和反馈，从而对第三方API快速上手。&lt;/li&gt;
&lt;li&gt;在第三方代码尚未就绪时，&lt;strong&gt;编写我们想要的接口&lt;/strong&gt;，可以使我们能保持代码在自己控制中，并在未来通过编写adapter的形式无痛迁移&lt;/li&gt;
&lt;li&gt;应尽量避免过多依赖第三方的特定信息，更多依靠你能控制的东西，好过依靠你控制不了的东西，免得日后受其控制&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;单元测试&#34;&gt;&lt;a href=&#34;#单元测试&#34; class=&#34;headerlink&#34; title=&#34;单元测试&#34;&gt;&lt;/a&gt;单元测试&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;TDD（Test-Driven Development）三定律&lt;ul&gt;
&lt;li&gt;在编写不能通过的单元测试前，不编写生产代码&lt;/li&gt;
&lt;li&gt;只编写刚好无法通过的单元测试，不能编译也算&lt;/li&gt;
&lt;li&gt;只编写刚好足已通过失败测试的生产代码&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;测试代码和生产代码一样重要&lt;/strong&gt;。正是单元测试让你的代码可扩展、可维护、可复用&lt;/li&gt;
&lt;li&gt;整洁的测试代码一样要求&lt;strong&gt;可读性&lt;/strong&gt;。大多数测试代码可以总结为构造-操作-检验（Build-Operate-Check）模式。第一个环节构造测试数据，第二个环节操作数据，第三个环节验证是否得到期望的结果&lt;/li&gt;
&lt;li&gt;每个测试中的断言数量应该尽量少，且只测试一个概念&lt;/li&gt;
&lt;li&gt;FIRST原则&lt;ul&gt;
&lt;li&gt;Fast，测试应该能够快速运行&lt;/li&gt;
&lt;li&gt;Independent，测试间应该相互独立&lt;/li&gt;
&lt;li&gt;Repeatable，测试应该在任何环境下可重复通过&lt;/li&gt;
&lt;li&gt;Self-Validating，测试应该有布尔值输出&lt;/li&gt;
&lt;li&gt;Timely，测试应及时编写&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;类&#34;&gt;&lt;a href=&#34;#类&#34; class=&#34;headerlink&#34; title=&#34;类&#34;&gt;&lt;/a&gt;类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;类应该由一组成员开始，从静态到普通，从共有到私有。且很少会有公有成员。&lt;/li&gt;
&lt;li&gt;类应该短小，&lt;strong&gt;类的名称应该能描述其权责&lt;/strong&gt;。类名无法精确明明时，类大概就太长了。类名越含糊，类越有可能拥有过多权责。类名应该控制在25个字母内，且不应该包含连词。&lt;/li&gt;
&lt;li&gt;单一权责原则（Single Responsibility Principle，SRP）认为，类和模块应有且仅有&lt;strong&gt;一条加以修改的原因&lt;/strong&gt;。这个原则可以帮助创造更好的抽象。它也是OO设计中最重要的概念之一。&lt;/li&gt;
&lt;li&gt;内聚：类应该只有少量实体变量，且所有方法都应该操作其中一些。当类的每个变量都被每个方法使用时，我们认为该类具有最大的内聚性。当发现类逐渐丧失内聚性时，尽早拆分它！让它变成多个短小的类。这个拆分的过程也是权责的拆分过程。&lt;/li&gt;
&lt;li&gt;通过基类和子类，可以在不修改类的同时，保持类对新功能的开放。在理想系统中，我们通过扩展系统而非修改现有代码来添加新特性。可以通过抽象类和接口隔离细节修改带来的影响。&lt;/li&gt;
&lt;li&gt;降低类之间的连接耦合，可以采用依赖倒置原则（Dependency Inversion Principle，DIP），让类依赖于抽象（接口）而不是具体细节（自行构造类）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;系统&#34;&gt;&lt;a href=&#34;#系统&#34; class=&#34;headerlink&#34; title=&#34;系统&#34;&gt;&lt;/a&gt;系统&lt;/h2&gt;&lt;p&gt;&lt;em&gt;这一章的Java概念较多&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分开系统的构造和使用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;依赖注入&lt;/strong&gt;是控制反转的一种思路，它将第二权责从对象中拿出来，转移到专门的对象中去，从而遵循&lt;strong&gt;单一权责原则&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;我们应该专注于今天的用户故事，并且&lt;strong&gt;持续适当切分&lt;/strong&gt;我们的关注面。书中举了Java AOP、AspectJ框架的例子&lt;/li&gt;
&lt;li&gt;实现时，使用&lt;em&gt;大致可工作的最简单方案&lt;/em&gt;。只要软件构架有效切分了关注面，就比较好做根本性改动&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;迭代&#34;&gt;&lt;a href=&#34;#迭代&#34; class=&#34;headerlink&#34; title=&#34;迭代&#34;&gt;&lt;/a&gt;迭代&lt;/h2&gt;&lt;p&gt;Kent Beck关于测试的4个原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行所有测试，全面测试并持续通过所有测试的系统，就是可测试的系统。测试也能减少重构时可能破坏代码的顾虑。&lt;/li&gt;
&lt;li&gt;不可重复，使用模板生成或继承等高级概念&lt;/li&gt;
&lt;li&gt;表达程序员的意图。代码应当清晰表达作者的意图。使用好名称、保持类和函数的短小，以及之前章节提到的各种方法&lt;/li&gt;
&lt;li&gt;尽可能减少类和方法的数目，避免前两条规范的矫枉过正&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;并发编程&#34;&gt;&lt;a href=&#34;#并发编程&#34; class=&#34;headerlink&#34; title=&#34;并发编程&#34;&gt;&lt;/a&gt;并发编程&lt;/h2&gt;&lt;p&gt;并发是一种解耦策略，帮助我们分解开&lt;strong&gt;做什么（目的）&lt;/strong&gt;和&lt;strong&gt;何时（时机）&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;并发&lt;strong&gt;有时&lt;/strong&gt;能改善性能，会在编写额外代码上带来额外开销&lt;/li&gt;
&lt;li&gt;正确的并发是复杂的&lt;/li&gt;
&lt;li&gt;并发会带来系统结构的变化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有些防御并发代码问题的原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单一权责：分离并发代码和其他代码&lt;/li&gt;
&lt;li&gt;限制对可能共享的数据的访问&lt;/li&gt;
&lt;li&gt;线程应尽可能独立&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;并发执行模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生产者-消费者模式：数据通过队列传递，队列本身是一种限定资源&lt;/li&gt;
&lt;li&gt;读者-作者模式&lt;/li&gt;
&lt;li&gt;宴席哲学家问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一些需要注意的事情：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;警惕同步方法间的依赖&lt;/li&gt;
&lt;li&gt;尽可能减小sychronized区域&lt;/li&gt;
&lt;li&gt;尽早考虑程序关闭问题&lt;/li&gt;
&lt;li&gt;测试线程代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3个实例&#34;&gt;&lt;a href=&#34;#3个实例&#34; class=&#34;headerlink&#34; title=&#34;3个实例&#34;&gt;&lt;/a&gt;3个实例&lt;/h2&gt;&lt;p&gt;书中以三个实例的重构过程向我们表现了一些将之前思路应用于优化代码的方式。&lt;/p&gt;
&lt;h3 id=&#34;命令行参数解析：args&#34;&gt;&lt;a href=&#34;#命令行参数解析：args&#34; class=&#34;headerlink&#34; title=&#34;命令行参数解析：args&#34;&gt;&lt;/a&gt;命令行参数解析：args&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;编程是一种技术甚于科学的东西，要编写整洁代码，必须先写肮脏代码，然后再&lt;strong&gt;清理它&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在你的初稿，当代码糟糕透顶时甚至是前几稿中，很可能还是会存在烂摊子：成员多得吓人，奇怪命名的魔法字符串，一大堆的try-catch-finally代码。程序员们不都是蠢人，这堆糟糕透顶的代码其实是从最初看起来很合理但是&lt;strong&gt;扩展性差&lt;/strong&gt;的代码一步步演化来的。&lt;/p&gt;
&lt;p&gt;需要使用一些总结和抽象，来简明地表达你的目的。另外，在重构前，“我”（其实是作者）要不厌其烦地强调TDD的必要性，它能保证你重构的每一步，系统都可以工作。在重构过程中，放进拿出是常见的事，小步幅、保持测试通过，你可能会不断移动各种东西。&lt;/p&gt;
&lt;p&gt;优秀的代码设计，大都关乎&lt;strong&gt;分隔&lt;/strong&gt;——创建合适的空间防止不同种类的代码。对关注面的分隔让代码更易于理解和维护（减少理解所需要的大脑缓存）&lt;/p&gt;
&lt;h3 id=&#34;JUnit&#34;&gt;&lt;a href=&#34;#JUnit&#34; class=&#34;headerlink&#34; title=&#34;JUnit&#34;&gt;&lt;/a&gt;JUnit&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;不必要的编码前缀（&lt;code&gt;f_&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;未封装的条件判断&lt;/li&gt;
&lt;li&gt;建议使用肯定式代替否定式判断&lt;/li&gt;
&lt;li&gt;奇怪的不直观的函数名&lt;/li&gt;
&lt;li&gt;易造成理解困难的变量名&lt;/li&gt;
&lt;li&gt;拆分违反SRP原则的函数&lt;/li&gt;
&lt;li&gt;避免隐式时序耦合的函数，用hardcode的形式显示表现时序耦合&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;SerialDate重构&#34;&gt;&lt;a href=&#34;#SerialDate重构&#34; class=&#34;headerlink&#34; title=&#34;SerialDate重构&#34;&gt;&lt;/a&gt;SerialDate重构&lt;/h3&gt;&lt;p&gt;再强调一遍，&lt;strong&gt;重构前要有一个完整的验证可行性的测试&lt;/strong&gt;。然后开始重构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有描述力的类名和术语名&lt;/li&gt;
&lt;li&gt;使用枚举代替常量类&lt;/li&gt;
&lt;li&gt;抽象类中不应知道实现细节&lt;/li&gt;
&lt;li&gt;基类不宜知道子类的情况&lt;/li&gt;
&lt;li&gt;多余的注释&lt;/li&gt;
&lt;li&gt;变量声明应该放在尽量靠近使用的地方&lt;/li&gt;
&lt;li&gt;如果有专业术语，就不要自己命名了&lt;/li&gt;
&lt;li&gt;不要写无用的模板代码&lt;/li&gt;
&lt;li&gt;如果函数对成员进行操作，它就不应该是静态的&lt;/li&gt;
&lt;li&gt;用&lt;strong&gt;解释临时变量&lt;/strong&gt;的方式，让大段的代码更为简化和有表达力&lt;/li&gt;
&lt;li&gt;消除魔术数&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;味道和启发&#34;&gt;&lt;a href=&#34;#味道和启发&#34; class=&#34;headerlink&#34; title=&#34;味道和启发&#34;&gt;&lt;/a&gt;味道和启发&lt;/h2&gt;&lt;p&gt;作者在这里对《重构：既有代码设计的改善》里提到的味道做了自己的一些扩充，也可以作为对上面章节的回顾。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“味道”，即那些看起来不大对劲的代码&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;注释-1&#34;&gt;&lt;a href=&#34;#注释-1&#34; class=&#34;headerlink&#34; title=&#34;注释&#34;&gt;&lt;/a&gt;注释&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;不恰当的信息，如修改记录&lt;/li&gt;
&lt;li&gt;过时的注释&lt;/li&gt;
&lt;li&gt;多余的废话&lt;/li&gt;
&lt;li&gt;错误的有误导性的注释&lt;/li&gt;
&lt;li&gt;注释掉的代码&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;环境&#34;&gt;&lt;a href=&#34;#环境&#34; class=&#34;headerlink&#34; title=&#34;环境&#34;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;多步才能完成的构建&lt;/li&gt;
&lt;li&gt;多步才能完成的测试&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;函数-1&#34;&gt;&lt;a href=&#34;#函数-1&#34; class=&#34;headerlink&#34; title=&#34;函数&#34;&gt;&lt;/a&gt;函数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;过多的入参&lt;/li&gt;
&lt;li&gt;布尔类型参数&lt;/li&gt;
&lt;li&gt;从未被调用的函数&lt;/li&gt;
&lt;li&gt;用于返回的参数&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;一般性问题&#34;&gt;&lt;a href=&#34;#一般性问题&#34; class=&#34;headerlink&#34; title=&#34;一般性问题&#34;&gt;&lt;/a&gt;一般性问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;源文件中有多种语言&lt;/li&gt;
&lt;li&gt;明显违背字面意义的直觉&lt;/li&gt;
&lt;li&gt;不考虑边界情况&lt;/li&gt;
&lt;li&gt;忽视安全问题&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;重复&lt;/strong&gt;，这也是最常见的问题。每次看到重复代码都代表遗漏了抽象。有一些常见的设计模式可以帮助你。&lt;/li&gt;
&lt;li&gt;代码的抽象层级有问题，或混杂。抽象类用来容纳高层级概念，子类用来容纳低层级概念。不同层级概念放在不同容器中。&lt;/li&gt;
&lt;li&gt;基类依赖于子类。通常来说，基类对子类应该一无所知&lt;/li&gt;
&lt;li&gt;信息过多，违背SRP&lt;/li&gt;
&lt;li&gt;从未使用的代码&lt;/li&gt;
&lt;li&gt;不恰当的垂直分隔&lt;/li&gt;
&lt;li&gt;语素前后不一致&lt;/li&gt;
&lt;li&gt;基于巧合、预设假设的耦合。异或是两个没有直接目的之间的模块的耦合。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;特性依恋&lt;/strong&gt;，类的方法只应对自身的成员和方法感兴趣，不应关注其他类的成员和方法&lt;/li&gt;
&lt;li&gt;使用boolean或枚举参数让一个函数表现多态。使用多个函数通常由于向单个函数传递代码来选择函数行为&lt;/li&gt;
&lt;li&gt;晦涩的意图，如魔术数、魔术字符串、过度简写的表达式&lt;/li&gt;
&lt;li&gt;位置错误的权责&lt;/li&gt;
&lt;li&gt;不恰当的静态方法，如完全不需要多态的函数&lt;/li&gt;
&lt;li&gt;使用自解释的变量名&lt;/li&gt;
&lt;li&gt;使用自解释的函数名&lt;/li&gt;
&lt;li&gt;理解算法&lt;/li&gt;
&lt;li&gt;把逻辑依赖（脑海中的限制&amp;#x2F;已知条件）改为物理依赖&lt;/li&gt;
&lt;li&gt;使用if&amp;#x2F;else、switch前想想有没有多态的实现方法&lt;/li&gt;
&lt;li&gt;遵循团队lint规则&lt;/li&gt;
&lt;li&gt;足够准确&lt;/li&gt;
&lt;li&gt;未封装的条件判断&lt;/li&gt;
&lt;li&gt;未封装的边界条件检测&lt;/li&gt;
&lt;li&gt;避免否定性条件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;函数应该只做一件事&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;函数应该只在一个抽象层级上&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;隐蔽的时序性耦合&lt;/li&gt;
&lt;li&gt;别随意，先好好思考再下手&lt;/li&gt;
&lt;li&gt;应该在较高层级放置可配置数据&lt;/li&gt;
&lt;li&gt;避免传递浏览，即遵守德墨忒尔律&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Java&#34;&gt;&lt;a href=&#34;#Java&#34; class=&#34;headerlink&#34; title=&#34;Java&#34;&gt;&lt;/a&gt;Java&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用通配符避免过长的导入清单&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt;.*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;不要继承&lt;em&gt;常量&lt;/em&gt;，使用静态导入&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; EmployeeConstants.*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;在可以的情况下，用枚举代替常量&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;名称&#34;&gt;&lt;a href=&#34;#名称&#34; class=&#34;headerlink&#34; title=&#34;名称&#34;&gt;&lt;/a&gt;名称&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用描述性名称&lt;/li&gt;
&lt;li&gt;名称应该与抽象层级相符&lt;/li&gt;
&lt;li&gt;使用标准化语素&lt;/li&gt;
&lt;li&gt;使用无歧义的名称&lt;/li&gt;
&lt;li&gt;在较大作用范围使用较长名称，较小作用范围&lt;em&gt;可以&lt;/em&gt;使用较短名称&lt;/li&gt;
&lt;li&gt;名称应该明确说明有副作用存在&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;测试&#34;&gt;&lt;a href=&#34;#测试&#34; class=&#34;headerlink&#34; title=&#34;测试&#34;&gt;&lt;/a&gt;测试&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;要有足够的测试&lt;/li&gt;
&lt;li&gt;使用覆盖率工具&lt;/li&gt;
&lt;li&gt;别放过小测试&lt;/li&gt;
&lt;li&gt;被忽略的测试是对不确定事物的疑问&lt;/li&gt;
&lt;li&gt;测试边界条件&lt;/li&gt;
&lt;li&gt;测试失败的模式（pattern）会有启发性&lt;/li&gt;
&lt;li&gt;测试覆盖率的模式会有启发性&lt;/li&gt;
&lt;li&gt;测试应该快速&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;并发编程示例&#34;&gt;&lt;a href=&#34;#并发编程示例&#34; class=&#34;headerlink&#34; title=&#34;并发编程示例&#34;&gt;&lt;/a&gt;并发编程示例&lt;/h2&gt;&lt;h3 id=&#34;客户端-x2F-服务端&#34;&gt;&lt;a href=&#34;#客户端-x2F-服务端&#34; class=&#34;headerlink&#34; title=&#34;客户端&amp;#x2F;服务端&#34;&gt;&lt;/a&gt;客户端&amp;#x2F;服务端&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;如果吞吐量与I&amp;#x2F;O有关，则并发编程可以提升运行效率&lt;/li&gt;
&lt;li&gt;保持并发系统整洁，把线程管理隔离到一个位置&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;可能的执行路径&#34;&gt;&lt;a href=&#34;#可能的执行路径&#34; class=&#34;headerlink&#34; title=&#34;可能的执行路径&#34;&gt;&lt;/a&gt;可能的执行路径&lt;/h3&gt;&lt;p&gt;深入到字节码和汇编语句的执行上，有些并非线程安全的操作中，不同的执行路径会带来不同结果。&lt;/p&gt;
&lt;h3 id=&#34;了解类库&#34;&gt;&lt;a href=&#34;#了解类库&#34; class=&#34;headerlink&#34; title=&#34;了解类库&#34;&gt;&lt;/a&gt;了解类库&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Executor框架&lt;/li&gt;
&lt;li&gt;非锁定方案：AtomicBoolean，AtomicInteger和AtomicReference&lt;/li&gt;
&lt;li&gt;数据库连接、java.util中的容器、Servlet天生不是线程安全的&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;提升吞吐量&#34;&gt;&lt;a href=&#34;#提升吞吐量&#34; class=&#34;headerlink&#34; title=&#34;提升吞吐量&#34;&gt;&lt;/a&gt;提升吞吐量&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;synchronized代码块最好能限制在小范围内&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;死锁&#34;&gt;&lt;a href=&#34;#死锁&#34; class=&#34;headerlink&#34; title=&#34;死锁&#34;&gt;&lt;/a&gt;死锁&lt;/h3&gt;&lt;p&gt;死锁需要满足4个条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;互斥&lt;/strong&gt;，即资源数量有限，或无法在同一时间为多个线程公用&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;上锁及等待&lt;/strong&gt;，从线程获取资源到完成工作前，不会释放这个资源&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;无抢先机制&lt;/strong&gt;，线程无法从其他线程处夺取资源&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;循环等待&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相反地，有4种避免死锁的方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;不互斥&lt;/strong&gt;，使用允许同时使用的资源，或增加资源数目&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不上锁及等待&lt;/strong&gt;，如果有等待情况就释放所有资源从新来过&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;满足抢先机制&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不做循环等待&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;测试多线程代码&#34;&gt;&lt;a href=&#34;#测试多线程代码&#34; class=&#34;headerlink&#34; title=&#34;测试多线程代码&#34;&gt;&lt;/a&gt;测试多线程代码&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;复现问题可能很难，可以借助工具（如ConTest）帮助&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;–END–&lt;/em&gt;&lt;/p&gt;
</content>
        <category term="编程" />
        <category term="重构" />
        <category term="代码" />
        <category term="代码风格" />
        <updated>2019-12-02T15:08:32.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2019/11/15/degit-improvement/</id>
        <title>degit认识和改造</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2019/11/15/degit-improvement/"/>
        <content type="html">&lt;h2 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;近日写了一个chrome插件的starter-boilerplate。但这类boilerplate被人们使用的方式常常是整合在cli库中。由于仓库本身的模板性质和git历史存在，并不合适使用npm分发或&lt;code&gt;git clone&lt;/code&gt;快速搭建项目骨架。&lt;/p&gt;
&lt;p&gt;碰巧此前学习svelte的时候接触到了&lt;a href=&#34;https://github.com/Rich-Harris/degit&#34;&gt;degit&lt;/a&gt;，degit做的事很简单，&lt;strong&gt;复制git仓库代码&lt;/strong&gt;。这也正是一个称职的boilerplate发挥光和热的方式。&lt;/p&gt;
&lt;h2 id=&#34;degit使用&#34;&gt;&lt;a href=&#34;#degit使用&#34; class=&#34;headerlink&#34; title=&#34;degit使用&#34;&gt;&lt;/a&gt;degit使用&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;degit user/repo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# these commands are equivalent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;degit github:user/repo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;degit git@github.com:user/repo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;degit https://github.com/user/repo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;degit user/repo my-new-project&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面是一个degit的基本用法，类似&lt;code&gt;git clone&lt;/code&gt;指定仓库地址和本地目录名，默认将项目当前&lt;code&gt;master&lt;/code&gt;分支的代码拷贝到本地。还可以在仓库后使用&lt;code&gt;#&lt;/code&gt;分隔，指定分支名、tag名或commit hash。目前（2019&amp;#x2F;11&amp;#x2F;12）degit支持github、gitlab、BitBucket以及Sourcehut，暂不支持私有仓库。&lt;/p&gt;
&lt;p&gt;在一些情况下，我们可能希望在拷贝完代码后进行一些后置操作，如拷贝关联仓库或删除不必要文件等。对此，degit设计了&lt;strong&gt;actions&lt;/strong&gt;来支持，可以在当前目录的&lt;code&gt;degit.json&lt;/code&gt;中声明。目前actions只有&lt;code&gt;clone&lt;/code&gt;和&lt;code&gt;remove&lt;/code&gt;两种。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// degit.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;action&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;clone&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;user/another-repo&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;action&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;remove&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;files&amp;quot;&lt;/span&gt;: [&lt;span class=&#34;string&#34;&gt;&amp;quot;LICENSE&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;degit优势&#34;&gt;&lt;a href=&#34;#degit优势&#34; class=&#34;headerlink&#34; title=&#34;degit优势&#34;&gt;&lt;/a&gt;degit优势&lt;/h2&gt;&lt;p&gt;如README中提到的，degit和&lt;code&gt;git clone --depth 1&lt;/code&gt;还是有所区别的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone&lt;/code&gt;后，终归还是会有个&lt;code&gt;.git&lt;/code&gt;目录，需要手动重置&lt;/li&gt;
&lt;li&gt;degit在实现时增加了缓存策略，在有些情况下不需要重复下载代码，速度更快&lt;/li&gt;
&lt;li&gt;“更少的字数”（&lt;code&gt;degit user/repo&lt;/code&gt;而不是&lt;code&gt;git clone --depth 1 git@github.com:user/repo&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;灵活度更高，如前后置操作如actions的支持&lt;/li&gt;
&lt;li&gt;更好的可扩展性，未来可以在degit基础上实现交互等更复杂的设计&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;degit原理&#34;&gt;&lt;a href=&#34;#degit原理&#34; class=&#34;headerlink&#34; title=&#34;degit原理&#34;&gt;&lt;/a&gt;degit原理&lt;/h2&gt;&lt;p&gt;那么degit快在哪里？它的思路借鉴于&lt;a href=&#34;https://github.com/vutran/zel&#34;&gt;zel&lt;/a&gt;和&lt;a href=&#34;https://github.com/lukeed/gittar&#34;&gt;gittar&lt;/a&gt;，即方便快捷地从git仓库中下载需要的源代码。原理上，&lt;strong&gt;利用某些git平台url的特定规则，从平台下载tar.gz包，再本地解压&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;degit实现集中在&lt;code&gt;src/index.js&lt;/code&gt;中。&lt;code&gt;src/bin.js&lt;/code&gt;只用来实现cli部分的入口代码，&lt;code&gt;src/utils.js&lt;/code&gt;则包含了一些工具函数。&lt;/p&gt;
&lt;h3 id=&#34;入口&#34;&gt;&lt;a href=&#34;#入口&#34; class=&#34;headerlink&#34; title=&#34;入口&#34;&gt;&lt;/a&gt;入口&lt;/h3&gt;&lt;p&gt;在&lt;code&gt;src/bin.js&lt;/code&gt;中，流程分下面几步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;利用&lt;a href=&#34;https://github.com/lukeed/mri&#34;&gt;mri&lt;/a&gt;做了基本的参数处理&lt;/li&gt;
&lt;li&gt;实例化Degit对象，注册logger的监听方法&lt;/li&gt;
&lt;li&gt;调用&lt;code&gt;clone&lt;/code&gt;方法&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; d = &lt;span class=&#34;title function_&#34;&gt;degit&lt;/span&gt;(src, args);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d.&lt;span class=&#34;title function_&#34;&gt;on&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;info&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;error&lt;/span&gt;(chalk.&lt;span class=&#34;title function_&#34;&gt;cyan&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`&amp;gt; &lt;span class=&#34;subst&#34;&gt;$&amp;#123;event.message.replace(&lt;span class=&#34;string&#34;&gt;&amp;#x27;options.&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;--&amp;#x27;&lt;/span&gt;)&amp;#125;&lt;/span&gt;`&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d.&lt;span class=&#34;title function_&#34;&gt;on&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;warn&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;error&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            chalk.&lt;span class=&#34;title function_&#34;&gt;magenta&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`! &lt;span class=&#34;subst&#34;&gt;$&amp;#123;event.message.replace(&lt;span class=&#34;string&#34;&gt;&amp;#x27;options.&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;--&amp;#x27;&lt;/span&gt;)&amp;#125;&lt;/span&gt;`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d.&lt;span class=&#34;title function_&#34;&gt;clone&lt;/span&gt;(dest)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// .then(() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// &amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .&lt;span class=&#34;title function_&#34;&gt;catch&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;err&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;error&lt;/span&gt;(chalk.&lt;span class=&#34;title function_&#34;&gt;red&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`! &lt;span class=&#34;subst&#34;&gt;$&amp;#123;err.message.replace(&lt;span class=&#34;string&#34;&gt;&amp;#x27;options.&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;--&amp;#x27;&lt;/span&gt;)&amp;#125;&lt;/span&gt;`&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            process.&lt;span class=&#34;title function_&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Degit初始化&#34;&gt;&lt;a href=&#34;#Degit初始化&#34; class=&#34;headerlink&#34; title=&#34;Degit初始化&#34;&gt;&lt;/a&gt;Degit初始化&lt;/h3&gt;&lt;p&gt;对象实例包含下面几个成员，其中repo信息需要处理后才能拿到。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;src&lt;/code&gt;，string，用户输入的仓库地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cache&lt;/code&gt;，boolean，是否使用缓存，来自命令行&lt;code&gt;-c&lt;/code&gt;或&lt;code&gt;--cache&lt;/code&gt;参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;force&lt;/code&gt;，boolean，目标文件夹有内容时，是否覆盖，来自&lt;code&gt;-f&lt;/code&gt;或&lt;code&gt;--force&lt;/code&gt;参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;verbose&lt;/code&gt;，boolean，是否打印详细日志，来自&lt;code&gt;-v&lt;/code&gt;或&lt;code&gt;--verbose&lt;/code&gt;参数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;repo&lt;/code&gt;，处理&lt;code&gt;src&lt;/code&gt;拿到仓库的详情，包括&lt;ul&gt;
&lt;li&gt;&lt;code&gt;site&lt;/code&gt;，网页域名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user&lt;/code&gt;，用户&amp;#x2F;组织名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;，仓库名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ref&lt;/code&gt;，分支、tag、commit hash&lt;/li&gt;
&lt;li&gt;&lt;code&gt;url&lt;/code&gt;，完整的HTTP url&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;directiveActions&lt;/code&gt;，actions配置对应的处理函数，包含&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clone&lt;/code&gt;，递归处理src的仓库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;remove&lt;/code&gt;，调用&lt;code&gt;remove&lt;/code&gt;方法移除指定文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;repo信息来自src经过正则匹配出的详细信息。由于要利用一些git平台的url拼接规则，需要排除已知平台以外的url。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 支持的范围&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; supported = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([&lt;span class=&#34;string&#34;&gt;&amp;#x27;github&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;gitlab&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;bitbucket&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;git.sr.ht&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;src&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; match = &lt;span class=&#34;regexp&#34;&gt;/^(?:https:\/\/([^/]+)\/|git@([^/]+)[:/]|([^/]+)[:/])?([^/\s]+)\/([^/\s#]+)(?:#(.+))?/&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;exec&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        src&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!match) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;DegitError&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`could not parse &lt;span class=&#34;subst&#34;&gt;$&amp;#123;src&amp;#125;&lt;/span&gt;`&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;BAD_SRC&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; site = (match[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] || &lt;span class=&#34;string&#34;&gt;&amp;#x27;github&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;regexp&#34;&gt;/\.(com|org)$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 排除范围外的url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!supported.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(site)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;DegitError&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;`degit supports GitHub, GitLab, Sourcehut and BitBucket`&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;UNSUPPORTED_HOST&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 匹配出用户名、仓库名、分支/tag/commit hash名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; user = match[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; name = match[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/\.git$/&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; ref = match[&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;] || &lt;span class=&#34;string&#34;&gt;&amp;#x27;master&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 完整的仓库地址，需要http开头的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; url = &lt;span class=&#34;string&#34;&gt;`https://&lt;span class=&#34;subst&#34;&gt;$&amp;#123;site&amp;#125;&lt;/span&gt;.&lt;span class=&#34;subst&#34;&gt;$&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;subst&#34;&gt;&lt;span class=&#34;string&#34;&gt;        site === &lt;span class=&#34;string&#34;&gt;&amp;#x27;bitbucket&amp;#x27;&lt;/span&gt; ? &lt;span class=&#34;string&#34;&gt;&amp;#x27;org&amp;#x27;&lt;/span&gt; : site === &lt;span class=&#34;string&#34;&gt;&amp;#x27;git.sr.ht&amp;#x27;&lt;/span&gt; ? &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;#x27;com&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;subst&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;#125;&lt;/span&gt;/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;user&amp;#125;&lt;/span&gt;/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123; site, user, name, ref, url &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;仓库下载&#34;&gt;&lt;a href=&#34;#仓库下载&#34; class=&#34;headerlink&#34; title=&#34;仓库下载&#34;&gt;&lt;/a&gt;仓库下载&lt;/h3&gt;&lt;p&gt;下载仓库流程如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s2.ax1x.com/2019/11/15/Mdbl6S.png&#34; alt=&#34;degit流程&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;获取缓存信息&#34;&gt;&lt;a href=&#34;#获取缓存信息&#34; class=&#34;headerlink&#34; title=&#34;获取缓存信息&#34;&gt;&lt;/a&gt;获取缓存信息&lt;/h4&gt;&lt;p&gt;degit的缓存放在&lt;code&gt;/home&lt;/code&gt;或&lt;code&gt;/tmp&lt;/code&gt;下的&lt;code&gt;.degit&lt;/code&gt;目录下，按照&lt;code&gt;site/user/name&lt;/code&gt;的目录组织。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 缓存目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; base = path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(homeOrTmp, &lt;span class=&#34;string&#34;&gt;&amp;#x27;.degit&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; dir = path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(base, repo.&lt;span class=&#34;property&#34;&gt;site&lt;/span&gt;, repo.&lt;span class=&#34;property&#34;&gt;user&lt;/span&gt;, repo.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; cached = &lt;span class=&#34;title function_&#34;&gt;tryRequire&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(dir, &lt;span class=&#34;string&#34;&gt;&amp;#x27;map.json&amp;#x27;&lt;/span&gt;)) || &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;目录下有一个&lt;code&gt;map.json&lt;/code&gt;和缓存的代码tar.gz包，包名格式为&lt;code&gt;&amp;lt;commit-hash&amp;gt;.tar.gz&lt;/code&gt;。在map.json保存着此前使用过的分支名&amp;#x2F;tag名&amp;#x2F;简写commit名到commit hash的最新映射关系。形如下方：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;master&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;4e3a4089b4f0275964eb10a432dc1c15526a0b4d&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这一步会尝试使用parse好的&lt;code&gt;site&lt;/code&gt;、&lt;code&gt;user&lt;/code&gt;、&lt;code&gt;name&lt;/code&gt;属性找已有的缓存的&lt;code&gt;map.json&lt;/code&gt;。没有找到时返回&lt;code&gt;&amp;#123;&amp;#125;&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;获取commit-hash&#34;&gt;&lt;a href=&#34;#获取commit-hash&#34; class=&#34;headerlink&#34; title=&#34;获取commit hash&#34;&gt;&lt;/a&gt;获取commit hash&lt;/h4&gt;&lt;p&gt;这一步分两种情况;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用缓存时，直接从上一步拿到的&lt;code&gt;map.json&lt;/code&gt;里面找&lt;code&gt;ref&lt;/code&gt;对应的commit hash&lt;/li&gt;
&lt;li&gt;不使用缓存时，需要从远端仓库拿分支名&amp;#x2F;tag名到commit hash的对应关系（使用&lt;code&gt;git ls-remote&lt;/code&gt;完成）。之后格式化为结构化数据并从中寻找&lt;code&gt;ref&lt;/code&gt;对应的commit hash。如果中途失败，则fallback到使用缓存的方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fetchRefs&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;repo&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; stdout &amp;#125; = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;exec&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`git ls-remote &lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;`&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; stdout&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            .&lt;span class=&#34;title function_&#34;&gt;split&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            .&lt;span class=&#34;title function_&#34;&gt;filter&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Boolean&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            .&lt;span class=&#34;title function_&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;row&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; [hash, ref] = row.&lt;span class=&#34;title function_&#34;&gt;split&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;\t&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 格式化过程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 错误处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这一步若未找到hash，则无法构造下载的url，从而需要抛出错误。&lt;/p&gt;
&lt;h4 id=&#34;构造下载地址&#34;&gt;&lt;a href=&#34;#构造下载地址&#34; class=&#34;headerlink&#34; title=&#34;构造下载地址&#34;&gt;&lt;/a&gt;构造下载地址&lt;/h4&gt;&lt;p&gt;根据不同的git平台固定的源码tar.gz归档url规则，构造下载的url，这也是degit思路的基础。目前支持gitlab、bucket、github风格的url。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 即将下载的tar.gz文件路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; file = &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;dir&amp;#125;&lt;/span&gt;/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 下载的url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; url =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    repo.&lt;span class=&#34;property&#34;&gt;site&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;gitlab&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ? &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/repository/archive.tar.gz?ref=&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        : repo.&lt;span class=&#34;property&#34;&gt;site&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;bitbucket&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ? &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/get/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        : &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/archive/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;创建目录并下载&#34;&gt;&lt;a href=&#34;#创建目录并下载&#34; class=&#34;headerlink&#34; title=&#34;创建目录并下载&#34;&gt;&lt;/a&gt;创建目录并下载&lt;/h4&gt;&lt;p&gt;不使用缓存时，会在创建缓存目录并下载。另外，指定&lt;code&gt;-f&lt;/code&gt;或&lt;code&gt;--force&lt;/code&gt;参数，会覆盖已有文件路径。最后使用https模块下载文件。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;cache&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fs.&lt;span class=&#34;title function_&#34;&gt;statSync&lt;/span&gt;(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;title function_&#34;&gt;mkdirp&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;dirname&lt;/span&gt;(file));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fetch&lt;/span&gt;(url, file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 错误处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;更新缓存&#34;&gt;&lt;a href=&#34;#更新缓存&#34; class=&#34;headerlink&#34; title=&#34;更新缓存&#34;&gt;&lt;/a&gt;更新缓存&lt;/h4&gt;&lt;p&gt;下载成功会更新本地缓存，保证以后使用缓存时能使用尽量新的包。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当前使用包的commit hash如果和指定分支&amp;#x2F;tag&amp;#x2F;commit hash对应的hash一致，则不需要更新&lt;/li&gt;
&lt;li&gt;在需要更新时，检查老的hash是否还有使用，如果没有使用，则清除hash对应的tar.gz包&lt;/li&gt;
&lt;li&gt;更新map.json里的对应关系&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;updateCache&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;dir, repo, hash, cached&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (cached[repo.&lt;span class=&#34;property&#34;&gt;ref&lt;/span&gt;] === hash) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; oldHash = cached[repo.&lt;span class=&#34;property&#34;&gt;ref&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldHash) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; used = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; key &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; cached) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (cached[key] === hash) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                used = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!used) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// we no longer need this tar file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                fs.&lt;span class=&#34;title function_&#34;&gt;unlinkSync&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(dir, &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;oldHash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// ignore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cached[repo.&lt;span class=&#34;property&#34;&gt;ref&lt;/span&gt;] = hash;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fs.&lt;span class=&#34;title function_&#34;&gt;writeFileSync&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(dir, &lt;span class=&#34;string&#34;&gt;&amp;#x27;map.json&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(cached, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;  &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;解压tar-gz包&#34;&gt;&lt;a href=&#34;#解压tar-gz包&#34; class=&#34;headerlink&#34; title=&#34;解压tar.gz包&#34;&gt;&lt;/a&gt;解压tar.gz包&lt;/h4&gt;&lt;p&gt;创建cli中输入的目标目录，并将已下载到缓存中tar.gz包解压到目标路径下。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;mkdirp&lt;/span&gt;(dest);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;untar&lt;/span&gt;(file, dest);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;actions处理&#34;&gt;&lt;a href=&#34;#actions处理&#34; class=&#34;headerlink&#34; title=&#34;actions处理&#34;&gt;&lt;/a&gt;&lt;code&gt;actions&lt;/code&gt;处理&lt;/h4&gt;&lt;p&gt;如果在当前目录下获取到了&lt;code&gt;degit.json&lt;/code&gt;，则执行后续的&lt;code&gt;clone&lt;/code&gt;或&lt;code&gt;remove&lt;/code&gt;操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;clone，在目标目录下继续一遍clone流程&lt;/li&gt;
&lt;li&gt;remove，删除指定文件或文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;degit改造&#34;&gt;&lt;a href=&#34;#degit改造&#34; class=&#34;headerlink&#34; title=&#34;degit改造&#34;&gt;&lt;/a&gt;degit改造&lt;/h2&gt;&lt;p&gt;degit虽好，但从上面也可以看到，支持仓库比较有限，且不支持私有仓库。在公司内部，无法从url推断git仓库类型时，degit就无法工作了。不过，借助degit本身的设计，稍微改造上面提到的“degit初始化”，“构造下载地址”部分，就可以让degit通过传参url风格的形式支持私有仓库。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增&lt;code&gt;-s&lt;/code&gt;或&lt;code&gt;--style&lt;/code&gt;命令行入参，表示git仓库url的风格，目前设计有github、gitlab、bitbucket这几个degit原始就支持的形式。&lt;/li&gt;
&lt;li&gt;解析仓库地址信息时，若有style入参，则先判断是否在上述允许范围内；保留原有从域名解析style的部分，新增若未解析出style，则从入参里取；最后再抛出不支持的仓库地址错误&lt;/li&gt;
&lt;li&gt;解析返回数据结构中，新增&lt;code&gt;style&lt;/code&gt;字段表示url风格，原有的&lt;code&gt;site&lt;/code&gt;为避免歧义，直接使用域名代替原有的域名前缀&lt;/li&gt;
&lt;li&gt;在构造下载地址时，直接根据style字段拼接url&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;src, style&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (style &amp;amp;&amp;amp; !supportedGitStyle.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(style)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;DegitError&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`degit supports styles of github, gitlab, bitbucket`&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;UNSUPPORTED_STYLE&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; site = match[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] || &lt;span class=&#34;string&#34;&gt;&amp;#x27;github.com&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; gitStyle =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        style ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (match[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] || match[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] || &lt;span class=&#34;string&#34;&gt;&amp;#x27;gitlab&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/\.(com|org)$/&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!supportedGitRepo.&lt;span class=&#34;title function_&#34;&gt;has&lt;/span&gt;(gitStyle)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;DegitError&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;`degit supports GitHub, GitLab, Sourcehut and BitBucket without -s/--style parameters`&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;code&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;UNSUPPORTED_HOST&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; user = match[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; name = match[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/\.git$/&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; ref = match[&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;] || &lt;span class=&#34;string&#34;&gt;&amp;#x27;master&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; url = &lt;span class=&#34;string&#34;&gt;`https://&lt;span class=&#34;subst&#34;&gt;$&amp;#123;site&amp;#125;&lt;/span&gt;/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;user&amp;#125;&lt;/span&gt;/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123; site, user, name, ref, url, &lt;span class=&#34;attr&#34;&gt;style&lt;/span&gt;: gitStyle &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 拼接url处&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; url =&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    repo.&lt;span class=&#34;property&#34;&gt;style&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;gitlab&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ? &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/repository/archive.tar.gz?ref=&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        : repo.&lt;span class=&#34;property&#34;&gt;style&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;bitbucket&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ? &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/get/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        : &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;repo.url&amp;#125;&lt;/span&gt;/archive/&lt;span class=&#34;subst&#34;&gt;$&amp;#123;hash&amp;#125;&lt;/span&gt;.tar.gz`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;可能存在的问题&#34;&gt;&lt;a href=&#34;#可能存在的问题&#34; class=&#34;headerlink&#34; title=&#34;可能存在的问题&#34;&gt;&lt;/a&gt;可能存在的问题&lt;/h3&gt;&lt;p&gt;绝大多数私有仓库，都会对用户身份做校验，直接访问tar.gz链接会报401错误。这需要根据不同的内部平台自己做处理了。&lt;/p&gt;
&lt;p&gt;因为特殊原因，改造后的包和代码不提供。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;–END–&lt;/em&gt;&lt;/p&gt;
</content>
        <category term="脚手架" />
        <category term="degit" />
        <category term="git" />
        <updated>2019-11-15T13:51:58.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2019/09/01/roadmap-refactor-log/</id>
        <title>roadmap工程化改造</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2019/09/01/roadmap-refactor-log/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/shenlvmeng/roadmap&#34;&gt;roadmap&lt;/a&gt;最近使用typescript重构到了1.0.0版本，下面是一些记录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.0.0项目由两部分组成：&lt;strong&gt;Electron程序&lt;/strong&gt;、&lt;strong&gt;web网页&lt;/strong&gt;。两者不直接关联，通过配置文件&lt;code&gt;roadmap.config.json&lt;/code&gt;解耦。&lt;/p&gt;
&lt;p&gt;另外，Electron程序和web网页属于两套开发流程，互不干扰，在使用配置文件作为接口的基础上，可以独立开发和升级。&lt;/p&gt;
&lt;h2 id=&#34;Electron程序&#34;&gt;&lt;a href=&#34;#Electron程序&#34; class=&#34;headerlink&#34; title=&#34;Electron程序&#34;&gt;&lt;/a&gt;Electron程序&lt;/h2&gt;&lt;p&gt;提供给用户程序，通过输入地图配置、gpx文件、定位图片物料，产出&lt;code&gt;roadmap.config.json&lt;/code&gt;。整体使用Electron + webpack + TypeScript的脚手架。&lt;/p&gt;
&lt;p&gt;Electron工作重点在gpx文件转换和图片压缩：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gpx文件使用&lt;code&gt;parse-gpx&lt;/code&gt;库解析，产出JSON字符串&lt;/li&gt;
&lt;li&gt;图片压缩，保留EXIF信息的图片压缩，产出压缩后的图片&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后加上用户的输入，综合产出&lt;code&gt;roadmap.config.json&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;gpx解析&#34;&gt;&lt;a href=&#34;#gpx解析&#34; class=&#34;headerlink&#34; title=&#34;gpx解析&#34;&gt;&lt;/a&gt;gpx解析&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;见src&amp;#x2F;main&amp;#x2F;gpx2json.ts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用&lt;code&gt;parse-gpx&lt;/code&gt;库解析，将经纬度坐标换算到百度地图坐标，产出保留经纬度、海拔信息的结构体，储存为JSON文件，便于网页读取。&lt;/p&gt;
&lt;h3 id=&#34;图片压缩&#34;&gt;&lt;a href=&#34;#图片压缩&#34; class=&#34;headerlink&#34; title=&#34;图片压缩&#34;&gt;&lt;/a&gt;图片压缩&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;见src&amp;#x2F;renderer&amp;#x2F;image.ts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;带有EXIF信息的图片通常体积很大，不适合直接放在网页，会严重拖慢网页加载速度。而经过调研，常见的图片压缩工具都不会保留图片EXIF信息，即使保留也不会保留我们需要的经纬度、海拔信息。&lt;/p&gt;
&lt;p&gt;另外，满足要求的图片压缩工具（如Adobe PhotoShop）没法整合在整个流程中。因此需要自己实现。&lt;/p&gt;
&lt;p&gt;思路是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;读取原始图片中的EXIF信息&lt;/li&gt;
&lt;li&gt;借助canvas压缩图片体积、同时调整图片尺寸&lt;/li&gt;
&lt;li&gt;再度组合EXIF信息和压缩后的图片，得到保留完整EXIF信息的压缩图片&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网页模板&#34;&gt;&lt;a href=&#34;#网页模板&#34; class=&#34;headerlink&#34; title=&#34;网页模板&#34;&gt;&lt;/a&gt;网页模板&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;html-loader&lt;/code&gt;加载已经产出好的&lt;code&gt;output.html&lt;/code&gt;，读取为字符串，直接输出到指定目录即可。&lt;/p&gt;
&lt;p&gt;网页模板的开发流程见portal一节。&lt;/p&gt;
&lt;h3 id=&#34;产物&#34;&gt;&lt;a href=&#34;#产物&#34; class=&#34;headerlink&#34; title=&#34;产物&#34;&gt;&lt;/a&gt;产物&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;样例见src&amp;#x2F;test&amp;#x2F;portal&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;产物生成在桌面的roadmap-output文件夹，&lt;strong&gt;新生成的文件夹会覆盖老的&lt;/strong&gt;。内容如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;index.html&lt;/code&gt; 目标网页&lt;/li&gt;
&lt;li&gt;&lt;code&gt;roadmap.config.json&lt;/code&gt; 配置信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;xx.json&lt;/code&gt; gpx内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;images&lt;/code&gt; 图片信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;roadmap-config-json&#34;&gt;&lt;a href=&#34;#roadmap-config-json&#34; class=&#34;headerlink&#34; title=&#34;roadmap.config.json&#34;&gt;&lt;/a&gt;roadmap.config.json&lt;/h2&gt;&lt;p&gt;用于解耦。包含了基础的配置信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;city 默认定位的中心城市&lt;/li&gt;
&lt;li&gt;title 网页标题&lt;/li&gt;
&lt;li&gt;gpxCount gpx路径数&lt;/li&gt;
&lt;li&gt;imgTitles 图片标题，不需要和图片一一对应&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;web网页（portal）&#34;&gt;&lt;a href=&#34;#web网页（portal）&#34; class=&#34;headerlink&#34; title=&#34;web网页（portal）&#34;&gt;&lt;/a&gt;web网页（portal）&lt;/h2&gt;&lt;p&gt;web网页为了便于迭代，使用了和Electron程序独立的webpack工程。在&lt;code&gt;config&lt;/code&gt;中有独立的webpack配置，有独立的webpack调试、打包命令。&lt;/p&gt;
&lt;p&gt;工程位于&lt;code&gt;src/portal&lt;/code&gt;，使用TypeScript。产物位于&lt;code&gt;portal&lt;/code&gt;目录下，由Electron程序引用。&lt;/p&gt;
&lt;p&gt;在portal工程的webpack配置中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;MiniCssExtractPlugin&lt;/code&gt;抽出css为css资源文件，加载时的避免样式闪动&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;HtmlWebpackInlineSourcePlugin&lt;/code&gt;将引用的css和js文件inline，使得Electron程序只需引用一个HTML文件即可&lt;/li&gt;
&lt;li&gt;需要配置html-loader的&lt;code&gt;attr&lt;/code&gt;，避免web网页在加载时，里面的&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;标签的&lt;code&gt;src&lt;/code&gt;属性被解析&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;gps轨迹&#34;&gt;&lt;a href=&#34;#gps轨迹&#34; class=&#34;headerlink&#34; title=&#34;gps轨迹&#34;&gt;&lt;/a&gt;gps轨迹&lt;/h3&gt;&lt;p&gt;使用百度地图API绘制polyline实现，Electron程序生成的JSON中，已经提前转成百度地图坐标地址。&lt;/p&gt;
&lt;h3 id=&#34;图床&#34;&gt;&lt;a href=&#34;#图床&#34; class=&#34;headerlink&#34; title=&#34;图床&#34;&gt;&lt;/a&gt;图床&lt;/h3&gt;&lt;p&gt;图片存储于免费的&lt;a href=&#34;https://imgchr.com/&#34;&gt;路过图床&lt;/a&gt;，因为不支持自定义访问路径，因此需要将上传图床后的路径保存为图片的title，在网页加载时，通过压缩图的title找到图片在图床上的对应地址（这个地方的设计待优化，所以暂时未开放）。&lt;/p&gt;
&lt;p&gt;图片的位置使用EXIF.js读取压缩图片的EXIF信息拿到，转换坐标后绘制在地图上。&lt;/p&gt;
</content>
        <category term="Electron" />
        <category term="TypeScript" />
        <category term="路书" />
        <category term="gpx解析" />
        <category term="EXIF" />
        <updated>2019-09-01T09:25:31.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2019/07/30/productive-vs-code/</id>
        <title>Productive VS Code</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2019/07/30/productive-vs-code/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/tips-and-tricks&#34;&gt;Visual Studio Code Tips and Tricks&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里介绍一些能提高VS Code产率的方法。&lt;/p&gt;
&lt;h2 id=&#34;基础&#34;&gt;&lt;a href=&#34;#基础&#34; class=&#34;headerlink&#34; title=&#34;基础&#34;&gt;&lt;/a&gt;基础&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/interactive_playground.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;欢迎页右下角提供Interactive playground（在命令面板里的&lt;strong&gt;Help &amp;gt; Interactive Playground&lt;/strong&gt;）。里面提供了VS Code一些关键特性的快速介绍。比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多光标编辑&lt;/li&gt;
&lt;li&gt;行操作&lt;ul&gt;
&lt;li&gt;整行向上、下移动&lt;code&gt;Option + up/down&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;整行向上、下复制&lt;code&gt;Shift + Option + up/down&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除整行&lt;code&gt;Shift + Cmd + K&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;注释整行&lt;code&gt;Cmd + /&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;重构&lt;ul&gt;
&lt;li&gt;重命名：光标处&lt;code&gt;F2&lt;/code&gt;，修改后自动同步相关位置&lt;/li&gt;
&lt;li&gt;选中语句 -&amp;gt; &lt;code&gt;Cmd + .&lt;/code&gt; -&amp;gt; 选择重构方式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;格式化文档：&lt;code&gt;Cmd K + Cmd F&lt;/code&gt;或者&lt;code&gt;Shift + Option + F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;折叠&lt;ul&gt;
&lt;li&gt;折叠&lt;code&gt;Option + Cmd + [&lt;/code&gt;，展开&lt;code&gt;Option + Cmd + ]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;折叠所有&lt;code&gt;Cmd K + Cmd 0&lt;/code&gt;，展开所有&lt;code&gt;Cmd K + Cmd J&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;代码片段：见代码片段一节&lt;/li&gt;
&lt;li&gt;Emmet：见Emmet一节&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;常见操作&#34;&gt;&lt;a href=&#34;#常见操作&#34; class=&#34;headerlink&#34; title=&#34;常见操作&#34;&gt;&lt;/a&gt;常见操作&lt;/h2&gt;&lt;h3 id=&#34;指令面板&#34;&gt;&lt;a href=&#34;#指令面板&#34; class=&#34;headerlink&#34; title=&#34;指令面板&#34;&gt;&lt;/a&gt;指令面板&lt;/h3&gt;&lt;p&gt;快捷键&lt;code&gt;Shift + Cmd + P&lt;/code&gt;。里面的常见命令都有快捷键提示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/KeyboardReferenceSheet.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;快速打开文件&#34;&gt;&lt;a href=&#34;#快速打开文件&#34; class=&#34;headerlink&#34; title=&#34;快速打开文件&#34;&gt;&lt;/a&gt;快速打开文件&lt;/h3&gt;&lt;p&gt;快捷键&lt;code&gt;Cmd + P&lt;/code&gt;。点击打开文件，点击右方向键打开不会关闭当前面板。&lt;/p&gt;
&lt;h3 id=&#34;状态栏&#34;&gt;&lt;a href=&#34;#状态栏&#34; class=&#34;headerlink&#34; title=&#34;状态栏&#34;&gt;&lt;/a&gt;状态栏&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Shift + Cmd + M&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;修改语言&#34;&gt;&lt;a href=&#34;#修改语言&#34; class=&#34;headerlink&#34; title=&#34;修改语言&#34;&gt;&lt;/a&gt;修改语言&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Cmd K + M&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;命令行工具&#34;&gt;&lt;a href=&#34;#命令行工具&#34; class=&#34;headerlink&#34; title=&#34;命令行工具&#34;&gt;&lt;/a&gt;命令行工具&lt;/h2&gt;&lt;p&gt;打开指令面板，安装&lt;code&gt;code&lt;/code&gt;命令。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/setup/mac/shell-Cmd.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;常见命令：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# open code with current directory&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# open the current directory in the most recently used code window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code -r .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# change the language&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code --locale=es&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# open diff editor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;code --diff &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;自定义编辑器&#34;&gt;&lt;a href=&#34;#自定义编辑器&#34; class=&#34;headerlink&#34; title=&#34;自定义编辑器&#34;&gt;&lt;/a&gt;自定义编辑器&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Cmd + ,&lt;/code&gt;，打开编辑器编辑配置。也可以&lt;/p&gt;
&lt;h2 id=&#34;插件&#34;&gt;&lt;a href=&#34;#插件&#34; class=&#34;headerlink&#34; title=&#34;插件&#34;&gt;&lt;/a&gt;插件&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Cmd + Shift + X&lt;/code&gt;，利用插件增强你的开发体验和生产率。&lt;/p&gt;
&lt;h2 id=&#34;文件及目录&#34;&gt;&lt;a href=&#34;#文件及目录&#34; class=&#34;headerlink&#34; title=&#34;文件及目录&#34;&gt;&lt;/a&gt;文件及目录&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;内置terminal，&lt;code&gt;Ctrl + &lt;/code&gt; &amp;#96;或View -&amp;gt; Terminal或命令面板里输入View: Toggle integrated terminal。&lt;a href=&#34;https://code.visualstudio.com/docs/editor/integrated-terminal&#34;&gt;深度阅读&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;自动保存，&lt;code&gt;setting.json&lt;/code&gt;中设置&lt;code&gt;&amp;quot;files.autoSave&amp;quot;: &amp;quot;afterDelay&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;toggle侧边栏，&lt;code&gt;Cmd + B&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;专注模式，&lt;code&gt;Cmd K + Z&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;分栏，&lt;code&gt;Cmd + \&lt;/code&gt;，使用&lt;code&gt;Cmd + 1&lt;/code&gt;, &lt;code&gt;Cmd + 2&lt;/code&gt;等切换&lt;/li&gt;
&lt;li&gt;关闭当前tab，&lt;code&gt;Cmd + W&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;浏览历史&lt;ul&gt;
&lt;li&gt;全部历史，&lt;code&gt;Ctrl + Tab&lt;/code&gt;按住选择&lt;/li&gt;
&lt;li&gt;回退，&lt;code&gt;Ctrl + -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;前进，&lt;code&gt;Ctrl + Shift + -&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;高效编辑&#34;&gt;&lt;a href=&#34;#高效编辑&#34; class=&#34;headerlink&#34; title=&#34;高效编辑&#34;&gt;&lt;/a&gt;高效编辑&lt;/h2&gt;&lt;h3 id=&#34;多光标&#34;&gt;&lt;a href=&#34;#多光标&#34; class=&#34;headerlink&#34; title=&#34;多光标&#34;&gt;&lt;/a&gt;多光标&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Cmd + Click&lt;/code&gt;可以多光标操作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd + Shift + L&lt;/code&gt;可以在所有选中单词的末尾多光标操作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd + D&lt;/code&gt;选中当前单词&lt;br&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/add_cursor_current_selection.gif&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;盒式选中&#34;&gt;&lt;a href=&#34;#盒式选中&#34; class=&#34;headerlink&#34; title=&#34;盒式选中&#34;&gt;&lt;/a&gt;盒式选中&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Shift + Alt + 拖拽&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/column-select.gif&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;选中当前行&#34;&gt;&lt;a href=&#34;#选中当前行&#34; class=&#34;headerlink&#34; title=&#34;选中当前行&#34;&gt;&lt;/a&gt;选中当前行&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Cmd + L&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;快速滚动&#34;&gt;&lt;a href=&#34;#快速滚动&#34; class=&#34;headerlink&#34; title=&#34;快速滚动&#34;&gt;&lt;/a&gt;快速滚动&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Alt + 滚动&lt;/code&gt;可以达到x5速度的滚动&lt;/p&gt;
&lt;h3 id=&#34;行操作&#34;&gt;&lt;a href=&#34;#行操作&#34; class=&#34;headerlink&#34; title=&#34;行操作&#34;&gt;&lt;/a&gt;行操作&lt;/h3&gt;&lt;p&gt;行向上&amp;#x2F;下复制&amp;#x2F;剪切，见[基础]一节里的介绍&lt;/p&gt;
&lt;h3 id=&#34;层级选中&#34;&gt;&lt;a href=&#34;#层级选中&#34; class=&#34;headerlink&#34; title=&#34;层级选中&#34;&gt;&lt;/a&gt;层级选中&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Ctrl + Shift + Cmd + left/right&lt;/code&gt;可以扩大&amp;#x2F;缩小当前选择范围&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/shrink_expand_selection.gif&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;Goto-Symbol&#34;&gt;&lt;a href=&#34;#Goto-Symbol&#34; class=&#34;headerlink&#34; title=&#34;Goto Symbol&#34;&gt;&lt;/a&gt;Goto Symbol&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Shift + Cmd + O&lt;/code&gt;当前文件下选择符号名，输入&lt;code&gt;@:&lt;/code&gt;可以进行分类&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shift + Cmd + T&lt;/code&gt;当前工作区下选择符号名&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Goto特定行&#34;&gt;&lt;a href=&#34;#Goto特定行&#34; class=&#34;headerlink&#34; title=&#34;Goto特定行&#34;&gt;&lt;/a&gt;Goto特定行&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Ctrl + G&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;trim行尾空格&#34;&gt;&lt;a href=&#34;#trim行尾空格&#34; class=&#34;headerlink&#34; title=&#34;trim行尾空格&#34;&gt;&lt;/a&gt;trim行尾空格&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Cmd K + Cmd X&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/trim_whitespace.gif&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;Markdown预览&#34;&gt;&lt;a href=&#34;#Markdown预览&#34; class=&#34;headerlink&#34; title=&#34;Markdown预览&#34;&gt;&lt;/a&gt;Markdown预览&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Cmd + Shift + V&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;实时预览&lt;code&gt;Cmd K + V&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;代码联想&#34;&gt;&lt;a href=&#34;#代码联想&#34; class=&#34;headerlink&#34; title=&#34;代码联想&#34;&gt;&lt;/a&gt;代码联想&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;查看定义，&lt;code&gt;F12&lt;/code&gt;或&lt;code&gt;Option + Click&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;查看定义（不切换上下文）&lt;code&gt;Option + F12&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看引用（不切换上下文），&lt;code&gt;Shift + F12&lt;/code&gt;，查看整个项目引用&lt;code&gt;Shift + Option + F12&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;重命名，&lt;code&gt;F2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;搜索替换，&lt;code&gt;Cmd + F&lt;/code&gt;，&lt;code&gt;Cmd + Shift + F&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Emmet&#34;&gt;&lt;a href=&#34;#Emmet&#34; class=&#34;headerlink&#34; title=&#34;Emmet&#34;&gt;&lt;/a&gt;Emmet&lt;/h3&gt;&lt;p&gt;VS Code支持&lt;a href=&#34;https://docs.emmet.io/&#34;&gt;Emmet&lt;/a&gt;风格书写HTML代码。完整的Emmet语法参考&lt;a href=&#34;https://docs.emmet.io/cheat-sheet/&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;Code-Snippet&#34;&gt;&lt;a href=&#34;#Code-Snippet&#34; class=&#34;headerlink&#34; title=&#34;Code Snippet&#34;&gt;&lt;/a&gt;Code Snippet&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/editor/userdefinedsnippets/ajax-snippet.gif&#34;&gt;&lt;/p&gt;
&lt;p&gt;Code Snippet即能让你更容易复用的代码模板，如for循环，if语句等。在代码联想时，可以自动帮你补全，开启&lt;code&gt;&amp;quot;editor.tabCompletion&amp;quot;: &amp;quot;on&amp;quot;&lt;/code&gt;配置时，也可以使用Tab键补全。&lt;/p&gt;
&lt;p&gt;在VS Code Marketplace中有许多snippets拓展。搜索”xxx snippet”多半你能找到已有的snippet拓展。&lt;/p&gt;
&lt;p&gt;书写自己的snippet可以参考&lt;a href=&#34;https://code.visualstudio.com/docs/editor/userdefinedsnippets#_create-your-own-snippets&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;Git集成&#34;&gt;&lt;a href=&#34;#Git集成&#34; class=&#34;headerlink&#34; title=&#34;Git集成&#34;&gt;&lt;/a&gt;Git集成&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Shift + Ctrl + G&lt;/code&gt;打开。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持Side by side和Inline view两种diff模式。&lt;/li&gt;
&lt;li&gt;左下角快捷切换分支&lt;br&gt;&lt;img src=&#34;https://code.visualstudio.com/assets/docs/getstarted/tips-and-tricks/switch_branches.gif&#34;&gt;&lt;/li&gt;
&lt;li&gt;手动添加文件、解决冲突&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多参考&lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/tips-and-tricks#_git-integration&#34;&gt;Git integration&lt;/a&gt;一节。&lt;/p&gt;
&lt;h2 id=&#34;调试&#34;&gt;&lt;a href=&#34;#调试&#34; class=&#34;headerlink&#34; title=&#34;调试&#34;&gt;&lt;/a&gt;调试&lt;/h2&gt;&lt;p&gt;在命令面板中输入”Debug”查看相关命令。更多查看&lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/tips-and-tricks#_debugging&#34;&gt;Debugging&lt;/a&gt;一节&lt;/p&gt;
&lt;h2 id=&#34;脚本任务&#34;&gt;&lt;a href=&#34;#脚本任务&#34; class=&#34;headerlink&#34; title=&#34;脚本任务&#34;&gt;&lt;/a&gt;脚本任务&lt;/h2&gt;&lt;p&gt;参考&lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/tips-and-tricks#_task-runner&#34;&gt;Task Runner&lt;/a&gt;。&lt;/p&gt;
</content>
        <category term="VSCode" />
        <category term="编辑器" />
        <category term="IDE" />
        <updated>2019-07-30T14:30:54.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2019/02/12/some-tips-6/</id>
        <title>工作中的遇到的一些小知识 6</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2019/02/12/some-tips-6/"/>
        <content type="html">&lt;h2 id=&#34;React-Hooks和React-Hot-Loader默认配置相冲突&#34;&gt;&lt;a href=&#34;#React-Hooks和React-Hot-Loader默认配置相冲突&#34; class=&#34;headerlink&#34; title=&#34;React Hooks和React Hot Loader默认配置相冲突&#34;&gt;&lt;/a&gt;React Hooks和React Hot Loader默认配置相冲突&lt;/h2&gt;&lt;p&gt;设置RHL的&lt;code&gt;pureSFC&lt;/code&gt;配置为true，详见&lt;a href=&#34;https://github.com/gaearon/react-hot-loader/issues/1088#issuecomment-434862175&#34;&gt;讨论&lt;/a&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;setConfig(&amp;#123; pureSFC: true &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;一个简单的rollup配置样例&#34;&gt;&lt;a href=&#34;#一个简单的rollup配置样例&#34; class=&#34;headerlink&#34; title=&#34;一个简单的rollup配置样例&#34;&gt;&lt;/a&gt;一个简单的rollup配置样例&lt;/h2&gt;&lt;p&gt;最近有一个开发前端录音库（严格来说是改进）的需求，目标是发布到npm管理平台上，在打包库上&lt;a href=&#34;https://rollupjs.org/guide/en&#34;&gt;rollup&lt;/a&gt;的发挥要优于webpack。刚好想用用试试，就用了rollup作为打包工具。因为场景比webpack更简单，配置上也比webpack好配很多，基本看看&lt;a href=&#34;https://rollupjs.org/guide/zh#tutorial&#34;&gt;官方文档&lt;/a&gt;就可以上手了。&lt;/p&gt;
&lt;p&gt;不过，文档里用的babel版本还是6.x，使用新版本babel后，配置文件&lt;code&gt;rollup.config.js&lt;/code&gt;和&lt;code&gt;.babelrc&lt;/code&gt;有些改动，这里列在下面。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// rollup.config.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; resolve &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;rollup-plugin-node-resolve&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; commonjs &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;rollup-plugin-commonjs&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; babel &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;rollup-plugin-babel&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &amp;#123; terser &amp;#125; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;rollup-plugin-terser&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;input&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;src/index.js&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;output&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;file&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;index.js&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;format&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;es&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;plugins&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;commonjs&lt;/span&gt;(),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;babel&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;exclude&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;node_modules/**&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;terser&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// .babelrc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;presets&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;#x27;@babel/env&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;loose&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;modules&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;plugins&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        [&lt;span class=&#34;string&#34;&gt;&amp;#x27;@babel/proposal-object-rest-spread&amp;#x27;&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;loose&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;mouseout和mouseleave事件的区别&#34;&gt;&lt;a href=&#34;#mouseout和mouseleave事件的区别&#34; class=&#34;headerlink&#34; title=&#34;mouseout和mouseleave事件的区别&#34;&gt;&lt;/a&gt;&lt;code&gt;mouseout&lt;/code&gt;和&lt;code&gt;mouseleave&lt;/code&gt;事件的区别&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;mouseout: &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Events/mouseout&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/Events/mouseout&lt;/a&gt;&lt;br&gt;mouseleave: &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/Events/mouseleave&#34;&gt;https://developer.mozilla.org/en-US/docs/Web/Events/mouseleave&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mouseout&lt;/code&gt;在鼠标离开该元素表面时触发，&lt;strong&gt;包括进入到该元素的子元素中&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mouseleave&lt;/code&gt;在鼠标离开该元素区域时触发，&lt;strong&gt;即离开该元素和所有子元素区域&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sublime-goto-definition-快捷键&#34;&gt;&lt;a href=&#34;#sublime-goto-definition-快捷键&#34; class=&#34;headerlink&#34; title=&#34;sublime goto definition 快捷键&#34;&gt;&lt;/a&gt;sublime goto definition 快捷键&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;参考&lt;a href=&#34;https://stackoverflow.com/questions/16235706/sublime-3-set-key-map-for-function-goto-definition&#34;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;只lint-changed-file的脚本方案&#34;&gt;&lt;a href=&#34;#只lint-changed-file的脚本方案&#34; class=&#34;headerlink&#34; title=&#34;只lint changed file的脚本方案&#34;&gt;&lt;/a&gt;只lint changed file的脚本方案&lt;/h2&gt;&lt;p&gt;利用&lt;code&gt;git diff-index&lt;/code&gt;。下面以tslint为例。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;files=$(git diff-index --relative --name-only --cached HEAD | grep -e &lt;span class=&#34;string&#34;&gt;&amp;#x27;\\.ts$&amp;#x27;&lt;/span&gt; -e &lt;span class=&#34;string&#34;&gt;&amp;#x27;\\.tsx$&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; -n \&amp;quot;&lt;span class=&#34;variable&#34;&gt;$files&lt;/span&gt;\&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$files&lt;/span&gt; | xargs tslint --fix -t codeFrame;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;fi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;升级版&#34;&gt;&lt;a href=&#34;#升级版&#34; class=&#34;headerlink&#34; title=&#34;升级版&#34;&gt;&lt;/a&gt;升级版&lt;/h3&gt;&lt;p&gt;使用&lt;a href=&#34;https://www.npmjs.com/package/lint-staged&#34;&gt;lint-staged&lt;/a&gt;，只lint staged的文件内容，代替上面冗长的脚本。&lt;/p&gt;
&lt;h2 id=&#34;吸顶样式效果&#34;&gt;&lt;a href=&#34;#吸顶样式效果&#34; class=&#34;headerlink&#34; title=&#34;吸顶样式效果&#34;&gt;&lt;/a&gt;吸顶样式效果&lt;/h2&gt;&lt;h3 id=&#34;CSS&#34;&gt;&lt;a href=&#34;#CSS&#34; class=&#34;headerlink&#34; title=&#34;CSS&#34;&gt;&lt;/a&gt;CSS&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;参考：&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/CSS/position&#34;&gt;MDN&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最简洁的实现方式，缺点是&lt;a href=&#34;https://caniuse.com/#search=sticky&#34;&gt;支持度&lt;/a&gt;较差，只在iOS平台支持度较好。除非做中后台，否则需要谨慎使用。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.stick&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attribute&#34;&gt;position&lt;/span&gt;: sticky;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attribute&#34;&gt;top&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;JS&#34;&gt;&lt;a href=&#34;#JS&#34; class=&#34;headerlink&#34; title=&#34;JS&#34;&gt;&lt;/a&gt;JS&lt;/h3&gt;&lt;p&gt;不用赘述，检查滚动元素的&lt;code&gt;scrollTop&lt;/code&gt;属性做判断即可，在指定位置上，设置&lt;code&gt;position:fixed&lt;/code&gt;配合&lt;code&gt;z-index&lt;/code&gt;等实现吸顶。&lt;/p&gt;
&lt;p&gt;另外有意思的一点是，在&lt;code&gt;position:fixed&lt;/code&gt;的情况下，&lt;strong&gt;如果没有设置&lt;code&gt;left&lt;/code&gt;，&lt;code&gt;left&lt;/code&gt;将相对当前元素相对定位&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;一个更友好的图片加载组件&#34;&gt;&lt;a href=&#34;#一个更友好的图片加载组件&#34; class=&#34;headerlink&#34; title=&#34;一个更友好的图片加载组件&#34;&gt;&lt;/a&gt;一个更友好的图片加载组件&lt;/h2&gt;&lt;h3 id=&#34;需求&#34;&gt;&lt;a href=&#34;#需求&#34; class=&#34;headerlink&#34; title=&#34;需求&#34;&gt;&lt;/a&gt;需求&lt;/h3&gt;&lt;p&gt;提供类似知乎App内的体验：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在图片加载时有&lt;strong&gt;相同大小&lt;/strong&gt;的占位图和文案提示&lt;/li&gt;
&lt;li&gt;图片加载失败后有&lt;strong&gt;相同大小&lt;/strong&gt;的占位图和文案提示，点击文案可以重新加载图片&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;思路&#34;&gt;&lt;a href=&#34;#思路&#34; class=&#34;headerlink&#34; title=&#34;思路&#34;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;重点在需要图片大小相同的占位图，这通常意味着：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;图片的大小需要伴随图片下发&lt;/li&gt;
&lt;li&gt;客户端的图片宽度或高度固定（通常是宽度）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点击重新加载可以通过在图片url后拼接每次不一样的参数实现，例如时间戳。&lt;/p&gt;
&lt;p&gt;遮罩可以用图片背景色 + &lt;code&gt;:after&lt;/code&gt;伪元素或另外的元素实现。剩下的把loading、loaded、failed状态处理好，工作并不困难。&lt;/p&gt;
&lt;p&gt;下面是粗略实现的一个demo。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@desc&lt;/span&gt; smart image provide more friendly image loading experience inspired by zhihu&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@author&lt;/span&gt; shenlvmeng&amp;lt;xin_yuanming@163.com&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;React&lt;/span&gt;, &amp;#123; &lt;span class=&#34;title class_&#34;&gt;Component&lt;/span&gt; &amp;#125; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;react&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;./index.less&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface &lt;span class=&#34;title class_&#34;&gt;IProps&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;width&lt;/span&gt;: number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;height&lt;/span&gt;: number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;: string;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    onLoad?: &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    onError?: &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;interface &lt;span class=&#34;title class_&#34;&gt;IState&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;: string;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;loaded&lt;/span&gt;: boolean;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;failed&lt;/span&gt;: boolean;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SmartImage&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_ inherited__&#34;&gt;Component&lt;/span&gt;&amp;lt;&lt;span class=&#34;title class_&#34;&gt;IProps&lt;/span&gt;, &lt;span class=&#34;title class_&#34;&gt;IState&lt;/span&gt;&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public readonly &lt;span class=&#34;attr&#34;&gt;state&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;IState&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;: &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;loaded&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;failed&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public &lt;span class=&#34;title function_&#34;&gt;render&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; width, height &amp;#125; = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; src, loaded, failed &amp;#125; = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;state&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;className&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;smart-image-container&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;className&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;smart-image&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;width&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;750&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;height&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;750&lt;/span&gt; * &lt;span class=&#34;attr&#34;&gt;height&lt;/span&gt; / &lt;span class=&#34;attr&#34;&gt;width&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;src&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;onLoad&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;this.handleSuccess&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;onError&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;this.handleError&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                &amp;#123;!loaded&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                    ? (&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;className&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;smart-image-hint&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;onClick&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;this.handleRetry&amp;#125;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                            &amp;#123;failed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                                ? &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;图片加载失败，点此重试&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                                : &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;图片加载中...&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                            &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                        &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                    )&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                    : null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;            &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private handleSuccess = &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;setState&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;failed&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;loaded&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;onLoad&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;onLoad&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private handleError = &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;setState&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;failed&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;onError&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;onError&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    private handleRetry = &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;startsWith&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;http&amp;#x27;&lt;/span&gt;) || !&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;state&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;failed&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;setState&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;failed&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.props.src&amp;#125;&lt;/span&gt;?ts=&lt;span class=&#34;subst&#34;&gt;$&amp;#123;&lt;span class=&#34;built_in&#34;&gt;Date&lt;/span&gt;.now()&amp;#125;&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;SmartImage&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="React Hooks" />
        <category term="Rollup" />
        <category term="mouseout" />
        <category term="mouseleave" />
        <category term="lint-staged" />
        <category term="吸顶" />
        <category term="图片组件" />
        <updated>2019-02-12T14:29:56.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/11/21/some-tips-5/</id>
        <title>工作中的遇到的一些小知识 5</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/11/21/some-tips-5/"/>
        <content type="html">&lt;h2 id=&#34;smooth-scroll&#34;&gt;&lt;a href=&#34;#smooth-scroll&#34; class=&#34;headerlink&#34; title=&#34;smooth scroll&#34;&gt;&lt;/a&gt;smooth scroll&lt;/h2&gt;&lt;p&gt;使用&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Window/scroll&#34;&gt;window.scroll API &lt;/a&gt;，从MDN的文档来看，各浏览器的支持情况还不错。&lt;/p&gt;
&lt;p&gt;或者自己通过&lt;code&gt;setTimeout&lt;/code&gt;加上ease function实现难度也不大。&lt;/p&gt;
&lt;h2 id=&#34;React在老版本浏览器或Webview下的支持问题&#34;&gt;&lt;a href=&#34;#React在老版本浏览器或Webview下的支持问题&#34; class=&#34;headerlink&#34; title=&#34;React在老版本浏览器或Webview下的支持问题&#34;&gt;&lt;/a&gt;React在老版本浏览器或Webview下的支持问题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;[JavaScript Environment Requirements&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;React](&lt;a href=&#34;https://reactjs.org/docs/javascript-environment-requirements.html&#34;&gt;https://reactjs.org/docs/javascript-environment-requirements.html&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;React 16依赖于ES6中的Map和Set特性。如果需要React运行在老版本的不支持ES6的浏览器或Webview下，需要&lt;a href=&#34;https://babeljs.io/docs/en/babel-polyfill&#34;&gt;babel-polyfill&lt;/a&gt;或&lt;a href=&#34;https://github.com/zloirock/core-js&#34;&gt;core-js&lt;/a&gt;的支持。&lt;/p&gt;
&lt;p&gt;类似于下面这样：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;core-js/es6/map&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;core-js/es6/set&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;babel-polyfill&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;React&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;react&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;ReactDOM&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;react-dom&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;ReactDOM&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;render&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, world!&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;root&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;需要格外注意的是，不论是import core-js还是import babel-polyfill，&lt;strong&gt;都一定要写在第一次&lt;code&gt;import React from &amp;#39;react&amp;#39;&lt;/code&gt;的前面&lt;/strong&gt;。否则是起不到polyfill React中ES6特性的效果的。&lt;/p&gt;
&lt;h2 id=&#34;一些老版本Android的坑&#34;&gt;&lt;a href=&#34;#一些老版本Android的坑&#34; class=&#34;headerlink&#34; title=&#34;一些老版本Android的坑&#34;&gt;&lt;/a&gt;一些老版本Android的坑&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在伪元素如&lt;code&gt;:before&lt;/code&gt;和&lt;code&gt;:after&lt;/code&gt;使用动画会导致crash，&lt;a href=&#34;https://caniuse.com/#search=%3Abefore&#34;&gt;caniuse&lt;/a&gt;的known issues上只是说在safari v6版本和以下会有不支持的情况。&lt;/li&gt;
&lt;li&gt;不支持不带前缀的&lt;code&gt;transform&lt;/code&gt;…&lt;/li&gt;
&lt;li&gt;不支持在&lt;code&gt;&amp;lt;line&amp;gt;&lt;/code&gt;上的&lt;code&gt;stroke-width&lt;/code&gt;属性上使用rem&lt;/li&gt;
&lt;li&gt;不支持Element.matches方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ffmpeg&#34;&gt;&lt;a href=&#34;#ffmpeg&#34; class=&#34;headerlink&#34; title=&#34;ffmpeg&#34;&gt;&lt;/a&gt;ffmpeg&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;wiki: &lt;a href=&#34;https://en.wikipedia.org/wiki/FFmpeg&#34;&gt;https://en.wikipedia.org/wiki/FFmpeg&lt;/a&gt;&lt;br&gt;官网: &lt;a href=&#34;https://www.ffmpeg.org/&#34;&gt;https://www.ffmpeg.org/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要包含三个命令行指令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ffmpeg，多媒体转码&lt;/li&gt;
&lt;li&gt;ffplay，基于SDL和ffmpeg的极简播放器&lt;/li&gt;
&lt;li&gt;ffprobe，多媒体分析&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ffmpeg部分支持参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;指定输入文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;处理时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ss&lt;/code&gt;起始时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b:a&lt;/code&gt;或&lt;code&gt;-b:v&lt;/code&gt;指定音频、视频的输出码率。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;fps 帧率&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s 1920x1080&lt;/code&gt;设置帧大小&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c:a&lt;/code&gt;或&lt;code&gt;-c:v&lt;/code&gt;设置音频、视频编码器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ac&lt;/code&gt;声道数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-ar&lt;/code&gt;音频采样率&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.ffmpeg.org/ffmpeg.html#Options&#34;&gt;更多&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;React-Router使用History路由时，不识别带‘-’的路径&#34;&gt;&lt;a href=&#34;#React-Router使用History路由时，不识别带‘-’的路径&#34; class=&#34;headerlink&#34; title=&#34;React Router使用History路由时，不识别带‘.’的路径&#34;&gt;&lt;/a&gt;React Router使用History路由时，不识别带‘.’的路径&lt;/h2&gt;&lt;p&gt;webpack-dev-server的配置里，增加&lt;code&gt;disableDotRule&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;historyApiFallback: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    disableDotRule: true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注，这样做会使xxx.html的形式也重定向到默认的index.html，在多入口的项目下会有问题。&lt;/p&gt;
&lt;h2 id=&#34;React-Hooks和React-Hot-Loader默认配置相冲突&#34;&gt;&lt;a href=&#34;#React-Hooks和React-Hot-Loader默认配置相冲突&#34; class=&#34;headerlink&#34; title=&#34;React Hooks和React Hot Loader默认配置相冲突&#34;&gt;&lt;/a&gt;React Hooks和React Hot Loader默认配置相冲突&lt;/h2&gt;&lt;p&gt;设置RHL的&lt;code&gt;pureSFC&lt;/code&gt;配置为true，详见&lt;a href=&#34;https://github.com/gaearon/react-hot-loader/issues/1088#issuecomment-434862175&#34;&gt;讨论&lt;/a&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;setConfig(&amp;#123; pureSFC: true &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;一个简单的rollup配置样例&#34;&gt;&lt;a href=&#34;#一个简单的rollup配置样例&#34; class=&#34;headerlink&#34; title=&#34;一个简单的rollup配置样例&#34;&gt;&lt;/a&gt;一个简单的rollup配置样例&lt;/h2&gt;&lt;p&gt;最近有一个开发前端录音库（严格来说是改进）的需求，目标是发布到npm管理平台上，在打包库上&lt;a href=&#34;https://rollupjs.org/guide/en&#34;&gt;rollup&lt;/a&gt;的发挥要优于webpack。刚好想用用试试，就用了rollup作为打包工具。因为场景比webpack更简单，配置上也比webpack好配很多，基本看看&lt;a href=&#34;https://rollupjs.org/guide/zh#tutorial&#34;&gt;官方文档&lt;/a&gt;就可以上手了。&lt;/p&gt;
&lt;p&gt;不过，文档里用的babel版本还是6.x，使用新版本babel后，配置文件&lt;code&gt;rollup.config.js&lt;/code&gt;和&lt;code&gt;.babelrc&lt;/code&gt;有些改动，这里列在下面。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// rollup.config.js&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import resolve from &amp;#x27;rollup-plugin-node-resolve&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import commonjs from &amp;#x27;rollup-plugin-commonjs&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import babel from &amp;#x27;rollup-plugin-babel&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;import &amp;#123; terser &amp;#125; from &amp;quot;rollup-plugin-terser&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;export default &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    input: &amp;#x27;src/index.js&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    output: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        file: &amp;#x27;index.js&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        format: &amp;#x27;es&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    plugins: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        resolve(),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        commonjs(),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        babel(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            exclude: &amp;#x27;node_modules/**&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        terser()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// .babelrc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    presets: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#x27;@babel/env&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                loose: true,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                modules: false&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    plugins: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        [&amp;#x27;@babel/proposal-object-rest-spread&amp;#x27;, &amp;#123; loose: true &amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;–END–&lt;/em&gt;&lt;/p&gt;
</content>
        <category term="polyfill" />
        <category term="Android" />
        <category term="ffmpeg" />
        <category term="React Hooks" />
        <category term="rollup" />
        <updated>2018-11-21T15:06:54.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/10/01/some-tips-4/</id>
        <title>工作中的遇到的一些小知识 4</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/10/01/some-tips-4/"/>
        <content type="html">&lt;h2 id=&#34;lottie-production环境下bug修复总结&#34;&gt;&lt;a href=&#34;#lottie-production环境下bug修复总结&#34; class=&#34;headerlink&#34; title=&#34;lottie production环境下bug修复总结&#34;&gt;&lt;/a&gt;lottie production环境下bug修复总结&lt;/h2&gt;&lt;p&gt;现象：&lt;br&gt;前段时间，用lottie-web做动画的时候，发现在有个别动画在本地测试时可以正常播放，打包上线后会报库代码内的错误&lt;/p&gt;
&lt;p&gt;猜测原因：&lt;br&gt;打包过程中的uglify有损压缩了lottie-web的代码，导致部分特性的bug&lt;/p&gt;
&lt;p&gt;修复方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在webpack配置中，为lottie-web专门指定一个chunk&lt;/li&gt;
&lt;li&gt;在optimization中，指定一个lottie的cacheGroup，保证一个专门的chunk&lt;/li&gt;
&lt;li&gt;minimizer中uglifyJSConfig指定exclude为lottie的chunk名，避免被uglify&lt;/li&gt;
&lt;li&gt;resolve中，指定lottie-web resolve到’..&amp;#x2F;node_modules&amp;#x2F;lottie-web&amp;#x2F;build&amp;#x2F;player&amp;#x2F;lottie.min.js’，使用压缩过的版本&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大致像下面这样：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;module&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;exports&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;entry&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;lottie&lt;/span&gt;: [&lt;span class=&#34;string&#34;&gt;&amp;#x27;lottie-web&amp;#x27;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;resolve&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;alias&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;#x27;lottie-web&amp;#x27;&lt;/span&gt;: path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(__dirname, &lt;span class=&#34;string&#34;&gt;&amp;#x27;../node_modules/lottie-web/build/player/lottie.min.js&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;optimization&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;splitChunks&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;cacheGroups&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;lottie&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;chunks&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;initial&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;lottie&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;test&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;lottie&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;enforce&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;minimizer&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;UglifyJsPlugin&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;exclude&lt;/span&gt;: &lt;span class=&#34;regexp&#34;&gt;/lottie/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;结果：&lt;br&gt;问题解决。&lt;/p&gt;
&lt;h2 id=&#34;Android机型下rem适配不准的问题&#34;&gt;&lt;a href=&#34;#Android机型下rem适配不准的问题&#34; class=&#34;headerlink&#34; title=&#34;Android机型下rem适配不准的问题&#34;&gt;&lt;/a&gt;Android机型下rem适配不准的问题&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;参考 &lt;a href=&#34;https://www.jianshu.com/p/14f6ce51a75f&#34;&gt;https://www.jianshu.com/p/14f6ce51a75f&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过比较&lt;code&gt;document.documentElement.style.fontSize&lt;/code&gt;和&lt;code&gt;window.getComputedStyle(document.documentElement)[&amp;#39;font-size&amp;#39;]&lt;/code&gt;，假设前者是a，后者是b，&lt;code&gt;a * a / b&lt;/code&gt;计算得到和设计一致的尺寸。&lt;/p&gt;
&lt;h2 id=&#34;3D旋转效果&#34;&gt;&lt;a href=&#34;#3D旋转效果&#34; class=&#34;headerlink&#34; title=&#34;3D旋转效果&#34;&gt;&lt;/a&gt;3D旋转效果&lt;/h2&gt;&lt;p&gt;利用CSS中的&lt;code&gt;backface-visibility: hidden;&lt;/code&gt;属性，实现在&lt;code&gt;transform: rotateY(180deg)&lt;/code&gt;时，页面翻转到不可见区域。&lt;/p&gt;
&lt;h2 id=&#34;egret学习&#34;&gt;&lt;a href=&#34;#egret学习&#34; class=&#34;headerlink&#34; title=&#34;egret学习&#34;&gt;&lt;/a&gt;egret学习&lt;/h2&gt;&lt;p&gt;场景：H5小游戏开发&lt;/p&gt;
&lt;p&gt;投放场景：各种小游戏平台，也可以打包为Android、iOS、Windows Phone应用发布，甚至直接web访问H5页面&lt;/p&gt;
&lt;p&gt;开发语言：TypeScript&lt;/p&gt;
&lt;p&gt;开发方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类Java的代码组织方式，MVC分离项目代码，M和C开发体验类似“用JavaScript写Java项目”。在View部分开发体验类似于用&lt;code&gt;canvas API写页面结构&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;类Android的resource管理方式（定义json文件描述资源组和路径对应），在代码中用API动态分组或逐个load资源&lt;/li&gt;
&lt;li&gt;单一入口，流程上在stage加载完成后，load资源（同时给出loading页面），之后执行游戏逻辑&lt;/li&gt;
&lt;li&gt;使用dispatchEvent实现组件间的信息交流&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;项目结构&#34;&gt;&lt;a href=&#34;#项目结构&#34; class=&#34;headerlink&#34; title=&#34;项目结构&#34;&gt;&lt;/a&gt;项目结构&lt;/h3&gt;&lt;p&gt;入口文件为index.html。在其中引入manifest.json。读入所需的库文件后，根据DOM容器的&lt;code&gt;data-*&lt;/code&gt;属性确定项目配置，以及项目入口&lt;code&gt;*.ts&lt;/code&gt;（一般是&lt;code&gt;Main.ts&lt;/code&gt;）。之后打包编译到&lt;code&gt;bin-debug&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;业务逻辑放在&lt;code&gt;/src&lt;/code&gt;下，资源文件放在&lt;code&gt;/resources&lt;/code&gt;中，资源文件用类似于Android的形式进行存取管理。&lt;/p&gt;
&lt;h3 id=&#34;视图&#34;&gt;&lt;a href=&#34;#视图&#34; class=&#34;headerlink&#34; title=&#34;视图&#34;&gt;&lt;/a&gt;视图&lt;/h3&gt;&lt;p&gt;Displayable元素可以添加到容器中显示。包含下面基类。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;displayableContainer 视图元素容器&lt;ul&gt;
&lt;li&gt;stage&lt;/li&gt;
&lt;li&gt;scrollView&lt;/li&gt;
&lt;li&gt;sprite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;bitmap&lt;/li&gt;
&lt;li&gt;bitmapText&lt;/li&gt;
&lt;li&gt;textField&lt;/li&gt;
&lt;li&gt;movieClip&lt;/li&gt;
&lt;li&gt;shape&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;movieClip表示逐帧动画。生成方法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;RES.getRes&lt;/code&gt;获取资源&lt;/li&gt;
&lt;li&gt;使用factory方法构造movieClipData&lt;/li&gt;
&lt;li&gt;使用movieClipData构造movieClip&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;简单动画用tween来实现。&lt;/p&gt;
&lt;h3 id=&#34;发布&#34;&gt;&lt;a href=&#34;#发布&#34; class=&#34;headerlink&#34; title=&#34;发布&#34;&gt;&lt;/a&gt;发布&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;egret publish&lt;/code&gt;或run build。发布H5，runtime版本&lt;/li&gt;
&lt;li&gt;对应平台support工具，如Android、iOS、微信小程序&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过在最新的egret launcher下，项目本身已经提供的发布到原生的快捷入口，参考&lt;a href=&#34;http://developer.egret.com/cn/github/egret-docs/Native/native/projectsetting/index.html&#34;&gt;官方解释&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&#34;难点&#34;&gt;&lt;a href=&#34;#难点&#34; class=&#34;headerlink&#34; title=&#34;难点&#34;&gt;&lt;/a&gt;难点&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;和React如何结合开发？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;View层通过canvas、WebGL实现，不适合和React结合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;部署方式如何结合在App里&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;小游戏可以发布到HTML5平台，之后类似老的webview页面开发方式，部署到离线包平台或在线页面即可。&lt;/p&gt;
&lt;h2 id=&#34;SSO实现方案&#34;&gt;&lt;a href=&#34;#SSO实现方案&#34; class=&#34;headerlink&#34; title=&#34;SSO实现方案&#34;&gt;&lt;/a&gt;SSO实现方案&lt;/h2&gt;&lt;p&gt;SSO - Single Sign On 单一站点登录。由一个站点的登录状态实现关联网站免登录。&lt;/p&gt;
&lt;h3 id=&#34;背景&#34;&gt;&lt;a href=&#34;#背景&#34; class=&#34;headerlink&#34; title=&#34;背景&#34;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;由sso.xxx.com记录用户登录态，其他需要使用同一登录态的网站需要同步该域名下的登录态cookie到自己的独立域名下。&lt;/p&gt;
&lt;h3 id=&#34;实际场景&#34;&gt;&lt;a href=&#34;#实际场景&#34; class=&#34;headerlink&#34; title=&#34;实际场景&#34;&gt;&lt;/a&gt;实际场景&lt;/h3&gt;&lt;p&gt;一般公司内部的网站或ToC的集团网页间都有SSO控制，任意访问一个清除了所有cookie网页，观察network中开头的302报文即可发现实现SSO过程中的各跳转逻辑。&lt;/p&gt;
&lt;p&gt;实际步骤因实现而异：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;（转让控制权）访问目标网页，302到SSO的跳转特定页面，如jump.sso.xxx.com&lt;/li&gt;
&lt;li&gt;（写入cookie）302回目标网页的特定页面，如sso.mysite.com。该域名CNAME到sso.xxx.com的服务器&lt;/li&gt;
&lt;li&gt;（写入cookie）sso.mysite.com写入cookie到自己的同域名下，再次302到目标网页，完成SSO过程&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;同上&lt;/li&gt;
&lt;li&gt;（写入cookie）jump.sso.xxx.com做cookie的检查确认，通过url的方式写入回调的user session，再302回mysite.com。&lt;/li&gt;
&lt;li&gt;（写入cookie）mysite.com的后台对应路由根据URL里的回调写入cookie，302到目标页面&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在写入cookie到新域名过程中，可以有不同的实现方式。&lt;/p&gt;
&lt;h3 id=&#34;原理&#34;&gt;&lt;a href=&#34;#原理&#34; class=&#34;headerlink&#34; title=&#34;原理&#34;&gt;&lt;/a&gt;原理&lt;/h3&gt;&lt;p&gt;第一步302到sso.xxx.com的时候已经可以带上xxx.com的cookie了，但是由于浏览器安全限制，并不能直接set cookie到独立域名下。需要再次302回原始域名，CNAME到sso的服务器，实现set cookie到独立域名。&lt;/p&gt;
&lt;p&gt;为了保证安全性，CNAME到sso的sso.mysite.com所传递的参数需要有安全机制保证。如时间戳、秘钥等保证请求的完整性。避免中间人伪造域名下的请求。同时，链接本身也应有&lt;strong&gt;时效性&lt;/strong&gt;，在超过时间范围失效，避免拦截链接，实现钓鱼网站获取sso.xxx.com的登录态。&lt;/p&gt;
&lt;p&gt;具体步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;302到jump.sso.xxx.com后，进行权限检查判断域名是否允许同步，匹配SSO的cookie域名下的cookie取交集，得到需要同步的cookie。&lt;/li&gt;
&lt;li&gt;通过以上两步后，302到sso.mysite.com，url中带上cookie和安全相关的参数&lt;/li&gt;
&lt;li&gt;根据安全参数校验、target是否允许同步，决定返回403还是302。&lt;/li&gt;
&lt;li&gt;通过校验后，同步登录态cookie，302到目标网页&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;清除登录态时，如何做到相关域名的同时清除，还需要额外设计。&lt;/p&gt;
&lt;p&gt;当然，如果sso只在内网使用，在jump.sso.xxx.com做完安全验证后，通过url将结果交由sso.mysite.com设置登录态Cookie，要更为简洁。&lt;/p&gt;
&lt;h2 id=&#34;git-branch-rename&#34;&gt;&lt;a href=&#34;#git-branch-rename&#34; class=&#34;headerlink&#34; title=&#34;git branch rename&#34;&gt;&lt;/a&gt;git branch rename&lt;/h2&gt;&lt;p&gt;如果分支在远端也有的话，工作需要分为本地和远端两部分。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重命名本地分支&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;如果就在该分支  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git branch -m new-name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;如果在其他分支  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git branch -m old-name new-name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;删除原分支，推送新分支&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git push origin :old-name new-name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;重置upstream设置&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git push origin -u new-name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;webpack无痛mock方案&#34;&gt;&lt;a href=&#34;#webpack无痛mock方案&#34; class=&#34;headerlink&#34; title=&#34;webpack无痛mock方案&#34;&gt;&lt;/a&gt;webpack无痛mock方案&lt;/h2&gt;&lt;p&gt;使用webpack-api-mocker实现，对比axios-mock-adapter和其余方案有几个优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mock部分代码和业务代码分离开，让网络请求部分代码（&amp;#x2F;apis）有清晰的逻辑，不混杂业务无关内容&lt;/li&gt;
&lt;li&gt;热更新，保存即生效&lt;/li&gt;
&lt;li&gt;本地dev环境无痛切换到production环境，无需修改任何代码&lt;/li&gt;
&lt;li&gt;基于webpack-dev-server，和整个项目耦合，无需本地起服务&lt;br&gt;本地开发时，配置webpack.dev.config.js，在devServer部分的配置中加入apiMocker即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; apiMocker = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;webpack-api-mocker&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;devServer&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;before&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;app&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;title function_&#34;&gt;apiMocker&lt;/span&gt;(app, path.&lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./mock/index.js&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 对应的路径下，写入mock数据和路径即可，可以灵活组织各模块的mock数据：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; proxy = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;GET /user/info&amp;#x27;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// your mock data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST /user/update&amp;#x27;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;success&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;module&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;exports&lt;/span&gt; = proxy;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;更多使用，参考webpack-api-mocker文档。&lt;/p&gt;
&lt;h2 id=&#34;webpack配置使用es6语法&#34;&gt;&lt;a href=&#34;#webpack配置使用es6语法&#34; class=&#34;headerlink&#34; title=&#34;webpack配置使用es6语法&#34;&gt;&lt;/a&gt;webpack配置使用es6语法&lt;/h2&gt;&lt;p&gt;如今现代的前端开发早已采用全es6的语法书写，然而webpack的配置文件需要通过node解析执行，一般还使用es5的语法书写。在需要使用&lt;code&gt;import&lt;/code&gt;，&lt;code&gt;export&lt;/code&gt;，数组、对象解构等最新特性时就很蛋疼。&lt;/p&gt;
&lt;p&gt;比如在最近的开发中，使用&lt;code&gt;webpack-api-mocker&lt;/code&gt;时，希望拆分不同领域的接口到不同文件，最后通过对象结构的方式聚合在mocker的入口文件中。使用es5的语法就很麻烦。&lt;/p&gt;
&lt;p&gt;实际上，让webpack使用babel解析配置文件分两步即可：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;yarn add -D babel-register&lt;/code&gt;，让webpack能够使用babel-loader转译配置文件&lt;/li&gt;
&lt;li&gt;修改配置文件后缀为，&lt;code&gt;webpack.config.babel.js&lt;/code&gt;，webpack会使用&lt;code&gt;.js&lt;/code&gt;前的字符串作为loader&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;之后就可以愉快地使用es6语法写配置文件了。&lt;/p&gt;
&lt;h2 id=&#34;autoprefixer-remove-webkit-box-orient解决方案&#34;&gt;&lt;a href=&#34;#autoprefixer-remove-webkit-box-orient解决方案&#34; class=&#34;headerlink&#34; title=&#34;autoprefixer remove -webkit-box-orient解决方案&#34;&gt;&lt;/a&gt;autoprefixer remove &lt;code&gt;-webkit-box-orient&lt;/code&gt;解决方案&lt;/h2&gt;&lt;p&gt;autoprefixer是postcss的插件，会根据browser list，删除一些autodated的样式，其中就包括&lt;code&gt;-webkit-box-orient&lt;/code&gt;这个用于hack实现多行省略号的CSS样式。&lt;/p&gt;
&lt;p&gt;几种方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置autoprefixer，&lt;code&gt;&amp;#123;remove: false&amp;#125;&lt;/code&gt;，保留autodated的样式规则&lt;/li&gt;
&lt;li&gt;添加flexbox 2009老旧浏览器到broswer list中&lt;/li&gt;
&lt;li&gt;如下，通过注释临时disable autoprefixer&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/* autoprefixer: ignore next */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-webkit-box-orient: vertical;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="rem" />
        <category term="lottie" />
        <category term="backface-visibility" />
        <category term="egret" />
        <category term="mock" />
        <category term="SSO" />
        <category term="autoprefixer" />
        <updated>2018-10-01T11:18:38.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/08/16/git-workflow/</id>
        <title>git工作流最佳实践</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/08/16/git-workflow/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;参考：&lt;a href=&#34;https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md&#34;&gt;my-git&amp;#x2F;git-workflow-tutorial.md at master · xirong&amp;#x2F;my-git&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;git工作流有多种使用方法，在实际工作中的不良工作习惯，会造成很让人头大的麻烦。下面距离一些常用的工作流。&lt;/p&gt;
&lt;h3 id=&#34;集中式&#34;&gt;&lt;a href=&#34;#集中式&#34; class=&#34;headerlink&#34; title=&#34;集中式&#34;&gt;&lt;/a&gt;集中式&lt;/h3&gt;&lt;p&gt;类似SVN，集中式工作流以中央仓库作为项目所有修改的单点实体，只用到master这一个分支。&lt;strong&gt;开发者提交功能修改到中央库前，采用&lt;code&gt;rebase&lt;/code&gt;的方式“在其基础上添加自己的修改”，得到完美的线性历史；遇到冲突时，通过&lt;code&gt;git status&lt;/code&gt;和&lt;code&gt;git add&lt;/code&gt;合并冲突&lt;/strong&gt;。最后&lt;code&gt;git rebase --continue&lt;/code&gt;即可。遇到困难无法进行下去时，&lt;code&gt;git rebase --abort&lt;/code&gt;就可以撤回到rebase前的状态。&lt;/p&gt;
&lt;p&gt;在这种工作流下，使用&lt;code&gt;rebase&lt;/code&gt;参数比不使用的&lt;code&gt;git pull&lt;/code&gt;好处在于，rebase后的提交记录会少一次累赘的“合并提交”。&lt;/p&gt;
&lt;h3 id=&#34;功能分支&#34;&gt;&lt;a href=&#34;#功能分支&#34; class=&#34;headerlink&#34; title=&#34;功能分支&#34;&gt;&lt;/a&gt;功能分支&lt;/h3&gt;&lt;p&gt;git相较SVN强大在分布式的特征。功能分支工作流主要针对新增功能集成到正式项目。功能分支工作流仍然以中央仓库为基础，但不是直接提交本地历史到各自的本地master分支，而是在开发新功能时&lt;strong&gt;创建新的分支，描述新功能&lt;/strong&gt;。不同的功能分支相互隔离，同时也保证master分支的代码一定没有问题。一旦功能分支push到master，意味着功能与其他开发者共享。&lt;/p&gt;
&lt;p&gt;合并到master分支的过程通过创建pull request进行，在pull request请求中，让其他开发者有机会先去review变更。Pull request被接受后，剩下的工作就和集中式很像了，拉取master分支代码，合并，提交。&lt;/p&gt;
&lt;p&gt;工作流程上：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先checkout功能分支&lt;/li&gt;
&lt;li&gt;做本地开发提交，以及&lt;code&gt;push -u&lt;/code&gt;推送到远端分支（&lt;code&gt;-u&lt;/code&gt;是跟踪远端对应分支的意思）&lt;/li&gt;
&lt;li&gt;完成开发后，提交pull request，请求合并远端功能分支到master，团队其他成员可以进行评论&lt;/li&gt;
&lt;li&gt;在接受前，团队&lt;strong&gt;所有成员&lt;/strong&gt;有需要，可以提交自己的修改到该功能分支，也会显示在pull request里&lt;/li&gt;
&lt;li&gt;在pull-request被接受后，在本地master上可以用pull或者&lt;code&gt;pull -r&lt;/code&gt;的方式合并功能分支，前者更像功能和原来代码的合并，后者更偏向线型的提交历史&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;gitflow&#34;&gt;&lt;a href=&#34;#gitflow&#34; class=&#34;headerlink&#34; title=&#34;gitflow&#34;&gt;&lt;/a&gt;gitflow&lt;/h3&gt;&lt;p&gt;Gitflow工作流通过为功能开发、发布准备和维护分配独立的分支，让发布迭代过程更流畅。相较功能分支更复杂，但也更健壮。仍然用中央仓库作为所有开发者的交互中心。相对于使用仅有的一个master分支，Gitflow工作流使用两个分支来记录项目的历史。master分支存储了正式发布的历史，而&lt;strong&gt;develop分支作为功能的集成分支。&lt;/strong&gt;从而可以在master的&lt;strong&gt;所有提交附上版本号&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;每个新功能位于一个自己的分支，有着和功能分支一样的开发工作流，唯一不同的是，功能分支不是从master分支上拉出新分支，而是使用develop分支作为父分支。每次合并都位于develop分支。&lt;/p&gt;
&lt;p&gt;一旦develop分支上有了做一次发布（或者说快到了既定的发布日）的足够功能，就&lt;strong&gt;从develop分支上checkout一个发布分支release&lt;/strong&gt;。从这个时间点开始之后新的功能不能再加到这个分支上——这个分支只应该做Bug修复、文档生成和其它面向发布任务。在release工作完成后，合并release分支到master，并加上tag。同时，&lt;strong&gt;release上做的修改要合并会develop分支&lt;/strong&gt;。最后删除release分支。&lt;/p&gt;
&lt;p&gt;维护分支或说是热修复（hotfix）分支用于给产品发布版本（production releases）快速生成补丁，这是唯一可以直接从master分支fork出来的分支。修改完成后，修改应该立马合并回master和develop。master也应该为合并生成新的tag。&lt;/p&gt;
&lt;h3 id=&#34;forking&#34;&gt;&lt;a href=&#34;#forking&#34; class=&#34;headerlink&#34; title=&#34;forking&#34;&gt;&lt;/a&gt;forking&lt;/h3&gt;&lt;p&gt;Forking工作流是分布式工作流，可以安全可靠地管理大团队的开发者（developer）和不信任贡献者（contributor）的提交。这种工作流不是使用单个服务端仓库作为『中央』代码基线，而让各个开发者都有一个服务端仓库。这意味着各个代码贡献者有2个Git仓库而不是1个：一个本地私有的，另一个服务端公开的。Forking工作流的一个主要优势是，贡献的代码可以被集成，而不需要所有人都能push代码到仅有的中央仓库中。开发者push到自己的服务端仓库，而只有项目维护者才能push到正式仓库。&lt;/p&gt;
&lt;p&gt;新开发者想要在项目上工作时，不是直接从正式仓库克隆，而是fork正式项目在服务器上创建一个拷贝。这个仓库拷贝作为他个人公开仓库 —— 其它开发者不允许push到这个仓库，&lt;strong&gt;但可以pull下来修改&lt;/strong&gt;。要提交本地修改时，push提交到自己公开仓库中 —— 而不是正式仓库中。 然后，给正式仓库发起一个pull request，让项目维护者知道有更新已经准备好可以集成了。为了集成功能到正式代码库，&lt;strong&gt;维护者pull贡献者的变更到自己的本地仓库中&lt;/strong&gt;，检查变更以确保不会让项目出错， 合并变更到自己本地的master分支， 然后push master分支到服务器的正式仓库中。到此，贡献的提交成为了项目的一部分，其它的开发者应该执行pull操作与正式仓库同步自己本地仓库。&lt;/p&gt;
&lt;p&gt;具体来说，大致有下面几步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开发者fork正式仓库&lt;/li&gt;
&lt;li&gt;开发者clone自己的fork出来的仓库，与之前工作流不一样的是，&lt;strong&gt;Forking工作流需要2个远程别名 —— 一个指向正式仓库，另一个指向开发者自己的服务端仓库。&lt;/strong&gt;，像下面这样  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git remote add upstream https://bitbucket.org/maintainer/repo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;开发者修改都是私有的，如果项目往前走了，可以用git pull获得新的提交&lt;/li&gt;
&lt;li&gt;开发者准备分享新功能时，需要先push到自己的公开仓库中，然后发起pull request通知项目维护者，集成开发者的功能分支&lt;/li&gt;
&lt;li&gt;项目维护者通过GUI岔开pull request或者pull代码到自己的本地仓库，再手动合并。&lt;/li&gt;
&lt;li&gt;开发者通过&lt;code&gt;pull upstream master&lt;/code&gt;的方式拉取项目最新进展&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;pull-request&#34;&gt;&lt;a href=&#34;#pull-request&#34; class=&#34;headerlink&#34; title=&#34;pull request&#34;&gt;&lt;/a&gt;pull request&lt;/h3&gt;&lt;p&gt;pull request用于合并不同分支或不同仓库的代码，并在合并前进行一些讨论和代码微调，在上面不同工作流的情况下具体功能体现也不同。&lt;/p&gt;
&lt;p&gt;上面几种工作流范式只是几种标准的建议，正式的项目版本管理中，可以糅合上面的一些特点。&lt;/p&gt;
</content>
        <category term="git" />
        <category term="工作流" />
        <category term="pull request" />
        <updated>2018-08-16T15:28:34.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/08/16/some-tips-3/</id>
        <title>工作中的遇到的一些小知识 3</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/08/16/some-tips-3/"/>
        <content type="html">&lt;h2 id=&#34;git-case-sensitive&#34;&gt;&lt;a href=&#34;#git-case-sensitive&#34; class=&#34;headerlink&#34; title=&#34;git case sensitive&#34;&gt;&lt;/a&gt;git case sensitive&lt;/h2&gt;&lt;p&gt;git本身是大小写敏感的。但在大小写不敏感的系统里，需要用hack方法记录仅修改文件名大小写的改动。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;mv&lt;/span&gt; file.txt temp.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;mv&lt;/span&gt; temp.txt File.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;Renamed file.txt to File.txt&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;webpack的一些经验&#34;&gt;&lt;a href=&#34;#webpack的一些经验&#34; class=&#34;headerlink&#34; title=&#34;webpack的一些经验&#34;&gt;&lt;/a&gt;webpack的一些经验&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;DefinePlugin&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;允许创建一个在编译时可以配置的全局常量。在构建区分环境的包时很有用。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; webpack.&lt;span class=&#34;title class_&#34;&gt;DefinePlugin&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;PRODUCTION&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;VERSION&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;5fa3b9&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;BROWSER_SUPPORTS_HTML5&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;TWO&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;1+1&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;typeof window&amp;quot;&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;object&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注意：这个插件直接执行文本替换。因此：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果这个值是一个字符串，它会被当作一个代码片段来使用。&lt;/li&gt;
&lt;li&gt;如果这个值不是字符串，它会被转化为字符串(包括函数)。&lt;/li&gt;
&lt;li&gt;如果这个值是一个对象，它所有的 key 会被同样的方式定义。&lt;/li&gt;
&lt;li&gt;如果在一个 key 前面加了 typeof,它会被定义为 typeof 调用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;resolve alias&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建import或require的别名，来确保模块引入变得更简单。例如，一些位于 src&amp;#x2F; 文件夹下的常用模块：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;alias&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    @: path.&lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(__dirname, &lt;span class=&#34;string&#34;&gt;&amp;#x27;src/&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title class_&#34;&gt;Utilities&lt;/span&gt;: path.&lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(__dirname, &lt;span class=&#34;string&#34;&gt;&amp;#x27;src/utilities/&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title class_&#34;&gt;Templates&lt;/span&gt;: path.&lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(__dirname, &lt;span class=&#34;string&#34;&gt;&amp;#x27;src/templates/&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;z-index可能的坑&#34;&gt;&lt;a href=&#34;#z-index可能的坑&#34; class=&#34;headerlink&#34; title=&#34;z-index可能的坑&#34;&gt;&lt;/a&gt;z-index可能的坑&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;使用前提：z-index只能在position属性值为relative或absolute或fixed的元素上有效。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;z-index值只决定同一父元素中的同级子元素的堆叠顺序。父元素的z-index值（如果有）为子元素定义了堆叠顺序（css版堆叠“拼爹”）。向上追溯找不到含有z-index值的父元素的情况下，则可以视为自由的z-index元素，它可以与父元素的同级兄弟定位元素或其他自由的定位元素来比较z-index的值，决定其堆叠顺序。同级元素的z-index值如果相同，则堆叠顺序由元素在文档中的先后位置决定，后出现的会在上面。&lt;/p&gt;
&lt;h2 id=&#34;git-submodule&#34;&gt;&lt;a href=&#34;#git-submodule&#34; class=&#34;headerlink&#34; title=&#34;git submodule&#34;&gt;&lt;/a&gt;git submodule&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;参考：&lt;a href=&#34;https://yihui.name/cn/2017/03/git-submodule/&#34;&gt;GIT 子模块&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最新一个项目里要复用已有的一个git库的代码，具体来说就是要将之前在WebView的内容复刻到PC版完成（这个需求貌似应该还挺常见的）。为了保证代码复用性，选择了&lt;code&gt;git submodule&lt;/code&gt;的方法。这也是我此前从没用过的一个命令。&lt;/p&gt;
&lt;p&gt;简单来说，是一个 GIT 仓库下面某个文件夹的来源可以跟本库的来源不同，这个文件夹连接着别的库，由别的库负责按本控制和管理。是不是和npm包管理的形式比较像。子模块可以手动添加，也可以在克隆一个主库的时候就直接实体化。具体来说，有四种情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;克隆库的时候要初始化子模块 &amp;#x3D;&amp;gt; 加上&lt;code&gt;--recursive&lt;/code&gt;参数 &lt;code&gt;git clone --recursive git@github.com:shenlvmeng/trace-maker.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;初始化已有库的子模块 &amp;#x3D;&amp;gt; &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;从子模块的源更新该子模块 &amp;#x3D;&amp;gt; &lt;code&gt;git submodule update --recursive --remote&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;添加一个新的子模块 &amp;#x3D;&amp;gt; &lt;code&gt;git submodule add &amp;lt;git address&amp;gt; &amp;lt;folder address&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;已有有git submodule的库内，&lt;code&gt;.gitmodules&lt;/code&gt;是下面的样子：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[submodule &amp;quot;wheel&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path = wheel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    url = git@github.com:shenlvmeng/wheel.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;npm-install&#34;&gt;&lt;a href=&#34;#npm-install&#34; class=&#34;headerlink&#34; title=&#34;npm install&#34;&gt;&lt;/a&gt;npm install&lt;/h2&gt;&lt;p&gt;npm install后跟的绝不仅仅只是包名，还可以通过ssh、http的形式引入npm包，唯一的要求是有&lt;code&gt;package.json&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install (with no args, &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; package &lt;span class=&#34;built_in&#34;&gt;dir&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install [&amp;lt;@scope&amp;gt;/]&amp;lt;name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install [&amp;lt;@scope&amp;gt;/]&amp;lt;name&amp;gt;@&amp;lt;tag&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install [&amp;lt;@scope&amp;gt;/]&amp;lt;name&amp;gt;@&amp;lt;version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install [&amp;lt;@scope&amp;gt;/]&amp;lt;name&amp;gt;@&amp;lt;version range&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install &amp;lt;git-host&amp;gt;:&amp;lt;git-user&amp;gt;/&amp;lt;repo-name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install &amp;lt;git repo url&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install &amp;lt;tarball file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install &amp;lt;tarball url&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm install &amp;lt;folder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;alias&lt;/span&gt;: npm i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;一个&lt;strong&gt;package&lt;/strong&gt;可以是下面的形式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;包含&lt;code&gt;package.json&lt;/code&gt;的工程文件夹&lt;/li&gt;
&lt;li&gt;gzip过的“1”的压缩包&lt;/li&gt;
&lt;li&gt;指向“2”的url&lt;/li&gt;
&lt;li&gt;发布在npm-registry的&lt;code&gt;&amp;lt;name&amp;gt;@&amp;lt;registry&amp;gt;&lt;/code&gt;字符串&lt;/li&gt;
&lt;li&gt;发布在npm-registry的&lt;code&gt;&amp;lt;name&amp;gt;@&amp;lt;tag&amp;gt;&lt;/code&gt;字符串&lt;/li&gt;
&lt;li&gt;发布在npm-registry的&lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;字符串(最新版本)&lt;/li&gt;
&lt;li&gt;一个指向“1”的合法git地址&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;cleave-js&#34;&gt;&lt;a href=&#34;#cleave-js&#34; class=&#34;headerlink&#34; title=&#34;cleave.js&#34;&gt;&lt;/a&gt;cleave.js&lt;/h2&gt;&lt;p&gt;一个自动格式化输入框的工具，有npm包、script标签等几种引用形式，还有react的使用方式。&lt;/p&gt;
&lt;p&gt;地址：&lt;a href=&#34;https://nosir.github.io/cleave.js/&#34;&gt;Format your &amp;lt;input&amp;#x2F;&amp;gt; content when you are typing&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;object-fit-amp-object-position&#34;&gt;&lt;a href=&#34;#object-fit-amp-object-position&#34; class=&#34;headerlink&#34; title=&#34;object-fit &amp;amp; object-position&#34;&gt;&lt;/a&gt;object-fit &amp;amp; object-position&lt;/h2&gt;&lt;p&gt;这两个CSS属性分别用于指定替换元素在其盒模型内的覆盖大小和对齐方式。使用效果很类似&lt;code&gt;background-size&lt;/code&gt;和&lt;code&gt;background-position&lt;/code&gt;。替换元素即内容不受CSS视觉格式化控制的元素，如image、iframe、video、textarea等。&lt;/p&gt;
&lt;p&gt;这使得本来自己决定模型大小的元素可以受CSS控制决定位置排布和大小。在需要自适应元素大小的场景下很好用，比如用户头像展示等。&lt;/p&gt;
&lt;p&gt;唯一的小小缺憾可能是IE11还不支持这两个属性，以及Edge只支持对&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;使用。&lt;/p&gt;
&lt;h2 id=&#34;移动端触摸默认行为优化&#34;&gt;&lt;a href=&#34;#移动端触摸默认行为优化&#34; class=&#34;headerlink&#34; title=&#34;移动端触摸默认行为优化&#34;&gt;&lt;/a&gt;移动端触摸默认行为优化&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;user-select: none&lt;/code&gt; 禁止用户选择&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-webkit-touch-callout: none&lt;/code&gt; 防止长按contextmenu弹出。类似的还有&lt;code&gt;contextmenu&lt;/code&gt;事件里的&lt;code&gt;e.preventDefault()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-webkit-tap-highlight-color: transparent&lt;/code&gt; 删除可点击元素默认的黑影&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;上传进度条&#34;&gt;&lt;a href=&#34;#上传进度条&#34; class=&#34;headerlink&#34; title=&#34;上传进度条&#34;&gt;&lt;/a&gt;上传进度条&lt;/h2&gt;&lt;p&gt;利用xhr事件的onprogress事件。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;xhr.&lt;span class=&#34;property&#34;&gt;onprogress&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (e.&lt;span class=&#34;property&#34;&gt;lengthComputable&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(e.&lt;span class=&#34;property&#34;&gt;loaded&lt;/span&gt;+  &lt;span class=&#34;string&#34;&gt;&amp;quot; / &amp;quot;&lt;/span&gt; + e.&lt;span class=&#34;property&#34;&gt;total&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xhr.&lt;span class=&#34;property&#34;&gt;onloadstart&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;xhr.&lt;span class=&#34;property&#34;&gt;onloadend&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;不显示滚动条&#34;&gt;&lt;a href=&#34;#不显示滚动条&#34; class=&#34;headerlink&#34; title=&#34;不显示滚动条&#34;&gt;&lt;/a&gt;不显示滚动条&lt;/h2&gt;&lt;p&gt;基于Webkit的浏览器，可以使用CSS的方式隐藏滚动条。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;::-webkit-scrollbar &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attribute&#34;&gt;height&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attribute&#34;&gt;background&lt;/span&gt;: transparent;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;keyup无法prevent-default&#34;&gt;&lt;a href=&#34;#keyup无法prevent-default&#34; class=&#34;headerlink&#34; title=&#34;keyup无法prevent default&#34;&gt;&lt;/a&gt;keyup无法prevent default&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;keyup fires after the default action.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;keydown and keypress are where you can prevent the default.&lt;br&gt;If those aren’t stopped, then the default happens and keyup is fired.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;来源：&lt;a href=&#34;https://stackoverflow.com/questions/16052592/javascript-prevent-default-for-keyup/16052627&#34;&gt;jquery - javascript prevent default for keyup - StackOverflow&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;mixin-in-react&#34;&gt;&lt;a href=&#34;#mixin-in-react&#34; class=&#34;headerlink&#34; title=&#34;mixin in react&#34;&gt;&lt;/a&gt;mixin in react&lt;/h2&gt;&lt;p&gt;版本16之前，可以用mixin特性。16之后使用高阶组件HOC + ES6 class语法实现。&lt;a href=&#34;https://reactjs.org/docs/higher-order-components.html&#34;&gt;参考&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;user-select在Edge浏览器下的适配问题&#34;&gt;&lt;a href=&#34;#user-select在Edge浏览器下的适配问题&#34; class=&#34;headerlink&#34; title=&#34;user-select在Edge浏览器下的适配问题&#34;&gt;&lt;/a&gt;&lt;code&gt;user-select&lt;/code&gt;在Edge浏览器下的适配问题&lt;/h2&gt;&lt;p&gt;设置&lt;code&gt;user-select&lt;/code&gt;为&lt;code&gt;none&lt;/code&gt;在Edge浏览器下会导致input无法输入内容。可以用下面的写法，避免对&lt;code&gt;input&lt;/code&gt;标签应用该属性。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;*&lt;span class=&#34;selector-pseudo&#34;&gt;:not&lt;/span&gt;(&lt;span class=&#34;selector-tag&#34;&gt;input&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  user-select: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;参考：&lt;a href=&#34;https://stackoverflow.com/questions/49614065/cant-type-in-input-field-using-microsoft-edge-and-safari&#34;&gt;html - Can’t type in input field using Microsoft Edge and Safari - StackOverflow&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;浏览器跨tab通信&#34;&gt;&lt;a href=&#34;#浏览器跨tab通信&#34; class=&#34;headerlink&#34; title=&#34;浏览器跨tab通信&#34;&gt;&lt;/a&gt;浏览器跨tab通信&lt;/h2&gt;&lt;p&gt;最近业务遇到了一个需求：同一浏览器上多tab用户信息同步的问题，所有这个域名下的需要强制一样的用户信息，避免困惑。&lt;/p&gt;
&lt;p&gt;跨tab通信主流方案有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;localStorage，利用window的&lt;code&gt;storage&lt;/code&gt;事件，传递信息&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Broadcast_Channel_API&#34;&gt;BroadcastChannel&lt;/a&gt;，新的API，通过&lt;code&gt;postMessage&lt;/code&gt;和&lt;code&gt;onMessage&lt;/code&gt;完成双向通讯&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; bc = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BroadcastChannel&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;test_channel&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bc.&lt;span class=&#34;title function_&#34;&gt;postMessage&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;This is a test message.&amp;#x27;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;/* send */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bc.&lt;span class=&#34;property&#34;&gt;onmessage&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;ev&lt;/span&gt;) &amp;#123; &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(ev); &amp;#125; &lt;span class=&#34;comment&#34;&gt;/* receive */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;后者还未得到广泛支持，需要前者进行polyfill。&lt;/p&gt;
&lt;h2 id=&#34;aos&#34;&gt;&lt;a href=&#34;#aos&#34; class=&#34;headerlink&#34; title=&#34;aos&#34;&gt;&lt;/a&gt;aos&lt;/h2&gt;&lt;p&gt;Animation on scroll。&lt;a href=&#34;https://github.com/michalsnik/aos&#34;&gt;michalsnik&amp;#x2F;aos at master · Animate on scroll library&lt;/a&gt;.元素滚动至中的CSS动画，适合实现官网、落地页等效果。&lt;/p&gt;
&lt;h2 id=&#34;extract-text-webpack-plugin&#34;&gt;&lt;a href=&#34;#extract-text-webpack-plugin&#34; class=&#34;headerlink&#34; title=&#34;extract-text-webpack-plugin&#34;&gt;&lt;/a&gt;extract-text-webpack-plugin&lt;/h2&gt;&lt;p&gt;抽出CSS&amp;#x2F;Less&amp;#x2F;Sass等样式作为单独文件，用于那些需要提前加载样式的页面。详细用法见&lt;a href=&#34;https://github.com/webpack-contrib/extract-text-webpack-plugin&#34;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;坑：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不支持webpack4.x，报内部错误（2018&amp;#x2F;07&amp;#x2F;30） &amp;#x3D;&amp;gt; 使用@next下载最新版&lt;/li&gt;
&lt;li&gt;报错&lt;code&gt;Module build failed: ReferenceError: window is not defined&lt;/code&gt; &amp;#x3D;&amp;gt; style-loader在extract-text-webpack-plugin中只做fallback项使用，见&lt;a href=&#34;https://github.com/webpack-contrib/extract-text-webpack-plugin/issues/503&#34;&gt;issue#503&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;常见调试技巧&#34;&gt;&lt;a href=&#34;#常见调试技巧&#34; class=&#34;headerlink&#34; title=&#34;常见调试技巧&#34;&gt;&lt;/a&gt;常见调试技巧&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;代码中插入debugger可以在该位置触发断点调试&lt;/li&gt;
&lt;li&gt;&lt;code&gt;console.dir&lt;/code&gt;可以打印对象结构，大多数情况和&lt;code&gt;console.log&lt;/code&gt;表现一致，在document等DOM元素上表现不同&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;react组件复用设计思路&#34;&gt;&lt;a href=&#34;#react组件复用设计思路&#34; class=&#34;headerlink&#34; title=&#34;react组件复用设计思路&#34;&gt;&lt;/a&gt;react组件复用设计思路&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;当设计的组件为自闭型时，通过传入数据（&lt;strong&gt;不要传入功能&lt;/strong&gt;）props的方式定制组件&lt;/li&gt;
&lt;li&gt;当设计的组件在有些场景下需要外部传入功能才能完整时，使用继承的方式实现&lt;/li&gt;
&lt;li&gt;在可以拆分出原子组件，&lt;strong&gt;且有此必要的时候&lt;/strong&gt;，使用原子组件拼装业务组件&lt;/li&gt;
&lt;li&gt;HOC优于mixin&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="git" />
        <category term="webpack" />
        <category term="z-index" />
        <category term="git submodule" />
        <category term="object-fit" />
        <category term="object-position" />
        <category term="BroadcastChannel" />
        <category term="extract-text-webpack-plugin" />
        <updated>2018-08-16T15:11:29.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/05/23/some-tips-2/</id>
        <title>工作中的遇到的一些小知识 2</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/05/23/some-tips-2/"/>
        <content type="html">&lt;h2 id=&#34;一个合法检测的Validator&#34;&gt;&lt;a href=&#34;#一个合法检测的Validator&#34; class=&#34;headerlink&#34; title=&#34;一个合法检测的Validator&#34;&gt;&lt;/a&gt;一个合法检测的Validator&lt;/h2&gt;&lt;p&gt;合法检测是在有表单或数据提交时常见的需求，随手撸了一个。由于考虑的业务场景比较复杂，代码也有点臃肿。拓展时，只需要修改上面的提示信息常量和新的test方法即可。也支持自己传入判断函数和message，针对比较复杂的校验情况。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;variable constant_&#34;&gt;TYPE_VALIDATE_MESSAGE&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;isNumber&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;不是一个数字&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;isObject&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;不是一个对象&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;isArray&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;不是一个数组&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;lt&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;数值过大&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;gt&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;数值过小&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;st&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;长度过短&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;ht&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;长度过长&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;notEmpty&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;需要非空&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;len&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;长度不合规范&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;in&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;不在可选范围内&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;reg&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;无法匹配指定模式&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 供validate使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;util.&lt;span class=&#34;property&#34;&gt;test&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;isObject&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;_&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Object&lt;/span&gt;(_) === _,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;isNumber&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;_&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;typeof&lt;/span&gt; _ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;number&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;isArray&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;_&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;isArray&lt;/span&gt;(_),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;notEmpty&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;_&lt;/span&gt; =&amp;gt;&lt;/span&gt; _.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;lt&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;num, limit&lt;/span&gt;) =&amp;gt;&lt;/span&gt; num &amp;lt; limit,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;gt&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;num, limit&lt;/span&gt;) =&amp;gt;&lt;/span&gt; num &amp;gt; limit,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;st&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;_, limit&lt;/span&gt;) =&amp;gt;&lt;/span&gt; _.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; &amp;lt; limit,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;ht&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;_, limit&lt;/span&gt;) =&amp;gt;&lt;/span&gt; _.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; &amp;gt; limit,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;in&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;_, range&lt;/span&gt;) =&amp;gt;&lt;/span&gt; ~range.&lt;span class=&#34;title function_&#34;&gt;indexOf&lt;/span&gt;(_),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;len&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;_, length&lt;/span&gt;) =&amp;gt;&lt;/span&gt; _.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; === length,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;reg&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;_, reg&lt;/span&gt;) =&amp;gt;&lt;/span&gt; reg.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(_)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 数据校验&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@author&lt;/span&gt;: shenlvmeng&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@params&lt;/span&gt; value &amp;#123;any&amp;#125; 校验数值 输入单个数值使用verify校验 输入对象使用verifyMap校验&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@method&lt;/span&gt; verify 校验单个数值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@method&lt;/span&gt; verifyMap 校验对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; &amp;#123;&lt;span class=&#34;type&#34;&gt;Object&lt;/span&gt;&amp;#125; 包含success和message的对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;util.&lt;span class=&#34;property&#34;&gt;validate&lt;/span&gt; = &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;value&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 方便传递到外界修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; message = &amp;#123; &lt;span class=&#34;attr&#34;&gt;content&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;verify&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;val, validators, key&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!&lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;isArray&lt;/span&gt;(validators)) validators = [validators];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; validators.&lt;span class=&#34;title function_&#34;&gt;every&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;v&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; isRight;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (util.&lt;span class=&#34;property&#34;&gt;test&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;isObject&lt;/span&gt;(v)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                isRight = util.&lt;span class=&#34;property&#34;&gt;test&lt;/span&gt;[&lt;span class=&#34;title class_&#34;&gt;Object&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;keys&lt;/span&gt;(v)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]](val, &lt;span class=&#34;title class_&#34;&gt;Object&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;values&lt;/span&gt;(v)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                !isRight &amp;amp;&amp;amp; (message.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;key || val&amp;#125;&lt;/span&gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;TYPE_VALIDATE_MESSAGE[&lt;span class=&#34;built_in&#34;&gt;Object&lt;/span&gt;.keys(v)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]]&amp;#125;&lt;/span&gt;`&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                isRight = util.&lt;span class=&#34;property&#34;&gt;test&lt;/span&gt;[v](val);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                !isRight &amp;amp;&amp;amp; (message.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;key || val&amp;#125;&lt;/span&gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;TYPE_VALIDATE_MESSAGE[v]&amp;#125;&lt;/span&gt;`&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; isRight;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * 单个数值使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * &lt;span class=&#34;doctag&#34;&gt;@params&lt;/span&gt; validators &amp;#123; String|Array|Object &amp;#125; 校验函数 必须是util中已定义的函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * &lt;span class=&#34;doctag&#34;&gt;@params&lt;/span&gt; String 类型时为函数名; Object类型时为函数名和对应入参; Array时为以上的列表 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;verify&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;validators&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;success&lt;/span&gt;: &lt;span class=&#34;title function_&#34;&gt;verify&lt;/span&gt;(value, validators),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;message&lt;/span&gt;: message.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * 校验整个对象时使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * &lt;span class=&#34;doctag&#34;&gt;@params&lt;/span&gt; config &amp;#123; Object &amp;#125; 校验函数 针对Object中每个key的校验&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * &lt;span class=&#34;doctag&#34;&gt;@params&lt;/span&gt; 每个key的value服从verify的格式，当key为function类型时交给调用方自己处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;verifyMap&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;config&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!util.&lt;span class=&#34;property&#34;&gt;test&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;isObject&lt;/span&gt;(value)) &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Error&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Invalid value type. It should be an Object.&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;success&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;Object&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;keys&lt;/span&gt;(config).&lt;span class=&#34;title function_&#34;&gt;every&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;key&lt;/span&gt; =&amp;gt;&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;typeof&lt;/span&gt; config[key] === &lt;span class=&#34;string&#34;&gt;&amp;#x27;function&amp;#x27;&lt;/span&gt; ? config[key](value[key], message)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    : &lt;span class=&#34;title function_&#34;&gt;verify&lt;/span&gt;(value[key], config[key], key))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;message&lt;/span&gt;: message.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;实际应用中发现，&lt;code&gt;verifyMap&lt;/code&gt;方法用的比较多。使用样例如下;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;examine&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; util.&lt;span class=&#34;title function_&#34;&gt;validate&lt;/span&gt;(formData).&lt;span class=&#34;title function_&#34;&gt;verifyMap&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;userName&lt;/span&gt;: [&lt;span class=&#34;string&#34;&gt;&amp;#x27;notEmpty&amp;#x27;&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;st&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; &amp;#125;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;ht&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt; &amp;#125;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;password&lt;/span&gt;: [&lt;span class=&#34;string&#34;&gt;&amp;#x27;notEmpty&amp;#x27;&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;st&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; &amp;#125;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;ht&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt; &amp;#125;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;age&lt;/span&gt;: [&lt;span class=&#34;string&#34;&gt;&amp;#x27;isNumber&amp;#x27;&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;lt&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt; &amp;#125;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;gender&lt;/span&gt;: &amp;#123;&lt;span class=&#34;attr&#34;&gt;in&lt;/span&gt;: [&lt;span class=&#34;string&#34;&gt;&amp;#x27;male&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;female&amp;#x27;&lt;/span&gt;]&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;email&lt;/span&gt;: &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;reg&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;regexp&#34;&gt;/email pattern/&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;isAccepted&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;value, message&lt;/span&gt;) =&amp;gt;&lt;/span&gt; value ? value : (message.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;请接收用户协议&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Linux清理大文件&#34;&gt;&lt;a href=&#34;#Linux清理大文件&#34; class=&#34;headerlink&#34; title=&#34;Linux清理大文件&#34;&gt;&lt;/a&gt;Linux清理大文件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;df -h&lt;/code&gt;查看存储情况&lt;/li&gt;
&lt;li&gt;&lt;code&gt;du -sh * | grep G&lt;/code&gt;查找当前目录下大于1G的大文件，挨个确认删除即可&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;当前页面窗口活动状态检查&#34;&gt;&lt;a href=&#34;#当前页面窗口活动状态检查&#34; class=&#34;headerlink&#34; title=&#34;当前页面窗口活动状态检查&#34;&gt;&lt;/a&gt;当前页面窗口活动状态检查&lt;/h2&gt;&lt;p&gt;利用&lt;code&gt;visibilityChange&lt;/code&gt;API，配合&lt;code&gt;visibilityState&lt;/code&gt;检查窗口状态。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// subscribe to visibility change events&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;visibilitychange&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// fires when user switches tabs, apps, goes to homescreen, etc.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;visibilityState&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;hidden&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;title&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;#x27;Baby, Come Back!&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// fires when app transitions from prerender, user returns to the app / tab.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;visibilityState&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;visible&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;title&lt;/span&gt; = defaultTitle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;IntersectionObserver&#34;&gt;&lt;a href=&#34;#IntersectionObserver&#34; class=&#34;headerlink&#34; title=&#34;IntersectionObserver&#34;&gt;&lt;/a&gt;IntersectionObserver&lt;/h2&gt;&lt;p&gt;监测页面元素和视口的交错关系的DOM API，目前浏览器支持度不高。可以用来方便地实现懒加载和页面无限滚动。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2016/11/intersectionobserver_api.html&#34;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;图种&#34;&gt;&lt;a href=&#34;#图种&#34; class=&#34;headerlink&#34; title=&#34;图种&#34;&gt;&lt;/a&gt;图种&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Windows，&lt;code&gt;copy /b image.jpg+zip.rar output.jpg&lt;/code&gt;，更改输出图片后缀为rar得到压缩包&lt;/li&gt;
&lt;li&gt;Linux，&lt;code&gt;cat image.jpg zip.rar &amp;gt; output.jpg&lt;/code&gt;，同上&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;draggable-with-Vue&#34;&gt;&lt;a href=&#34;#draggable-with-Vue&#34; class=&#34;headerlink&#34; title=&#34;draggable with Vue&#34;&gt;&lt;/a&gt;draggable with Vue&lt;/h2&gt;&lt;p&gt;业务中有拖拽需求，在试用多个轮子后，最终选择了&lt;a href=&#34;https://jexordexan.github.io/vue-slicksort/?selectedKind=Vertical%20sorting&amp;selectedStory=Simple%20list&amp;full=0&amp;addons=1&amp;stories=1&amp;panelRight=0&amp;addonPanel=storybook/actions/actions-panel&#34;&gt;vue-slicksort&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vue Draggable&lt;/li&gt;
&lt;li&gt;Vue Dragula&lt;/li&gt;
&lt;li&gt;Vue slicksort&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GitHub名&lt;/th&gt;
&lt;th&gt;流行度&lt;/th&gt;
&lt;th&gt;依赖&amp;#x2F;原理&lt;/th&gt;
&lt;th&gt;功能完善度&lt;/th&gt;
&lt;th&gt;文档完善度&lt;/th&gt;
&lt;th&gt;使用舒适度&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;vuedraggable&lt;/td&gt;
&lt;td&gt;star数3859，很流行&lt;/td&gt;
&lt;td&gt;依赖sortable.js，后者依赖HTML5的draggable API&lt;/td&gt;
&lt;td&gt;功能丰富强大，有很多别人踩过的坑&lt;/td&gt;
&lt;td&gt;文档比较丰富&lt;/td&gt;
&lt;td&gt;通过组件包裹形式使用 侵入性小 优&lt;/td&gt;
&lt;td&gt;有兼容性问题，Chrome66.0.3359.181 Mac OSX 10.13.1下无法通过拖动换位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vue-dragula&lt;/td&gt;
&lt;td&gt;star数100+，上次更新1年前&lt;/td&gt;
&lt;td&gt;依赖dragula.js&lt;/td&gt;
&lt;td&gt;功能一般&lt;/td&gt;
&lt;td&gt;不完善，几乎都是dragula的API&lt;/td&gt;
&lt;td&gt;通过&lt;code&gt;Vue.use&lt;/code&gt;的形式 + directives的方式引入，侵入式一般&lt;/td&gt;
&lt;td&gt;使用效果不好，实现时没有拖动和移动的动效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vue-slicksort&lt;/td&gt;
&lt;td&gt;star数100+，更新较活跃&lt;/td&gt;
&lt;td&gt;0依赖，不基于HTML5 drag API，支持触摸屏，兼容性好&lt;/td&gt;
&lt;td&gt;功能一般，支持平面拖动&lt;/td&gt;
&lt;td&gt;较完善，有样例、API解释和FAQ&lt;/td&gt;
&lt;td&gt;略糟糕，需要使用mixin的形式，通常意味着额外的组件定义&lt;/td&gt;
&lt;td&gt;展示效果优秀，能满足需求&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;综上，考虑到只有vue-slicksort能满足需求，故选择之。&lt;/p&gt;
</content>
        <category term="validator" />
        <category term="大文件" />
        <category term="visibilityChange" />
        <category term="IntersectionObserver" />
        <category term="图种" />
        <category term="draggable" />
        <updated>2018-05-23T15:12:30.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/04/17/some-tips/</id>
        <title>工作中的遇到的一些小知识</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/04/17/some-tips/"/>
        <content type="html">&lt;p&gt;&lt;em&gt;持续更新…&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;免密ssh步骤&#34;&gt;&lt;a href=&#34;#免密ssh步骤&#34; class=&#34;headerlink&#34; title=&#34;免密ssh步骤&#34;&gt;&lt;/a&gt;免密ssh步骤&lt;/h2&gt;&lt;p&gt;一句命令代替繁琐的ssh远程登录开发机。&lt;/p&gt;
&lt;h3 id=&#34;Step-1：免密&#34;&gt;&lt;a href=&#34;#Step-1：免密&#34; class=&#34;headerlink&#34; title=&#34;Step 1：免密&#34;&gt;&lt;/a&gt;Step 1：免密&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;ssh-keygen生成公钥。&lt;code&gt;ssh-keygen&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;拷贝公钥。&lt;code&gt;ssh-copy-id -i ~/.ssh/id_rsa.pub &amp;lt;your-remote-host&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;免密登录。&lt;code&gt;ssh &amp;lt;your-remote-host&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;Step-2：简化命令&#34;&gt;&lt;a href=&#34;#Step-2：简化命令&#34; class=&#34;headerlink&#34; title=&#34;Step 2：简化命令&#34;&gt;&lt;/a&gt;Step 2：简化命令&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;alias&lt;/code&gt;，比如：&lt;code&gt;alias timetowork=&amp;quot;ssh &amp;lt;your-remote-host&amp;gt;&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;Step-3：get-back-to-work&#34;&gt;&lt;a href=&#34;#Step-3：get-back-to-work&#34; class=&#34;headerlink&#34; title=&#34;Step 3：get back to work&#34;&gt;&lt;/a&gt;Step 3：get back to work&lt;/h3&gt;&lt;p&gt;输入&lt;code&gt;timetowork&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href=&#34;http://www.thegeekstuff.com/2008/11/3-steps-to-perform-ssh-login-without-password-using-ssh-keygen-ssh-copy-id]&#34;&gt;http://www.thegeekstuff.com/2008/11/3-steps-to-perform-ssh-login-without-password-using-ssh-keygen-ssh-copy-id]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[&lt;a href=&#34;http://www.linfo.org/alias.html]&#34;&gt;http://www.linfo.org/alias.html]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fis-receiver&#34;&gt;&lt;a href=&#34;#fis-receiver&#34; class=&#34;headerlink&#34; title=&#34;fis-receiver&#34;&gt;&lt;/a&gt;fis-receiver&lt;/h2&gt;&lt;p&gt;简写为&lt;code&gt;fisrcv&lt;/code&gt;。使用fis进行项目构建时，若需要release到远端开发机，可以通过配置&lt;code&gt;fis-conf.js&lt;/code&gt;里的&lt;code&gt;deploy&lt;/code&gt;项目实现，fis会通过HTTP的方式上传压缩过的代码到远端指定位置，这需要远端有receiver接收上传的文件。&lt;/p&gt;
&lt;p&gt;fis-receiver是在远端接收上传文件的服务端脚本，node、python、PHP等都可以。&lt;code&gt;fisrcv&lt;/code&gt;实际上是使用node服务在远端接收deploy文件的服务端脚本而已。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href=&#34;https://github.com/zhoujq/fis-receiver]&#34;&gt;https://github.com/zhoujq/fis-receiver]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[&lt;a href=&#34;http://fis.baidu.com/fis3/docs/api/dev-plugin.html#Deploy%20%E6%8F%92%E4%BB%B6]&#34;&gt;http://fis.baidu.com/fis3/docs/api/dev-plugin.html#Deploy%20%E6%8F%92%E4%BB%B6]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;webpack-release&#34;&gt;&lt;a href=&#34;#webpack-release&#34; class=&#34;headerlink&#34; title=&#34;webpack-release&#34;&gt;&lt;/a&gt;webpack-release&lt;/h2&gt;&lt;p&gt;等同于webpack版的&lt;code&gt;fis release&lt;/code&gt;，不过原先写在&lt;code&gt;fis-conf.js&lt;/code&gt;中的部署设置，现在写在&lt;code&gt;webpack.config.js&lt;/code&gt;中。&lt;code&gt;receiveUrl&lt;/code&gt;和&lt;code&gt;remotePath&lt;/code&gt;即远端开发机位置。实现上也采用HTTP POST的方式。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href=&#34;https://www.npmjs.com/package/webpack-release]&#34;&gt;https://www.npmjs.com/package/webpack-release]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[&lt;a href=&#34;https://github.com/markate/webpack-release/blob/master/index.js]&#34;&gt;https://github.com/markate/webpack-release/blob/master/index.js]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tmux&#34;&gt;&lt;a href=&#34;#tmux&#34; class=&#34;headerlink&#34; title=&#34;tmux&#34;&gt;&lt;/a&gt;tmux&lt;/h2&gt;&lt;p&gt;tmux是终端复用工具，允许在单个终端下相互隔离地运行多个后台程序。甚至在关闭终端时可以让程序在后台运行。使用&lt;code&gt;tmux attach&lt;/code&gt;和&lt;code&gt;tmux detach&lt;/code&gt;进入和离开各个session。&lt;code&gt;attach&lt;/code&gt;后还可以接&lt;code&gt;-t&lt;/code&gt;指定连接的session。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href=&#34;https://github.com/tmux/tmux/wiki]&#34;&gt;https://github.com/tmux/tmux/wiki]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;HtmlWebpackPlugin&#34;&gt;&lt;a href=&#34;#HtmlWebpackPlugin&#34; class=&#34;headerlink&#34; title=&#34;HtmlWebpackPlugin&#34;&gt;&lt;/a&gt;HtmlWebpackPlugin&lt;/h2&gt;&lt;p&gt;把html和js或css文件对应组织起来，可以指定&lt;code&gt;filename&lt;/code&gt;，&lt;code&gt;template&lt;/code&gt;，&lt;code&gt;chunks&lt;/code&gt;等。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[&lt;a href=&#34;https://github.com/jantimon/html-webpack-plugin]&#34;&gt;https://github.com/jantimon/html-webpack-plugin]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;encodeURI和encodeURIComponent&#34;&gt;&lt;a href=&#34;#encodeURI和encodeURIComponent&#34; class=&#34;headerlink&#34; title=&#34;encodeURI和encodeURIComponent&#34;&gt;&lt;/a&gt;encodeURI和encodeURIComponent&lt;/h2&gt;&lt;p&gt;前者用于对整段URI转码，后者用于对URI中被分割符隔开的部分进行边编码。因此，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;encodeURI&lt;/code&gt;会忽略允许出现在URI的符号，包括特殊符号。对空格、中文等进行转码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;encodeURIComponent&lt;/code&gt;也会转码特殊符号，如&amp;#x2F;，$，@，.等&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;origami&#34;&gt;&lt;a href=&#34;#origami&#34; class=&#34;headerlink&#34; title=&#34;origami&#34;&gt;&lt;/a&gt;origami&lt;/h2&gt;&lt;p&gt;origami是sublime中的一个拆分窗口的插件，用快捷键可以像在vim中一样方便地创建和转移到各个窗口编码。通过command + K开启快捷键。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;+up&amp;#x2F;down&amp;#x2F;left&amp;#x2F;right 转移到其他窗口&lt;/li&gt;
&lt;li&gt;+command+up&amp;#x2F;down&amp;#x2F;left&amp;#x2F;right 在该方向上打开新的工作窗口&lt;/li&gt;
&lt;li&gt;+shift+command+up&amp;#x2F;down&amp;#x2F;left&amp;#x2F;right 销毁该方向上的新窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nrm与n&#34;&gt;&lt;a href=&#34;#nrm与n&#34; class=&#34;headerlink&#34; title=&#34;nrm与n&#34;&gt;&lt;/a&gt;nrm与n&lt;/h2&gt;&lt;p&gt;npm registry管理工具nrm，能够查看和切换当前使用的registry，在切换和查看registry时非常有用。常用命令:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nrm ls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nrm use&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nrm help&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nrm home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nrm add/delete&lt;/code&gt; 增加和删除registry&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nrm test&lt;/code&gt; 测速&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/n&#34;&gt;n&lt;/a&gt;是类似nvm的node.js版本管理工具。&lt;/p&gt;
&lt;h2 id=&#34;Promise-then的链式调用&#34;&gt;&lt;a href=&#34;#Promise-then的链式调用&#34; class=&#34;headerlink&#34; title=&#34;Promise then的链式调用&#34;&gt;&lt;/a&gt;Promise then的链式调用&lt;/h2&gt;&lt;p&gt;&lt;code&gt;then()&lt;/code&gt;方法返回一个Promise 。它最多需要有两个参数：Promise的成功和失败情况的回调函数。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;then&lt;/code&gt;方法会返回一个Promise，它的行为与then中指定的回调函数返回值有关：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果then中的回调函数&lt;strong&gt;返回一个值&lt;/strong&gt;，那么then返回的Promise将会成为接受状态（即使原Promise始Rejected状态），并且将返回的值作为接受状态的回调函数的参数值。&lt;/li&gt;
&lt;li&gt;如果then中的回调函数&lt;strong&gt;抛出一个错误&lt;/strong&gt;，那么then返回的Promise将会成为拒绝状态，并且将抛出的错误作为拒绝状态的回调函数的参数值。&lt;/li&gt;
&lt;li&gt;如果then中的回调函数返回一个已经是接受状态的Promise，那么then返回的Promise也会成为接受状态，并且将那个Promise的接受状态的回调函数的参数值作为该被返回的Promise的接受状态回调函数的参数值。&lt;/li&gt;
&lt;li&gt;如果then中的回调函数返回一个已经是拒绝状态的Promise，那么then返回的Promise也会成为拒绝状态，并且将那个Promise的拒绝状态的回调函数的参数值作为该被返回的Promise的拒绝状态回调函数的参数值。&lt;/li&gt;
&lt;li&gt;如果then中的回调函数返回一个未定状态（pending）的Promise，那么then返回Promise的状态也是未定的，并且它的终态与那个Promise的终态相同；同时，它变为终态时调用的回调函数参数与那个Promise变为终态时的回调函数的参数是相同的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面是几个官网上的例子:&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;Promise&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 1. 接收 &amp;quot;foo&amp;quot; 并与 &amp;quot;bar&amp;quot; 拼接，并将其结果做为下一个resolve返回。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;string&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Promise&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;resolve, reject&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        string += &lt;span class=&#34;string&#34;&gt;&amp;#x27;bar&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(string);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 2. 接收 &amp;quot;foobar&amp;quot;, 放入一个异步函数中处理该字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 并将其打印到控制台中, 但是不将处理后的字符串返回到下一个。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;string&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      string += &lt;span class=&#34;string&#34;&gt;&amp;#x27;baz&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(string);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; string;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 3. 打印本节中代码将如何运行的帮助消息，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 字符串实际上是由上一个回调函数之前的那块异步代码处理的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;string&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Last Then:  oops... didn&amp;#x27;t bother to instantiate and return &amp;quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;a promise in the prior then so the sequence may be a bit &amp;quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;surprising&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 注意 `string` 这时不会存在 &amp;#x27;baz&amp;#x27;。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 因为这是发生在我们通过setTimeout模拟的异步函数中。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(string);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title class_&#34;&gt;Promise&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;( &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 使 .then() 返回一个 rejected promise&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;Oh no!&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .&lt;span class=&#34;title function_&#34;&gt;catch&lt;/span&gt;( &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;reason&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;error&lt;/span&gt;( &lt;span class=&#34;string&#34;&gt;&amp;#x27;onRejected function called: &amp;#x27;&lt;/span&gt;, reason );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;( &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;( &lt;span class=&#34;string&#34;&gt;&amp;quot;I am always called even if the prior then&amp;#x27;s promise rejects&amp;quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;SOLID原则&#34;&gt;&lt;a href=&#34;#SOLID原则&#34; class=&#34;headerlink&#34; title=&#34;SOLID原则&#34;&gt;&lt;/a&gt;SOLID原则&lt;/h2&gt;&lt;p&gt;程序设计领域，尤其是面向对象编程的优秀实践里，有着一些实现原则，如SOLID（单一功能、开闭原则、里氏替换、接口隔离、依赖翻转）。这些设计模式原则可以有助于编写可维护、可拓展、清晰可读的代码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;S，Single Responsibility Principle，每个类都应有&lt;strong&gt;单一&lt;/strong&gt;的功能，且被类封装起来。&lt;/li&gt;
&lt;li&gt;O，Open-Closed Principle，对象（类、接口、函数等）对于拓展是开放的，对于修改是封闭的。即易拓展、保证可靠。&lt;/li&gt;
&lt;li&gt;L，Liskov Substitution Principle，子类可以在不改变正确性的情况下替换父类&lt;/li&gt;
&lt;li&gt;I，Interface-segregation Principle，多个特定功能的接口好于单个宽泛功能的接口&lt;/li&gt;
&lt;li&gt;D，Dependency Inversion Principle，方法应该依赖于一个抽象（接口）而不是一个实例（类）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;axios-mock-adpter&#34;&gt;&lt;a href=&#34;#axios-mock-adpter&#34; class=&#34;headerlink&#34; title=&#34;axios-mock-adpter&#34;&gt;&lt;/a&gt;axios-mock-adpter&lt;/h2&gt;&lt;p&gt;使用axios获取数据时，通过&lt;code&gt;axios-mock-adapter&lt;/code&gt;mock数据。MockAdapter可以绑定在axios上，拦截通过绑定的axios发送的请求。使用方式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; axios = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;axios&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MockAdapter&lt;/span&gt; = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;axios-mock-adapter&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// This sets the mock adapter on the default instance&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; mock = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MockAdapter&lt;/span&gt;(axios);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Mock any GET request to /users&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// arguments for reply are (status, data, headers)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mock.&lt;span class=&#34;title function_&#34;&gt;onGet&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/users&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;reply&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;users&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;John Smith&amp;#x27;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;axios.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/users&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;response&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(response.&lt;span class=&#34;property&#34;&gt;data&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;另外，可以用&lt;code&gt;mock.restore()&lt;/code&gt;撤销所有mocking行为，或通过&lt;code&gt;mock.reset()&lt;/code&gt;除去所有mocking的handler。通过&lt;code&gt;mock.on&amp;lt;方法名&amp;gt;&lt;/code&gt;还可以链式调用其他方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;onAny()&lt;/code&gt; 绑定任何方法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;networkError()&lt;/code&gt; 返回网络错误&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timeout()&lt;/code&gt; 返回请求超时&lt;/li&gt;
&lt;li&gt;&lt;code&gt;passThrough()&lt;/code&gt; 跳过mocking直接请求&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在reply中可以使用函数进行更复杂的操作：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; normalAxios = axios.&lt;span class=&#34;title function_&#34;&gt;create&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; mockAxios = axios.&lt;span class=&#34;title function_&#34;&gt;create&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; mock = &lt;span class=&#34;title class_&#34;&gt;MockAdapter&lt;/span&gt;(mockAxios);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mock&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .&lt;span class=&#34;title function_&#34;&gt;onGet&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/orders&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .&lt;span class=&#34;title function_&#34;&gt;reply&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Promise&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;all&lt;/span&gt;([&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      normalAxios&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/api/v1/orders&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;resp&lt;/span&gt; =&amp;gt;&lt;/span&gt; resp.&lt;span class=&#34;property&#34;&gt;data&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      normalAxios&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/api/v2/orders&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;resp&lt;/span&gt; =&amp;gt;&lt;/span&gt; resp.&lt;span class=&#34;property&#34;&gt;data&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;-1&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;content&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;extra row 1&amp;#x27;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;-2&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;content&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;extra row 2&amp;#x27;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ]).&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;sources&lt;/span&gt; =&amp;gt;&lt;/span&gt; [&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, sources.&lt;span class=&#34;title function_&#34;&gt;reduce&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;agg, source&lt;/span&gt;) =&amp;gt;&lt;/span&gt; agg.&lt;span class=&#34;title function_&#34;&gt;concat&lt;/span&gt;(source))]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;移动端Charles调试经验&#34;&gt;&lt;a href=&#34;#移动端Charles调试经验&#34; class=&#34;headerlink&#34; title=&#34;移动端Charles调试经验&#34;&gt;&lt;/a&gt;移动端Charles调试经验&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;设置http代理为8888端口&lt;/li&gt;
&lt;li&gt;设置SSL代理，填写对应的域名，设置端口为443，安装根证书&lt;/li&gt;
&lt;li&gt;手机打开无线设置，设置代理IP和端口8888&lt;/li&gt;
&lt;li&gt;打开&lt;a href=&#34;http://chls.pro/ssl&#34;&gt;chls.pro&amp;#x2F;ssl&lt;/a&gt;，安装根证书并信任&lt;/li&gt;
&lt;li&gt;使用Map remote访问开发机位置&lt;/li&gt;
&lt;li&gt;使用Map local可以劫持WebView中请求的JS等资源到本地，通过alert的方式打印调试信息，进行临时的线上Webview环境debug&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="mock" />
        <category term="ssh" />
        <category term="fis-receiver" />
        <category term="tmux" />
        <category term="origami" />
        <category term="promise" />
        <category term="encodeURI" />
        <category term="encodeURIComponent" />
        <category term="axios" />
        <category term="charles" />
        <updated>2018-04-17T15:48:27.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/04/14/image-render-md/</id>
        <title>图片生成有感</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/04/14/image-render-md/"/>
        <content type="html">&lt;p&gt;最近在业务中遇到使用生成图片的需求，图片只需要展示数据，没有计算密集型工作。后端生成的图片字体太单一，工作就交给了前端。从0开始作图做像素级的操作自然是不现实的，有幸的是，HTML本身就是一个很不错的做UI的语言，有CSS的支持。再借助HTML to canvas或是SVG的库，可以完成想要的需求。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;实际上，后端大多数也是通过起chrome内核，绘制DOM节点生成图片的&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;需求&#34;&gt;&lt;a href=&#34;#需求&#34; class=&#34;headerlink&#34; title=&#34;需求&#34;&gt;&lt;/a&gt;需求&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;按照指定格式生成图片&lt;/li&gt;
&lt;li&gt;保证格式正确清晰度高&lt;/li&gt;
&lt;li&gt;生成过程用户无感知&lt;/li&gt;
&lt;li&gt;对图片格式没有明确要求&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;解决方案&#34;&gt;&lt;a href=&#34;#解决方案&#34; class=&#34;headerlink&#34; title=&#34;解决方案&#34;&gt;&lt;/a&gt;解决方案&lt;/h3&gt;&lt;p&gt;HTML to image有两种方案比较流行，一个是&lt;a href=&#34;https://github.com/niklasvh/html2canvas&#34;&gt;html2canvas&lt;/a&gt;，一个是&lt;a href=&#34;https://github.com/tsayen/dom-to-image&#34;&gt;dom-to-image&lt;/a&gt;。它们的设计初衷其实都是将&lt;strong&gt;已有&lt;/strong&gt;DOM结构转成图片类型。对比来看&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;流行度上，html2canvas流行度更高，资料更好找，但更新缓慢&lt;/li&gt;
&lt;li&gt;格式支持上，dom-to-image可以将图转成SVG等更多格式，html2canvas只能输出canvas，需要用户自行处理&lt;/li&gt;
&lt;li&gt;清晰度上，dom-to-image可以导出SVG，html2canvas则需要hack的方式（设置更大的canvas绘制再等比缩放）&lt;/li&gt;
&lt;li&gt;实现原理上，都是通过遍历DOM树，读取格式化数据，dom-to-image通过浏览器解析CSS语法，因此支持度更高；html2canvas则&lt;a href=&#34;https://github.com/niklasvh/html2canvas/tree/master/src/parsing&#34;&gt;自己实现了CSS解析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;渲染图片的HTML模板在通常情况下，不应该展示给用户。即生成过程短暂停留的DOM需要用户不可见。不可见的方式大致有下面几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;display: none&lt;/code&gt;，这种情况，两个方案度都输出空白图片&lt;/li&gt;
&lt;li&gt;&lt;code&gt;visibility: hidden&lt;/code&gt;，在输出图片时，DOM结构会短暂闪现，两种方案都输出空白图片&lt;/li&gt;
&lt;li&gt;将DOM移出视口，html2canvas可以正确输出图片，dom-to-image不行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本场景下生成的图片需要上传，并最后展示给C端，没有对SVG的需求。测试来看，两者的输出结果清晰度类似，且html2canvas输出格式还原度更高。综合考虑，选择html2canvas。&lt;/p&gt;
&lt;p&gt;在其他场景下，如支持SVG、需要高清截图、需要导出更多图片时，可以考虑使用dom-to-image。两者的API实际上非常类似。&lt;/p&gt;
&lt;h3 id=&#34;容器组件&#34;&gt;&lt;a href=&#34;#容器组件&#34; class=&#34;headerlink&#34; title=&#34;容器组件&#34;&gt;&lt;/a&gt;容器组件&lt;/h3&gt;&lt;p&gt;考虑到未来仍可能存在的前端图片渲染需求，将相关逻辑内聚成一个组件，同时开发接口给外部使用。&lt;/p&gt;
&lt;p&gt;组件需要输入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hide&lt;/code&gt;，因为渲染过程是&lt;code&gt;componentDidMount&lt;/code&gt;阶段完成的，在每次渲染完成后要在父组件手动卸载该组件，这部分需要在&lt;code&gt;hide&lt;/code&gt;中实现&lt;/li&gt;
&lt;li&gt;&lt;code&gt;success&lt;/code&gt;，可选的成功回调，入参是生成的canvas，&lt;code&gt;hide&lt;/code&gt;作为可选第二个入参，可以异步卸载组件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;#123;children&amp;#125;&lt;/code&gt;，无状态的函数组件，只负责图片的HTML模板&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * @author: shenlvmeng&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * @desc: 渲染图片的容器组件，加载时根据内部DOM生成图片，输出data64编码到回调&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * @props: hide    &amp;#123;Function&amp;#125; required 图片生成完成后需要在父组件执行的卸载该组件操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * @props: success &amp;#123;Function&amp;#125; 成功回调&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;**/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;React&lt;/span&gt;, &amp;#123; &lt;span class=&#34;title class_&#34;&gt;Component&lt;/span&gt; &amp;#125; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;react&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;PropTypes&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;prop-types&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; html2canvas &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;html2canvas&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;GeneratedImage&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title class_ inherited__&#34;&gt;Component&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; defaultProps = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;hide&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;success&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;canvas&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;appendChild&lt;/span&gt;(canvas);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; propTypes = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;hide&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;PropTypes&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;func&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;success&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;PropTypes&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;func&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;componentDidMount&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;html2canvas&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;html2canvas&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;canvas&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 可以将hide操作作为success的回调使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;success&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; &amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;success&lt;/span&gt;(canvas, &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;hide&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;success&lt;/span&gt;(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;hide&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .&lt;span class=&#34;title function_&#34;&gt;catch&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;error&lt;/span&gt;(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;props&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;hide&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;render&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;html2canvas&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;style&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;position:&lt;/span&gt; &amp;#x27;&lt;span class=&#34;attr&#34;&gt;fixed&lt;/span&gt;&amp;#x27;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                    &lt;span class=&#34;attr&#34;&gt;left:&lt;/span&gt; &amp;#x27;&lt;span class=&#34;attr&#34;&gt;-9999px&lt;/span&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                &amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;            &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;                &amp;#123;this.props.children&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;            &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;GeneratedImage&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;使用时，像如下这样，在对应的时机展示组件即可：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123; &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;state&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;isGenerating&lt;/span&gt; ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;GeneratedImage&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;hide&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;#123;()&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;this.setState(&amp;#123; isGenerating: false &amp;#125;)&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;        success=&amp;#123;(canvas) =&amp;gt; &amp;#123; console.log(canvas.toDataURL()); &amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;    &amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;        &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;Image&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;GeneratedImage&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    : &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;已知缺陷&#34;&gt;&lt;a href=&#34;#已知缺陷&#34; class=&#34;headerlink&#34; title=&#34;已知缺陷&#34;&gt;&lt;/a&gt;已知缺陷&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;对部分CSS属性支持度有限，如&lt;code&gt;box-shadow&lt;/code&gt;，&lt;code&gt;-webkit-line-clamp&lt;/code&gt;，&lt;code&gt;background-position&lt;/code&gt;等&lt;/li&gt;
&lt;li&gt;使用时需要额外的卸载操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;后端&#34;&gt;&lt;a href=&#34;#后端&#34; class=&#34;headerlink&#34; title=&#34;后端&#34;&gt;&lt;/a&gt;后端&lt;/h2&gt;&lt;p&gt;生成图片的业务需求大多数是用内容填充的，因此使用浏览器渲染页面再截图是比较直观的生成方式（qrcode这种简单的图片需求另说）。在使用python的场景下，可以用&lt;a href=&#34;http://selenium-python.readthedocs.io/&#34;&gt;selenium&lt;/a&gt;生成，代码非常简单。&lt;/p&gt;
&lt;p&gt;首先，&lt;code&gt;pip install selenium&lt;/code&gt;，如果是python3，就&lt;code&gt;pip3 install selenium&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后，安装&lt;a href=&#34;http://npm.taobao.org/mirrors/chromedriver/&#34;&gt;chromedriver&lt;/a&gt;。使用headless模式打开chrome，并根据图片位置和大小截图即可。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; selenium &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; webdriver&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; PIL &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Image&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; io &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; BytesIO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; os &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; path&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;screenshot&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;path&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# Headless chrome&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    DRIVER = &lt;span class=&#34;string&#34;&gt;&amp;#x27;chromedriver&amp;#x27;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# add this to your $PATH&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    chrome_options = webdriver.ChromeOptions()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    chrome_options.add_argument(&lt;span class=&#34;string&#34;&gt;&amp;#x27;--headless&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    chrome_options.add_argument(&lt;span class=&#34;string&#34;&gt;&amp;#x27;--disable-gpu&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# get screenshot&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    browser = webdriver.Chrome(chrome_options=chrome_options, executable_path=DRIVER)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    browser.get(path)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ele = browser.find_element_by_id(&lt;span class=&#34;string&#34;&gt;&amp;#x27;demo&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    location = ele.location&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    size = ele.size&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    image = browser.get_screenshot_as_png()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    browser.quit()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# crop image&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    im  = Image.&lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(BytesIO(image))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    left = location[&lt;span class=&#34;string&#34;&gt;&amp;#x27;x&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    top = location[&lt;span class=&#34;string&#34;&gt;&amp;#x27;y&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    right = location[&lt;span class=&#34;string&#34;&gt;&amp;#x27;x&amp;#x27;&lt;/span&gt;] + size[&lt;span class=&#34;string&#34;&gt;&amp;#x27;width&amp;#x27;&lt;/span&gt;] * &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bottom = location[&lt;span class=&#34;string&#34;&gt;&amp;#x27;y&amp;#x27;&lt;/span&gt;] + size[&lt;span class=&#34;string&#34;&gt;&amp;#x27;height&amp;#x27;&lt;/span&gt;] * &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    im = im.crop((left, top, right, bottom))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    im.save(&lt;span class=&#34;string&#34;&gt;&amp;#x27;screenshot.png&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (__name__ == &lt;span class=&#34;string&#34;&gt;&amp;#x27;__main__&amp;#x27;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    curr_path = path.dirname(path.realpath(__file__))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    screenshot(&lt;span class=&#34;string&#34;&gt;&amp;#x27;file://&amp;#x27;&lt;/span&gt; + curr_path + &lt;span class=&#34;string&#34;&gt;&amp;#x27;/demo.html&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这样就可以获取到示例页面的截图。&lt;/p&gt;
</content>
        <category term="图片渲染" />
        <category term="html2canvas" />
        <category term="dom-to-image" />
        <updated>2018-04-14T03:20:07.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/03/15/gallery-backend-with-egg-js/</id>
        <title>Photo Gallery中出现的常见需求解决方案</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/03/15/gallery-backend-with-egg-js/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;https://s2.ax1x.com/2019/04/07/Ahbr1x.png&#34; alt=&#34;Ahbr1x.png&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用egg.js开发PhotoGallery管理后台过程中，遇到了一些典型需求，将处理过程整理如下，方面后面开发类似应用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;用户管理&#34;&gt;&lt;a href=&#34;#用户管理&#34; class=&#34;headerlink&#34; title=&#34;用户管理&#34;&gt;&lt;/a&gt;用户管理&lt;/h2&gt;&lt;h3 id=&#34;数据库&#34;&gt;&lt;a href=&#34;#数据库&#34; class=&#34;headerlink&#34; title=&#34;数据库&#34;&gt;&lt;/a&gt;数据库&lt;/h3&gt;&lt;p&gt;新建&lt;code&gt;User&lt;/code&gt;表，填充表结构，至少包含&lt;code&gt;账号&lt;/code&gt;和&lt;code&gt;密码&lt;/code&gt;两个字段。&lt;/p&gt;
&lt;h3 id=&#34;Controller&#34;&gt;&lt;a href=&#34;#Controller&#34; class=&#34;headerlink&#34; title=&#34;Controller&#34;&gt;&lt;/a&gt;Controller&lt;/h3&gt;&lt;p&gt;（Ajax）登录页面，对应&lt;code&gt;login&lt;/code&gt;行为，处理登录请求，包括以下工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调用服务匹配用户名密码&lt;/li&gt;
&lt;li&gt;&lt;em&gt;（可选）&lt;/em&gt; 检查用户类型&lt;/li&gt;
&lt;li&gt;密码需要加密存储&lt;/li&gt;
&lt;li&gt;储存用户信息到session&lt;/li&gt;
&lt;li&gt;返回提示信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（Ajax）注册页面，对应&lt;code&gt;register&lt;/code&gt;行为，处理注册请求，包括以下工作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;寻找重名等逻辑&lt;/li&gt;
&lt;li&gt;调用服务创建用户&lt;/li&gt;
&lt;li&gt;密码需要加密存储&lt;/li&gt;
&lt;li&gt;储存用户信息到session&lt;/li&gt;
&lt;li&gt;返回提示信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Service&#34;&gt;&lt;a href=&#34;#Service&#34; class=&#34;headerlink&#34; title=&#34;Service&#34;&gt;&lt;/a&gt;Service&lt;/h3&gt;&lt;p&gt;用户管理，和数据库连接。对应到controller中大多数是POST请求。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增用户&lt;/li&gt;
&lt;li&gt;获取用户&lt;/li&gt;
&lt;li&gt;用户资料修改&lt;/li&gt;
&lt;li&gt;用户删除（使用用户状态更新实现）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;Router与中间件&#34;&gt;&lt;a href=&#34;#Router与中间件&#34; class=&#34;headerlink&#34; title=&#34;Router与中间件&#34;&gt;&lt;/a&gt;Router与中间件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;添加中间件检查是否有session，否则同一跳转&lt;code&gt;/login&lt;/code&gt;（业务逻辑）&lt;/li&gt;
&lt;li&gt;&lt;em&gt;（可选）&lt;/em&gt; Router上使用重定向让path更友好&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一定不要瞎用301状态码&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;页面js&#34;&gt;&lt;a href=&#34;#页面js&#34; class=&#34;headerlink&#34; title=&#34;页面js&#34;&gt;&lt;/a&gt;页面js&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用Ajax或jsonp请求&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;无限滚动&#34;&gt;&lt;a href=&#34;#无限滚动&#34; class=&#34;headerlink&#34; title=&#34;无限滚动&#34;&gt;&lt;/a&gt;无限滚动&lt;/h2&gt;&lt;h3 id=&#34;HTML部分&#34;&gt;&lt;a href=&#34;#HTML部分&#34; class=&#34;headerlink&#34; title=&#34;HTML部分&#34;&gt;&lt;/a&gt;HTML部分&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;提前加载所有图片（后续API动态请求，DOM插入时间损耗太大）。&lt;/li&gt;
&lt;li&gt;前若干张图片（假设为K）正常展示&lt;/li&gt;
&lt;li&gt;后若干张容器使用&lt;code&gt;display:none&lt;/code&gt;或&lt;code&gt;height: 0&lt;/code&gt;等手段避免展示&lt;/li&gt;
&lt;li&gt;后若干张图片使用&lt;code&gt;data-src&lt;/code&gt;存储真实路径，避免提前加载，影响首屏时间&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;JS部分&#34;&gt;&lt;a href=&#34;#JS部分&#34; class=&#34;headerlink&#34; title=&#34;JS部分&#34;&gt;&lt;/a&gt;JS部分&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;设置参数保存当前展示图片的数目&lt;/li&gt;
&lt;li&gt;判断是否滚动到底端&lt;/li&gt;
&lt;li&gt;上述情况下增加展示的图片数目，删除避免展示的&lt;code&gt;class&lt;/code&gt;，替换真正的&lt;code&gt;src&lt;/code&gt;加载图片&lt;/li&gt;
&lt;li&gt;使用节流，保证弱网络环境下，没有连续的过多图片加载，使用&lt;code&gt;flag&lt;/code&gt;控制程序触发，在最后一张图片加载完成后，更新&lt;code&gt;flag&lt;/code&gt;布尔值，开放权限&lt;/li&gt;
&lt;li&gt;&lt;em&gt;（可选）&lt;/em&gt;，网络环境很差时，可以考虑&lt;code&gt;setTimeout&lt;/code&gt;兜底，但不推荐&lt;/li&gt;
&lt;li&gt;注意在所有图片都加载完成时，停止监听&lt;code&gt;scroll&lt;/code&gt;事件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; figure = $($(&lt;span class=&#34;string&#34;&gt;&amp;#x27;#figures&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;children&lt;/span&gt;()[index]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!figure) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;off&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;scroll&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;文件上传&#34;&gt;&lt;a href=&#34;#文件上传&#34; class=&#34;headerlink&#34; title=&#34;文件上传&#34;&gt;&lt;/a&gt;文件上传&lt;/h2&gt;&lt;h3 id=&#34;HTML部分-1&#34;&gt;&lt;a href=&#34;#HTML部分-1&#34; class=&#34;headerlink&#34; title=&#34;HTML部分&#34;&gt;&lt;/a&gt;HTML部分&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用包裹&lt;code&gt;&amp;lt;input type=&amp;#39;file&amp;#39;&amp;gt;&lt;/code&gt;的&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;input type=&amp;#39;file&amp;#39;&amp;gt;&lt;/code&gt;使用&lt;code&gt;display: none&lt;/code&gt;，通过更友好的方式trigger它的点击&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;注意：&lt;code&gt;type=file&lt;/code&gt;的&lt;code&gt;input&lt;/code&gt;标签一定要有&lt;code&gt;name&lt;/code&gt;属性，否则不会被包裹在&lt;code&gt;FormData&lt;/code&gt;中。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;upload&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;upload&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;+ 点击上传&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;upload-form&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;enctype&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;multipart/form-data&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;file&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;accept&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;image/*&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;files&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;upload-file&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;multiple&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;form&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;JS部分-1&#34;&gt;&lt;a href=&#34;#JS部分-1&#34; class=&#34;headerlink&#34; title=&#34;JS部分&#34;&gt;&lt;/a&gt;JS部分&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用Ajax提交替换form表单替换，来实现更复杂的回调和逻辑控制&lt;/li&gt;
&lt;li&gt;通过构造&lt;code&gt;FormData&lt;/code&gt;，提交域内文件&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$(&lt;span class=&#34;string&#34;&gt;&amp;#x27;#upload&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;on&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;click&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  $(&lt;span class=&#34;string&#34;&gt;&amp;#x27;#upload-file&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;trigger&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;click&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$(&lt;span class=&#34;string&#34;&gt;&amp;#x27;#upload-file&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;on&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;change&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  $.&lt;span class=&#34;title function_&#34;&gt;ajax&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;url&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;/gallery/upload&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;POST&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;cache&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;data&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;FormData&lt;/span&gt;($(&lt;span class=&#34;string&#34;&gt;&amp;#x27;#upload-form&amp;#x27;&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;processData&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;contentType&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;success&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;data&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;后台路由&#34;&gt;&lt;a href=&#34;#后台路由&#34; class=&#34;headerlink&#34; title=&#34;后台路由&#34;&gt;&lt;/a&gt;后台路由&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;配置Ajax和jsonp安全检查&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;控制器端&#34;&gt;&lt;a href=&#34;#控制器端&#34; class=&#34;headerlink&#34; title=&#34;控制器端&#34;&gt;&lt;/a&gt;控制器端&lt;/h3&gt;&lt;p&gt;使用插件，参考&lt;a href=&#34;https://github.com/eggjs/examples/blob/master/multipart/app/controller/multiple.js&#34;&gt;examples&amp;#x2F;multiple.js at master · eggjs&amp;#x2F;examples&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;HTML模板&#34;&gt;&lt;a href=&#34;#HTML模板&#34; class=&#34;headerlink&#34; title=&#34;HTML模板&#34;&gt;&lt;/a&gt;HTML模板&lt;/h2&gt;&lt;p&gt;使用ES6的模板字符串。&lt;/p&gt;
&lt;p&gt;已知问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;似乎有些视图、逻辑未分离&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用七牛API上传文件&#34;&gt;&lt;a href=&#34;#使用七牛API上传文件&#34; class=&#34;headerlink&#34; title=&#34;使用七牛API上传文件&#34;&gt;&lt;/a&gt;使用七牛API上传文件&lt;/h2&gt;&lt;p&gt;使用服务端上传，&lt;a href=&#34;https://developer.qiniu.com/kodo/kb/1374/batch-upload-and-file-upload-more-resources&#34;&gt;一次只能单张上传&lt;/a&gt;。官网API文档&lt;a href=&#34;https://developer.qiniu.com/kodo/sdk/1289/nodejs&#34;&gt;Node.js版&lt;/a&gt;描述的并不清楚，下面是上传的简单流程展示：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; mac = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; qiniu.&lt;span class=&#34;property&#34;&gt;auth&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;digest&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Mac&lt;/span&gt;(config.&lt;span class=&#34;property&#34;&gt;accessKey&lt;/span&gt;, config.&lt;span class=&#34;property&#34;&gt;secretKey&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; options = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;scope&lt;/span&gt;: config.&lt;span class=&#34;property&#34;&gt;bucketName&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; putPolicy = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; qiniu.&lt;span class=&#34;property&#34;&gt;rs&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;PutPolicy&lt;/span&gt;(options);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; uploadToken = putPolicy.&lt;span class=&#34;title function_&#34;&gt;uploadToken&lt;/span&gt;(mac);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; qiniuConfig = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; qiniu.&lt;span class=&#34;property&#34;&gt;conf&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Config&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;qiniuConfig.&lt;span class=&#34;property&#34;&gt;zone&lt;/span&gt; = qiniu.&lt;span class=&#34;property&#34;&gt;zone&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;Zone_z1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; formUploader = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; qiniu.&lt;span class=&#34;property&#34;&gt;form_up&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;FormUploader&lt;/span&gt;(qiniuConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; putExtra = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; qiniu.&lt;span class=&#34;property&#34;&gt;form_up&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;PutExtra&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;formUploader.&lt;span class=&#34;title function_&#34;&gt;putFile&lt;/span&gt;(uploadToken, key, localFile, putExtra, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;respErr, respBody, respInfo&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (respErr) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (respInfo.&lt;span class=&#34;property&#34;&gt;statusCode&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;多文件上传使用外部队列暂存所有任务，并和回调函数关联即可实现。&lt;/p&gt;
</content>
        <category term="后端" />
        <category term="管理后台" />
        <category term="egg.js" />
        <updated>2018-03-15T06:17:10.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/02/06/my-first-electron-demo/</id>
        <title>我的第一个Electron应用</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/02/06/my-first-electron-demo/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;前一阵突发奇想，想写一个汇总所有骑行数据的网页。又想到最近看了下Electron，干脆写一个能够生产这样网页的工具，造福自己，造福他人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://s2.ax1x.com/2019/04/07/Ahbsc6.png&#34; alt=&#34;Ahbsc6.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Electron是啥&#34;&gt;&lt;a href=&#34;#Electron是啥&#34; class=&#34;headerlink&#34; title=&#34;Electron是啥&#34;&gt;&lt;/a&gt;Electron是啥&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;(https://electronjs.org/)&#34;&gt;Electron&lt;/a&gt;一套由Github开发的开源库，基于&lt;a href=&#34;https://www.chromium.org/Home&#34;&gt;Chromium&lt;/a&gt;和&lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt;，支持通过HTML、JavaScript、CSS来构建跨平台（Mac、Windows、Linux）应用。Electron起初是为文本编辑器&lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt;而开发的一套开发框架，名为Atom Shell。现如今已经为&lt;a href=&#34;https://electronjs.org/apps&#34;&gt;众多应用&lt;/a&gt;所用。&lt;/p&gt;
&lt;p&gt;从开发者角度看，Electron分为&lt;code&gt;main&lt;/code&gt;和&lt;code&gt;renderer&lt;/code&gt;两部分。前者运行在主进程中，以创建web页面的方式显示一个GUI；后者是渲染进程，每个Electron的web页面运行在其中。通常的浏览器内，网页通常运行在一个沙盒的环境不能够进行原生操作。 在Electron中，可以在渲染进程使用Node.js的API和Electron提供的众多API（GUI相关除外），和操作系统进行一些低级别的交互。主进程和渲染进程通过&lt;a href=&#34;https://electronjs.org/docs/api/ipc-main&#34;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt;和&lt;a href=&#34;https://electronjs.org/docs/api/ipc-renderer&#34;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt;相互沟通；也可以通过&lt;a href=&#34;https://electronjs.org/docs/api/remote&#34;&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/a&gt;的方式发起，后者要更简洁些。&lt;/p&gt;
&lt;p&gt;在项目结构上，官网并没有限制，&lt;a href=&#34;https://github.com/electron-userland/electron-webpack&#34;&gt;electron-webpack&lt;/a&gt;的&lt;a href=&#34;https://webpack.electron.build/project-structure&#34;&gt;project-structure&lt;/a&gt;可以参考，安全性上，可以参考官网的&lt;a href=&#34;https://electronjs.org/docs/tutorial/security&#34;&gt;介绍&lt;/a&gt;。要想获得对Electron概念的快速认识，可以看看&lt;a href=&#34;https://electronjs.org/docs/tutorial/about&#34;&gt;关于Electron&lt;/a&gt;和&lt;a href=&#34;https://electronjs.org/docs/tutorial/quick-start&#34;&gt;快速入门&lt;/a&gt;，再去&lt;a href=&#34;https://www.zhihu.com/topic/20038727/top-answers&#34;&gt;知乎Electron精华话题&lt;/a&gt;看看，或者看看&lt;a href=&#34;https://github.com/sindresorhus/awesome-electron&#34;&gt;awesome list&lt;/a&gt;也是极好的。&lt;/p&gt;
&lt;h2 id=&#34;调研准备&#34;&gt;&lt;a href=&#34;#调研准备&#34; class=&#34;headerlink&#34; title=&#34;调研准备&#34;&gt;&lt;/a&gt;调研准备&lt;/h2&gt;&lt;p&gt;地图考虑还是使用百度地图API（因为&lt;a href=&#34;https://shenlvmeng.github.io/blog/2018/01/27/my-first-pwa-app/&#34;&gt;上个小项目&lt;/a&gt;用的就是百度地图，好上手），根据&lt;a href=&#34;http://lbsyun.baidu.com/jsdemo.htm#c1_25&#34;&gt;demo演示&lt;/a&gt;来看，根据数据点画个折线是没什么问题的。地图的part没问题了。&lt;/p&gt;
&lt;p&gt;下面就是数据的part。去确认了下我骑行常用的APP&lt;a href=&#34;https://www.imxingzhe.com/&#34;&gt;行者&lt;/a&gt;，网页和APP都有导出功能。导出格式为&lt;code&gt;.gpx&lt;/code&gt;的gps数据文件。OK，数据的来源也有了。&lt;/p&gt;
&lt;p&gt;至于怎么把这些点连线搁在地图上，就是我要干的活了。&lt;/p&gt;
&lt;h2 id=&#34;功能设计&#34;&gt;&lt;a href=&#34;#功能设计&#34; class=&#34;headerlink&#34; title=&#34;功能设计&#34;&gt;&lt;/a&gt;功能设计&lt;/h2&gt;&lt;p&gt;但是事情没那么简单，既然选择&lt;a href=&#34;https://electronjs.org/&#34;&gt;Electron&lt;/a&gt;来练手，光做个展示的网页出来就很没意思了。这也不是Electron的用武之地。于是能够想到的就是，做一个&lt;strong&gt;可以生成上面那个网页的工具&lt;/strong&gt;，一方面减轻我的负担，让我在日后维护时省心省力；另一方面也能造福他人嘛。&lt;/p&gt;
&lt;p&gt;现在整理一下，我拿在手里的是一堆&lt;code&gt;.gpx&lt;/code&gt;的文件，产出是可以画图的网页。稍微分解一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网页是需要独立存在，不需要用户配置的，这些gps数据必须单独存储，可以使用前端友好的JSON文件。这个&lt;strong&gt;转译&lt;/strong&gt;过程需要在Electron应用中完成&lt;/li&gt;
&lt;li&gt;网页需要能够配置生成，不需要用户手写，因此在应用里需要填充&lt;strong&gt;HTML模板&lt;/strong&gt;，生产HTML文件。&lt;/li&gt;
&lt;li&gt;页面并不复杂，不需要使用Vue、React甚至webpack的加持，作为我的第一个Electron应用，把握整体感受要紧&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;开写&#34;&gt;&lt;a href=&#34;#开写&#34; class=&#34;headerlink&#34; title=&#34;开写&#34;&gt;&lt;/a&gt;开写&lt;/h2&gt;&lt;h3 id=&#34;相关环境&#34;&gt;&lt;a href=&#34;#相关环境&#34; class=&#34;headerlink&#34; title=&#34;相关环境&#34;&gt;&lt;/a&gt;相关环境&lt;/h3&gt;&lt;p&gt;安装Electron过程中，报错node版本过低。只能重新安转新版本的node，windows下只有&lt;a href=&#34;https://github.com/coreybutler/nvm-windows&#34;&gt;nvm-windows&lt;/a&gt;这个选择。安装完成后，之前全局安装的npm包只能重头再安一遍。先安装&lt;a href=&#34;https://www.npmjs.com/package/nrm&#34;&gt;nrm&lt;/a&gt;再说。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：安装nvm-windows前，强烈建议卸载已有的Node.js&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;boilerplate&#34;&gt;&lt;a href=&#34;#boilerplate&#34; class=&#34;headerlink&#34; title=&#34;boilerplate&#34;&gt;&lt;/a&gt;boilerplate&lt;/h3&gt;&lt;p&gt;boilerplate即骨架。现在前端的环境里，一门成熟的开源库是一定有一堆boilerplate的，毕竟程序猿懒人多。Electron也不能免俗。可以从&lt;a href=&#34;https://github.com/sindresorhus/awesome-electron#boilerplates&#34;&gt;awesome list&lt;/a&gt;中挑一个看上眼的。如果项目比较大，可以直接用&lt;a href=&#34;https://github.com/SimulatedGREG/electron-vue&#34;&gt;electron-vue&lt;/a&gt;这种省心省力，一键式配置，开发打包工具一应齐全。这里我从官网提到的&lt;a href=&#34;https://github.com/electron/electron-quick-start&#34;&gt;quick start&lt;/a&gt;，除了一些样例代码，啥都没有，正合我意。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（我曾经尝试使用&lt;a href=&#34;https://github.com/electron/electron-quick-start&#34;&gt;electron-webpack-quick-start&lt;/a&gt;，想着顺便打包了&lt;a href=&#34;https://github.com/electron-userland/electron-builder&#34;&gt;electron-builder&lt;/a&gt;，还有webpack、热加载，岂不美哉。不过根据&lt;a href=&#34;https://webpack.electron.build/development#use-of-html-webpack-plugin&#34;&gt;这里&lt;/a&gt;所说，是没有index.html暴露给你的，这几乎就意味着必须要用Vue、React这样的解决方案，但是&lt;a href=&#34;https://github.com/electron-userland/electron-webpack&#34;&gt;electron-webpack&lt;/a&gt;这个库并没有包括，需要自己add-on，但是按照&lt;a href=&#34;https://webpack.electron.build/add-ons#vuejs&#34;&gt;文档&lt;/a&gt;所说的操作后，并不能识别&lt;code&gt;.vue&lt;/code&gt;文件，而且也没有vue-devtool。这是&lt;strong&gt;坑之一&lt;/strong&gt;）&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;转译&#34;&gt;&lt;a href=&#34;#转译&#34; class=&#34;headerlink&#34; title=&#34;转译&#34;&gt;&lt;/a&gt;转译&lt;/h3&gt;&lt;p&gt;转译过程是在&lt;code&gt;renderer.js&lt;/code&gt;中完成的。实际上，项目里&lt;a href=&#34;https://zhuanlan.zhihu.com/p/24275216&#34;&gt;大多数业务逻辑也是在渲染进程中完成的&lt;/a&gt;。核心在把gpx文件里的信息解析出来，除了&lt;code&gt;&amp;lt;desc&amp;gt;&amp;lt;/desc&amp;gt;&lt;/code&gt;中的meta信息之外，其余的点结构大致像下面这样;&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;trkpt&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;lat&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;40.106419&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;lon&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;116.369812&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;ele&lt;/span&gt;&amp;gt;&lt;/span&gt;40.6&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;ele&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;time&lt;/span&gt;&amp;gt;&lt;/span&gt;2017-03-04T16:52:36Z&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;time&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;trkpt&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;trkpt&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;lat&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;40.106531&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;lon&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;116.369916&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;ele&lt;/span&gt;&amp;gt;&lt;/span&gt;59.8&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;ele&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;time&lt;/span&gt;&amp;gt;&lt;/span&gt;2017-03-04T16:52:39Z&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;time&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;trkpt&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;幸运的是，npm上早就有gpx的parser。&lt;a href=&#34;https://www.npmjs.com/package/gpx-parse&#34;&gt;gpx-parse&lt;/a&gt;的功能足够满足我们需要了。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; gpxParse = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;gpx-parse&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//from file &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gpxParse.&lt;span class=&#34;title function_&#34;&gt;parseGpxFromFile&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/path/to/gpxFile&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;error, data&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//do stuff &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//or from string &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gpxParse.&lt;span class=&#34;title function_&#34;&gt;parseGpx&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;gpx&amp;gt;&amp;lt;/gpx&amp;gt;&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;error, data&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//do stuff &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// or an external file via HTTP(S) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gpxParse.&lt;span class=&#34;title function_&#34;&gt;parseRemoteGpxFile&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;http://host.tld/my.gpx&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;error, data&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//do stuff &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;顺带写几个input框（包括&lt;code&gt;&amp;lt;input type=&amp;quot;file&amp;quot;&amp;gt;&lt;/code&gt;），测试一下，没啥问题（排除掉中间处理&lt;a href=&#34;https://yarnpkg.com/zh-Hans/&#34;&gt;yarn&lt;/a&gt;和npm冲突问题的话）。观察一下，返回值是一个&lt;code&gt;GpxResult&lt;/code&gt;类型，里面有&lt;code&gt;metadata&lt;/code&gt;，&lt;code&gt;routes&lt;/code&gt;，&lt;code&gt;tracks&lt;/code&gt;等字段，只有tracks中记录着点的信息。考虑到&lt;code&gt;tracks&lt;/code&gt;和里面&lt;code&gt;segments&lt;/code&gt;字段是数组的情况，要进行一下flatten的处理。最后，整个转译过程大概如下：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;file, index&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gpxParse.&lt;span class=&#34;title function_&#34;&gt;parseGpxFromFile&lt;/span&gt;(file.&lt;span class=&#34;property&#34;&gt;path&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;error, data&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (error || !data.&lt;span class=&#34;property&#34;&gt;tracks&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;文件内容错误&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; track = data.&lt;span class=&#34;property&#34;&gt;tracks&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 扁平化处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; flattenTrack = track.&lt;span class=&#34;title function_&#34;&gt;reduce&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;acc, cur&lt;/span&gt;) =&amp;gt;&lt;/span&gt; (cur.&lt;span class=&#34;property&#34;&gt;segments&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;reduce&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;acc, cur&lt;/span&gt;) =&amp;gt;&lt;/span&gt; acc.&lt;span class=&#34;title function_&#34;&gt;concat&lt;/span&gt;(cur), []).&lt;span class=&#34;title function_&#34;&gt;concat&lt;/span&gt;(acc)), [])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; points = flattenTrack.&lt;span class=&#34;title function_&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;&amp;#123;lat, lon&amp;#125;&lt;/span&gt;) =&amp;gt;&lt;/span&gt; (&amp;#123;lat, &lt;span class=&#34;attr&#34;&gt;lng&lt;/span&gt;: lon&amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; jsonData = &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(points)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; pathStr = path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(&lt;span class=&#34;variable constant_&#34;&gt;OUTPUT_PATH&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;index&amp;#125;&lt;/span&gt;.json`&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      remote.&lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;fs&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;writeFile&lt;/span&gt;(pathStr, jsonData,&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf8&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;err&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (err) &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; err&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;warn&lt;/span&gt;(e)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;文件序列化失败&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;写一个示例网页&#34;&gt;&lt;a href=&#34;#写一个示例网页&#34; class=&#34;headerlink&#34; title=&#34;写一个示例网页&#34;&gt;&lt;/a&gt;写一个示例网页&lt;/h3&gt;&lt;p&gt;既然最后的网页是生成出来的，就有第一个能够成功工作起来的网页作为模子，好抽离范本出来。先搭一个最简单的HTML架子，插入百度地图的script标签。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;charset&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;content&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;width=device-width, initial-scale=1.0, user-scalable=no&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-css&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-css&#34;&gt;    &lt;span class=&#34;selector-tag&#34;&gt;body&lt;/span&gt;, &lt;span class=&#34;selector-tag&#34;&gt;html&lt;/span&gt;, &lt;span class=&#34;selector-id&#34;&gt;#map&lt;/span&gt; &amp;#123;&lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;100%&lt;/span&gt;; &lt;span class=&#34;attribute&#34;&gt;height&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;100%&lt;/span&gt;; &lt;span class=&#34;attribute&#34;&gt;overflow&lt;/span&gt;: hidden; &lt;span class=&#34;attribute&#34;&gt;margin&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-css&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;我的骑行轨迹&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;map&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;https://api.map.baidu.com/api?v=2.0&amp;amp;ak=你的秘钥&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下面我们把工作稍微分析一下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从本地读取JSON文件，意味着&lt;strong&gt;自己实现一个ajax&lt;/strong&gt;，考虑兼容性（毕竟没了&lt;a href=&#34;http://babeljs.io/&#34;&gt;babel&lt;/a&gt;和webpack）,使用XMLHttpRequest&lt;/li&gt;
&lt;li&gt;读取当然得是&lt;strong&gt;异步&lt;/strong&gt;的，JSON文件很有可能很多，需要依次进行&lt;/li&gt;
&lt;li&gt;地图配置和画图就很简单了，参考API就行了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一个工作不难：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getJSON&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;path, callback&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; request = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;XMLHttpRequest&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  request.&lt;span class=&#34;title function_&#34;&gt;open&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;GET&amp;#x27;&lt;/span&gt;, path, &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  request.&lt;span class=&#34;property&#34;&gt;onreadystatechange&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (request.&lt;span class=&#34;property&#34;&gt;readyState&lt;/span&gt; === &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; &amp;amp;&amp;amp; request.&lt;span class=&#34;property&#34;&gt;status&lt;/span&gt; === &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;title function_&#34;&gt;callback&lt;/span&gt;(request.&lt;span class=&#34;property&#34;&gt;response&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  request.&lt;span class=&#34;title function_&#34;&gt;send&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;第二个工作也不难，在递归函数的外面设置控制递归的变量就可以了。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; pool = &lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;apply&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;(length)).&lt;span class=&#34;title function_&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;v, i&lt;/span&gt;)&amp;#123;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; i+&lt;span class=&#34;string&#34;&gt;&amp;#x27;.json&amp;#x27;&lt;/span&gt;;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;paint&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!pool.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;getJSON&lt;/span&gt;(pool.&lt;span class=&#34;title function_&#34;&gt;shift&lt;/span&gt;(), &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;res&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (res) &lt;span class=&#34;title function_&#34;&gt;paint&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; pois = &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(res).&lt;span class=&#34;title function_&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;point&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Point&lt;/span&gt;(point.&lt;span class=&#34;property&#34;&gt;lng&lt;/span&gt;, point.&lt;span class=&#34;property&#34;&gt;lat&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; polyline = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Polyline&lt;/span&gt;(pois);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      map.&lt;span class=&#34;title function_&#34;&gt;addOverlay&lt;/span&gt;(polyline);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt;(e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;warn&lt;/span&gt;(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;OK，大功告成（排除其余逻辑bug之后），赶紧接上&lt;code&gt;renderer.js&lt;/code&gt;那边转译好的JSON文件看看骑行轨迹吧！&lt;/p&gt;
&lt;p&gt;你以为事情会这么简单么？&lt;/p&gt;
&lt;p&gt;当然不。&lt;/p&gt;
&lt;h3 id=&#34;坐标换算&#34;&gt;&lt;a href=&#34;#坐标换算&#34; class=&#34;headerlink&#34; title=&#34;坐标换算&#34;&gt;&lt;/a&gt;坐标换算&lt;/h3&gt;&lt;p&gt;图是出来了，但是路线有偏差，发现明显有所平移。这是怎么回事，搜索过后才发现，百度所采用的坐标并不是gps数据中的真实大地坐标，而是在火星坐标基础上再次加密的百度坐标（&lt;a href=&#34;http://blog.csdn.net/flygoa/article/details/69258648&#34;&gt;更多&lt;/a&gt;）。&lt;a href=&#34;http://lbsyun.baidu.com/jsdemo.htm#a5_3&#34;&gt;官网示例&lt;/a&gt;上也给出了gps坐标转成百度坐标的API。&lt;/p&gt;
&lt;p&gt;得，那就在转译成JSON数据前多map一段呗。仔细一看，&lt;a href=&#34;http://lbsyun.baidu.com/cms/jsapi/reference/jsapi_reference.html#a7b49&#34;&gt;&lt;code&gt;Convertor&lt;/code&gt;&lt;/a&gt;的介绍里赫然写着&lt;strong&gt;“一次最多10个点”&lt;/strong&gt;，居然还限流（其实不只是限流的问题，递归的写法也要变化）。一条路线至少上千个点呢，算了先试试看速度吧。&lt;/p&gt;
&lt;p&gt;两条路线用了30s才显示出来，果然很慢……&lt;/p&gt;
&lt;p&gt;只能自己实现转译过程了，网上倒是有一些例子，都差不多。尝试了一下，发现有点效果，但是路线还是有偏移。试了半个多小时后，总算找到了一个完美的&lt;a href=&#34;http://www.oschina.net/code/snippet_260395_39205&#34;&gt;JS转译代码&lt;/a&gt;，感谢原作者。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delta&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;lat, lon&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// Krasovsky 1940&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// a = 6378245.0, 1/f = 298.3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// b = a * (1 - f)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ee = (a^2 - b^2) / a^2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;6378245.0&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//  a: 卫星椭球坐标投影到平面地图坐标系的投影因子。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; ee = &lt;span class=&#34;number&#34;&gt;0.00669342162296594323&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//  ee: 椭球的偏心率。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; dLat = &lt;span class=&#34;title function_&#34;&gt;transformLat&lt;/span&gt;(lon - &lt;span class=&#34;number&#34;&gt;105.0&lt;/span&gt;, lat - &lt;span class=&#34;number&#34;&gt;35.0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; dLon = &lt;span class=&#34;title function_&#34;&gt;transformLon&lt;/span&gt;(lon - &lt;span class=&#34;number&#34;&gt;105.0&lt;/span&gt;, lat - &lt;span class=&#34;number&#34;&gt;35.0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; radLat = lat / &lt;span class=&#34;number&#34;&gt;180.0&lt;/span&gt; * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; magic = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(radLat);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  magic = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; - ee * magic * magic;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; sqrtMagic = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sqrt&lt;/span&gt;(magic);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dLat = (dLat * &lt;span class=&#34;number&#34;&gt;180.0&lt;/span&gt;) / ((a * (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; - ee)) / (magic * sqrtMagic) * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dLon = (dLon * &lt;span class=&#34;number&#34;&gt;180.0&lt;/span&gt;) / (a / sqrtMagic * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;cos&lt;/span&gt;(radLat) * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123;&lt;span class=&#34;attr&#34;&gt;lat&lt;/span&gt;: dLat, &lt;span class=&#34;attr&#34;&gt;lon&lt;/span&gt;: dLon&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;transformLat&lt;/span&gt; (x, y) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ret = -&lt;span class=&#34;number&#34;&gt;100.0&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; * x + &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt; * y + &lt;span class=&#34;number&#34;&gt;0.2&lt;/span&gt; * y * y + &lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt; * x * y + &lt;span class=&#34;number&#34;&gt;0.2&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sqrt&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;abs&lt;/span&gt;(x));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret += (&lt;span class=&#34;number&#34;&gt;20.0&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;6.0&lt;/span&gt; * x * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;20.0&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; * x * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;)) * &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; / &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret += (&lt;span class=&#34;number&#34;&gt;20.0&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(y * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;40.0&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(y / &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt; * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;)) * &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; / &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret += (&lt;span class=&#34;number&#34;&gt;160.0&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(y / &lt;span class=&#34;number&#34;&gt;12.0&lt;/span&gt; * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;320&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(y * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt; / &lt;span class=&#34;number&#34;&gt;30.0&lt;/span&gt;)) * &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; / &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;transformLon&lt;/span&gt; (x, y) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ret = &lt;span class=&#34;number&#34;&gt;300.0&lt;/span&gt; + x + &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; * y + &lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt; * x * x + &lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt; * x * y + &lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sqrt&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;abs&lt;/span&gt;(x));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret += (&lt;span class=&#34;number&#34;&gt;20.0&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;6.0&lt;/span&gt; * x * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;20.0&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; * x * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;)) * &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; / &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret += (&lt;span class=&#34;number&#34;&gt;20.0&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(x * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;40.0&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(x / &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt; * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;)) * &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; / &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ret += (&lt;span class=&#34;number&#34;&gt;150.0&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(x / &lt;span class=&#34;number&#34;&gt;12.0&lt;/span&gt; * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;) + &lt;span class=&#34;number&#34;&gt;300.0&lt;/span&gt; * &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;sin&lt;/span&gt;(x / &lt;span class=&#34;number&#34;&gt;30.0&lt;/span&gt; * &lt;span class=&#34;variable constant_&#34;&gt;PI&lt;/span&gt;)) * &lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt; / &lt;span class=&#34;number&#34;&gt;3.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这转译过程，要不是有先行者，我怕是要倒在这里了。&lt;/p&gt;
&lt;h3 id=&#34;HTML模板&#34;&gt;&lt;a href=&#34;#HTML模板&#34; class=&#34;headerlink&#34; title=&#34;HTML模板&#34;&gt;&lt;/a&gt;HTML模板&lt;/h3&gt;&lt;p&gt;示例HTML已经工作起来了，现在就是抽出模子的过程。网页并不复杂，可以用简单的HTML template解决问题。John Resig的方案如下：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Simple JavaScript Templating&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// John Resig - https://johnresig.com/ - MIT Licensed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; cache = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;tmpl&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;tmpl&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;str, data&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Figure out if we&amp;#x27;re getting a template, or if we need to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// load the template - and be sure to cache the result.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; fn = !&lt;span class=&#34;regexp&#34;&gt;/\W/&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(str) ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      cache[str] = cache[str] ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;tmpl&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(str).&lt;span class=&#34;property&#34;&gt;innerHTML&lt;/span&gt;) :&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// Generate a reusable function that will serve as a template&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// generator (and which will be cached).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Function&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;obj&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;var p=[],print=function()&amp;#123;p.push.apply(p,arguments);&amp;#125;;&amp;quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// Introduce the data as local variables using with()&amp;#123;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;&amp;quot;with(obj)&amp;#123;p.push(&amp;#x27;&amp;quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// Convert the template into pure JavaScript&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        str&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/[\r\t\n]/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .&lt;span class=&#34;title function_&#34;&gt;split&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;%&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/((^|%&amp;gt;)[^\t]*)&amp;#x27;/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;$1\r&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/\t=(.*?)%&amp;gt;/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27;,$1,&amp;#x27;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .&lt;span class=&#34;title function_&#34;&gt;split&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27;);&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .&lt;span class=&#34;title function_&#34;&gt;split&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;%&amp;gt;&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;p.push(&amp;#x27;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .&lt;span class=&#34;title function_&#34;&gt;split&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\r&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\\&amp;#x27;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      + &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#x27;);&amp;#125;return p.join(&amp;#x27;&amp;#x27;);&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Provide some basic currying to the user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; data ? &lt;span class=&#34;title function_&#34;&gt;fn&lt;/span&gt;( data ) : fn;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;看上去很眼熟，以前的项目似乎见到过。&lt;/p&gt;
&lt;p&gt;把之前的示例HTML放在&lt;code&gt;index.html&lt;/code&gt;的&lt;code&gt;&amp;lt;script type=&amp;quot;text/template&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;中，在渲染进程里加上代码看看？&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;tmpl&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;template&amp;#x27;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;嗯……报错了。提示“&lt;code&gt;Missing &amp;#39;)&amp;#39; after argument list &lt;/code&gt;”。加断点调试发现是标签里的&lt;code&gt;&amp;quot;&lt;/code&gt;打断了&lt;code&gt;new Function&lt;/code&gt;的语句。尝试了多种方法无效后，索性使用&lt;code&gt;encodeURIComponent&lt;/code&gt;想处理掉麻烦的特殊符号，但是这么做之后就无法匹配&lt;code&gt;&amp;lt;%=%&amp;gt;&lt;/code&gt;了。&lt;/p&gt;
&lt;p&gt;于是最后选择&lt;a href=&#34;http://underscorejs.org/&#34;&gt;underscore&lt;/a&gt;的template方法。再试试……&lt;/p&gt;
&lt;p&gt;没问题了。之后把允许用户填写的部分抽出来，就可以把&lt;code&gt;index.html&lt;/code&gt;的生成放在转译代码身旁了。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; template = &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;template&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;innerHTML&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remote.&lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;fs&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;writeFile&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(&lt;span class=&#34;variable constant_&#34;&gt;OUTPUT_PATH&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;index.html&amp;#x27;&lt;/span&gt;), &lt;span class=&#34;title function_&#34;&gt;tmpl&lt;/span&gt;(template)(data).&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/&amp;amp;lt;/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;&amp;#x27;&lt;/span&gt;),&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf8&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;err&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (err) &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; err&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;生成完毕！\n将output文件夹下所有文件上传到服务器即可查看效果！&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;再次运行，测试生成的网页能否工作？答案当然是可以。&lt;/p&gt;
&lt;h3 id=&#34;苦力活&#34;&gt;&lt;a href=&#34;#苦力活&#34; class=&#34;headerlink&#34; title=&#34;苦力活&#34;&gt;&lt;/a&gt;苦力活&lt;/h3&gt;&lt;p&gt;技术上的问题解决了，现在从用户填写信息到最后生成能用的展示页面也没有问题了。初版下面的问题就是美化了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS修饰样式&lt;/li&gt;
&lt;li&gt;将模板HTML文件压缩（包括JS和CSS），因为反正用户不会修改内容，不需要考虑可读性&lt;/li&gt;
&lt;li&gt;一些保护性编程和边缘情况兜底&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后测试结果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s2.ax1x.com/2019/04/07/AhbD91.png&#34; alt=&#34;AhbD91.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;生成效果如上。&lt;/p&gt;
&lt;h3 id=&#34;发布&#34;&gt;&lt;a href=&#34;#发布&#34; class=&#34;headerlink&#34; title=&#34;发布&#34;&gt;&lt;/a&gt;发布&lt;/h3&gt;&lt;p&gt;初版开发已经完成了，只剩发布出来给别人用了，考虑到&lt;a href=&#34;https://electronjs.org/docs/tutorial/application-distribution&#34;&gt;官网文档&lt;/a&gt;讲得实在不清不楚，不如用一个好工具帮我们完成。&lt;/p&gt;
&lt;p&gt;这里使用&lt;a href=&#34;https://github.com/electron-userland/electron-builder&#34;&gt;electron-builder&lt;/a&gt;。跟着介绍里一步步完善&lt;code&gt;package.json&lt;/code&gt;和项目结构。加上依赖后，执行&lt;code&gt;yarn dist&lt;/code&gt;生成可分发的文件。&lt;/p&gt;
&lt;p&gt;嗯……果然失败了。原因很简单，网络错误，Electron镜像文件下载失败。还好淘宝有electron镜像。通过设置ELECTRON_MIRROR环境变量，可以大大加快速度。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;export ELECTRON_MIRROR=https://npm.taobao.org/mirrors/electron/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后，再次执行&lt;code&gt;yarn dist&lt;/code&gt;，在从Github下载其他相关文件的时候，仍然会网络错误。于是我机智的从网页上下载下来，直接放在了目标目录下。再次执行任务，居然不能识别出来。好吧……&lt;/p&gt;
&lt;p&gt;故事的最后，打包还是完成了。不过由于生成文件的目录写成了相对目录，生成的文件得通过搜索才能找到，考虑后面生成在桌面。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;–END–&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/28bca6529150&#34;&gt;在windows下用nvm 安装node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lbsyun.baidu.com/cms/jsapi/reference/jsapi_reference.html&#34;&gt;百度地图JavaScript API v2.0类参考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/24275216&#34;&gt;Electron 应用实战 (架构篇)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/GPS_Exchange_Format&#34;&gt;GPS Exchange Format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest&#34;&gt;XMLHttpRequest | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://skalman.github.io/UglifyJS-online/&#34;&gt;UglifyJS 3: Online JavaScript minifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cssminifier.com/&#34;&gt;CSS Minifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pfan123/electron-docs&#34;&gt;pfan123&amp;#x2F;electron-docs electron-docs学习文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="JavaScript" />
        <category term="Electron" />
        <category term="GUI" />
        <category term="gpx" />
        <category term="template" />
        <category term="Electron Builder" />
        <updated>2018-02-06T07:58:11.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2018/01/27/my-first-pwa-app/</id>
        <title>我的第一个PWA开发记录</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2018/01/27/my-first-pwa-app/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;注：本文主要记录了创建一个PWA应用的过程，方便日后再次开发类似应用时参考。&lt;br&gt;github链接：&lt;a href=&#34;https://github.com/shenlvmeng/Distance&#34;&gt;shenlvmeng&amp;#x2F;Distance: 一次PWA的尝试&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;准备&#34;&gt;&lt;a href=&#34;#准备&#34; class=&#34;headerlink&#34; title=&#34;准备&#34;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;安装&lt;a href=&#34;https://www.npmjs.com/package/http-server&#34;&gt;http-server&lt;/a&gt;方便本地测试。&lt;/p&gt;
&lt;p&gt;本地开辟文件夹，加入&lt;code&gt;.editorconfig&lt;/code&gt;和&lt;code&gt;.gitignore&lt;/code&gt;（根据&lt;a href=&#34;https://raw.github.com/github/gitignore/abad92dac5a4306f72242dae3bca6e277bce3615/Node.gitignore&#34;&gt;样例&lt;/a&gt;适当修改）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# http://editorconfig.org&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;root = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[*]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;charset = utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;indent_style = space&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;indent_size = 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;end_of_line = lf&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;insert_final_newline = true&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;trim_trailing_whitespace = true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;创建&lt;code&gt;index.html&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;!DOCTYPE &lt;span class=&#34;keyword&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;charset&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;meta&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;content&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;width=device-width,initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Away from home&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;rel&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;./main.css&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;My first PWA Application&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;See console for more!&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在目标文件夹路径下执行&lt;code&gt;http-server&lt;/code&gt;，bingo！第一步完成&lt;/p&gt;
&lt;h2 id=&#34;清单文件&#34;&gt;&lt;a href=&#34;#清单文件&#34; class=&#34;headerlink&#34; title=&#34;清单文件&#34;&gt;&lt;/a&gt;清单文件&lt;/h2&gt;&lt;p&gt;创建清单文件&lt;code&gt;manifest.json&lt;/code&gt;，描述应用添加到主屏幕需要的信息。&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Distance from Home&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;short_name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Distance&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;display&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;standalone&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;start_url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;theme_color&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;#8888ff&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;background_color&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;#aaaaff&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;icons&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;src&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;compass.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;sizes&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;144x144&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;image/png&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;并在&lt;code&gt;index.html&lt;/code&gt;中引入：&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;rel&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;manifest&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;manifest.json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;添加Service-Worker&#34;&gt;&lt;a href=&#34;#添加Service-Worker&#34; class=&#34;headerlink&#34; title=&#34;添加Service Worker&#34;&gt;&lt;/a&gt;添加Service Worker&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://shenlvmeng.github.io/blog/2017/09/04/pwa-and-hybrid-brief/&#34;&gt;Service Worker&lt;/a&gt;这个东西可以实现页面的缓存和离线访问，让应用逼近app的体验。&lt;/p&gt;
&lt;p&gt;可以在HTML里插入&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签引入，这里单独定义一个app.js。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// app.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Registering ServiceWorker&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ( &lt;span class=&#34;string&#34;&gt;&amp;#x27;serviceWorker&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; navigator ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  navigator.&lt;span class=&#34;property&#34;&gt;serviceWorker&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;register&lt;/span&gt;( &lt;span class=&#34;string&#34;&gt;&amp;#x27;sw.js&amp;#x27;&lt;/span&gt; ).&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;registration&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Registration was successful&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;( &lt;span class=&#34;string&#34;&gt;&amp;#x27;ServiceWorker registration successful. Scope: &amp;#x27;&lt;/span&gt; + registration.&lt;span class=&#34;property&#34;&gt;scope&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;).&lt;span class=&#34;title function_&#34;&gt;catch&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;err&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Registration failed with error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;( &lt;span class=&#34;string&#34;&gt;&amp;#x27;ServiceWorker registration failed&amp;#x27;&lt;/span&gt; + err);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在&lt;code&gt;index.html&lt;/code&gt;中引用。&lt;/p&gt;
&lt;p&gt;下面实现service worker。主要是三个时机：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;脚本&lt;strong&gt;安装&lt;/strong&gt;时，写入缓存&lt;/li&gt;
&lt;li&gt;脚本&lt;strong&gt;获取数据&lt;/strong&gt;时，先查找缓存&lt;/li&gt;
&lt;li&gt;缓存&lt;strong&gt;更新版本&lt;/strong&gt;时，删除原先版本的缓存&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 脚本安装时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;self.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;install&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  event.&lt;span class=&#34;title function_&#34;&gt;waitUntil&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    caches.&lt;span class=&#34;title function_&#34;&gt;open&lt;/span&gt;(cacheStorageKey)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;cache&lt;/span&gt; =&amp;gt;&lt;/span&gt; cache.&lt;span class=&#34;title function_&#34;&gt;addAll&lt;/span&gt;(cacheList))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 保证在页面更新过程中，新的Service Worker脚本能立即激活生效&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; self.&lt;span class=&#34;title function_&#34;&gt;skipWaiting&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 通过脚本fetch数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;self.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;fetch&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  event.&lt;span class=&#34;title function_&#34;&gt;respondWith&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 先在cache中找&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    caches.&lt;span class=&#34;title function_&#34;&gt;match&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;request&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;res&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// cache中没有再使用fetch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; res || &lt;span class=&#34;title function_&#34;&gt;fetch&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;request&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;url&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 更新静态资源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;self.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;activate&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  event.&lt;span class=&#34;title function_&#34;&gt;waitUntil&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    caches.&lt;span class=&#34;title function_&#34;&gt;keys&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;cacheNames&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Promise&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;all&lt;/span&gt;(cacheNames.&lt;span class=&#34;title function_&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;name&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (name !== cacheStorageKey) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; caches.&lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;其中，有下面一些名词：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;self&lt;/code&gt;: Service Worker作用域, 也是全局变量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;caches&lt;/code&gt;: 缓存接口&lt;/li&gt;
&lt;li&gt;&lt;code&gt;waitUntil&lt;/code&gt;，&lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt;方法——这会确保Service Worker 不会在&lt;code&gt;waitUntil()&lt;/code&gt;里面的代码执行完毕之前安装完成。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;skipWait&lt;/code&gt;，表示强制当前处在waiting状态的脚本进入activate状态&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在浏览器中打开&lt;code&gt;localhost:8080/&lt;/code&gt;即可，注意PWA&lt;strong&gt;必须运行在HTTPS的环境下&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;加入百度地图支持&#34;&gt;&lt;a href=&#34;#加入百度地图支持&#34; class=&#34;headerlink&#34; title=&#34;加入百度地图支持&#34;&gt;&lt;/a&gt;加入百度地图支持&lt;/h2&gt;&lt;p&gt;参考&lt;a href=&#34;http://lbsyun.baidu.com/index.php?title=jspopular&#34;&gt;官方API接入支持&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;添加文件&lt;code&gt;index.js&lt;/code&gt;，写入如下内容：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; url4PC = &lt;span class=&#34;string&#34;&gt;&amp;#x27;https://api.map.baidu.com/api?v=2.0&amp;amp;ak=你的秘钥&amp;amp;callback=init&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; init = &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;init&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; map = &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 为了能成功调用到callback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;init&lt;/span&gt; = &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Map&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;map&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  map.&lt;span class=&#34;title function_&#34;&gt;centerAndZoom&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Point&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;121.491&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;31.233&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  map.&lt;span class=&#34;title function_&#34;&gt;enableScrollWheelZoom&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;init&lt;/span&gt; = init;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;loadMap&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; script = &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;createElement&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;script&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  script.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt; = url4PC;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;appendChild&lt;/span&gt;(script);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;onload&lt;/span&gt; = loadMap;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当然需要添加一点CSS，这里从略。&lt;/p&gt;
&lt;h2 id=&#34;Service-Worker支持跨域&#34;&gt;&lt;a href=&#34;#Service-Worker支持跨域&#34; class=&#34;headerlink&#34; title=&#34;Service Worker支持跨域&#34;&gt;&lt;/a&gt;Service Worker支持跨域&lt;/h2&gt;&lt;p&gt;接下来问题来了，打开网页测试，页面刷新时Service Worker会抛出跨域相关的错误。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s2.ax1x.com/2019/04/07/Ahb0hR.png&#34; alt=&#34;Ahb0hR.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;再正常不过了，未经配置的情况下，fetch是不允许跨域的。注意&lt;code&gt;sw.js&lt;/code&gt;中的一段：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;caches.&lt;span class=&#34;title function_&#34;&gt;match&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;request&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;res&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// cache中没有再使用fetch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; res || &lt;span class=&#34;title function_&#34;&gt;fetch&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;request&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;url&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这里我们不仅有跨域请求，还使用着JSONP的方式。后续地图数据和地图图片的展示请求也比较复杂。再经过多次加入&lt;code&gt;respondWith()&lt;/code&gt;响应块失败后，干脆跳过这部分跨域的处理。不过还是留下了一个函数，方便后面拓展。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;isCORSRequest&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;url&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; url.&lt;span class=&#34;title function_&#34;&gt;search&lt;/span&gt;(host) === -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 并存该函数为日后拓展所用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;handleFetchRequest&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;req&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; request = &lt;span class=&#34;title function_&#34;&gt;isCORSRequest&lt;/span&gt;(req.&lt;span class=&#34;property&#34;&gt;url&lt;/span&gt;) ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Request&lt;/span&gt;(req.&lt;span class=&#34;property&#34;&gt;url&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;mode&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;cors&amp;#x27;&lt;/span&gt; &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    : req;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;fetch&lt;/span&gt;(req);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 通过脚本fetch数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;self.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;fetch&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;title function_&#34;&gt;isCORSRequest&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;request&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;url&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  event.&lt;span class=&#34;title function_&#34;&gt;respondWith&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 先在cache中找&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    caches.&lt;span class=&#34;title function_&#34;&gt;match&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;request&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;res&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// cache中没有再使用fetch&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; res || &lt;span class=&#34;title function_&#34;&gt;handleFetchRequest&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;request&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;目标点管理&#34;&gt;&lt;a href=&#34;#目标点管理&#34; class=&#34;headerlink&#34; title=&#34;目标点管理&#34;&gt;&lt;/a&gt;目标点管理&lt;/h2&gt;&lt;p&gt;核心功能之一是，可以新增计算距离的目标点。在我的设计里，有两种用户友好的添加方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;找不到地点时，可以搜索出地点，通过搜索结果设置&lt;/li&gt;
&lt;li&gt;明确地图上位置时，直接通过鼠标操作设置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前面的利用AutoComplete类，完成自动补全和搜索功能。值得注意的一个坑是，在初次设置好map对象后，每次的搜索结果都会以第一次初始化地点为中心搜索结果。解决方案是，每次&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;框聚焦时，重新构造一个AutoComplete类。&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;search&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;input&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;searchbox&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;position&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;size&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;20&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;placeholder&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;输入地点或在地图上双击点选&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;searchBtn&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;searchBtn&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;initSearchLocation&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 工厂方法，每次聚焦时新创建一个AutoComplete对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;setAutoComplete&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; lastVal = doc.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;position&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;value&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;trim&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 建立一个自动完成的对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; searchBox = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Autocomplete&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;input&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;position&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;location&lt;/span&gt;: map&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      doc.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;position&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;value&lt;/span&gt; = lastVal;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 鼠标点击下拉列表后的事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      searchBox.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;onconfirm&amp;quot;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; value = event.&lt;span class=&#34;property&#34;&gt;item&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;value&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; searchWord = &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;value.province&amp;#125;&lt;/span&gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;value.city&amp;#125;&lt;/span&gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;value.district&amp;#125;&lt;/span&gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;value.street&amp;#125;&lt;/span&gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;value.business&amp;#125;&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;setPlace&lt;/span&gt;(searchWord);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;setPlace&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;searchWord&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      map.&lt;span class=&#34;title function_&#34;&gt;clearOverlays&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; cleverSearch = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;LocalSearch&lt;/span&gt;(map, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;onSearchComplete&lt;/span&gt;: &lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;title function_&#34;&gt;pauseUpdate&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!cleverSearch.&lt;span class=&#34;title function_&#34;&gt;getResults&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;getPoi&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;title function_&#34;&gt;alert&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;未找到指定地点，换个关键词试试？&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;comment&#34;&gt;// 获取第一个智能搜索的结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; res = cleverSearch.&lt;span class=&#34;title function_&#34;&gt;getResults&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;getPoi&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;point&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; marker = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Marker&lt;/span&gt;(res);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          map.&lt;span class=&#34;title function_&#34;&gt;centerAndZoom&lt;/span&gt;(res, &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          map.&lt;span class=&#34;title function_&#34;&gt;addOverlay&lt;/span&gt;(marker);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;title function_&#34;&gt;addToBeacons&lt;/span&gt;(marker);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      cleverSearch.&lt;span class=&#34;title function_&#34;&gt;search&lt;/span&gt;(searchWord);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 不使用自动补全，直接回车或点击图标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    doc.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;position&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;focus&amp;quot;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;title function_&#34;&gt;setAutoComplete&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 省略了其他的绑定事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下一步是支持标记点（BeaconNodes）的管理，离线持久化采用&lt;code&gt;localStorage&lt;/code&gt;，技术上倒没有什么难度。用户交互上，考虑用右键点击（for PC）和长按操作（PC Mobile）添加，点击标记删除。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 从页面新增目标点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;addToBeacons&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;point&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; tag = win.&lt;span class=&#34;title function_&#34;&gt;prompt&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;给Beacon点起个名字吧&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tag === &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  tag = tag.&lt;span class=&#34;title function_&#34;&gt;trim&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;substr&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;) || &lt;span class=&#34;string&#34;&gt;`未知地点#&lt;span class=&#34;subst&#34;&gt;$&amp;#123;seq&amp;#125;&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 第一个点默认活跃&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  beaconNodes.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: seq,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    point,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tag,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;isActive&lt;/span&gt;: !beaconNodes.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;addBeacon&lt;/span&gt;(seq, point, tag, beaconNodes.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; === &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;paintDropdown&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;localStorage&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;setItem&lt;/span&gt;(&lt;span class=&#34;variable constant_&#34;&gt;STORAGE_KEY&lt;/span&gt;, &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(beaconNodes));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;removeFromBeacon&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;id&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!beaconNodes.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  beaconNodes.&lt;span class=&#34;title function_&#34;&gt;splice&lt;/span&gt;(beaconNodes.&lt;span class=&#34;title function_&#34;&gt;findIndex&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;node&lt;/span&gt; =&amp;gt;&lt;/span&gt; node.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt; == id), &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;paintDropdown&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;localStorage&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;setItem&lt;/span&gt;(&lt;span class=&#34;variable constant_&#34;&gt;STORAGE_KEY&lt;/span&gt;, &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(beaconNodes));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 在地图上新增目标点，方便复用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;addBeacon&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;id, point, tag, isActive&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; icon = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Icon&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`imgs/location-&lt;span class=&#34;subst&#34;&gt;$&amp;#123;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;-isActive&amp;#125;&lt;/span&gt;.png`&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Size&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; mark = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Marker&lt;/span&gt;(point, &amp;#123; icon, &lt;span class=&#34;attr&#34;&gt;enableMassClear&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; label = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Label&lt;/span&gt;(tag,&amp;#123; &lt;span class=&#34;attr&#34;&gt;offset&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Size&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  label.&lt;span class=&#34;title function_&#34;&gt;setStyle&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;border&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;#dedede&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;padding&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;3px 5px&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;font-size&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;14px&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;font-weight&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;bold&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mark.&lt;span class=&#34;title function_&#34;&gt;setLabel&lt;/span&gt;(label); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mark.&lt;span class=&#34;title function_&#34;&gt;getLabel&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;setTitle&lt;/span&gt;(tag);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  mark.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;click&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (win.&lt;span class=&#34;title function_&#34;&gt;confirm&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`确认要删除Beacon:&lt;span class=&#34;subst&#34;&gt;$&amp;#123;mark.getLabel().getTitle()&amp;#125;&lt;/span&gt;`&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      map.&lt;span class=&#34;title function_&#34;&gt;removeOverlay&lt;/span&gt;(mark);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;title function_&#34;&gt;removeFromBeacon&lt;/span&gt;(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  map.&lt;span class=&#34;title function_&#34;&gt;addOverlay&lt;/span&gt;(mark);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  seq = id + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;initMap&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 根据storage填充地图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 注意这里必须使用Point类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  beaconNodes.&lt;span class=&#34;title function_&#34;&gt;forEach&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;node&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;addBeacon&lt;/span&gt;(node.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Point&lt;/span&gt;(node.&lt;span class=&#34;property&#34;&gt;point&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;lng&lt;/span&gt;, node.&lt;span class=&#34;property&#34;&gt;point&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;lat&lt;/span&gt;), node.&lt;span class=&#34;property&#34;&gt;tag&lt;/span&gt;, node.&lt;span class=&#34;property&#34;&gt;isActive&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 避免和其他事件冲突，使用暂无占用的右键点击&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  map.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;rightclick&amp;quot;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;addToBeacons&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;point&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 支持移动设备，长按&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  map.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;longpress&amp;quot;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;addToBeacons&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;point&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在管理上，新增了下拉菜单管理当前所有节点，这里需要将离线的BeaconNodes映射成DOM结构，考虑到文件已略大，且这一部分比较繁琐，和业务关系不大，故单独抽出一个文件。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// dom.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 无状态，与业务弱相关&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 只渲染下拉菜单&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;renderDropdown&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;obj, dom, isInit&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!obj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dom.&lt;span class=&#34;property&#34;&gt;innerText&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// render过程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; fragment = &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;createDocumentFragment&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  obj.&lt;span class=&#34;title function_&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;node&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; div = &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;createElement&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;DIV&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    div.&lt;span class=&#34;property&#34;&gt;className&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;`node_wrapper&lt;span class=&#34;subst&#34;&gt;$&amp;#123;node.isActive ? &lt;span class=&#34;string&#34;&gt;&amp;quot; active&amp;quot;&lt;/span&gt; : &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; innerHTML = &lt;span class=&#34;string&#34;&gt;`&amp;lt;span&amp;gt;#&lt;span class=&#34;subst&#34;&gt;$&amp;#123;node.id&amp;#125;&lt;/span&gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;node-tag&amp;quot;&amp;gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;node.tag&amp;#125;&lt;/span&gt;&amp;lt;/span&amp;gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    div.&lt;span class=&#34;property&#34;&gt;innerHTML&lt;/span&gt; = innerHTML;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; operateBtn = &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;createElement&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;DIV&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    operateBtn.&lt;span class=&#34;property&#34;&gt;className&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;operateBtn&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (node.&lt;span class=&#34;property&#34;&gt;isActive&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      operateBtn.&lt;span class=&#34;property&#34;&gt;className&lt;/span&gt; += &lt;span class=&#34;string&#34;&gt;&amp;quot; active&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      operateBtn.&lt;span class=&#34;property&#34;&gt;innerText&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;Deactive!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      operateBtn.&lt;span class=&#34;property&#34;&gt;innerText&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;Active!&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    div.&lt;span class=&#34;title function_&#34;&gt;appendChild&lt;/span&gt;(operateBtn);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 方便统一事件绑定&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    div.&lt;span class=&#34;property&#34;&gt;dataset&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;nid&lt;/span&gt; = node.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; div;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;).&lt;span class=&#34;title function_&#34;&gt;forEach&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;div&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    fragment.&lt;span class=&#34;title function_&#34;&gt;appendChild&lt;/span&gt;(div);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dom.&lt;span class=&#34;title function_&#34;&gt;appendChild&lt;/span&gt;(fragment);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 多次调用只监听一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isInit) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 下拉事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dom.&lt;span class=&#34;property&#34;&gt;parentNode&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;children&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;click&amp;quot;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (dom.&lt;span class=&#34;property&#34;&gt;parentNode&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;className&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;search&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;hide&amp;quot;&lt;/span&gt;) !== -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dom.&lt;span class=&#34;property&#34;&gt;parentNode&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;className&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;dropdown dropdown_container&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dom.&lt;span class=&#34;property&#34;&gt;parentNode&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;className&lt;/span&gt; += &lt;span class=&#34;string&#34;&gt;&amp;quot; hide&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;HTML和CSS部分就不再赘述了。&lt;/p&gt;
&lt;p&gt;在下拉菜单下，可以点击条目跳转到相应位置，以及点击按钮切换当前活动的BeaconNode。这部分实现如下：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;initDropdown&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;paintDropdown&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 事件监听&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; dropdown = doc.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;dropdown&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  dropdown.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;click&amp;quot;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; nid = event.&lt;span class=&#34;property&#34;&gt;target&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;parentNode&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;dataset&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;nid&lt;/span&gt; || event.&lt;span class=&#34;property&#34;&gt;target&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;dataset&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;nid&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; node = beaconNodes.&lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;node&lt;/span&gt; =&amp;gt;&lt;/span&gt; node.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt; == nid);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (event.&lt;span class=&#34;property&#34;&gt;target&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;tagName&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;toLowerCase&lt;/span&gt;() === &lt;span class=&#34;string&#34;&gt;&amp;quot;div&amp;quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (node) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; prev = beaconNodes.&lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;node&lt;/span&gt; =&amp;gt;&lt;/span&gt; node.&lt;span class=&#34;property&#34;&gt;isActive&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (prev) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          prev.&lt;span class=&#34;property&#34;&gt;isActive&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          beaconMarkers[prev.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;setIcon&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Icon&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;imgs/location-2.png&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Size&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        node.&lt;span class=&#34;property&#34;&gt;isActive&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;paintDropdown&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        beaconMarkers[nid].&lt;span class=&#34;title function_&#34;&gt;setIcon&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Icon&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;imgs/location-1.png&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Size&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      node &amp;amp;&amp;amp; map.&lt;span class=&#34;title function_&#34;&gt;panTo&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BMap&lt;/span&gt;.&lt;span class=&#34;title class_&#34;&gt;Point&lt;/span&gt;(node.&lt;span class=&#34;property&#34;&gt;point&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;lng&lt;/span&gt;, node.&lt;span class=&#34;property&#34;&gt;point&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;lat&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当然了，标记点的增删改查还剩下改没有实现，目前来看，和“改”相关的业务是能拖动标记点，方便用户随时更改标记点位置。在&lt;code&gt;addBeacon()&lt;/code&gt;函数中新增相关代码。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mark.&lt;span class=&#34;title function_&#34;&gt;enableDragging&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mark.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;dragend&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;editToBeacons&lt;/span&gt;(id, &amp;#123; &lt;span class=&#34;attr&#34;&gt;point&lt;/span&gt;: event.&lt;span class=&#34;property&#34;&gt;point&lt;/span&gt; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;paintDistance&lt;/span&gt;(lastPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;而&lt;code&gt;editToBeacons()&lt;/code&gt;函数设计如下：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;editToBeacons&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;id, newProps&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; index = beaconNodes.&lt;span class=&#34;title function_&#34;&gt;findIndex&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;node&lt;/span&gt; =&amp;gt;&lt;/span&gt; node.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt; == id);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;Object&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;assign&lt;/span&gt;(beaconNodes[index], newProps);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;localStorage&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;setItem&lt;/span&gt;(&lt;span class=&#34;variable constant_&#34;&gt;STORAGE_KEY&lt;/span&gt;, &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(beaconNodes));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 不是所有的属性更改都有重绘，交给调用者处理重绘&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;计算距离&#34;&gt;&lt;a href=&#34;#计算距离&#34; class=&#34;headerlink&#34; title=&#34;计算距离&#34;&gt;&lt;/a&gt;计算距离&lt;/h2&gt;&lt;p&gt;计算距离包括距离和方向两部分，既然能拿到两点的经纬度信息，这两个值肯定可以计算出来。计算距离上利用百度地图的API，计算角度上，通过&lt;code&gt;Math.atan2&lt;/code&gt;换算得到。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;paintDistance&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;currentPoint&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; info;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; target = beaconNodes.&lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;node&lt;/span&gt; =&amp;gt;&lt;/span&gt; node.&lt;span class=&#34;property&#34;&gt;isActive&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!target || !currentPoint) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    info = &lt;span class=&#34;string&#34;&gt;&amp;quot;N/A , 未知方向&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; distance = map.&lt;span class=&#34;title function_&#34;&gt;getDistance&lt;/span&gt;(currentPoint, target.&lt;span class=&#34;property&#34;&gt;point&lt;/span&gt;) || &lt;span class=&#34;string&#34;&gt;&amp;quot;N/A&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (distance &amp;gt; &lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      distance = &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;(distance / &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;).toFixed(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&amp;#125;&lt;/span&gt;km`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (distance &amp;gt; &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      distance = &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;distance.toFixed(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&amp;#125;&lt;/span&gt;m`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      distance = &lt;span class=&#34;string&#34;&gt;`就在附近...`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 工具函数位于utils.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; deg = &lt;span class=&#34;title function_&#34;&gt;getDirection&lt;/span&gt;(target.&lt;span class=&#34;property&#34;&gt;point&lt;/span&gt;, currentPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    info = &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;distance&amp;#125;&lt;/span&gt; , &lt;span class=&#34;subst&#34;&gt;$&amp;#123;deg&amp;#125;&lt;/span&gt;点钟方向`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getDirection&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;p1, p2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; pi = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;PI&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; [x2, y2, x1, y1] = [p1.&lt;span class=&#34;property&#34;&gt;lng&lt;/span&gt;, p1.&lt;span class=&#34;property&#34;&gt;lat&lt;/span&gt;, p2.&lt;span class=&#34;property&#34;&gt;lng&lt;/span&gt;, p2.&lt;span class=&#34;property&#34;&gt;lat&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; rad = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;atan2&lt;/span&gt;(y2 - y1, x2 - x1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; absRad = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;abs&lt;/span&gt;(rad);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; clockPointer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (absRad &amp;lt; pi / &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clockPointer = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (absRad &amp;lt; pi / &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clockPointer = rad &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ? &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; : &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (absRad &amp;lt; pi * &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; / &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clockPointer = rad &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ? &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; : &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (absRad &amp;lt; pi * &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; / &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clockPointer = rad &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ? &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt; : &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (absRad &amp;lt; pi * &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; / &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clockPointer = rad &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ? &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; : &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (absRad &amp;lt; pi * &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt; / &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clockPointer = rad &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ? &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; : &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clockPointer = &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; clockPointer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/25459319&#34;&gt;PWA 入门: 写个非常简单的 PWA 页面&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/29570875&#34;&gt;轻松把你的项目升级到PWA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sii.im/playground/notes/&#34;&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/Manifest&#34;&gt;Web App Manifest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers&#34;&gt;使用 Service Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000008491458&#34;&gt;Service Workers 与离线缓存&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lbsyun.baidu.com/jsdemo.htm&#34;&gt;地图API示例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lbsyun.baidu.com/cms/jsapi/reference/jsapi_reference.html&#34;&gt;百度地图JSAPIv2.0类参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="JavaScript" />
        <category term="PWA" />
        <category term="方法论" />
        <updated>2018-01-27T08:14:11.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2017/11/17/photogallery-improvement-2/</id>
        <title>Photogallery技术演进第2步</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2017/11/17/photogallery-improvement-2/"/>
        <content type="html">&lt;h2 id=&#34;构建工具升级&#34;&gt;&lt;a href=&#34;#构建工具升级&#34; class=&#34;headerlink&#34; title=&#34;构建工具升级&#34;&gt;&lt;/a&gt;构建工具升级&lt;/h2&gt;&lt;p&gt;因为要拆分代码，便于管理，需要使用&lt;code&gt;import&lt;/code&gt;和&lt;code&gt;export&lt;/code&gt;，因此必须要引入webpack这样的打包工具到gulp中，使用&lt;a href=&#34;https://github.com/shama/webpack-stream&#34;&gt;webpack-stream&lt;/a&gt;，具体使用方法和其他的gulp插件类似，在pipe在这样插入就行了&lt;code&gt;.pipe(webpack())&lt;/code&gt;，配置方式和webpack一样。（webpack中引入babel-loader的过程就不赘述了）引入webpack后，开发流程和一起类似，&lt;code&gt;gulp&lt;/code&gt;启动测试服务器，使用webpack通过&lt;code&gt;entry.js&lt;/code&gt;打包代码，CSS和JSON相关流程不变。release时，增加了minify的流程，让js流程后的代码再压缩一遍。&lt;/p&gt;
&lt;p&gt;另外，引入babel后，可以用ES6语法改写&lt;code&gt;gulpfile.js&lt;/code&gt;。最后的&lt;code&gt;gulpfile.babel.js&lt;/code&gt;像下面这样：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; gulp &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; rename &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp-rename&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; uglify &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp-uglify&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; cleanCSS &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp-clean-css&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; jsonminify &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp-jsonminify&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; webserver &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp-webserver&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; webpack &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;webpack-stream&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;js&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; gulp.&lt;span class=&#34;title function_&#34;&gt;src&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;src/index.js&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;webpack&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;rules&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123; &lt;span class=&#34;attr&#34;&gt;test&lt;/span&gt;: &lt;span class=&#34;regexp&#34;&gt;/\.js$/&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;exclude&lt;/span&gt;: &lt;span class=&#34;regexp&#34;&gt;/node_modules/&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;loader&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;babel-loader&amp;quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;rename&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index.js&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		.&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(gulp.&lt;span class=&#34;title function_&#34;&gt;dest&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;dist&amp;#x27;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;minify&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; gulp.&lt;span class=&#34;title function_&#34;&gt;src&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;dist/index.js&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;uglify&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;rename&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index.min.js&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(gulp.&lt;span class=&#34;title function_&#34;&gt;dest&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;dist&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;css&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; gulp.&lt;span class=&#34;title function_&#34;&gt;src&lt;/span&gt;([&lt;span class=&#34;string&#34;&gt;&amp;#x27;src/index.css&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		.&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;cleanCSS&lt;/span&gt;(&amp;#123;&lt;span class=&#34;attr&#34;&gt;compatibility&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;ie8&amp;#x27;&lt;/span&gt;&amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		.&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(gulp.&lt;span class=&#34;title function_&#34;&gt;dest&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;dist&amp;#x27;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;json&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; gulp.&lt;span class=&#34;title function_&#34;&gt;src&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;src/meta*.json&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		.&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;jsonminify&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		.&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(gulp.&lt;span class=&#34;title function_&#34;&gt;dest&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;dist&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;webserver&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gulp.&lt;span class=&#34;title function_&#34;&gt;src&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;webserver&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;livereload&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;directoryListing&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;open&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;watch&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gulp.&lt;span class=&#34;title function_&#34;&gt;watch&lt;/span&gt;([&lt;span class=&#34;string&#34;&gt;&amp;#x27;src/*.js&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;src/**/*.js&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;src/**/*.vue&amp;#x27;&lt;/span&gt;], [&lt;span class=&#34;string&#34;&gt;&amp;#x27;js&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gulp.&lt;span class=&#34;title function_&#34;&gt;watch&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;src/*.css&amp;#x27;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;css&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gulp.&lt;span class=&#34;title function_&#34;&gt;watch&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;src/*.json&amp;#x27;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;json&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets&amp;#x27;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;json&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;css&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;js&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;default&amp;#x27;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;webserver&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;watch&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;release&amp;quot;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;minify&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;使用单文件组件&#34;&gt;&lt;a href=&#34;#使用单文件组件&#34; class=&#34;headerlink&#34; title=&#34;使用单文件组件&#34;&gt;&lt;/a&gt;使用单文件组件&lt;/h2&gt;&lt;p&gt;引入webpack后，开始高高兴兴地分模块拆分代码，却发现分组件使用Vue时，不是单纯地定义组件配置信息，然后传给入口组件就行。必须要引入全家桶，&lt;code&gt;vue-loader&lt;/code&gt;等工具，文件不得不用.vue这样的形式组织（现在开始觉得React组件的组织比Vue舒服了）。本来使用单文件的形式就是想尽量精简，可随着功能逐渐健全，看来重构也是避免不了的啊。在&lt;a href=&#34;https://github.com/vuejs/vue-loader&#34;&gt;vue-loader&lt;/a&gt;的介绍里，居然还要通过&lt;code&gt;vue-cli&lt;/code&gt;来大一统，但是我一是想维持项目尽量轻量精简，使用gulp的工具链；二是项目已经写了很久了，全部迁移过去成本有些大。于是，通过&lt;code&gt;vue-cli&lt;/code&gt;新建样本项目，对着&lt;code&gt;package.json&lt;/code&gt;和&lt;code&gt;webpack.config.js&lt;/code&gt;一抄了事。&lt;/p&gt;
&lt;p&gt;加上种种&lt;code&gt;.vue&lt;/code&gt;文件的相关配置，&lt;code&gt;gulp.babel.js&lt;/code&gt;最后长下面这样。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;js&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; gulp.&lt;span class=&#34;title function_&#34;&gt;src&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;src/index.js&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;webpack&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;rules&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123; &lt;span class=&#34;attr&#34;&gt;test&lt;/span&gt;: &lt;span class=&#34;regexp&#34;&gt;/\.js$/&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;exclude&lt;/span&gt;: &lt;span class=&#34;regexp&#34;&gt;/node_modules/&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;loader&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;babel-loader&amp;quot;&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123; &lt;span class=&#34;attr&#34;&gt;test&lt;/span&gt;: &lt;span class=&#34;regexp&#34;&gt;/\.vue$/&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;loader&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;vue-loader&amp;#x27;&lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123; &lt;span class=&#34;attr&#34;&gt;test&lt;/span&gt;: &lt;span class=&#34;regexp&#34;&gt;/\.(png|jpg|gif|svg)$/&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;loader&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;file-loader&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;options&lt;/span&gt;: &amp;#123; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;[name].[ext]?[hash]&amp;#x27;&lt;/span&gt; &amp;#125; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;resolve&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;alias&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;string&#34;&gt;&amp;#x27;vue$&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;vue/dist/vue.esm.js&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;extensions&lt;/span&gt;: [&lt;span class=&#34;string&#34;&gt;&amp;#x27;*&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;.js&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;.vue&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;.json&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;rename&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;index.js&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		.&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(gulp.&lt;span class=&#34;title function_&#34;&gt;dest&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;dist&amp;#x27;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下面需要开始拆分代码了。根据React&amp;#x2F;Vue这样框架通常的设计经验，需要下面一些组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;actions&lt;/code&gt;  存储状态管理的动作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;components&lt;/code&gt;  存储相互解耦的”dumb”组件，最好和业务无关&lt;/li&gt;
&lt;li&gt;&lt;code&gt;constants&lt;/code&gt;  存储全局常量&lt;/li&gt;
&lt;li&gt;&lt;code&gt;containers&lt;/code&gt;  存储组织&lt;code&gt;components&lt;/code&gt;的业务容器组件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;entry&lt;/code&gt;  存储入口文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;helper&lt;/code&gt;  存储工具函数&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reducers&lt;/code&gt;  存储状态管理的reducers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;settings&lt;/code&gt;  存储全局配置，通常用来初始化store&lt;/li&gt;
&lt;li&gt;&lt;code&gt;store&lt;/code&gt;  存储全局状态&lt;/li&gt;
&lt;li&gt;&lt;code&gt;templates&lt;/code&gt;  存储引入js的html文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我的项目比较简单，一没有状态管理（后面复杂了之后可能会引入😂），二只有三个组件，只要上面的&lt;code&gt;components&lt;/code&gt;, &lt;code&gt;constants&lt;/code&gt;, &lt;code&gt;containers&lt;/code&gt;, &lt;code&gt;helper&lt;/code&gt;的就够用了。最后src下的文件目录大概像下面这样&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;├── App.vue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;├── components&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│   └── column&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│       └── Column.vue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;├── constants&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│   └── index.js&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;├── containers&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│   ├── info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│   │   └── Info.vue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│   └── wall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│       └── Wall.vue&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;├── helper&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;│   └── utils.js&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;├── index.css&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;└── index.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;在拆分时遇到了一些数据需要从最外层透传到子组件的情况，如&lt;code&gt;res&lt;/code&gt;, &lt;code&gt;tag_list&lt;/code&gt;, &lt;code&gt;tag_keys&lt;/code&gt;。不过他们是只读的，而且数目很少，所以并不需要状态管理，只用通过props传下去就行了。&lt;/p&gt;
&lt;h2 id=&#34;新功能&#34;&gt;&lt;a href=&#34;#新功能&#34; class=&#34;headerlink&#34; title=&#34;新功能&#34;&gt;&lt;/a&gt;新功能&lt;/h2&gt;&lt;p&gt;重构完之后，终于可以写新功能了。新功能主要是增加两个伪路由，方便页面的分享（这个需求我之前遇到过几次了）。页面是spa类型的，所以前端路由可以采用hash或history H5 API来实现。同时也有许多在这个基础上了前端路由库，提供一站式解决方案。我的需求目前其实不需要完整的路由方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;图片详情页可以分享&lt;/li&gt;
&lt;li&gt;搜索结果可以分享&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此，设计上使用hash的方案，对于图片详情页，用&lt;code&gt;!&lt;/code&gt;开头，后接图片序号。对于搜索结果页，则没有开头的&lt;code&gt;!&lt;/code&gt;，仅使用&lt;code&gt;/&lt;/code&gt;隔开每一个搜索关键字。对hash的读写上，没有什么困难的地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;读&lt;/strong&gt;：&lt;code&gt;App.vue&lt;/code&gt;根据hash注入对应的数据，更改默认视图，对于图片详情页，更改展示组件&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;写&lt;/strong&gt;：切换组件时，记录当前数据到&lt;code&gt;location.hash&lt;/code&gt;，方便直接复制链接分享&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;后面的计划&#34;&gt;&lt;a href=&#34;#后面的计划&#34; class=&#34;headerlink&#34; title=&#34;后面的计划&#34;&gt;&lt;/a&gt;后面的计划&lt;/h2&gt;&lt;p&gt;现在网站还是有点单调了。只能自娱自乐，没有互动。后面应该会考虑在每张图片接入Disqus的问题。&lt;/p&gt;
</content>
        <category term="重构" />
        <category term="脚手架" />
        <category term="技改" />
        <category term="Vue" />
        <category term="gulp" />
        <updated>2017-11-17T12:56:12.000Z</updated>
    </entry>
    <entry>
        <id>http://shenlvmeng.github.com/blog/2017/09/08/photogallery-improvement/</id>
        <title>PhotoGallery技术改造</title>
        <link rel="alternate" href="http://shenlvmeng.github.com/blog/2017/09/08/photogallery-improvement/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;/blog/images/photogallery.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;最近离职后除了准备面试，多了许多时间对以往的前端个人项目进行改造。&lt;a href=&#34;http://shenlvmeng.github.io/gallery/index.html&#34;&gt;PhotoGallery&lt;/a&gt;就是其中一个个人很喜欢，但由于技术原因没做到完美的例子。最近准备抽出时间进行完善。&lt;/p&gt;
&lt;p&gt;PhotoGallery是一个使用瀑布流展示电影海报以及花絮（当然都是个人比较心水的）的展示型页面。所有的电影图片也是从大一就开始收集的，一直囤积在人人上。页面的诸多功能是根据个人爱好设计的，如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据标签搜索&lt;/li&gt;
&lt;li&gt;相似图片&lt;/li&gt;
&lt;li&gt;基于tag的推荐等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总体来说，就是一个展示、介绍、推荐电影的地方。内容上还是很不错的。但是，去年寒假码代码时，前端技术还有待提高，很多地方写得并不严谨甚至比较丑陋。功能上也有些影响体验必须解决的痛点。大概有下面这些&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;首屏渲染时间糟糕&lt;/strong&gt;，这是因为图片过多（个人看的太多），又使用了Vue。同时Vue这种MVVM框架和精细化DOM操作一山不容二虎，因此，结合懒加载，效果依然不理想&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;图片的时序排布并不自然&lt;/strong&gt;，当时图省事，使用纯CSS方案实现瀑布流，牺牲了图片排序。图片只能从上到下再从左到右排序，和正常的阅读顺序并不一致。同时，最老的图片在最前，也不合理&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;新增图片困难&lt;/strong&gt;，这是由于github.io的纯静态的限制，当时采用了静态图片+meta存数据的方式来实现，后面看了电影再往里加图步骤繁琐，没有人性化的办法&lt;/li&gt;
&lt;li&gt;样式老气，细节粗糙&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;本地调试困难&lt;/strong&gt;，只使用了gulp来压缩js，css和json代码（代码少，不需要打包），不是全家桶脚手架，本地调试困难，且不能使用ES6语法&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;代码语法和风格上不严谨&lt;/strong&gt;，考虑结合在公司的规矩规范&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;针对上面大大小小几点，以及实际情况（比如只能使用github.io），考虑像下面这样优化&lt;/p&gt;
&lt;h3 id=&#34;瀑布流布局实现方式待优化&#34;&gt;&lt;a href=&#34;#瀑布流布局实现方式待优化&#34; class=&#34;headerlink&#34; title=&#34;瀑布流布局实现方式待优化&#34;&gt;&lt;/a&gt;瀑布流布局实现方式待优化&lt;/h3&gt;&lt;p&gt;放弃使用column-count的方案。原因有二：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;排布顺序是从上到下，再从左到右，和日常经验相悖。类似地，使用flex的方案也不行&lt;/li&gt;
&lt;li&gt;本身和懒加载的设计兼容性并不好，懒加载的新图片会导致整个页面的布局完全改变。类似地，使用grid的方案也不适合&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此考虑借鉴&lt;a href=&#34;http://www.zhangxinxu.com/wordpress/2012/03/%E5%A4%9A%E6%A0%8F%E5%88%97%E8%A1%A8%E5%8E%9F%E7%90%86%E4%B8%8B%E5%AE%9E%E7%8E%B0%E7%9A%84%E7%80%91%E5%B8%83%E6%B5%81%E5%B8%83%E5%B1%80-waterfall-layout/&#34;&gt;张鑫旭大神的方案&lt;/a&gt;，综合CSS和JS实现懒加载的滚动式瀑布流布局。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.zhangxinxu.com/image/blog/201203/2012-03-23_233114.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;首先，根据屏幕宽度设置合理的列数，再逐列插入5张新图片，作为初始情况，同时，使用&lt;code&gt;flex&lt;/code&gt;布局，设置&lt;code&gt;flex-grow&lt;/code&gt;和&lt;code&gt;justify-content&lt;/code&gt;等属性。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Wall&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;data&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;columns&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;floor&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;clientWidth&lt;/span&gt; / columnWidth),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;lastFlag&lt;/span&gt;: &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;floor&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;clientWidth&lt;/span&gt; / columnWidth) * &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;computed&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;items&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;itemsForColumns&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ret = &lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;apply&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;title class_&#34;&gt;Array&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;columns&lt;/span&gt;)).&lt;span class=&#34;title function_&#34;&gt;map&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; []);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;items&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;slice&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;lastFlag&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;forEach&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;item, i&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ret[i % &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;columns&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(item);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 每列先只加载5个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-id&#34;&gt;#photos&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;flex-flow&lt;/span&gt;: row wrap;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;align-items&lt;/span&gt;: flex-start;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;justify-content&lt;/span&gt;: space-around;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;100%&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-class&#34;&gt;.wall-column&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;display&lt;/span&gt;: inline-block;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;250px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;margin&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;vertical-align&lt;/span&gt;: top;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;之后，监听可能会改变布局的所有情况，在我这个场景下，大概有三种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;滚动（scroll）事件&lt;/li&gt;
&lt;li&gt;缩放事件（resize）事件&lt;/li&gt;
&lt;li&gt;筛选图片，在改变筛选条件，会导致图片数目的变化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面分情况解决之。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;resize时&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;监听&lt;code&gt;window&lt;/code&gt;的&lt;code&gt;resize&lt;/code&gt;事件，当最后一列的位置变化时，意味着布局已经改变，需要触发重排。可以看到上面的&lt;code&gt;itemForColumns&lt;/code&gt;中依赖&lt;code&gt;columns&lt;/code&gt;和&lt;code&gt;lastFlag&lt;/code&gt;两个状态。这里我们利用MVVM框架的优势，维护这两个值，就可以让Vue帮我们完成重排这样的繁琐操作。如下，当&lt;code&gt;columns&lt;/code&gt;改变时，才会触发重绘。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;columns&lt;/span&gt; = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;floor&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;clientWidth&lt;/span&gt; / columnWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 已经展示过的图片就不要隐藏了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;lastFlag&lt;/span&gt; = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;max&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;columns&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;lastFlag&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;筛选图片时&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;同理，通过关键词筛选图片时，改变了传入Wall的prop &lt;code&gt;factor&lt;/code&gt;。会同步更新依赖&lt;code&gt;factor&lt;/code&gt;的&lt;code&gt;item&lt;/code&gt;，触发重排。有一点有注意的是，**&lt;code&gt;lastFlag&lt;/code&gt;需要重新开始累加**。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;watch&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;items&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 设置了筛选条件后，lastFlag需要重新开始累加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;lastFlag&lt;/span&gt; = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;floor&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;clientWidth&lt;/span&gt; / columnWidth) * &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;scroll时&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;页面滚动时，需要加入新的图片到column中，我们要做的只是更改&lt;code&gt;lastFlag&lt;/code&gt;即可，Vue会帮我们自动完成依赖&lt;code&gt;lastFlag&lt;/code&gt;的&lt;code&gt;itemForColumns&lt;/code&gt;更新。重点在，我们如何知道lastFlag应该增加到多少。&lt;/p&gt;
&lt;p&gt;我们回看下&lt;code&gt;itemForColumns&lt;/code&gt;的逻辑，可以发现&lt;strong&gt;新增的图片是循环摆放的&lt;/strong&gt;。这里额外说一句，尽管新图片放在最短列是最合理的，但是工程上并不合算（一是Vue下做这么精细的DOM操作不合适，二是获知最短列意味着DOM操作已经发生，即会有频繁的回流和重绘，这会影响渲染时间）。我们循环考虑每一列的最底部位置，如果在视口内，将图片更新到该列，直到所有列底部都在视口外。直到图片加载完毕。&lt;/p&gt;
&lt;p&gt;另外，在实践时还发现一个问题，&lt;code&gt;handleScroll&lt;/code&gt;里更改了&lt;code&gt;lastFlag&lt;/code&gt;后，Vue本身有batch的优化，会在microtask栈空后，才会进行耗时的DOM操作。循环添加图片时，需要通过setTimeout异步完成，避免误判，在一次递归中加载了所有图片。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;handleScroll&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;top&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;items&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; &amp;lt;= &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;lastFlag&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; delta = -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;columns&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; col = &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`wall-&lt;span class=&#34;subst&#34;&gt;$&amp;#123;i&amp;#125;&lt;/span&gt;`&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (col &amp;amp;&amp;amp; col.&lt;span class=&#34;property&#34;&gt;offsetTop&lt;/span&gt; + col.&lt;span class=&#34;property&#34;&gt;clientHeight&lt;/span&gt; &amp;lt; top + (&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;innerHeight&lt;/span&gt; || &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;documentElement&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;clientHeight&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      delta = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!!++delta) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;lastFlag&lt;/span&gt; += delta;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 直到所有列下沿都不在视口内，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 同时，设置时延，保证DOM操作完成后再继续handleScroll&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;  &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;handleScroll&lt;/span&gt;(top); &amp;#125;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;新增图片困难&#34;&gt;&lt;a href=&#34;#新增图片困难&#34; class=&#34;headerlink&#34; title=&#34;新增图片困难&#34;&gt;&lt;/a&gt;新增图片困难&lt;/h3&gt;&lt;p&gt;&lt;del&gt;由于github.io是纯静态的页面，我并没有后台环境，这个痛点短期内只能缓解不能根除。不过后面考虑将所有图片迁移到图床上，毕竟把图片数据也存在github上感觉还是……有点怪怪的。日后新增图片应该还是通过上传图片，更新&lt;code&gt;meta.json&lt;/code&gt;的形式完成。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;目前已将所有图片迁移到图床上，图床选择上参考了知乎上的推荐，使用&lt;a href=&#34;https://www.qiniu.com/&#34;&gt;七牛云存储&lt;/a&gt;，在个人实名认证后，免费部分有每月10G国内和国外下载流量，100万次GET和PUT请求次数，和10G存储空间。同时，它还提供对图片的压缩等管理，尽量减少流量。&lt;/p&gt;
&lt;p&gt;迁移之后，仓库体积大大减小。之后日常更新时，图片单独上传，根据外链固定前缀得到最终路径。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;&lt;code&gt;meta.json&lt;/code&gt;的更新上，考虑自己写一个工具，根据新看的电影生成新的content。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;已完成自动生成&lt;code&gt;meta.json&lt;/code&gt;的&lt;a href=&#34;https://shenlvmeng.github.io/meta-maker.html&#34;&gt;小工具&lt;/a&gt;，原理很简单，就不再介绍了。&lt;/p&gt;
&lt;h3 id=&#34;细节美化&#34;&gt;&lt;a href=&#34;#细节美化&#34; class=&#34;headerlink&#34; title=&#34;细节美化&#34;&gt;&lt;/a&gt;细节美化&lt;/h3&gt;&lt;p&gt;点比较细碎。整体借鉴了&lt;a href=&#34;https://material.io/guidelines/material-design/introduction.html#introduction-goals&#34;&gt;material design&lt;/a&gt;的思想。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;影片详细信息的遮罩&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;考虑使用100%的遮罩，同时禁止背景滚动的形式展示图片的详细信息。起初打算用js去实现，后来发现下面的两点使得方案并不简单&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scroll事件不能被cancel，这意味着不能打断默认的滚动行为&lt;/li&gt;
&lt;li&gt;从Mouse，Keyboard，Touch相关触发scroll事件的事件劫持滚动行为倒是可以，不过要监听的事件太多&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只好作罢，通过纯CSS的方式，弹出浮层时，为body指定&lt;code&gt;noscroll&lt;/code&gt;的类名。让浮层的&lt;code&gt;overflow&lt;/code&gt;属性为&lt;code&gt;scroll&lt;/code&gt;即可，同时设置浮层&lt;code&gt;position&lt;/code&gt;属性为&lt;code&gt;fixed&lt;/code&gt;即可。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;selector-id&#34;&gt;#display&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;position&lt;/span&gt;: fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;top&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;left&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/*...*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;z-index&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;overflow-y&lt;/span&gt;: scroll;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;使用缓动函数改进回到开头&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里使用定义域和值域都是&lt;code&gt;[0,1]&lt;/code&gt;的&lt;code&gt;easeInOutCubic&lt;/code&gt;函数。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;easeInOutCubic&lt;/span&gt; = t =&amp;gt; (t&amp;lt;&lt;span class=&#34;number&#34;&gt;.5&lt;/span&gt; ? &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;*t*t*t : (t-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*t-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)*(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;*t-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;有了缓动函数后，使用&lt;code&gt;requestAnimationFrame&lt;/code&gt;即可高效率地绘制JS动画。这里封装了一个&lt;code&gt;animate&lt;/code&gt;函数。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;animate&lt;/span&gt; = (&lt;span class=&#34;params&#34;&gt;obj, prop, end, time, ease&lt;/span&gt;) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!obj || !obj[prop] || time &amp;lt; &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; start = obj[prop],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      k = end - start,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      timer = &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      tick = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;timestamp&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (timer === &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          timer = timestamp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; progress = timestamp - timer;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        obj[prop] = start + &lt;span class=&#34;title function_&#34;&gt;ease&lt;/span&gt;(progress / time) * k;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (progress &amp;lt; time) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;title function_&#34;&gt;requestAnimationFrame&lt;/span&gt;(tick);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;requestAnimationFrame&lt;/span&gt;(tick);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;后面直接使用&lt;code&gt;animate(document.body, &amp;quot;scrollTop&amp;quot;, 0, 1000, easeInOutCubic)&lt;/code&gt;就可以圆滑地上移了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;移动端的优化&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用媒体查询，在屏幕宽度更改时，隐藏一些元素&lt;/li&gt;
&lt;li&gt;在UA为移动端设备时，给出提醒&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;loading样式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在改变筛选条件时，设置loading样式提升用户体验。通过积累onload的计数和初始加载图片值进行对比，在达到该值时清除遮罩。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;loadedCount&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;newCount&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newCount &amp;gt;= &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;min&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;lastFlag&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;items&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;全部加载完成&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;isHidden&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// console.log(&amp;quot;Loading...&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;杂项&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;导航条交互优化&lt;/li&gt;
&lt;li&gt;导航条部分设置阴影，更改部分字体颜色和背景色&lt;/li&gt;
&lt;li&gt;修改触发分类方式，由&lt;code&gt;click&lt;/code&gt;改为&lt;code&gt;mousemove&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改tab的样式&lt;/li&gt;
&lt;li&gt;将vue和lodash的js文件下载到本地，避免CDN失效的问题（之前已经遇到过一次），增加可靠性&lt;/li&gt;
&lt;li&gt;搜索条件不区分大小写&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;本地调试困难&#34;&gt;&lt;a href=&#34;#本地调试困难&#34; class=&#34;headerlink&#34; title=&#34;本地调试困难&#34;&gt;&lt;/a&gt;本地调试困难&lt;/h3&gt;&lt;p&gt;因为代码较少，也只有一个文件，用不着webpack这样的全套解决方案。小巧易用的gulp就够了。针对我们需要的ES6转码，替换minify方案，本地调试等需要，都有对应的gulp插件解决问题。&lt;/p&gt;
&lt;h4 id=&#34;gulp-babel&#34;&gt;&lt;a href=&#34;#gulp-babel&#34; class=&#34;headerlink&#34; title=&#34;gulp-babel&#34;&gt;&lt;/a&gt;gulp-babel&lt;/h4&gt;&lt;p&gt;使用&lt;a href=&#34;https://babeljs.io/&#34;&gt;babel&lt;/a&gt;来转码，&lt;code&gt;gulp-babel&lt;/code&gt;依赖&lt;code&gt;babel-core@6&lt;/code&gt;或以上版本，同时设置&lt;code&gt;preset&lt;/code&gt;为&lt;code&gt;es2015&lt;/code&gt;或ES7相关版本时也需要下载对应module。&lt;/p&gt;
&lt;p&gt;我只需要es2015即可。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install --save-dev babel-core gulp-babel babel-preset-es2015&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;React和ES7的各阶段可以像下面这样选择安装&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ npm install --save-dev babel-preset-react&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ npm install --save-dev babel-preset-stage-0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ npm install --save-dev babel-preset-stage-1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ npm install --save-dev babel-preset-stage-2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ npm install --save-dev babel-preset-stage-3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h4 id=&#34;其他工具&#34;&gt;&lt;a href=&#34;#其他工具&#34; class=&#34;headerlink&#34; title=&#34;其他工具&#34;&gt;&lt;/a&gt;其他工具&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;**&lt;a href=&#34;https://www.npmjs.com/package/gulp-uglify&#34;&gt;gulp-uglify&lt;/a&gt;**，压缩代码&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gulp-rename&lt;/strong&gt;，为压缩出的js重命名&lt;/li&gt;
&lt;li&gt;**&lt;a href=&#34;https://www.npmjs.com/package/gulp-webserver&#34;&gt;gulp-webserver&lt;/a&gt;**，开启本地服务，方便本地调试&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面这些插件按照文档操作即可，坑比较少，使用webserver时的&lt;code&gt;gulp.src()&lt;/code&gt;入参通常为&lt;code&gt;./&lt;/code&gt;，指以当前目录为服务器根目录。&lt;/p&gt;
&lt;p&gt;最后还需要加一个watch，方便在调试时的修改能同步转码压缩。像下面这样&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;watch&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gulp.&lt;span class=&#34;title function_&#34;&gt;watch&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets/src/*.js&amp;#x27;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;js&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gulp.&lt;span class=&#34;title function_&#34;&gt;watch&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets/src/*.css&amp;#x27;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;css&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gulp.&lt;span class=&#34;title function_&#34;&gt;watch&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets/src/*.json&amp;#x27;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;json&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;最后整个&lt;code&gt;gulpfile.js&lt;/code&gt;是下面的样子&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; gulp = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    babel = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp-babel&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    uglify = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp-uglify&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rename = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp-rename&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cleanCSS = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp-clean-css&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    jsonminify = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp-jsonminify&amp;#x27;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    webserver = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;gulp-webserver&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;js&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; gulp.&lt;span class=&#34;title function_&#34;&gt;src&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets/src/*.js&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;babel&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;presets&lt;/span&gt;: [&lt;span class=&#34;string&#34;&gt;&amp;#x27;es2015&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;uglify&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;rename&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;suffix&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;.min&amp;#x27;&lt;/span&gt; &amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(gulp.&lt;span class=&#34;title function_&#34;&gt;dest&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;dist&amp;#x27;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;css&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; gulp.&lt;span class=&#34;title function_&#34;&gt;src&lt;/span&gt;([&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets/src/*.css&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;cleanCSS&lt;/span&gt;(&amp;#123;&lt;span class=&#34;attr&#34;&gt;compatibility&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;ie8&amp;#x27;&lt;/span&gt;&amp;#125;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(gulp.&lt;span class=&#34;title function_&#34;&gt;dest&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;dist&amp;#x27;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;json&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; gulp.&lt;span class=&#34;title function_&#34;&gt;src&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets/src/meta.json&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;jsonminify&lt;/span&gt;())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(gulp.&lt;span class=&#34;title function_&#34;&gt;dest&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;dist&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;webserver&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gulp.&lt;span class=&#34;title function_&#34;&gt;src&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;pipe&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;webserver&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;livereload&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;directoryListing&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;open&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;watch&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gulp.&lt;span class=&#34;title function_&#34;&gt;watch&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets/src/*.js&amp;#x27;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;js&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gulp.&lt;span class=&#34;title function_&#34;&gt;watch&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets/src/*.css&amp;#x27;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;css&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  gulp.&lt;span class=&#34;title function_&#34;&gt;watch&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;assets/src/*.json&amp;#x27;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;json&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;dev&amp;#x27;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;default&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;webserver&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;watch&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gulp.&lt;span class=&#34;title function_&#34;&gt;task&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;default&amp;quot;&lt;/span&gt;, [&lt;span class=&#34;string&#34;&gt;&amp;#x27;json&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;css&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;js&amp;#x27;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;代码优化&#34;&gt;&lt;a href=&#34;#代码优化&#34; class=&#34;headerlink&#34; title=&#34;代码优化&#34;&gt;&lt;/a&gt;代码优化&lt;/h3&gt;&lt;p&gt;从略。HTML和CSS部分参照以往写的&lt;a href=&#34;https://shenlvmeng.github.io/blog/2017/06/23/HTML-CSS-code-style-guide/&#34;&gt;建议&lt;/a&gt;即可。除此以外，优化了下面的部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;删除了为兼容移动端额外使用的touchend事件，增加viewport的meta标签，消除移动端chrome浏览器点击300ms延时情况&lt;/li&gt;
&lt;li&gt;由于引入了babel，删除了兼容ES6语法的自己写的polyfill部分&lt;/li&gt;
&lt;li&gt;使用&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch&#34;&gt;fetch API&lt;/a&gt;请求json&lt;/li&gt;
&lt;li&gt;优化导航条点击事件处理相关的代码&lt;/li&gt;
&lt;li&gt;减少图片数目和json体积&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;参考&#34;&gt;&lt;a href=&#34;#参考&#34; class=&#34;headerlink&#34; title=&#34;参考&#34;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000004394726&#34;&gt;使用gulp 进行ES6开发&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/seven0404/article/details/51880162&#34;&gt;node.js利用gulp 启动webServer服务&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/2434602/css-setting-width-height-as-percentage-minus-pixels&#34;&gt;CSS: Setting width&amp;#x2F;height as Percentage minus pixels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://easings.net/zh-cn&#34;&gt;缓动函数速查表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/gre/1650294&#34;&gt;Simple Easing Functions in Javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/API/Window/requestAnimationFrame&#34;&gt;window.requestAnimationFrame | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dribbble.com/&#34;&gt;dribbble&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codepen.io/sdthornton/pen/wBZdXq&#34;&gt;Material Design Box Shadows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tobiasahlin.com/spinkit/&#34;&gt;SpinKit | Simple CSS Spinners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/21667151&#34;&gt;国内有什么方便的图床？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="脚手架" />
        <category term="技改" />
        <category term="Vue" />
        <category term="gulp" />
        <category term="瀑布流" />
        <category term="电影" />
        <updated>2017-09-08T11:31:17.000Z</updated>
    </entry>
</feed>
